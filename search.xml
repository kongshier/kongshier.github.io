<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CSS规范</title>
      <link href="/post/d6df53a3.html"/>
      <url>/post/d6df53a3.html</url>
      
        <content type="html"><![CDATA[<h1 id="CSS-命名规范"><a href="#CSS-命名规范" class="headerlink" title="CSS 命名规范"></a>CSS 命名规范</h1><p>页面外围控制整体布局宽度：<code>wrapper</code>、页头：<code>header</code>、页面主体：<code>main</code>、内容：<code>content</code>、页脚：<code>footer</code>、导航：<code>nav</code>、主导航：<code>mainbav</code>、子导航：<code>subnav</code>、顶导航：<code>topnav</code>、边导航：<code>sidebar</code>、左导航：<code>leftsidebar</code>、右导航：<code>rightsidebar</code>、菜单：<code>menu</code>、子菜单：<code>submenu</code>、搜索：<code>search</code>、栏目：<code>column</code>、侧栏：<code>sidebar</code>、功能区（商品模块）：<code>shop</code>、左右中：<code>left</code> <code>right</code> <code>center</code>、登录：<code>login</code>、登录条：<code>loginbar</code>、注册：<code>regsiter</code>、标志：<code>logo</code>、横幅广告：<code>banner</code>、热点：<code>hot</code>、新闻：<code>news</code>、按钮：<code>btn</code>、滚动：<code>scroll</code>、标签页：<code>tab</code>、文章列表：<code>list</code>、 标题：<code>title</code>、摘要：<code>summary</code>、提示信息：<code>msg</code>、小技巧：<code>tips</code>、图标：<code>icon</code>、下载：<code>download</code>、加入我们：<code>joinus</code>、注释：<code>note</code>、指南：<code>guild</code>、服务：<code>service</code>、状态：<code>status</code>、投票：<code>vote</code>、合作伙伴：<code>partner</code>、链接：<code>link</code>、友情链接：<code>friendlink</code>、版权：<code>copyright</code></p><h1 id="CSS书写顺序"><a href="#CSS书写顺序" class="headerlink" title="CSS书写顺序"></a>CSS书写顺序</h1><p> 让浏览器执行效率更高</p><ol><li>浮动 &#x2F; display</li><li>盒子模型： <code>margin</code> <code>border</code> <code>padding</code>  宽高背景颜色</li><li>文字样式</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS基础</title>
      <link href="/post/599b70c0.html"/>
      <url>/post/599b70c0.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/JERRY-Z-J-R/I-love-you-3-thousand/tree/master/%E6%88%91%E7%88%B1%E4%BD%A0%EF%BC%8C%E4%B8%8D%E6%AD%A2%E4%B8%89%E5%8D%83%E9%81%8D/HTML%20CSS">转载大佬笔记，添加个人笔记</a></p><h1 id="一、CSS简介"><a href="#一、CSS简介" class="headerlink" title="一、CSS简介"></a>一、CSS简介</h1><p><strong>CSS 的主要使用场景就是布局网页，美化页面的。</strong></p><h2 id="1-1-HTML的局限性"><a href="#1-1-HTML的局限性" class="headerlink" title="1.1 HTML的局限性"></a>1.1 HTML的局限性</h2><p>HTML 只关注内容的语义，虽然 HTML 可以做简单的样式，但是带来的是无尽的臃肿、繁琐和难以维护</p><h2 id="1-2-CSS网页的美容师"><a href="#1-2-CSS网页的美容师" class="headerlink" title="1.2 CSS网页的美容师"></a>1.2 CSS网页的美容师</h2><p>CSS 是 <code>层叠样式表</code> 的简称。</p><p>有时我们也会称之为 <code>CSS样式表</code> 或 <code>级联样式表</code>。</p><p>CSS 也是一种 <code>标记语言</code>。</p><p>CSS 主要用于设置 HTML 页面中的文本样式（字体、大小、颜色、对齐方式……）、图片样式（宽高、边框样式、边距……）以及版面的布局和外观显示样式。</p><p>CSS 让我们的网页更加丰富多彩，布局更加灵活自如，简单理解：CSS 可以美化 HTML，让 HTML 更漂亮，同时让页面布局更简单。</p><p><strong>总结：</strong></p><ul><li>HTML 搭建结构，填入元素内容</li><li>CSS 美化 HTML，布局网页元素</li><li>CSS 最大价值：由 HTML 专注去做结构呈现，样式交给 CSS，即：<strong>结构 与 样式 分离</strong></li></ul><h2 id="1-3-CSS语法规范"><a href="#1-3-CSS语法规范" class="headerlink" title="1.3 CSS语法规范"></a>1.3 CSS语法规范</h2><p>使用 HTML 时，需要遵从一定的规范，CSS 也是如此，要想熟练地使用 CSS 对网页进行修饰，首先需要了解 CSS 样式规则。</p><p>CSS 规则由两个主要的部分构成：<code>选择器</code> 以及 <code>一条或多条声明</code>。</p><ul><li><code>选择器</code> 是用于选出需要设置 CSS 样式的 HTML 标签，选择器后跟的<strong>花括号</strong>内是对该对象设置的具体样式</li><li><code>属性</code> 和 <code>属性值</code> 以 “键值对” 的形式出现 <code>属性: 属性值;</code></li><li>属性是对指定的对象设置的样式属性，例如：字体大小、文本颜色等</li><li>属性和属性值之间用英文 <code>:</code> 分开</li><li>多个 “键值对” 之间用英文 <code>;</code> 进行区分（末尾的键值对可以不加 <code>;</code>）</li></ul><p>所有的样式，都包含在 <code>&lt;style&gt;</code> 标签内，表示是样式表。</p><p><code>&lt;style&gt;</code> 一般写到 <code>&lt;/head&gt;</code> 里。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h4</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: bule;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：<code>&lt;style&gt;</code> 标签可以写到其他标签内部并作用与该标签区域内，但是强烈不推荐这种写法！</p><blockquote><p><code>type=&quot;text/css&quot;</code> 可以省略。</p></blockquote><p>实例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- css控制 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 找到对应的标签名称,后续通过设置选择器来改变对应的样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 字体颜色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: brown;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加背景颜色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>css和html 之间的联系<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/image-20221023162933409.png" alt="image-20221023162933409"></p><h2 id="1-4-CSS代码风格"><a href="#1-4-CSS代码风格" class="headerlink" title="1.4 CSS代码风格"></a>1.4 CSS代码风格</h2><h3 id="1-4-1-样式格式书写"><a href="#1-4-1-样式格式书写" class="headerlink" title="1.4.1 样式格式书写"></a>1.4.1 样式格式书写</h3><ul><li>紧凑格式（不推荐）</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123; <span class="attribute">color</span>: deeppink; <span class="attribute">font-size</span>: <span class="number">20px</span>; &#125;</span><br></pre></td></tr></table></figure><ul><li>展开格式（<strong>推荐</strong>）</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: deeppink;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>强烈推荐第二种格式，因为更直观！不用担心占用空间，因为后期可以通过代码压缩工具来压缩代码。</p><h3 id="1-4-2-样式大小书写"><a href="#1-4-2-样式大小书写" class="headerlink" title="1.4.2 样式大小书写"></a>1.4.2 样式大小书写</h3><ul><li>大写（不推荐）</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">H3</span> &#123;</span><br><span class="line"><span class="attribute">COLOR</span>: PINK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>小写（<strong>推荐</strong>）</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>强烈推荐样式选择器，属性名，属性值关键字<strong>全部使用小写字母</strong>，特殊情况除外。</p><blockquote><p>凡是你不确定是否用大写的都一律用小写就对了！</p></blockquote><h3 id="1-4-3-空格规范"><a href="#1-4-3-空格规范" class="headerlink" title="1.4.3 空格规范"></a>1.4.3 空格规范</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>属性值前面</strong>，<strong>冒号后面</strong>，保留一个空格</li><li><strong>选择器（标签）和前花括号中间</strong>，保留一个空格</li></ul><h1 id="二、CSS基础选择器"><a href="#二、CSS基础选择器" class="headerlink" title="二、CSS基础选择器"></a>二、CSS基础选择器</h1><h2 id="2-1-CSS选择器的作用"><a href="#2-1-CSS选择器的作用" class="headerlink" title="2.1 CSS选择器的作用"></a>2.1 CSS选择器的作用</h2><p>选择器就是根据不同的需求把不同的标签选出来，这就是选择器的作用，简单来说，就是：选择标签用的。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上 CSS 做了两件事：</p><ul><li>找到所有的 h1 标签。（选对人）</li><li>设置这些标签的样式：颜色为红色、字体大小为 25 像素。（做对事）</li></ul><h2 id="2-2-选择器的分类"><a href="#2-2-选择器的分类" class="headerlink" title="2.2 选择器的分类"></a>2.2 选择器的分类</h2><p>选择器分为 <code>基础选择器</code> 和 <code>复合选择器</code> 两个大类，本文首先介绍一下基础选择器。</p><ul><li>基础选择器是由 <code>单个</code> 选择器组成的</li><li>基础选择器（以下四种）<ol><li>标签选择器 （使用标签名 引用）</li><li>类选择器 （使用 <code>.</code>）</li><li>id选择器 （使用 <code>#</code>）</li><li>通配符选择器</li></ol></li></ul><h2 id="2-3-标签选择器"><a href="#2-3-标签选择器" class="headerlink" title="2.3 标签选择器"></a>2.3 标签选择器</h2><p><code>标签选择器</code>（元素选择器）是指用 HTML 标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的 CSS 样式。</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">标签名 &#123;</span><br><span class="line">属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">属性<span class="number">2</span>: 属性值<span class="number">2</span>;</span><br><span class="line">属性<span class="number">3</span>: 属性值<span class="number">3</span>;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>作用：</strong></p><p>标签选择器可以把某一类标签全部选择出来，比如所有的 <code>&lt;div&gt;</code> 标签和所有的 <code>&lt;span&gt;</code> 标签。</p><p><strong>优点：</strong></p><p>能快速为页面中同类型的标签统一设置样式。</p><p><strong>缺点：</strong></p><p>不能设计差异化样式，只能选择全部的当前标签。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>基础选择器之标签选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 会对所有的该标签元素运用样式，优点：快速统一，缺点：无法差异化设置 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>男<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>男<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>男<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>女生<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>女生<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>女生<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-4-类选择器"><a href="#2-4-类选择器" class="headerlink" title="2.4 类选择器"></a>2.4 类选择器</h2><p>如果想要差异化选择不同的标签，单独选一个或者某几个标签，可以使用 <code>类选择器</code> 。</p><p><strong>CSS 语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.类名 &#123;</span><br><span class="line">属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如：将所有拥有 red 类的 HTML 元素均设置为红色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.red</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>HTML 语法：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>变红色<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>类选择器在 HTML 中以 class 属性表示，在 CSS 中，类选择器以一个 <code>.</code> 号显示。</p><p><strong>注意：</strong></p><ul><li>类选择器使用 <code>.</code>（英文点号）进行标识，后面紧跟类名（自定义，我们自己命名的）</li><li>可以理解为给这个标签起了一个别名来表示</li><li>长名称或词组可以使用<strong>中横线</strong> <code>-</code> 来为类命名</li><li>不能使用已有的关键字作为类名</li><li>不要使用纯数字、中文等命名，尽量使用英文字母来表示</li><li>命名要见名知意（<strong>可读性第一，长度第二，推荐使用英语，如果是使用拼音请使用全拼</strong>）</li><li>命名规范：见附件（CSS 命名规范.md）</li></ul><p>记忆口诀：<strong>样式点定义</strong>，<strong>结构类调用</strong>，<strong>一个或多个</strong>，<strong>开发最常用</strong>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>基础选择器之类选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 类选择器口诀：样式 . 定义，结构 class 调用，一个或多个，开发最常用 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.green</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;green&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>类选择器——多类名</strong></p><p>我们可以给一个标签指定多个类名，从而达到更多的选择目的，这些类名都可以选出这个标签，简单理解就是一个标签有多个名字。</p><ul><li>在标签 class 属性中写多个类名</li><li>多个类名中间必须用 <code>空格</code> 分开</li><li>这个标签就可以分别具有这些类名的样式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>基础选择器之类选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 一个标签可以运用多个类选择器，之间用空格隔开 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.font35</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red font35&quot;</span>&gt;</span>kcs<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>多类名开发中使用场景</strong></p><ul><li>可以把一些标签元素相同的样式（共同的部分）放到一个类里面</li><li>这些标签都可以调用这个公共的类，然后再调用自己独有的类</li><li>从而节省 CSS 代码，统一修改也非常方便（<strong>模块化、可重用化</strong>）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>基础选择器之类选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 类选择器最大的优势在于：复用 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.green</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box green&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>多类名选择器在后期布局比较复杂的情况下，是使用得较多的。</p><h2 id="2-5-id选择器"><a href="#2-5-id选择器" class="headerlink" title="2.5 id选择器"></a>2.5 id选择器</h2><p>id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式。</p><p>HTML 元素以 id 属性来设置 id 选择器，CSS 中 id 选择器以 <code>#</code> 来定义。</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#id</span>名 &#123;</span><br><span class="line">属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>例如：</strong>将 id 为 nav 元素中的内容设置为红色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#nav</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>id 属性只能在每个 HTML 文档中出现一次。</p><p><strong>口诀：</strong>样式 <code>#</code> 定义，结构 <code>id</code> 调用，只能调用一次，别人切勿使用。</p><p><strong>id 选择器和类选择器的区别：</strong></p><ul><li>类选择器 (class) 好比人的名字，一个人可以有多个名字，同时一个名字也可以被多个人使用</li><li>id 选择器好比人的身份证号码，全中国是唯一的，不可重复（同一个 id 选择器只能调用一次）</li><li>id 选择器和类选择器最大的不同在于使用次数上</li><li>类选择器在修改样式中用的最多，id 选择器一般用于页面唯一性的元素上，经常和 JavaScript 搭配使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>基础选择器之id选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* id 选择器口诀：样式 # 定义，结构 id 调用，只能调用一次，别人切勿使用 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#pink</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;pink&quot;</span>&gt;</span>kcs<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再次强调：<strong>同一 id 只能定义一次，同一 id 选择器也只能调用一次！</strong>（对于 CSS 修改样式来说，最好使用类选择器，id 选择器主要与后面的 JS 搭配使用）。</p><h2 id="2-6-通配符选择器"><a href="#2-6-通配符选择器" class="headerlink" title="2.6 通配符选择器"></a>2.6 通配符选择器</h2><p>在 CSS 中，通配符选择器使用 <code>*</code> 定义，它表示选取页面中<strong>所有元素</strong>（标签）。</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>通配符选择器不需要调用，自动就给所有的元素使用样式</li><li>特殊情况才使用，后面讲解使用场景</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 利用通配符选择器清除所有的元素标签的内外边距，后期讲</span><br><span class="line">* &#123;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>基础选择器之通配符选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* * 给 html 标签所有的元素都使用样式，并且这个过程是自动完成的，不需要手动调用 */</span></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我的<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>我的<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>还是我的<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-7-基础选择器总结"><a href="#2-7-基础选择器总结" class="headerlink" title="2.7 基础选择器总结"></a>2.7 基础选择器总结</h2><table><thead><tr><th>基础选择器</th><th>作用</th><th>特点</th><th>使用情况</th><th>用法</th></tr></thead><tbody><tr><td>标签选择器</td><td>可以选出所有相同的标签，比如：p</td><td>不能差异化选择</td><td>较多</td><td><code>p &#123;color: red;&#125;</code></td></tr><tr><td>类选择器</td><td>可以选出 1 个或者 多个 标签</td><td>可以根据需求选择</td><td>非常多</td><td><code>.nav &#123;color: red;&#125;</code></td></tr><tr><td>id 选择器</td><td>一次只能选择 1 个标签</td><td>ID 属性只能在每个 HTML 文档中出现一次，也只能调用一次</td><td>一般和 js 搭配</td><td><code>#nav &#123;color: red;&#125;</code></td></tr><tr><td>通配符选择器</td><td>选择所有的标签</td><td>选择的太多，有部分不需要</td><td>特殊情况使用</td><td><code>* &#123;color: red;&#125;</code></td></tr></tbody></table><ul><li>每个基础选择器都有使用场景，都需要掌握</li><li>如果是修改样式，类选择器是使用最多的</li></ul><h1 id="三、CSS字体属性"><a href="#三、CSS字体属性" class="headerlink" title="三、CSS字体属性"></a>三、CSS字体属性</h1><p>CSS Fonts（字体）属性用于定义：<code>字体系列</code>、<code>大小</code>、<code>粗细</code>、和 <code>文字样式</code>（如：斜体）。</p><h2 id="3-1-字体系列"><a href="#3-1-字体系列" class="headerlink" title="3.1 字体系列"></a>3.1 字体系列</h2><p>CSS 使用 font-family 属性定义文本的字体系列。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">&quot;Microsoft YaHei&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: Arial, <span class="string">&quot;Microsoft YaHei&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>各种字体之间必须使用英文状态下的逗号隔开</li><li>一般情况下，如果有空格隔开的多个单词组成的字体，加引号</li><li>尽量使用系统默认自带字体，保证在任何用户的浏览器中都能正确显示</li><li>最常用的字体：<code>body &#123;font-family: &quot;Microsoft YaHei&quot;, tahoma, arial, sans-serif, &quot;Hiragino Sans GB&quot;;&#125;</code></li></ul><blockquote><p>B站官网字体：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: -apple-system,BlinkMacSystemFont,Helvetica Neue,Helvetica,Arial,PingFang SC,Hiragino Sans GB,Microsoft YaHei,sans-serif<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>Apple 官网字体：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">&quot;SF Pro SC&quot;</span>, <span class="string">&quot;SF Pro Text&quot;</span>, <span class="string">&quot;SF Pro Icons&quot;</span>, <span class="string">&quot;PingFang SC&quot;</span>, <span class="string">&quot;Helvetica Neue&quot;</span>, <span class="string">&quot;Helvetica&quot;</span>, <span class="string">&quot;Arial&quot;</span>, sans-serif</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>Instagram 官网字体：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: -apple-system, BlinkMacSystemFont,<span class="string">&quot;Segoe UI&quot;</span>, Roboto, Helvetica, Arial, sans-serif</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>知乎官网字体：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: -apple-system, BlinkMacSystemFont, Helvetica Neue, PingFang SC, Microsoft YaHei, Source Han Sans SC, Noto Sans CJK SC, WenQuanYi Micro Hei, sans-serif</span><br><span class="line">&gt;&#125;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>爱奇艺官网字体：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: PingFangSC-Regular, Helvetica, Arial, Microsoft Yahei, sans-serif</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS字体属性之字体系列<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 浏览器会从第一个字体开始进行适配，如果本机可以适配的话，那么就使用该字体，否则看下一个字体，</span></span></span><br><span class="line"><span class="comment"><span class="language-css">           如果都不可以，那么浏览器会使用自带的默认字体，所以实际开发中一般建议使用比较标准化的字体 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* font-family: &#x27;微软雅黑&#x27;; 可以使用中文，但不建议 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&quot;Microsoft YaHei&quot;</span>, Arial, sans-serif;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&quot;Times New Roman&quot;</span>, Times, serif;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>个人介绍<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>姓名：十二<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>生日：2001.12.01<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>性别：男<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>婚姻状况：恋爱<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS字体属性之字体系列<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 一些情况下，如果要全局设置字体可以直接在 body 标签选择器中指明 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&quot;Microsoft YaHei&quot;</span>, Arial, sans-serif;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>个人介绍<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>姓名：十二<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>生日：2001.12.01<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>性别：男<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>婚姻状况：恋爱<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：浏览器字体是依据用户操作系统来调用的，所以这里介绍一种 Windows 系统安装字体的方法。</p><blockquote><p>当然实际开发中通常浏览器请求时，会把字体文件随 HTML CSS JS 等一同传送到客服端。</p></blockquote><h2 id="3-2-字体大小"><a href="#3-2-字体大小" class="headerlink" title="3.2 字体大小"></a>3.2 字体大小</h2><p>CSS 使用 font-size 属性定义字体大小。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>px（像素）大小是我们网页的最常用的单位</li><li>谷歌浏览器默认的文字大小为：16px</li><li>不同浏览器可能默认显示的字号大小不一致，我们尽量给一个明确值大小，不要默认大小</li><li>可以给 body 指定整个页面文字的大小</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS字体属性之字体大小<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 全局设置时，一般在 body 标签选择器中指定文字大小，谷歌浏览器默认 16px，</span></span></span><br><span class="line"><span class="comment"><span class="language-css">           但是最好还是指定一个明确值，以保证在不同浏览器中的效果是一样的 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 标题标签比较特殊，body 中的设置对其是不生效的，需要单独指定文字大小 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">54px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>个人介绍<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>姓名：十二<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>生日：2001.12.01<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>性别：男<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>婚姻状况：恋爱<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-3-字体粗细"><a href="#3-3-字体粗细" class="headerlink" title="3.3 字体粗细"></a>3.3 字体粗细</h2><p>CSS 使用 font-weight 属性设置文本字体的粗细。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><code>normal</code></td><td>默认值（不加粗的）</td></tr><tr><td><code>bold</code></td><td>定义粗体（加粗的）</td></tr><tr><td><code>100-900</code></td><td>400 等同于 normal，而 700 等同于 bold，其它值一般不使用，注意这个数字后面不跟单位</td></tr></tbody></table><ul><li>学会让加粗标签（比如 h 和 strong 等）变为不加粗，或者让其他标签加粗</li><li>实际开发时，我们更喜欢用数字表示粗细</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS字体属性之字体粗细<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.bold</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* font-weight: bold; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 实际开发中，我们更提倡使用数字来表示加粗的效果 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 这个 700 的后面不要跟单位 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">700</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 使文字不加粗 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* font-weight: normal; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">400</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>个人介绍<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>姓名：十二<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>生日：2001.12.01<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>性别：男<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>婚姻状况：恋爱<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-4-文字样式"><a href="#3-4-文字样式" class="headerlink" title="3.4 文字样式"></a>3.4 文字样式</h2><p>CSS 使用 font-style 属性设置文本的风格。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>作用</th></tr></thead><tbody><tr><td><code>normal</code></td><td>默认值，浏览器会显示标准的字体样式 font-style: normal;</td></tr><tr><td><code>italic</code></td><td>浏览器会显示斜体的字体样式</td></tr></tbody></table><p><strong>注意：</strong>平时我们很少给文字加斜体，反而要给斜体标签 (em、i) 改为不倾斜字体。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS字体属性之字体样式（风格）<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 让不倾斜的字体倾斜 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-style</span>: italic;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">em</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 让倾斜的字体不倾斜 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-style</span>: normal;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>上课时候的你<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">em</span>&gt;</span>下课时候的你<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-5-字体复合属性"><a href="#3-5-字体复合属性" class="headerlink" title="3.5 字体复合属性"></a>3.5 字体复合属性</h2><p>字体属性可以把以上文字样式综合来写，这样可以更节约代码。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">font</span>: font-style font-weight font-size/line-height font-family;</span><br><span class="line">  <span class="comment">/*字体是否倾斜 字体加粗 字体大小，字体种类*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">font</span>: normal <span class="number">400</span> font-size/line-height <span class="string">&quot;Microsoft YaHei&quot;</span>, Arial, sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>使用 font 属性时，必须按上面语法格式中的&#x3D;&#x3D;顺序书写&#x3D;&#x3D;，不能更换顺序，并且各个属性间以空格隔开</p></li><li><p>不需要设置的属性可以省略（取默认值），但必须保留 font-size 和 font-family 属性，否则 font 属性将不起作用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">font</span>: <span class="number">20px</span> <span class="string">&#x27;Microsoft YaHei&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS字体属性之复合属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 想要 div 文字变倾斜、加粗、字号设置为 16 像素，并且是微软雅黑 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* font-style: italic;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">               font-weight: 700;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">               font-size: 16px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">               font-family: &#x27;Microsoft YaHei&#x27;; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 复合属性：简写的方式，里面的顺序不能打乱 以空格隔开 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* font: font-style font-weight font-size/line-height font-family; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font</span>: italic <span class="number">700</span> <span class="number">16px</span> <span class="string">&#x27;Microsoft YaHei&#x27;</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>三生三世十里桃花，一心一意百行代码<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-6-字体属性总结"><a href="#3-6-字体属性总结" class="headerlink" title="3.6 字体属性总结"></a>3.6 字体属性总结</h2><table><thead><tr><th>属性</th><th>表示</th><th>注意点</th></tr></thead><tbody><tr><td><code>font-size</code></td><td>字号</td><td>我们通常用的单位是 px 像素，一定要跟上单位</td></tr><tr><td><code>font-family</code></td><td>字体</td><td>实际工作中按照团队约定来写字体</td></tr><tr><td><code>font-weight</code></td><td>字体属性</td><td>记住加粗是 700 或者 bold 不加粗 是 normal 或者 400 记住数字不要跟单位</td></tr><tr><td><code>font-style</code></td><td>字体样式</td><td>记住倾斜是 italic 不倾斜是 normal 工作中我们最常用 normal</td></tr><tr><td><code>font</code></td><td>字体连写</td><td>1、字体连写是有顺序的不能随意换位置，2、其中字号和字体必须同时出现</td></tr></tbody></table><p>层叠性：后面的属性值覆盖前面的属性值</p><h1 id="四、CSS文本属性"><a href="#四、CSS文本属性" class="headerlink" title="四、CSS文本属性"></a>四、CSS文本属性</h1><p>CSS Text（文本）属性可定义文本的 <code>外观</code>，比如：<code>文本颜色</code>、<code>文本对齐</code>、<code>文本装饰</code>、<code>文本缩进</code>、<code>行间距</code> 等。</p><h2 id="4-1-文本颜色"><a href="#4-1-文本颜色" class="headerlink" title="4.1 文本颜色"></a>4.1 文本颜色</h2><p><code>color</code> 属性用于定义文本的颜色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>表示方式</th><th>属性值</th></tr></thead><tbody><tr><td>预定义的颜色值</td><td>red，green，blue，black，white，gray</td></tr><tr><td>十六进制</td><td>#FF0000，#FF6600，#29D794（每两位对应：#红R绿G蓝B）</td></tr><tr><td>RGB 代码</td><td>rgb(255, 0, 0) 或 rgb(100%, 0%, 0%)</td></tr></tbody></table><p><strong>注意：</strong>开发中最常用的是十六进制。</p><blockquote><p>熟记开发常用色：</p><p>黑色：<code>black</code>、<code>#000000</code>、<code>rgb(0, 0, 0)</code>（三原色啥也没有混合就为黑）</p><p>白色：<code>white</code>、<code>#FFFFFF</code>、<code>rgb(255, 255, 255)</code>（三原色全满混合就为白）</p><p>灰色：<code>gray</code>、<code>#808080</code>、<code>rgb(128, 128, 128)</code>（三原色全半混合就为灰）</p><p>红色：<code>red</code>、<code>#FF0000</code>、<code>rgb(255, 0, 0)</code></p><p>绿色：<code>green</code>、<code>#008000</code>、<code>rgb(0, 128, 0)</code>（绿色较为特殊，green 对应的是 #008000）</p><p>蓝色：<code>blue</code>、<code>#0000FF</code>、<code>rgb(0, 0, 255)</code></p><p>黄色：<code>yellow</code>、<code>#FFFF00</code>、<code>rgb(255, 255, 0)</code></p><p>青色：<code>#00FFFF</code>、<code>rgb(0, 255, 255)</code></p><p>洋红：<code>#FF00FF</code>、<code>rgb(255, 0, 255)</code></p><p>橙色：<code>orange</code></p><p>粉色：<code>pink</code></p><p>烈粉色：<code>hotpink</code>（浓度低）、<code>deeppink</code>（浓度高）</p><p>天蓝色：<code>skyblue</code></p><p>深色系：<code>dark颜色</code> 如：<code>darkgreen</code></p><p>浅色系：<code>light颜色</code> 如：<code>lightgreen</code></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS文本外观属性之文本颜色<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* color: deeppink; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* color: #FF1493; 最常用 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">20</span>, <span class="number">147</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>pink<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-2-文本对齐"><a href="#4-2-文本对齐" class="headerlink" title="4.2 文本对齐"></a>4.2 文本对齐</h2><p><code>text-align</code> 属性用于设置元素内文本内容的水平对齐方式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>解释</th></tr></thead><tbody><tr><td>left</td><td>左对齐（默认值）</td></tr><tr><td>rigth</td><td>右对齐</td></tr><tr><td>center</td><td>居中对齐</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS文本外观之文本对齐<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 本质是让 h1 盒子里面的文字水平居中对齐 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* text-align: center; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: right;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>右对齐的标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：</p><p><code>text-align</code> 属性只能作用于 <code>块级元素</code>，并让该块级元素内的 <code>行内元素</code> 实现居中（不一定是文字,还可以是图片等其他内容设置对其方式）。</p><p>上述例子中：h1 为块级元素，所以给 h1 设置 text-align，便会作用于里面的文本（如果里面还有行内元素的话，也会一同作用）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS文本外观之文本对齐<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>kkkssccc<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上述例子中：为 div 设置 text-align 之所以能够使其内部的块级元素 p 里的文字居中，原因是 p 会继承父元素 div 的 text-align 属性，所以相当于对 p 设置了 text-align。</p><h2 id="4-3-文本装饰"><a href="#4-3-文本装饰" class="headerlink" title="4.3 文本装饰"></a>4.3 文本装饰</h2><p><code>text-decoration</code> 属性规定添加到文本的修饰，可以给文本添加 <code>下划线</code>、<code>删除线</code>、<code>上划线</code> 等。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><code>none</code></td><td>默认，没有装饰线（<strong>最常用</strong>）</td></tr><tr><td><code>underline</code></td><td>下划线，链接 a 自带下划线（常用）</td></tr><tr><td><code>overline</code></td><td>上划线（几乎不用）</td></tr><tr><td><code>line-through</code></td><td>删除线（不常用）</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS文本外观之文本装饰<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 默认为 none 没有装饰 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 上划线 几乎不用 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* text-decoration: overline; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 删除线 不常用 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* text-decoration: line-through; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 下划线 常用，链接 a 自带下划线 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: underline;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 取消 a 默认的下划线 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#333333</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>记录笔记博客<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://shier-blog.vercel.app/&quot;</span>&gt;</span>JERRY<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-4-文本缩进"><a href="#4-4-文本缩进" class="headerlink" title="4.4 文本缩进"></a>4.4 文本缩进</h2><p><code>text-indent</code> 属性用来指定文本的第一行的缩进，通常是将段落的首行缩进。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">text-indent</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过设置该属性，所有元素的第一行都可以缩进一个给定的长度，甚至该长0可以是负值。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">text-indent</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>em 是一个相对单位，就是当前元素 (font-size) 1 个文字的大小，如果当前元素没有设置大小，则会按照父元素的 1 个文字大小。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS文本外观之文本缩进<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 文本的首行缩进多少距离，不仅可以为正值，还可以为负值 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* text-indent: 20px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* em 为相对于当前元素的大小单位 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>打开北京、上海与广州的地铁地图，你会看见三张纵横交错的线路网络，</span><br><span class="line">        这代表了中国最成熟的三套城市轨道交通系统<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>可即使是这样，在北上广生活的人依然少不了对地铁的抱怨，其中谈及最多的问题便是拥挤，</span><br><span class="line">        对很多人而言，每次挤地铁的过程，都像是一场硬仗。更何况，还都是败仗居多。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>那么，当越来越多的二线甚至三线城市迎接来了自己的地铁，中国哪里的地铁是最拥挤的呢？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-5-行间距（行高）"><a href="#4-5-行间距（行高）" class="headerlink" title="4.5 行间距（行高）"></a>4.5 行间距（行高）</h2><p><code>line-height</code> 属性用于设置行间的距离（行高），可以控制文字行与行之间的距离。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">26px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>行间距 = 上间距 + 文本高度 + 下间距</code></p></li><li><p><code>上下间距 = （行间距 - 文本高度）/ 2</code></p></li><li><p><code>文本高度 = font-size</code></p><p><img src="http://picgo.kongshier.top/2767/image-20221024101743196.png" alt="image-20221024101743196"></p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS文本外观之行间距<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 行间距 = 上间距 + 文本高度 + 下间距 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 行间距 = 行高 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 文本高度 = 字体像素大小 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 上下间距 = （行间距 - 文本高度）/ 2 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>打开北京、上海与广州的地铁地图，你会看见三张纵横交错的线路网络，</span><br><span class="line">        这代表了中国最成熟的三套城市轨道交通系统<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>可即使是这样，在北上广生活的人依然少不了对地铁的抱怨，其中谈及最多的问题便是拥挤，</span><br><span class="line">        对很多人而言，每次挤地铁的过程，都像是一场硬仗。更何况，还都是败仗居多。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>那么，当越来越多的二线甚至三线城市迎接来了自己的地铁，中国哪里的地铁是最拥挤的呢？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>补充：行间距测量技巧：上一行文字的底部与本行文字的底部之间的距离就是行间距。</p><p>font 复合属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">font</span>: style weight size/line-height family;</span><br><span class="line"><span class="comment">/* 倾斜  加粗 大小/行高 字体  */</span> </span><br></pre></td></tr></table></figure><h2 id="4-6-文本属性总结"><a href="#4-6-文本属性总结" class="headerlink" title="4.6 文本属性总结"></a>4.6 文本属性总结</h2><table><thead><tr><th>属性</th><th>表示</th><th>注意点</th></tr></thead><tbody><tr><td><code>color</code></td><td>文本颜色</td><td>我们通常用 十六进制 而且通常是简写形式 #fff（6 个一样可以简写）</td></tr><tr><td><code>text-align</code></td><td>文本对齐</td><td>可以设定文字水平的对齐方式</td></tr><tr><td><code>text-indent</code></td><td>文本缩进</td><td>通常我们用于段落首行缩进2个字的距离 text-indent: 2em;</td></tr><tr><td><code>text-decoration</code></td><td>文本修饰</td><td>牢记 添加下划线 underline 取消下划线 none</td></tr><tr><td><code>line-height</code></td><td>行高</td><td>控制行与行之间的距离</td></tr></tbody></table><h1 id="五、CSS引入方式"><a href="#五、CSS引入方式" class="headerlink" title="五、CSS引入方式"></a>五、CSS引入方式</h1><h2 id="5-1-CSS的三种引入方式"><a href="#5-1-CSS的三种引入方式" class="headerlink" title="5.1 CSS的三种引入方式"></a>5.1 CSS的三种引入方式</h2><p>按照 CSS 样式书写的位置（或者引入的方式），CSS 样式表可以分为三大类：</p><ul><li>行内样式表（行内式）</li><li>内部样式表（嵌入式）</li><li>外部样式表（外链式）</li></ul><h2 id="5-2-行内样式表"><a href="#5-2-行内样式表" class="headerlink" title="5.2 行内样式表"></a>5.2 行内样式表</h2><p>行内样式表（内联样式表）是在元素标签内部的 style 属性中设定 CSS 样式，适合于修改简单样式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: red; font-size: 12px;&quot;</span>&gt;</span></span><br><span class="line">    青春不常在，抓紧谈恋爱</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>style</code> 其实就是标签的属性</li><li>在双引号中间，写法要符合 CSS 规范</li><li>可以控制当前的标签设置样式</li><li>由于书写繁琐，并且没有体现出结构与样式相分离的思想，所以不推荐大量使用，只有对当前元素添加简单样式的时候，可以考虑使用</li><li>使用行内样式表设定 CSS，通常也被称为 <code>行内式引入</code></li></ul><h2 id="5-3-内部样式表"><a href="#5-3-内部样式表" class="headerlink" title="5.3 内部样式表"></a>5.3 内部样式表</h2><p>内部样式表（嵌入样式表）时写到 HTML 页面内部，是将所有的 CSS 代码抽取出来，单独放到一个 <code>&lt;style&gt;</code> 标签中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>&lt;style&gt;</code> 标签理论上可以放在 HTML 文档的任何地方，但一般会放到文档的 <code>&lt;head&gt;</code> 标签中</li><li>目前的浏览器已经支持<strong>省略</strong> <code>type</code> <strong>属性</strong></li><li>通过此种方式，可以方便控制当前整个页面中的元素样式设置</li><li>代码结构清晰，但是并没有实现结构与样式完全分离</li><li>使用内部样式表设定 CSS，通常也被称为 <code>嵌入式引入</code>，这种方式是我们练习时常用的方式</li></ul><h2 id="5-4-外部样式表"><a href="#5-4-外部样式表" class="headerlink" title="5.4 外部样式表"></a>5.4 外部样式表</h2><p>实际开发都是外部样式表，适合于样式比较多的情况，核心是：样式单独写到 CSS 文件中，之后把 CSS 文件引入到 HTML 页面中使用。</p><p>引入外部样式表分为两步：</p><ul><li>新建一个后缀名为：<code>.css</code> 的样式文件，把所有的 CSS 代码都放入此文件中</li><li>在 HTML 页面中，在<code>head</code> 标签内，使用 <code>&lt;link&gt;</code> 标签引入这个文件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css文件路径&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td><code>rel</code></td><td>定义当前文档与被链接文档之间的关系，在这里**需要指定为 “stylesheet”**，表示被链接的文档是一个样式表文件</td></tr><tr><td><code>type</code></td><td>定被链接文档的 MIME 类型，该属性最常见的 MIME 类型是 “text&#x2F;css”，该类型描述样式表，目前的浏览器<strong>已经支持省略 “type” 属性</strong></td></tr><tr><td><code>href</code></td><td>定义所链接外部样式表文件的 URL，可以是相对路径，也可以是绝对路径</td></tr></tbody></table><p><strong>注意：</strong>使用外部样式表设定 CSS，通常也被称为 <code>外链式</code> 或 <code>链接式引入</code>，这种方式是开发中常用的方式。</p><h2 id="5-5-CSS引入方式总结"><a href="#5-5-CSS引入方式总结" class="headerlink" title="5.5 CSS引入方式总结"></a>5.5 CSS引入方式总结</h2><table><thead><tr><th>样式表</th><th>优点</th><th>缺点</th><th>使用情况</th><th>控制范围</th></tr></thead><tbody><tr><td>行内样式表（行内式）</td><td>书写方便，权重高</td><td>结构样式混写</td><td>较少</td><td>控制一个标签</td></tr><tr><td>内部样式表（嵌入式）</td><td>部分结构和样式分离</td><td>没有彻底分离</td><td>较多</td><td>控制一个页面</td></tr><tr><td>外部样式表（外链式）</td><td>完全实现结构和样式相分离</td><td>需要引入</td><td>最多，吐血推荐</td><td>控制多个页面</td></tr></tbody></table><h1 id="六、CSS的复合选择器"><a href="#六、CSS的复合选择器" class="headerlink" title="六、CSS的复合选择器"></a>六、CSS的复合选择器</h1><h2 id="6-1-什么是复合选择器"><a href="#6-1-什么是复合选择器" class="headerlink" title="6.1 什么是复合选择器"></a>6.1 什么是复合选择器</h2><p>在 CSS 中，可以根据选择器的类型把选择器分为：<code>基础选择器</code> 和 <code>复合选择器</code>，复合选择器是建立在基础选择器之上，对基础选择器进行<strong>组合形成</strong>的。</p><ul><li>复合选择器可以更准确、更高效的选择目标元素（标签）</li><li>复合选择器是由两个或多个基础选择器，通过不同的方式组合而成的</li><li>常用的复合选择器包括：<strong>后代选择器</strong>、<strong>子选择器</strong>、<strong>并集选择器</strong>、<strong>伪类选择器</strong>等</li></ul><h2 id="6-2-后代选择器"><a href="#6-2-后代选择器" class="headerlink" title="6.2 后代选择器"></a>6.2 后代选择器</h2><p><code>后代选择器</code> 又称为 <code>包含选择器</code>，可以选择父元素里面子元素。其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔。当标签发生嵌套时，内层标签就成为外层标签的后代。</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span> 元素<span class="number">2</span> &#123; 样式声明 &#125;</span><br><span class="line">标签<span class="number">1</span> 标签<span class="number">2</span> &#123; 样式声明 &#125;</span><br></pre></td></tr></table></figure><p>上述语法表示选择 元素 1 里面的<strong>所有</strong>元素 2 （后代元素）。 </p><p><strong>例如：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123; 样式声明 &#125; <span class="comment">/* 选择 ul 里面所有的 li 标签元素 */</span></span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">p</span> &#123; <span class="attribute">color</span>: red; &#125; <span class="comment">/* 选择 div 里面所有的 p 标签元素 */</span></span><br></pre></td></tr></table></figure><ul><li>元素1 和 元素2 中间用 <strong>空格</strong> 隔开</li><li>元素1 是父级，元素2 是子级，最终选择的是 元素2，即：元素1 是不会生效样式的</li><li>元素2 可以是儿子，也可以是孙子等，只要是 元素1 的后代即可</li><li>元素1 和 元素2 <strong>可以是任意基础选择器</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>复合选择器之后代选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 把 ol 里面的小 li 选出来改为 pink */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ol</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 把 ol 里面的小 a 选出来改为 red */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ol</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 把 ul 里面的小 li 选出来改为 green */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 把 nav 类中的 li 里面的 a 选出来改为 yellow */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: yellow;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是 ol 的孩子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是 ol 的孩子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是 ol 的孩子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我是 ol 的孙子<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是 ul 的孩子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是 ul 的孩子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是 ul 的孩子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我是 ul 的孙子，但是我不会变化<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我偏要变色！并且只能我一个人色……<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-3-子选择器"><a href="#6-3-子选择器" class="headerlink" title="6.3 子选择器"></a>6.3 子选择器</h2><p>子元素选择器（子选择器）只能选择作为某元素的<strong>最近一级子元素</strong>，简单理解就是选亲儿子元素。</p><p>注意：是<strong>最近一级而并非最近一个</strong>！</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span>&gt;元素<span class="number">2</span> &#123; 样式声明 &#125;</span><br></pre></td></tr></table></figure><p>上述语法表示选择元素1 里面的所有直接后代（子元素）元素2。</p><p><strong>例如：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &gt; <span class="selector-tag">p</span> &#123; 样式声明 &#125; <span class="comment">/* 选择 div 里面所有最近一级 p 标签元素 */</span></span><br></pre></td></tr></table></figure><ul><li>元素1 和 元素2 中间用 <strong>大于号</strong> 隔开</li><li>元素1 是父级，元素2 是子级，最终选择的是元素2，即元素1 是不会生效样式的</li><li>元素2 <strong>必须是亲儿子，其孙子、重孙之类都不归他管</strong>，你也可以叫：亲儿子选择器</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>复合选择器之子元素选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> &gt; <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我是儿子1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我是孙子1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我是孙子2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我是儿子2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-4-并集选择器"><a href="#6-4-并集选择器" class="headerlink" title="6.4 并集选择器"></a>6.4 并集选择器</h2><p><code>并集选择器</code> 可以选择多组标签，同时为他们定义相同的样式，通常用于<strong>集体声明</strong>。<br><code>并集选择器</code> 是各选择器通过<strong>英文逗号</strong> <code>,</code> 连接而成，任何形式的选择器都可以作为并集选择器的一部分。</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span>, 元素<span class="number">2</span>, 元素<span class="number">3</span> &#123; 样式声明 &#125;</span><br></pre></td></tr></table></figure><p>推荐写法，编码风格：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span>,</span><br><span class="line">元素<span class="number">2</span>,</span><br><span class="line">元素<span class="number">3</span> &#123;</span><br><span class="line">    样式声明</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述语法表示选择元素1、元素2 和 元素3。</p><p><strong>例如：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span>, <span class="selector-tag">div</span> &#123; 样式声明 &#125; <span class="comment">/* 选择 ul 和 div标签元素 */</span></span><br></pre></td></tr></table></figure><ul><li>元素1 和 元素2 中间用逗号隔开（最后一个不加逗号）</li><li>逗号可以理解为和的意思</li><li>并集选择器通常用于集体声明</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>复合选择器之并集选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 要求1：请把熊大和熊二改为粉色 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* div,</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        p &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            color: pink;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 要求2：请把熊大和熊二改为红色，还有小猪一家改为粉色 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pig</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 语法规范：并集选择器通常竖着写 */</span></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>熊大<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>熊二<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>光头强<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;pig&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>小猪佩奇<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>猪爸爸<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>猪妈妈<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>选择器 - 交集</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>交集选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* id选择器 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#p1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 类选择器 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.p2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 交集选择器 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">span</span><span class="selector-class">.s2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* 交集选择器 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-class">.d2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font</span>: italic bold <span class="number">25px</span> 宋体;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>pppp<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>pppp11111<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>pppp22222<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>spanspan<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;s1&quot;</span>&gt;</span>spanspan11111<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;s2&quot;</span>&gt;</span>spanspan2222<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>divdiv<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;d1&quot;</span>&gt;</span>divdiv11111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;d2&quot;</span>&gt;</span>divdiv22222<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-5-伪类选择器"><a href="#6-5-伪类选择器" class="headerlink" title="6.5 伪类选择器"></a>6.5 伪类选择器</h2><p><code>伪类选择器</code> 用于<strong>向某些选择器添加特殊的效果</strong>，比如：给链接添加特殊效果（链接伪类），或选择第 n 个元素（结构伪类）。<br><code>伪类选择器</code> 书写最大的特点是用<strong>冒号</strong> <code>:</code> 表示，比如：<code>:hover</code>、<code>:first-child</code>。<br>因为伪类选择器很多，比如：<code>链接伪类</code>、<code>结构伪类</code> 等，所以这里先讲解常用的链接伪类选择器。</p><blockquote><p>伪类的由来：因为在页面中并没有这个真实存在的类，所以称为 “伪类”。</p></blockquote><h2 id="6-6-链接伪类选择器"><a href="#6-6-链接伪类选择器" class="headerlink" title="6.6 链接伪类选择器"></a>6.6 链接伪类选择器</h2><p><strong>链接伪类选择器注意事项：</strong></p><ul><li><p>为了确保生效且不冲突，请按照 <code>LVHA</code> 的顺序声明 <code>:link</code> <code>:visited</code> <code>:hover</code> <code>:active</code></p></li><li><p>记忆法：love hate 或者 lv 包包 hao </p></li><li><p>因为 a 链接在浏览器中具有默认样式，所以我们实际工作中都需要给链接单独指定样式</p></li></ul><p><strong>链接伪类选择器实际工作开发中的写法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* a 是标签选择器 所有的链接 */</span></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: gray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* :hover 是链接伪类选择器 鼠标经过 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: red; <span class="comment">/* 鼠标经过的时候，由原来的 灰色 变成了红色 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>复合选择器之链接伪类选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 注意：要学会触类旁通，这里不只是可以改变颜色，当链接为图片时还可以改图片 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 1、a:link 把没有点击过的（访问过的）链接选出来 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 2、a:visited 选择点击过的（访问过的）链接选出来 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: orange;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 3、a:hover 选择鼠标经过（停留）的那个链接 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 4、a:active 选择的是我们鼠标正在按下还没有弹起鼠标的那个链接 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>小猪佩奇<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210405203010954.gif"></p><blockquote><p>注意：<code>:hover</code> <code>:active</code> 也适用于其他标签元素。</p></blockquote><h2 id="6-7-focus伪类选择器"><a href="#6-7-focus伪类选择器" class="headerlink" title="6.7 :focus伪类选择器"></a>6.7 :focus伪类选择器</h2><p><code>:focus</code> 伪类选择器用于选取获得焦点的表单元素。</p><p>焦点就是光标，一般情况 <code>&lt;input&gt;</code> 类表单元素才能获取，因此这个选择器也主要针对于表单元素来说。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line"><span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>复合选择器之focus伪类选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 把获得光标的 input 表单元素选区出来 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210405202554834.gif"></p><h2 id="6-8-复合选择器总结"><a href="#6-8-复合选择器总结" class="headerlink" title="6.8 复合选择器总结"></a>6.8 复合选择器总结</h2><table><thead><tr><th>选择器</th><th>作用</th><th>特征</th><th>使用情况</th><th>隔开符号及用法</th></tr></thead><tbody><tr><td>后代选择器</td><td>用来选择后代元素</td><td>可以是子孙后代</td><td>较多</td><td>符号是空格 <code>.nav a</code></td></tr><tr><td>子代选择器</td><td>选择最近一级元素</td><td>只选亲儿子</td><td>较少</td><td>符号是大于 <code>.nav&gt;p</code></td></tr><tr><td>并集选择器</td><td>选择某些相同样式的元素</td><td>可以用于集体声明</td><td>较多</td><td>符号是逗号 <code>.nav</code>, <code>.header</code></td></tr><tr><td>链接伪类选择器</td><td>选择不同状态的链接</td><td>跟链接相关</td><td>较多</td><td>重点记住 <code>a&#123;&#125;</code> 和 <code>a:hover</code> 实际开发的写法</td></tr><tr><td><code>:focus</code> 选择器</td><td>选择获得光标的表单</td><td>跟表单相关</td><td>较少</td><td><code>input:focus</code> 记住这个写法</td></tr></tbody></table><p>强调：复合选择器的层级写得越细越好（可读性，可维护性，安全性），同时将复合选择器的层级写得越细，可以提前避免大部分的选择器优先级混乱！</p><h1 id="七、CSS-的元素显示模式"><a href="#七、CSS-的元素显示模式" class="headerlink" title="七、CSS 的元素显示模式"></a>七、CSS 的元素显示模式</h1><h2 id="7-1-什么是元素显示模式"><a href="#7-1-什么是元素显示模式" class="headerlink" title="7.1 什么是元素显示模式"></a>7.1 什么是元素显示模式</h2><p><strong>作用：</strong>网页的标签非常多，在不同地方会用到不同类型的标签，了解他们的特点可以更好的布局我们的网页。</p><p><code>元素显示模式</code> 就是元素（标签）以什么方式进行显示，比如 <code>&lt;div&gt;</code> 自己占一行，比如一行可以放多个 <code>&lt;span&gt;</code>。</p><p>HTML 元素一般分为 <code>块元素</code> 和 <code>行内元素</code> 两种类型。</p><h2 id="7-2-块元素"><a href="#7-2-块元素" class="headerlink" title="7.2 块元素"></a>7.2 块元素</h2><p>常见的块元素有 <code>&lt;h1&gt; ~ &lt;h6&gt;</code>、<code>&lt;p&gt;</code>、<code>&lt;div&gt;</code>、<code>&lt;ul&gt;</code>、<code>&lt;ol&gt;</code>、<code>&lt;li&gt;</code>、<code>&lt;dl&gt;</code>、<code>&lt;dt&gt;</code>、<code>&lt;dd&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;tr&gt;</code>、<code>&lt;form&gt;</code> 等，其中  <code>&lt;div&gt;</code> 标签是最典型的块元素。</p><p><strong>块级元素的特点：</strong></p><ul><li>比较霸道，自己独占一行</li><li>高度，宽度、外边距以及内边距都可以控制</li><li>宽度默认是容器（父级宽度）的 100%</li><li>是一个容器及盒子，里面可以放行内或者块级元素</li></ul><p><strong>注意：</strong></p><ul><li>文字类的块级元素内不能放置块级元素，会发生语法错误</li><li><code>&lt;p&gt;</code> 标签主要用于存放文字，因此 <code>&lt;p&gt;</code> 里面不能放块级元素，特别是不能放 <code>&lt;div&gt;</code></li><li>同理， <code>&lt;h1&gt; ~ &lt;h6&gt;</code> 等都是文字类块级标签，里面也不能放其他块级元素</li></ul><h2 id="7-3-行内元素"><a href="#7-3-行内元素" class="headerlink" title="7.3 行内元素"></a>7.3 行内元素</h2><p>常见的行内元素有 <code>&lt;a&gt;</code>、<code>&lt;span&gt;</code>、<code>&lt;em&gt;</code>、<code>&lt;strong&gt;</code> 等，其中 <code>&lt;span&gt;</code> 标签是最典型的行内元素，有的地方也将行内元素称为内联元素。</p><p><strong>行内元素的特点：</strong></p><ul><li><p>相邻行内元素在一行上，一行可以显示多个</p></li><li><p>高、宽直接设置是无效的</p></li><li><p>默认宽度就是它本身内容的宽度</p></li><li><p>行内元素只能容纳文本或其他行内元素（a 除外）</p></li></ul><p><strong>注意：</strong></p><ul><li>链接里面不能再放链接</li><li>特殊情况链接 <code>&lt;a&gt;</code> 里面可以放块级元素，但是给 <code>&lt;a&gt;</code> 转换一下块级模式最安全</li></ul><h2 id="7-4-行内块元素"><a href="#7-4-行内块元素" class="headerlink" title="7.4 行内块元素"></a>7.4 行内块元素</h2><p>在行内元素中有几个特殊的标签：<code>&lt;img&gt;</code>、<code>&lt;input&gt;</code>、<code>&lt;th&gt;</code>、<code>&lt;td&gt;</code>，它们同时具有 <code>块元素</code> 和 <code>行内元素</code> 的特点，有些资料称它们为 <code>行内块元素</code>。</p><p><strong>行内块元素的特点：</strong></p><ul><li>和相邻行内元素（行内块）在一行上，但是他们之间会有空白缝隙。一行可以显示多个（行内元素特点）</li><li>默认宽度就是它本身内容的宽度（行内元素特点）</li><li>&#x3D;&#x3D;高度，行高、外边距以及内边距都可以控制&#x3D;&#x3D;（块级元素特点）</li></ul><h2 id="7-5-元素显示模式总结"><a href="#7-5-元素显示模式总结" class="headerlink" title="7.5 元素显示模式总结"></a>7.5 元素显示模式总结</h2><table><thead><tr><th>元素模式</th><th>元素排列</th><th>设置样式</th><th>默认宽度</th><th>包含</th></tr></thead><tbody><tr><td>块级元素</td><td>一行只能放一个块级元素</td><td>可以设置宽度和高度</td><td>容器的 100%</td><td>容量级可以包含任何标签</td></tr><tr><td>行内元素</td><td>一行可以放多个行内元素</td><td>不可以直接设置宽度和高度</td><td>它本身内容的宽度</td><td>容纳文本或其他行内元素</td></tr><tr><td>行内块元素</td><td>一行放多个行内块元素</td><td>可以设置宽度和高度</td><td>它本身内容的宽度</td><td></td></tr></tbody></table><p>学习元素显示模式的主要目的是分清它们各自的特点，当我们网页布局的时候，在合适的地方用合适的标签元素。</p><h2 id="7-6-元素显示模式转换"><a href="#7-6-元素显示模式转换" class="headerlink" title="7.6 元素显示模式转换"></a>7.6 元素显示模式转换</h2><p>特殊情况下，我们需要元素模式的转换，简单理解: 一个模式的元素需要另外一种模式的特性<br>比如：想要增加链接 <code>&lt;a&gt;</code> 的触发范围。</p><table><thead><tr><th>属性</th><th>效果</th><th>频率</th></tr></thead><tbody><tr><td>display: block;</td><td>转换为块元素（由于经常需要设置宽高，所以通常会将行内元素转换为块元素）</td><td>较多</td></tr><tr><td>display: inline;</td><td>转换为行内元素</td><td>较少</td></tr><tr><td>display: inline-block;</td><td>转换为行内块</td><td>常用</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>元素显示模式之显示模式的转换<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 把行内元素 a 转换为 块级元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 把 div 块级元素转化为行内元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 行内元素转化为行内块元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我是行内元素<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我是行内元素<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是块级元素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是块级元素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>行内元素转化为行内块元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>行内元素转化为行内块元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210405205009406.jpg"></p><h2 id="7-7-简洁版小米侧边栏案例"><a href="#7-7-简洁版小米侧边栏案例" class="headerlink" title="7.7 简洁版小米侧边栏案例"></a>7.7 简洁版小米侧边栏案例</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>简洁版小米侧边栏案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 1、把 a 转换为块级元素 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">          <span class="comment">/* 块模式 每个元素换行显示*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">230px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#55585a</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 一个小技巧：单行文字垂直居中的代码，让文字的行高等于盒子的高度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 2、鼠标经过链接变换背景颜色 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#ff6700</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    说明：在实际开发中，为了避免链接堆叠，从而降低浏览器排名</span></span><br><span class="line"><span class="comment">    开发中一般都将这些链接放在无序列表中，这里只是为了方便演示才这样使用</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>手机 电话卡<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>电视 盒子<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>笔记本 平板<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>出行 穿戴<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>智能 路由器<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>健康 儿童<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>耳机 音响<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210405205628339.gif"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>导航1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>导航2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>导航3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>导航4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>导航5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/QQ%E5%BD%95%E5%B1%8F20221024193039.gif"></p><h2 id="7-8-小技巧：单行文字垂直居中"><a href="#7-8-小技巧：单行文字垂直居中" class="headerlink" title="7.8 小技巧：单行文字垂直居中"></a>7.8 小技巧：单行文字垂直居中</h2><p>CSS 没有给我们提供文字垂直居中的代码，这里我们可以使用一个小技巧来实现。</p><p><strong>解决方案：</strong>让 <code>文字的行高</code> 等于 <code>盒子的高度</code> 就可以让文字在当前盒子内垂直居中。</p><p><strong>简单理解：</strong>行高的上空隙和下空隙把文字挤到中间了，如果行高小于盒子高度，文字会偏上，如果行高大于盒子高度，则文字偏下。</p><h2 id="7-9-一个注意点：块级元素不会自动换行"><a href="#7-9-一个注意点：块级元素不会自动换行" class="headerlink" title="7.9 一个注意点：块级元素不会自动换行"></a>7.9 一个注意点：块级元素不会自动换行</h2><p>当块级元素的宽度超过其父元素宽度时，其不会发生换行。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>块级元素不会自动换行<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: table;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clearfix</span> &#123;</span></span><br><span class="line"><span class="language-css">            *zoom: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#FFFF00</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#FFFFFF</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">730px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">700px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;clearfix&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div&quot;</span>&gt;</span>块级元素 块级元素 块级元素 块级元素 块级元素 块级元素 块级元素 块级元素 块级元素 块级元素 块级元素 块级元素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>行内元素 行内元素 行内元素 行内元素 行内元素 行内元素 行内元素 行内元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/image-20220125215313482.png"></p><h1 id="八、CSS-的背景"><a href="#八、CSS-的背景" class="headerlink" title="八、CSS 的背景"></a>八、CSS 的背景</h1><p>通过 CSS 背景属性，可以给页面元素添加背景样式。<br>背景属性可以设置 <code>背景颜色</code>、<code>背景图片</code>、<code>背景平铺</code>、<code>背景图片位置</code>、<code>背景图像固定</code> 等。</p><h2 id="8-1-背景颜色"><a href="#8-1-背景颜色" class="headerlink" title="8.1 背景颜色"></a>8.1 背景颜色</h2><p><code>background-color</code> 属性定义了元素的背景颜色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-color</span>: 颜色值;</span><br></pre></td></tr></table></figure><p>一般情况下元素背景颜色默认值是 <code>transparent</code>（透明），我们也可以手动指定背景颜色为透明色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-color</span>: transparent;</span><br></pre></td></tr></table></figure><p>目前 CSS 还支持丰富的渐变色，但是某些浏览器不支持，这里了解即可，具体内容请查阅资料。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>渐变<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#grad1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 浏览器不支持时显示 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 线性渐变 - 从上到下（默认情况下）*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">#e66465</span>, <span class="number">#9198e5</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>线性渐变 - 从上到下<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>从顶部开始的线性渐变。起点是红色，慢慢过渡到蓝色：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;grad1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>注意：<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> Internet Explorer 9 及之前的版本不支持渐变。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210405211456978.jpg"></p><h2 id="8-2-背景图片"><a href="#8-2-背景图片" class="headerlink" title="8.2 背景图片"></a>8.2 背景图片</h2><p><code>background-image</code> 属性描述了元素的背景图像，实际开发常用于 <strong>logo</strong> 或者一些<strong>装饰性的小图片</strong>或者是<strong>超大的背景图片</strong>, 优点是非常便于控制位置（精灵图也是一种运用场景）。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span> : none | <span class="built_in">url</span>(<span class="string">图片路径</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数值</th><th>作用</th></tr></thead><tbody><tr><td><code>none</code></td><td>无背景图（默认的）</td></tr><tr><td><code>url</code></td><td>使用绝对或相对地址指定背景图像</td></tr></tbody></table><p>注意：背景图片后面的地址，千万不要忘记加 URL， 同时里面的路径不要加引号。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-color</span>: pink;</span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">../images/logo.png</span>);</span><br><span class="line"><span class="comment">/* 1、背景图片不平铺 */</span></span><br><span class="line"><span class="comment">/* background-repeat: no-repeat; */</span></span><br><span class="line"><span class="comment">/* 2、默认情况下，背景图片是平铺的 */</span></span><br><span class="line"><span class="comment">/* background-repeat: repeat; */</span> <span class="comment">/* 页面元素既可以添加背景颜色也可以添加背景图片，只不过背景图片区域会覆盖背景颜色 */</span></span><br></pre></td></tr></table></figure><ul><li>重要的图片使用img属性</li><li>美化的背景颜色等使用css的背景属性</li></ul><h2 id="8-3-背景平铺"><a href="#8-3-背景平铺" class="headerlink" title="8.3 背景平铺"></a>8.3 背景平铺</h2><p>如果需要在 HTML 页面上对背景图像进行平铺，可以使用 <code>background-repeat</code> 属性。</p><p>注：平铺可以简单的理解为“重复”。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-repeat</span>: repeat | no-repeat | repeat-x | repeat-y</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数值</th><th>作用</th></tr></thead><tbody><tr><td><code>repeat</code></td><td>背景图像在纵向和横向上平铺（默认的）</td></tr><tr><td><code>no-repeat</code></td><td>背景图像不平铺</td></tr><tr><td><code>repeat-x</code></td><td>背景图像在横向上平铺</td></tr><tr><td><code>repeat-y</code></td><td>背景图像在纵向上平铺</td></tr></tbody></table><h2 id="8-4-背景图片位置"><a href="#8-4-背景图片位置" class="headerlink" title="8.4 背景图片位置"></a>8.4 背景图片位置</h2><p>利用 <code>background-position</code> 属性可以改变图片在背景中的位置。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-position</span>: x y;</span><br></pre></td></tr></table></figure><p>参数代表的意思是：x 坐标 和 y 坐标，可以使用 <code>方位名词</code> 或者 <code>精确单位</code>。</p><table><thead><tr><th>参数值</th><th>说明</th></tr></thead><tbody><tr><td><code>length</code></td><td>百分数 | 由浮点数字和单位标识符组成的长度值</td></tr><tr><td><code>position</code></td><td>top | center | bottom | left | rigth 方位名词</td></tr></tbody></table><ul><li><p>参数是方位名词</p><ul><li>如果指定的两个值都是方位名词，则两个值前后顺序无关，比如 left top 和 top left 效果一致</li><li>如果只指定了一个方位名词，另一个值省略，则<strong>第二个值默认居中对齐</strong></li></ul></li><li><p>参数是精确单位</p><ul><li>如果参数值是精确坐标，那么第一个肯定是 x 坐标，第二个一定是 y 坐标</li><li>如果只指定一个数值，那该数值一定是 x 坐标，<strong>另一个默认垂直居中</strong></li></ul></li><li><p>参数是混合单位</p><ul><li>如果指定的两个值是精确单位和方位名词混合使用，则第一个值是 x 坐标，第二个值是 y 坐标</li></ul></li></ul><h2 id="8-5-背景图像固定（背景附着）"><a href="#8-5-背景图像固定（背景附着）" class="headerlink" title="8.5 背景图像固定（背景附着）"></a>8.5 背景图像固定（背景附着）</h2><p><code>background-attachment</code> 属性设置背景图像是否固定或者随着页面的其余部分滚动。</p><p><code>background-attachment</code> 后期可以制作 <code>视差滚动</code> 的效果。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-attachment</span> : scroll | fixed</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td><code>scroll</code></td><td>背景图像是随对象内容滚动的（可见区域取决于背景图像的高度）</td></tr><tr><td><code>fixed</code></td><td>背景图像固定</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>超大背景图片<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">images/bg.jpg</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-repeat</span>: no-repeat;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: center top;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 把背景图片固定住 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-attachment</span>: fixed;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎, pink老师一米五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210405212447451-16422629370077.gif" style="zoom: 33%;" /><h2 id="3-6-背景复合写法"><a href="#3-6-背景复合写法" class="headerlink" title="3.6 背景复合写法"></a>3.6 背景复合写法</h2><p>为了简化背景属性的代码，我们可以将这些属性合并简写在同一个属性 <code>background</code> 中，从而节约代码量。<br>当使用简写属性时，没有特定的书写顺序，一般习惯约定顺序为：<br><code>background</code>: <code>背景颜色</code> <code>背景图片地址</code> <code>背景平铺</code> <code>背景图像滚动</code> <code>背景图片位置</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: transparent <span class="built_in">url</span>(<span class="string">url地址</span>) no-repeat fixed top;</span><br></pre></td></tr></table></figure><p>这是实际开发中，我们更提倡的写法。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>背景复合<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">1000px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 不分先后顺序：背景色、背景图、背景图平铺、背景图位置 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景图位置如果是英文单词可以颠倒顺序 如果背景图的位置单位为像素，则不能颠倒顺序，颠倒顺序结果和预期不一样*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: red <span class="built_in">url</span>(<span class="string">../../BlogImage/25.jpeg</span>) no-repeat center top;</span></span><br><span class="line"><span class="language-css">            </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8-7-背景色半透明"><a href="#8-7-背景色半透明" class="headerlink" title="8.7 背景色半透明"></a>8.7 背景色半透明</h2><p>CSS3 为我们提供了背景颜色半透明的效果。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span><br></pre></td></tr></table></figure><ul><li>最后一个参数是 <code>alpha</code> 透明度，取值范围在 <code>0~1</code> 之间</li><li>习惯把 0.3 的 0 省略掉，写为 <code>background: rgba(0, 0, 0, .3);</code></li><li>注意：背景半透明是指盒子背景半透明，盒子里面的内容不受影响</li><li>CSS3 新增属性，是 IE9+ 版本浏览器才支持的</li><li>但是现在实际开发，我们不太关注兼容性写法了，可以放心使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>背景色透明写法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-color: black; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 只是让背景颜色半透明，盒子里的内容并不受影响 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>zhoujirui<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8-8-背景总结"><a href="#8-8-背景总结" class="headerlink" title="8.8 背景总结"></a>8.8 背景总结</h2><table><thead><tr><th>属性</th><th>作用</th><th>值</th></tr></thead><tbody><tr><td><code>backgroud-color</code></td><td>背景颜色</td><td>预定义的颜色值 &#x2F; 十六进制 &#x2F; RGB代码</td></tr><tr><td><code>backgroud-image</code></td><td>背景图片</td><td>url（图片路径）</td></tr><tr><td><code>backgroud-repeat</code></td><td>是否平铺</td><td>repeat &#x2F; no-repeat &#x2F; repeat-x &#x2F; repeat-y</td></tr><tr><td><code>backgroud-position</code></td><td>背景位置</td><td>length &#x2F; position 分别是 x 和 y 坐标</td></tr><tr><td><code>backgroud-attachment</code></td><td>背景附着</td><td>scroll（背景滚动）&#x2F; fixed（背景固定）</td></tr><tr><td><code>背景简写</code></td><td>书写更简单</td><td>背景颜色 背景图片地址 背景平铺 背景滚动 背景位置</td></tr><tr><td><code>背景色半透明</code></td><td>背景颜色半透明</td><td>background: rgba(0, 0, 0, 0.3); 后面必须是4个值</td></tr></tbody></table><p>背景图片：实际开发常见于 logo 或者一些装饰性的小图片或者是超大的背景图片，优点是非常便于控制位置（精灵图也是一种运用场景）。</p><h2 id="8-9-王者荣耀案例"><a href="#8-9-王者荣耀案例" class="headerlink" title="8.9 王者荣耀案例"></a>8.9 王者荣耀案例</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>背景位置案例一之王者荣耀点击选项<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 对于 logo 图片来说，最常用的方法便是利用背景来设置，而并非直接插入图片 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h3</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">118px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">400</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">../image/icon.png</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-repeat</span>: no-repeat;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: left center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h3</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>成长守护平台<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210405213212859.jpg"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>背景位置案例二之王者荣耀背景图片<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">../image/b.jpg</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-repeat</span>: no-repeat;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: center top;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 对于网页中的大面积图片而言，一般不采用直接插入图片的方式来做，</span></span><br><span class="line"><span class="comment">    因为图片的分辨率及尺寸是固定的但是显示器或网页窗口的大小分辨率则是会改变的，</span></span><br><span class="line"><span class="comment">    直接插入图片的话不方便控制图片大小及位置 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;img src=&quot;../image/b.jpg&quot; alt=&quot;&quot;&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/202104052132139.jpg"></p><h1 id="九、CSS三大特性"><a href="#九、CSS三大特性" class="headerlink" title="九、CSS三大特性"></a>九、CSS三大特性</h1><p>CSS 有三个非常重要的特性：<code>层叠性</code>、<code>继承性</code>、<code>优先级</code>。</p><h2 id="9-1-层叠性"><a href="#9-1-层叠性" class="headerlink" title="9.1 层叠性"></a>9.1 层叠性</h2><p>给同一个选择器设置相同的样式，此时一个样式就会<strong>覆盖</strong>（层叠）另一个冲突的样式，<strong>层叠性主要解决样式冲突的问题</strong>。</p><p>层叠性原则：</p><ul><li>样式冲突，遵循的原则是 <code>就近原则</code>，哪个样式距离结构近，就执行哪个样式</li><li>样式不冲突，不会层叠</li></ul><p>注：就近的标准是：<strong>后 &gt; 前</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS三大特性之层叠性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- pink 色 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>周吉瑞<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="9-2-继承性"><a href="#9-2-继承性" class="headerlink" title="9.2 继承性"></a>9.2 继承性</h2><p>现实中的继承：我们继承了父亲的姓。</p><p>CSS 中的继承：<strong>子标签会继承父标签的某些样式</strong>，如：文本颜色和字号，简单的理解就是：子承父业。</p><ul><li>恰当地使用继承可以简化代码，降低 CSS 样式的复杂性</li><li>子元素可以继承父元素的样式（ <code>text-</code>、<code>font-</code>、<code>line-</code>、<code>color</code> ） 文本、字体、段落、颜色</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS三大特性之继承性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>周吉瑞<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>行高的继承</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">1.5</span> <span class="string">&#x27;Microsoft YaHei&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>行高可以跟单位也可以不跟单位</li><li>如果子元素没有设置行高，则会继承父元素的行高为 1.5</li><li>此时子元素的行高是：<strong>当前元素</strong>的<strong>文字大小</strong> * 1.5</li><li>body 行高 1.5 这样写法最大的优势就是<strong>里面的子元素可以根据自己文字的大小自动调整行高</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS三大特性之继承性——行高的继承<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* font: 12px/18px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">1.5</span>;<span class="comment">/* 12 + 12 * 0.5 = 18 */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 子元素继承了父元素 body 的行高 1.5 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 这个 1.5 就是当前元素文字大小 font-size 的 1.5 倍 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 所以当前 div 的行高就是：14 + 14 * 0.5 = 21px */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 1.5 * 16 = 24 当前行高 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* li 没有手动指定文字大小，则会继承父亲（此处的父亲可以层层向上推）的文字大小  */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 即：body 12px 所有 li 的文字大小为 12px */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 当前 li 的行高就是 12 * 1.5 = 18  */</span></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>周吉瑞<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>JERRY<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>没有指定文字大小<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="9-3-优先级"><a href="#9-3-优先级" class="headerlink" title="9.3 优先级"></a>9.3 优先级</h2><ul><li>选择器相同，则执行层叠性</li><li>选择器不同，则根据选择器权重执行</li></ul><p><strong>选择器权重如下表所示：</strong></p><table><thead><tr><th>选择器</th><th>选择器权重</th></tr></thead><tbody><tr><td>继承 或  <code>*</code></td><td><code>0,0,0,0</code></td></tr><tr><td>元素选择器</td><td><code>0,0,0,1</code></td></tr><tr><td>类选择器、伪类选择器</td><td><code>0,0,1,0</code></td></tr><tr><td>ID 选择器</td><td><code>0,1,0,0</code></td></tr><tr><td>行内样式 style&#x3D;””</td><td><code>1,0,0,0</code></td></tr><tr><td>!important 重要的</td><td><code>∞</code> 无穷大</td></tr></tbody></table><p><strong>规则：</strong>比较位级别，位级别相同时比较位大小。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS三大特性之优先级<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.test</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#demo</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span>&gt;</span>你笑起来真好看<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="comment">&lt;!-- red --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>你笑起来真好看<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="comment">&lt;!-- green --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: blue;&quot;</span>&gt;</span>你笑起来真好看<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="comment">&lt;!-- blue --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    假如在 css 选择器 某一个属性值后面跟上 !important，那么这个属性一定会执行！</span></span><br><span class="line"><span class="comment">    例如：div &#123;</span></span><br><span class="line"><span class="comment">             color: pink !important;  </span></span><br><span class="line"><span class="comment">          &#125;</span></span><br><span class="line"><span class="comment">          ...</span></span><br><span class="line"><span class="comment">    &lt;div class=&quot;test&quot; id=&quot;demo&quot; style=&quot;color: blue;&quot;&gt;你笑起来真好看&lt;/div&gt; -- pink --</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>优先级注意问题：</strong></p><ul><li><p>优先级顺序</p><ul><li>继承 &lt; 通配符选择器  &lt; 标签选择器  &lt; 类选择器  &lt; id选择器 &lt; 行内样式 &lt; !important</li><li>所包含的范围越小，优先级就越高</li><li>行内选择器：只包含在一个标签内</li><li>id选择器：可以多个标签内具有相同的 id</li><li>类选择器也如id选择器</li><li>标签选择器范围比类标签大</li><li>调配符选择器的范围是全部标签，也比标签选择器大</li><li>继承比通配符选择器范围大</li></ul></li><li><p>权重是由 4 组数字组成的，但是不会有进位！</p></li><li><p>可以理解为：<code>类选择器</code> 永远大于 <code>元素(标签)选择器</code>，<code>ID 选择器</code> 永远大于 <code>类选择器</code>，以此类推！</p></li><li><p>等级判断 <code>从左到右</code>，如果某一位数值相同，则判断下一位数值</p></li><li><p>可以简单的记忆：<code>通配符</code> 和 <code>继承</code> 权重为 0，<code>标签选择器</code> 为 1，<code>类</code>（<code>伪类</code>）选择器为 10，<code>ID</code> 选择器为 100，<code>行内样式表</code> 为 1000，<code>!important</code> 无穷大</p></li><li><p>继承的权重是 0，不管父元素权重多高，子元素得到的权重都是 0 ！</p></li><li><p><code>a</code> 链接浏览器默认指定了一个样式，所以它不参与继承，所以设置样式需要选中单独设置</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS三大特性之优先级——注意问题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 父亲的权重是 100 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#father</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red <span class="meta">!important</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* p 继承的权重为 0 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 所以以后我们看标签到底执行哪一个样式，就先看这个标签有没有直接被选出来</span></span></span><br><span class="line"><span class="comment"><span class="language-css">           如果直接被选择出来了，那么就与父亲无关了！*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 继承的权重是 0，不管父元素权重多高，子元素得到的权重都是 0 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>你还是很好看<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="comment">&lt;!-- pink --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- a 链接浏览器默认指定了一个样式，所以它不参与继承，所以给 a 改样式必须直接把 a 选出来 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我是单独的样式<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>权重的叠加：</strong></p><p>如果是复合选择器，则会有权重叠加，需要计算权重。</p><blockquote><p>（<code>行内选择器个数</code> <code> id(#)选择器个数</code> <code> 类(.)选择器个数</code> <code>标签选择器个数</code>  ）</p></blockquote><p>注意：再次强调！权重虽然会叠加，但一定不会进位！（1万个元素选择器也比不过一个类选择器）。</p><p>从左到右逐位比较，只有左一位同样大，才比较右边一位！</p><p><strong>例如：</strong></p><ul><li><code>div ul li</code> ——&gt; <code>0,0,0,3</code></li><li><code>.nav ul li</code> ——&gt; <code>0,0,1,2</code></li><li><code>a:hover</code> ——&gt; <code>0,0,1,1</code></li><li><code>.nav a</code> ——&gt; <code>0,0,1,1</code></li></ul><p>如果要对某一元素设置样式，那么就必须给它足够高的权重（注意：是给他，而不是他的父亲！）。</p><blockquote><p>提高选择器权重的技巧之一：</p><ul><li>多写几层类选择器</li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS三大特性之优先级——权重叠加<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 复合选择器会有权重叠加的问题 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 权重虽然会叠加，但是永远不会有进位 例如：十个 0,0,0,1 相加为 0,0,0,10 而不是 0,0,1,0 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* ul li 权重 0,0,0,1 + 0,0,0,1 = 0,0,0,2 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* li 的权重是 0,0,0,1 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* .nav li 权重 0,0,1,0 + 0,0,0,1 = 0,0,1,1 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>大猪蹄子<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="comment">&lt;!-- pink --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>大肘子<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="comment">&lt;!-- pink --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>猪尾巴<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="comment">&lt;!-- pink --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="十、Emmet"><a href="#十、Emmet" class="headerlink" title="十、Emmet"></a>十、Emmet</h1><p><code>Emmet</code> 语法的前身是 <code>Zen coding</code>，它使用缩写，来提高 <code>html/css</code> 的编写速度,，<code>VSCode</code> 内部已经集成该语法。</p><ul><li>快速生成 HTML 结构语法</li><li>快速生成 CSS 样式语法</li></ul><h2 id="10-1-快速生成HTML结构语法"><a href="#10-1-快速生成HTML结构语法" class="headerlink" title="10.1 快速生成HTML结构语法"></a>10.1 快速生成HTML结构语法</h2><ul><li>生成标签直接输入标签名按 <kbd>tab</kbd> 键即可，比如 <code>div</code> 然后 <kbd>tab</kbd> 键， 就可以生成 <code>&lt;div&gt;&lt;/div&gt;</code></li><li>如果想要生成多个相同标签加上 <code>*</code> 就可以了，比如 <code>div*3</code> 就可以快速生成 3 个 <code>div</code></li><li>如果有父子级关系的标签，可以用 <code>&gt;</code> 比如 <code>ul&gt;li</code> 就可以了</li><li>如果有兄弟关系的标签，用 <code>+</code> 就可以了 比如 <code>div+p</code></li><li>如果生成带有 <code>类名</code> 或者 <code>id</code> 名字的标签， 直接写 <code>标签.demo</code> 或者 <code>标签#demo</code> 再按下 tab 键就可以了</li><li>如果生成的事物有顺序，可以用自增符号 <code>$</code></li><li>如果想要在生成的标签内部写内容可以用 <code>&#123;&#125;</code> 表示</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Emmet语法之快速生成HTML结构语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- div --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- table --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- div*6 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- p*4 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ul&gt;li --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- div&gt;span --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- div+p --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- .nav --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- #banner --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;banner&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- p.one --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- span.gray --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;gray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ul&gt;li#two --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;two&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- .demo*5 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- .demo$*5 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- div&#123;pink老师不是gay&#125; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>pink老师不是gay<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- div&#123;他不喜欢男人&#125;*6 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>他不喜欢男人<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>他不喜欢男人<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>他不喜欢男人<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>他不喜欢男人<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>他不喜欢男人<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>他不喜欢男人<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- div&#123;$&#125;*6 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="10-2-快速生成CSS样式语法"><a href="#10-2-快速生成CSS样式语法" class="headerlink" title="10.2 快速生成CSS样式语法"></a>10.2 快速生成CSS样式语法</h2><p>CSS 基本采取简写形式即可。</p><ul><li>比如 <code>w200</code> 按 <kbd>tab</kbd> 可以 生成 <code>width: 200px;</code></li><li>比如 <code>lh26px</code> 按 <kbd>tab</kbd> 可以生成 <code>line-height: 26px;</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Emmet语法之快速生成CSS样式语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.one</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* tac */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* ti2e */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* w */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* width: ; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* h */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* height: ; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* w24 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* h24 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* tdn */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="10-3-快速格式化代码"><a href="#10-3-快速格式化代码" class="headerlink" title="10.3 快速格式化代码"></a>10.3 快速格式化代码</h2><p><code>VSCode</code> 快速格式化代码：<kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>F</kbd>。</p><p><code>WebStorm</code> 快速格式化代码：<kbd>Ctrl</kbd> + <kbd>Alt</kbd> + <kbd>L</kbd>。</p><p>PxCook 测量工具 ：<a href="https://www.fancynode.com.cn/">https://www.fancynode.com.cn/</a></p><h1 id="十一、CSS盒子模型"><a href="#十一、CSS盒子模型" class="headerlink" title="十一、CSS盒子模型"></a>十一、CSS盒子模型</h1><p>页面布局要学习<strong>三大核心</strong>：<strong>盒子模型</strong>、<strong>浮动</strong>和<strong>定位</strong>。</p><p>学习好盒子模型能非常好的帮助我们布局页面。</p><h2 id="11-1-看透网页布局的本质"><a href="#11-1-看透网页布局的本质" class="headerlink" title="11.1 看透网页布局的本质"></a>11.1 看透网页布局的本质</h2><p>网页布局过程：</p><ul><li><p>先准备好相关的网页元素，网页元素基本都是盒子</p></li><li><p>利用 CSS 设置好盒子样式，然后摆放到相应位置</p></li><li><p>往盒子里面装内容</p></li></ul><p>网页<strong>布局的核心</strong>本质： 就是<strong>利用 CSS 摆盒子！</strong></p><h2 id="11-2-盒子模型（Box-Model）组成"><a href="#11-2-盒子模型（Box-Model）组成" class="headerlink" title="11.2 盒子模型（Box Model）组成"></a>11.2 盒子模型（Box Model）组成</h2><p>所谓盒子模型：就是把 HTML 页面中的布局元素看作是一个矩形的盒子，也就是一个盛<strong>装内容的容器</strong>。<br>CSS 盒子模型本质上是一个盒子，封装周围的 HTML 元素，它包括：<code>边框</code>、<code>外边距</code>、<code>内边距</code>、和 <code>内容</code>。</p><img src="http://picgo.kongshier.top/2767/20210406122442654.png" style="zoom: 80%;" /><img src="http://picgo.kongshier.top/2767/v2-6cbd8a1b054611f584f56ce791739a3f_1440w.jpg"  /><h2 id="11-3-边框（border）"><a href="#11-3-边框（border）" class="headerlink" title="11.3 边框（border）"></a>11.3 边框（border）</h2><p><code>border</code> 可以设置元素的边框。</p><p>边框有三部分组成：<code>边框宽度（粗细）</code>、<code>边框样式</code>、<code>边框颜色</code>。</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border</span>: border-width || border-style || border-color</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td><code>border-width</code></td><td>定义边框粗细，单位是 <code>px</code></td></tr><tr><td><code>border-style</code></td><td>边框的样式</td></tr><tr><td><code>border-color</code></td><td>边框颜色</td></tr></tbody></table><p>边框样式 border-style 可以设置如下值：</p><ul><li><code>none</code>：没有边框，即忽略所有边框的宽度（默认值）</li><li><code>solid</code>：边框为单实线（最为常用的）</li><li><code>dashed</code>：边框为虚线</li><li><code>dotted</code>：边框为点线</li></ul><p><strong>边框简写：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid red; <span class="comment">/* 没有顺序 */</span></span><br></pre></td></tr></table></figure><p><strong>边框分开写法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-top</span>: <span class="number">1px</span> solid red; <span class="comment">/* 只设定上边框，其余同理 */</span></span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>盒子模型之边框的复合写法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            -- border-width 边框的粗细，一般情况下使用 px --</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            border-width: 5px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            -- border-width 边框的样式 solid 实线边框 dashed 虚线边框 dotted 点线边框 --</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            border-style: solid;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            background-color: pink;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 边框的复合写法 简写： */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">10px</span> dotted skyblue;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 利用 CSS 层叠性将上边框单独覆盖 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top</span>: <span class="number">10px</span> dotted pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210406123444188.jpg"></p><h3 id="11-3-1-表格的细线边框"><a href="#11-3-1-表格的细线边框" class="headerlink" title="11.3.1 表格的细线边框"></a>11.3.1 表格的细线边框</h3><p>表格中两个单元格相邻的边框会重叠在一起，呈现出加粗的效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>表格边框——今日小说排行榜<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">table</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">249px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">th</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">table</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">td</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">th</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 合并相邻的边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-collapse: collapse; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>排名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>关键词<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>趋势<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>进入搜索<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>最近七日<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>相关链接<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>鬼吹灯<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;down.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>456<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>123<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>贴吧<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>百科<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>鬼吹灯<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;down.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>456<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>123<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>贴吧<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>百科<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>西游记<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;up.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>456<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>123<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>贴吧<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>百科<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>鬼吹灯<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;down.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>456<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>123<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>贴吧<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>百科<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>鬼吹灯<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;down.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>456<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>123<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>贴吧<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>百科<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>鬼吹灯<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;down.jpg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>456<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>123<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>贴吧<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>百科<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/image-20220116025240291.png"></p><p><code>border-collapse</code> 属性控制浏览器绘制表格边框的方式。</p><p>它控制相邻单元格的边框。</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-collapse</span>: collapse;</span><br></pre></td></tr></table></figure><ul><li><code>collapse</code> 单词是合并的意思</li><li><code>border-collapse: collapse;</code> 表示相邻边框合并在一起</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span>,</span><br><span class="line"><span class="selector-tag">td</span>,</span><br><span class="line"><span class="selector-tag">th</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">    <span class="comment">/* 合并相邻的边框 */</span></span><br><span class="line">    <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/image-20220116025315666.png"></p><h3 id="11-3-2-边框会影响盒子实际大小"><a href="#11-3-2-边框会影响盒子实际大小" class="headerlink" title="11.3.2 边框会影响盒子实际大小"></a>11.3.2 边框会影响盒子实际大小</h3><p>边框会额外增加盒子的实际区域大小。因此我们有两种方案解决：</p><ul><li>测量盒子大小的时候，不量边框</li><li>如果测量的时候包含了边框，则需要 width、height 减去边框宽度（注意减单边还是双边）</li></ul><blockquote><p>注意：盒子实际区域大小 &#x3D; 内容区大小 + 内边距大小 + 边框大小 + 外边距大小</p></blockquote><p>案例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>边框会影响盒子的实际大小<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 我们需要一个 200*200 的盒子, 但是这个盒子有 10 像素的红色边框 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">180px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">180px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">10px</span> solid black;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210406125405658.gif"></p><h2 id="11-4-内边距（padding）"><a href="#11-4-内边距（padding）" class="headerlink" title="11.4 内边距（padding）"></a>11.4 内边距（padding）</h2><p>padding 属性用于设置<strong>内边距</strong>，即<strong>边框与内容之间的距离</strong>。</p><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td><code>padding-left</code></td><td>左内边距</td></tr><tr><td><code>padding-rigth</code></td><td>右内边距</td></tr><tr><td><code>padding-top</code></td><td>上内边距</td></tr><tr><td><code>padding-bottom</code></td><td>下内边距</td></tr></tbody></table><p>padding 属性（简写属性）可以有一到四个值。</p><table><thead><tr><th>值的个数</th><th>表达意思</th></tr></thead><tbody><tr><td><code>padding: 5px;</code></td><td>1 个值，代表上下左右都有 5 像素内边距</td></tr><tr><td><code>padding: 5px 10px;</code></td><td>2 个值，代表上下内边距是 5 像素，左右内边距是 10 像素</td></tr><tr><td><code>padding: 5px 10px 20px;</code></td><td>3 个值，代码上内边距 5 像素，左右内边距 10 像素，下内边距 20 像素</td></tr><tr><td><code>padding: 5px 10px 20px 30px;</code></td><td>4 个值，上是 5 像素，右 10 像素，下 20 像素，左是 30 像素（顺时针）</td></tr></tbody></table><p>以上 4 种情况，我们实际开发都会遇到。</p><p>当我们给盒子指定 <code>padding</code> 值之后，发生了 2 件事情：</p><ul><li>内容和边框有了距离，添加了内边距</li><li><code>padding</code> 影响了盒子实际区域大小</li></ul><p>也就是说，如果盒子已经有了宽度和高度，此时再指定内边距，会撑大盒子区域！</p><p>解决方案：</p><ul><li>如果保证盒子跟效果图大小保持一致，则让 width、height 减去多出来的内边距大小即可</li><li>如果盒子本身没有指定 width、height 属性，则此时 padding 不会撑开盒子区域大小</li></ul><p>【padding 撑大盒子】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>padding 撑大盒子<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* padding: 30px; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/00914ec7f1e04382af64f589013d6d59.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>padding 撑大盒子<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/6d3ff73d65154f358ba03b447f9daec8.png"></p><p>案例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>盒子模型之内边距<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            padding-top: 5px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            padding-rigth: 10px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            padding-bottom: 20px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            padding-rigth: 30px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">             */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 内边距复合写法（简写） 上、右、下、左 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 由于在对盒子指定高宽后，padding 会撑大盒子 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 所以，此时盒子大小为：240*225 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 注意：这里的“盒子大小”指的是盒子所占据的大小，盒子真实的 width 和 height 依旧是 200px */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        盒子内容是 content，盒子内容是 content，盒子内容是 content</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>padding 的使用技巧：</p><p><img src="http://picgo.kongshier.top/2767/20210406131156754.jpg"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>新浪导航案例-padding影响盒子的好处<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">41px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top</span>: <span class="number">3px</span> solid <span class="number">#ff8500</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#edeef0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#fcfcfc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">41px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* a 属于行内元素，要指定高度，必须要转换为行内块元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">41px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 没有指定宽度，此时设置 padding 会使盒子内容之间的距离相同 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#4c4c4c</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#ff8500</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>设为首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>手机新浪网<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>移动客户端<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>微博<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>网站导航<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210406131403183.gif"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>简洁版小米侧边栏案例-padding影响盒子大小计算<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 1、把 a 转换为块级元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 230 - 30（padding-left）= 200 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#55585a</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-left</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 一个小技巧：单行文字垂直居中的代码，让文字的行高等于盒子的高度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 2、鼠标经过链接变换背景颜色 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#ff6700</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>手机 电话卡<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>电视 盒子<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>笔记本 平板<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>出行 穿戴<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>智能 路由器<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>健康 儿童<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>耳机 音响<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210406132137553.gif"></p><h2 id="11-5-外边距（margin）"><a href="#11-5-外边距（margin）" class="headerlink" title="11.5 外边距（margin）"></a>11.5 外边距（margin）</h2><p><code>margin</code> 属性用于设置<strong>外边距</strong>，即控制<strong>盒子和盒子之间的距离</strong>。</p><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td><code>margin-left</code></td><td>左外边距</td></tr><tr><td><code>margin-right</code></td><td>右外边距</td></tr><tr><td><code>margin-top</code></td><td>上外边距</td></tr><tr><td><code>margin-bottom</code></td><td>下外边距</td></tr></tbody></table><p><code>margin</code> 简写方式代表的意义跟 <code>padding</code> 完全一致。</p><p>外边距典型应用：</p><p>外边距可以让<strong>块级盒子水平居中</strong>，但是必须满足两个条件：</p><ul><li>盒子必须指定了宽度 <code>width</code></li><li>盒子左右的外边距都设置为 <code>auto</code></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header</span> &#123; <span class="attribute">width</span>: <span class="number">960px</span>; <span class="attribute">margin</span>: <span class="number">0</span> auto;&#125;</span><br></pre></td></tr></table></figure><p>常见的写法，以下三种都可以：</p><ul><li><code>margin-left: auto; margin-right: auto;</code></li><li><code>margin: auto;</code></li><li><code>margin: 0 auto;</code></li></ul><p>注意：以上方法是让块级元素水平居中，行内元素或者行内块元素水平居中给其父元素添加 <code>text-align: center</code> 即可。</p><p>案例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>盒子模型之外边距margin<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        .one &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            margin-bottom: 20px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.two</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210406133231459.jpg"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>块级盒子水平居中对齐<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">900px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 上下 100 左右 auto */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210406133231524.jpg"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>行内元素、行内块元素水平居中对齐<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">900px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 行内元素或者行内块元素水平居中给其父元素添加 text-align: center 即可 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 这样是不起作用的 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        span &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            margin: 0 auto;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; </span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>里面的文字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../image/icon.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210406133231531.jpg"></p><p>案例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>热搜新闻<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 去除内外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 自减模式 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.fireNews</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">42px</span> <span class="number">30px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.fireNews</span> <span class="selector-tag">h2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置行高，字号大小 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 去掉列表符号 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.fireNews</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">1px</span> dashed <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-left</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.fireNews</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 光标放置文字显示颜色 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.fireNews</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fireNews&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>最近热搜话题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Java面试<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>毕业即失业?<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端面试<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>全栈工程师<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>后端工程师<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/image-20221029163950458.png" alt="image-20221029163950458"></p><h3 id="11-5-1-外边距合并"><a href="#11-5-1-外边距合并" class="headerlink" title="11.5.1 外边距合并"></a>11.5.1 外边距合并</h3><p>使用 <code>margin</code> 定义块元素的垂直外边距时，可能会出现外边距的合并。</p><p>注意：<strong>内边距没有合并一说！浮动的盒子不会发生外边距合并！</strong></p><p>主要有两种情况:</p><ul><li><strong>相邻块元素垂直外边距的合并</strong></li><li><strong>嵌套块元素垂直外边距的塌陷</strong></li></ul><h4 id="11-5-1-1-相邻块元素垂直外边距的合并"><a href="#11-5-1-1-相邻块元素垂直外边距的合并" class="headerlink" title="11.5.1.1 相邻块元素垂直外边距的合并"></a>11.5.1.1 相邻块元素垂直外边距的合并</h4><p>当上下相邻的两个块元素（兄弟关系）相遇时，如果上面的元素有下外边距 <code>margin-bottom</code>，下面的元素有上外边距 <code>margin-top</code> ，则他们之间的垂直间距不是 <code>margin-bottom</code> 与 <code>margin-top</code> 之和。而是取两个值中的<strong>较大者</strong>，这种现象被称为相邻块元素垂直外边距的合并（准确的描述应该是：<strong>大的外边距覆盖小的</strong>）。</p><p><img src="http://picgo.kongshier.top/2767/20210406134634404.jpg"></p><p><img src="http://picgo.kongshier.top/2767/20210412112840415.jpg"></p><p><strong>解决方案：</strong></p><p>尽量只给一个盒子添加 <code>margin</code> 值。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>相邻块元素垂直外边距的合并<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.one</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.two</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span>one<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span>two<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410205508662.gif"></p><h4 id="11-5-1-2-嵌套块元素垂直外边距的塌陷"><a href="#11-5-1-2-嵌套块元素垂直外边距的塌陷" class="headerlink" title="11.5.1.2 嵌套块元素垂直外边距的塌陷"></a>11.5.1.2 嵌套块元素垂直外边距的塌陷</h4><p>对于两个嵌套关系（父子关系）的块元素，当子元素有上外边距，此时父元素会塌陷较大的外边距值（<strong>外边距效果显示在父元素之上</strong>）。</p><p><img src="http://picgo.kongshier.top/2767/image-20220116024700165.png"></p><p><img src="http://picgo.kongshier.top/2767/20210412112840510.jpg"></p><p><strong>解决方案：</strong></p><ul><li>可以为父元素定义上边框（比如：可以给一个透明 transparent 边框）</li><li>可以为父元素定义上内边距</li><li>可以为父元素添加 <code>overflow: hidden</code></li></ul><p>还有其他方法，比如浮动、固定，绝对定位的盒子不会有塌陷问题，后面咱们再总结。</p><p>案例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>外边距合并-嵌套块级元素垂直外边距塌陷<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.father</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410205223833.gif"></p><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>外边距合并-嵌套块级元素垂直外边距塌陷<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.father</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border: 1px solid transparent; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210406134634343-164227252890423.jpg" style="zoom:50%;" /><p><strong>注意：外边距的合并在利用盒子布局页面的时候是经常发生的！</strong></p><h2 id="11-6-清除内外边距"><a href="#11-6-清除内外边距" class="headerlink" title="11.6 清除内外边距"></a>11.6 清除内外边距</h2><p>网页元素很多都带有默认的内外边距，而且不同浏览器默认的也不一致。因此我们在布局前，首先要清除下网页元素的内外边距。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line"><span class="attribute">padding</span>:<span class="number">0</span>; <span class="comment">/* 清除内边距 */</span></span><br><span class="line"><span class="attribute">margin</span>:<span class="number">0</span>; <span class="comment">/* 清除外边距 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：行内元素为了照顾兼容性，尽量只设置左右内外边距，不要设置上下内外边距（某些时候，行内元素对上下内外边距不生效）。但是转换为块级和行内块元素就可以了。</p><h3 id="11-6-1-CSS3模型自动内减"><a href="#11-6-1-CSS3模型自动内减" class="headerlink" title="11.6.1 CSS3模型自动内减"></a>11.6.1 CSS3模型自动内减</h3><p>给盒子模型 设置属性 <code>box-sizing;</code> <code>border-box;</code>  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS3内减模式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 不内减之前宽为140、高为140 自动内减，内减之后就直接是宽高的取值 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="11-7-案例"><a href="#11-7-案例" class="headerlink" title="11.7 案例"></a>11.7 案例</h2><p><img src="http://picgo.kongshier.top/2767/20210406135403826.jpg"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>综合案例-MI产品模块<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">298px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">415px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 让块级的盒子水平居中对齐 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 图片的宽度和父亲一样宽 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.review</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">70px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 因为这个段落没有 width 属性，所以 padding 不会撑开盒子的宽度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">28px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 因为这个段落有 height 属性，所以 padding-top 会撑大盒子，所以我们用 margin-top */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 其实用 padding-top 也可以，但是需要手动减去 top 值，麻烦且不规范 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.appraise</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#b0b0b0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">28px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.info</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">28px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.info</span> <span class="selector-tag">h4</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">400</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.info</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#ff6700</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.info</span> <span class="selector-tag">em</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 不倾斜 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-style</span>: normal;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#ebe4e0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">6px</span> <span class="number">0</span> <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/img.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;review&quot;</span>&gt;</span>快递牛，整体不错蓝牙可以说秒连。红米给力<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;appraise&quot;</span>&gt;</span>来自于 117384232 的评价<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h4</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Redmi AirDots真无线蓝...<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 特殊元素可以用 em 包裹 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">em</span>&gt;</span>|<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span> 99.9元<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210406135403703.jpg" style="zoom:50%;" /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>综合案例-快报模板<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 去除列表前的圆点 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 之所以把这条语句单独写，是因为整个页面都需要把 li 的圆点去除 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">248px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">163px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> <span class="selector-tag">h3</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">32px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">1px</span> dotted <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">400</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">32px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 由于该盒子带有一个下边框，所以缩进不能使用 margin，否则下边框也会一同缩进，</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            此处就用 padding。并且此处没有设置 width，所以 padding-left 也不会撑大盒子 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-left</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#666</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: underline;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">23px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">23px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-left</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">7px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>品优购快报<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>【特惠】爆款耳机5折秒！<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>【特惠】母亲节，健康好礼低至5折！<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>【特惠】语音折叠台灯99元！<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>【特惠】9.9元3D打印！<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>【特惠】格力智能空调立省1000元！<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210406135403715.gif"></p><h2 id="11-8-总结"><a href="#11-8-总结" class="headerlink" title="11.8 总结"></a>11.8 总结</h2><h3 id="a、布局为啥用不同盒子，我只想用-div？"><a href="#a、布局为啥用不同盒子，我只想用-div？" class="headerlink" title="a、布局为啥用不同盒子，我只想用 div？"></a>a、布局为啥用不同盒子，我只想用 div？</h3><p>标签都是有语义的，合理的地方用合理的标签。比如产品标题就用 <code>h</code>，大量文字段落就用 <code>p</code>。</p><h3 id="b、为啥用辣么多类名？"><a href="#b、为啥用辣么多类名？" class="headerlink" title="b、为啥用辣么多类名？"></a>b、为啥用辣么多类名？</h3><p>类名就是给每个盒子起了一个名字，可以更好的找到这个盒子，选取盒子更容易，后期维护也更方便。</p><h3 id="c、到底用-margin-还是-padding？"><a href="#c、到底用-margin-还是-padding？" class="headerlink" title="c、到底用 margin 还是 padding？"></a>c、到底用 margin 还是 padding？</h3><p>大部分情况两个可以混用，两者各有优缺点，但是根据实际情况，总是有更简单的方法实现。</p><p>一般来说，盒子与盒子之间统一用 margin，内容与边框之间用 padding。</p><h3 id="d、自己做没有思路？"><a href="#d、自己做没有思路？" class="headerlink" title="d、自己做没有思路？"></a>d、自己做没有思路？</h3><p>布局有很多种实现方式，可以开始先模仿大牛的写法，然后再做出自己的风格。</p><p>最后一定多运用辅助工具，比如屏幕画笔，PS 等等。</p><h1 id="十二、边框阴影样式"><a href="#十二、边框阴影样式" class="headerlink" title="十二、边框阴影样式"></a>十二、边框阴影样式</h1><h2 id="1-圆角边框"><a href="#1-圆角边框" class="headerlink" title="1. 圆角边框"></a>1. 圆角边框</h2><p>CSS 3 新增了圆角边框样式。</p><p>border-radius 属性用于设置元素的外边框圆角。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>: length;</span><br></pre></td></tr></table></figure><p>原理：</p><p>border-radius 顾名思义：边框半径。</p><p>（椭）圆与边框的交集形成圆角效果。</p><p><img src="http://picgo.kongshier.top/2767/20210407171139155.jpg"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>圆角边框<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210407171251321.jpg"></p><p>注意：</p><ul><li>参数值可以为数值或百分比的形式</li><li>如果是正方形，想要设置为圆形，那么只需要把数值修改为高度或者宽度的一半即可，或者直接写为 50%</li><li>如果是个矩形，设置为高度的一半就可以做 “胶囊” 效果了</li><li>该属性是一个简写属性，可以跟多个值<ul><li>四个值：左上角、右上角、右下角、左下角（从左上开始顺时针）</li><li>三个值：左上、右上+左下、右下（对角为一组）</li><li>两个值：左上+右下、右上+左下（对角为一组）</li></ul></li><li>同时可以对特定角单独设置<ul><li>左上角：<code>border-top-left-radius</code></li><li>右上角：<code>border-top-right-radius</code></li><li>右下角：<code>border-bottom-right-radius</code></li><li>左下角：<code>border-bottom-left-radius</code></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>圆角边框常用写法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.yuanxing</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-radius: 100px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 50% 就是宽度和高度的一半  等价于 100px */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.juxing</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 圆角矩形设置为高度的一半 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.radius</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-radius: 10px 20px 30px 40px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-radius: 10px 40px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top-left-radius</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    1. 圆形的做法:</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;yuanxing&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    2. 圆角矩形的做法:</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;juxing&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    3. 可以设置不同的圆角:</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;radius&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210407172402316.jpg"></p><h2 id="2-盒子阴影"><a href="#2-盒子阴影" class="headerlink" title="2. 盒子阴影"></a>2. 盒子阴影</h2><p>CSS 3 新增了盒子阴影。</p><p>box-shadow 属性用于为盒子添加阴影。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: h-shadow v-shadow blur spread color inset;</span><br></pre></td></tr></table></figure><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td><code>h-shadow</code></td><td>必须。水平阴影的位置，允许负值。</td></tr><tr><td><code>v-shadow</code></td><td>必须。垂直阴影的位置，允许负值。</td></tr><tr><td><code>blur</code></td><td>可选。模糊距离（虚实程度）。</td></tr><tr><td><code>spread</code></td><td>可选。阴影的尺寸（大小）。</td></tr><tr><td><code>color</code></td><td>可选。阴影的颜色，请参阅 CSS 颜色值（阴影多为半透明颜色）。</td></tr><tr><td><code>inset</code></td><td>可选。将外部阴影（outset）改为内部阴影（outset 不能指定，默认为空即可）。</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>盒子阴影<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: salmon;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* box-shadow: 10px 10px; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 伪类不仅仅可以用于 a 链接，还能用于其他标签 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 原先盒子没有影子,当我们鼠标经过盒子就添加阴影效果 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span> -<span class="number">4px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210407181220613.gif"></p><p><strong>三边阴影、双边阴影、单边阴影的设置方法：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>盒子阴影 三边阴影、双边阴影、单边阴影<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">25px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">25px</span> <span class="number">5px</span> red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 三边阴影就是直接把整个阴影部分往下边移 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.b</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">6px</span> <span class="number">10px</span> <span class="number">0</span> red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 两边阴影要用盒子嵌套来解决 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.c1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">10px</span> <span class="number">10px</span> -<span class="number">5px</span> red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.c2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> -<span class="number">10px</span> <span class="number">10px</span> -<span class="number">5px</span> red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 单边阴影就是直接把整个阴影部分往下边移，并且减小阴影大小 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.d</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">10px</span> <span class="number">10px</span> -<span class="number">5px</span> red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span>四边阴影<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;b&quot;</span>&gt;</span>三边阴影<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;c1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;c2&quot;</span>&gt;</span>两边阴影<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;d&quot;</span>&gt;</span>一边阴影<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410202736632.jpg"></p><h2 id="3-文字阴影"><a href="#3-文字阴影" class="headerlink" title="3. 文字阴影"></a>3. 文字阴影</h2><p>CSS 3 新增了文字阴影。</p><p>text-shadow 属性用于为文本添加阴影。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-shadow</span>: h-shadow v-shadow blur color;</span><br></pre></td></tr></table></figure><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td><code>h-shadow</code></td><td>必须。水平阴影的位置。允许负值。</td></tr><tr><td><code>v-shadow</code></td><td>必须。垂直阴影的位置。允许负值。</td></tr><tr><td><code>blur</code></td><td>可选。模糊的距离（虚实程度）。</td></tr><tr><td><code>color</code></td><td>可选。阴影的颜色。参阅 CSS 颜色值。</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>文字阴影<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: salmon;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">700</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-shadow</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        你是阴影,我是火影</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210407182002202.jpg"></p><h1 id="十三、浮动（float）"><a href="#十三、浮动（float）" class="headerlink" title="十三、浮动（float）"></a>十三、浮动（float）</h1><h3 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h3><ul><li>作用：根据元素在HTMl中的结构关系查找元素</li><li>优势：减少对于HTML中类的依赖，有利于保持代码整洁</li><li>场景：查找某父级选择器中的子元素</li></ul><table><thead><tr><th>选择器</th><th>说明</th></tr></thead><tbody><tr><td><code>E:first-child&#123;&#125;</code></td><td>匹配父元素中第一个子元素，并且是E元素</td></tr><tr><td><code>E:last-child&#123;&#125;</code></td><td>匹配父元素中最后一个元素，并且是E元素</td></tr><tr><td><code>E:nth-child(n)&#123;&#125;</code></td><td>匹配父元素中第n个元素，并且是E元素</td></tr><tr><td><code>E:nth-last-child(n)&#123;&#125;</code></td><td>匹配父元素中倒数第n个元素，并且是E元素</td></tr></tbody></table><p>n具有的公式：</p><ol><li>偶数：2n、even</li><li>奇数：2n-1、odd</li><li>找到前5个：-n+5</li><li>找到第五哥往后：n+5</li></ol><h3 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h3><ul><li><p>能够使用伪元素在网页中创建内容</p></li><li><p>由CSS模拟出但标签效果</p></li><li><p>种类</p><table><thead><tr><th>伪元素</th><th>作用</th></tr></thead><tbody><tr><td><code>::before </code></td><td>在父元素内容的最前添加一个伪元素</td></tr><tr><td><code>::afther</code></td><td>在父元素内容的最后添加一个伪元素</td></tr></tbody></table></li><li><p>需要设置 context 属性</p></li><li><p>伪元素默认为行内元素</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>伪元素<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.father</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.father</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加伪元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&quot;你&quot;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置行内 不换行 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.father</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&quot;绿了&quot;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--伪元素 通过css创建标签 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span>被<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/image-20221029173828038.png" alt="image-20221029173828038"></p><h2 id="13-1-传统网页布局的三种方式"><a href="#13-1-传统网页布局的三种方式" class="headerlink" title="13.1 传统网页布局的三种方式"></a>13.1 传统网页布局的三种方式</h2><p>网页布局的本质：用 CSS 来摆放盒子，把盒子摆放到相应位置。</p><p>CSS 提供了三种传统布局方式（简单说就是盒子如何进行排列）。</p><ul><li>普通流（标准流）</li><li>浮动</li><li>定位</li></ul><blockquote><p>这里指的只是传统布局，其实还有一些特殊高级的布局方式。</p></blockquote><h2 id="13-2-标准流（普通流-x2F-文档流）"><a href="#13-2-标准流（普通流-x2F-文档流）" class="headerlink" title="13.2 标准流（普通流&#x2F;文档流）"></a>13.2 标准流（普通流&#x2F;文档流）</h2><p>所谓的标准流：&#x3D;&#x3D;标签按照规定好的默认方式进行排列。&#x3D;&#x3D;</p><ol><li><strong>块级元素会独占一行，从上向下顺序排列。</strong></li><li><strong>行内元素会按照顺序，从左到右顺序排列，碰到父元素边缘则自动换行。</strong></li></ol><p>以上都是标准流布局，我们前面学习的就是标准流，标准流是最基本的布局方式。</p><p>这三种布局方式都是用来摆放盒子的，盒子摆放到合适位置，布局自然就完成了。</p><p><strong>注意：</strong>实际开发中，一个页面基本都包含了这三种布局方式（后面移动端学习新的布局方式） 。</p><h2 id="13-3-为什么需要浮动？"><a href="#13-3-为什么需要浮动？" class="headerlink" title="13.3 为什么需要浮动？"></a>13.3 为什么需要浮动？</h2><p>提问：我们用标准流能很方便的实现如下效果吗？</p><ol><li><strong>如何让多个块级盒子（div）水平排列成一行？</strong></li></ol><p><img src="http://picgo.kongshier.top/2767/2021040923145350.jpg"></p><p>比较难，虽然转换为行内块元素可以实现一行显示，但是他们之间会有大的<strong>空白缝隙</strong>，很难控制。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>行内块中间有缝隙<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#d87093</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210409231914135.jpg"></p><ol start="2"><li><strong>如何实现两个盒子的左右对齐？</strong></li></ol><p><img src="http://picgo.kongshier.top/2767/20210409232236196.jpg"></p><p>总结： 有很多的布局效果，标准流没有办法完成，此时就可以利用浮动完成布局。 因为浮动可以改变元素标签默认的排列方式。</p><p><strong>浮动最典型的应用：可以让多个块级元素一行内排列显示。</strong></p><p><strong>网页布局第一准则：多个块级元素纵向排列找标准流，多个块级元素横向排列找浮动！</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>多个块级元素横向排列找浮动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#d87093</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210409232755502.jpg"></p><p><strong>拓展：</strong>浮动的盒子不会发生外边距合并！</p><h2 id="13-4-什么是浮动？"><a href="#13-4-什么是浮动？" class="headerlink" title="13.4 什么是浮动？"></a>13.4 什么是浮动？</h2><p><code>float</code> 属性用于创建浮动框，将其移动到一边，直到左边缘或右边缘触及包含块或另一个浮动框的边缘。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">float</span>: 属性值;&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>none</td><td>元素不浮动（默认值）</td></tr><tr><td>left</td><td>元素向左浮动</td></tr><tr><td>right</td><td>元素向右浮动</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>什么是浮动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.left</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>左青龙<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span>右白虎<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410105021368.jpg"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>什么是浮动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.left</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 层叠性 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>左青龙<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span>右白虎<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410104859778.jpg"></p><h2 id="13-5-浮动特性（重难点）"><a href="#13-5-浮动特性（重难点）" class="headerlink" title="13.5 浮动特性（重难点）"></a>13.5 浮动特性（重难点）</h2><p>加了浮动之后的元素，会具有很多特性，需要我们掌握。</p><ol><li>浮动元素会脱离标准流（脱标）</li><li>浮动的元素会一行内显示并且元素顶部对齐</li><li>浮动的元素会具有行内块元素的特性</li></ol><p>下面分别解释：</p><p><strong>（1）浮动元素会脱离标准流（脱标）</strong></p><ul><li>脱离标准普通流的控制（浮） 移动到指定位置（动），（俗称脱标）</li><li>浮动的盒子不再保留原先的位置</li></ul><p><img src="http://picgo.kongshier.top/2767/20210410110624702.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动特性1<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 设置了浮动（float）的元素会：</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        1.脱离标准普通流的控制（浮）移动到指定位置（动）。</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        2.浮动的盒子不再保留原先的位置 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: gray;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span>浮动的盒子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span>标准流的盒子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410110837237.jpg"></p><p><strong>（2）浮动的元素会一行内显示并且元素顶部对齐</strong></p><ul><li>如果多个盒子都设置了浮动，则它们会按照属性值一行内显示并且顶端对齐排列。</li><li>浮动的元素是互相贴靠在一起的（不会有缝隙），如果父级宽度装不下这些浮动的盒子，多出的盒子会另起一行对齐。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动元素特性-浮动元素一行显示<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.two</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">249px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.four</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;four&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410111331406.jpg"></p><p><img src="http://picgo.kongshier.top/2767/20210410111551264.gif"></p><p><img src="http://picgo.kongshier.top/2767/readme.gif"></p><p><strong>（3）浮动的元素会具有行内块元素的特性</strong></p><p>任何元素都可以浮动。不管原先是什么模式的元素，添加浮动之后具有行内块元素相似的特性。</p><ul><li>块级盒子：没有设置宽度时默认宽度和父级一样宽，但是添加浮动后，它的大小根据内容来决定</li><li>行内盒子：宽度默认和内容一样宽，直接设置高宽无效，但是添加浮动后，它的大小可以直接设置</li><li>浮动的盒子中间是没有缝隙的，是紧挨着一起的 </li><li><strong>即：默认宽度由内容决定，同时支持指定高宽，盒子之间无空隙</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动的元素具有行内块元素特点<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 任何元素都可以浮动。不管原先是什么模式的元素，添加浮动之后具有行内块元素相似的特性。 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">span</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 如果行内元素有了浮动，则不需要转换块级\行内块元素就可以直接给高度和宽度 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>span1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>span2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>pppppppppppppp<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410120453590.jpg"></p><p>注意：之所以顶部没有对齐，原因是 p 标签自带的外边距 &gt; span div 自带的外边距。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动的元素具有行内块元素特点<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 任何元素都可以浮动。不管原先是什么模式的元素，添加浮动之后具有行内块元素相似的特性。 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">span</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 如果行内元素有了浮动,则不需要转换块级\行内块元素就可以直接给高度和宽度 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>span1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>span2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>pppppppppppppp<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410120744356.jpg"></p><h2 id="13-6-浮动元素经常和标准流父级搭配使用"><a href="#13-6-浮动元素经常和标准流父级搭配使用" class="headerlink" title="13.6 浮动元素经常和标准流父级搭配使用"></a>13.6 浮动元素经常和标准流父级搭配使用</h2><p>为了约束浮动元素位置，我们网页布局一般采取的策略是：</p><p><strong>先用标准流的父元素排列上下位置，之后内部子元素采取浮动排列左右位置。符合网页布局第一准侧。</strong></p><p><img src="http://picgo.kongshier.top/2767/20210410121200199.jpg"></p><p>应用举例：</p><p><img src="http://picgo.kongshier.top/2767/20210410121702801.jpg"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动元素搭配标准流父盒子1<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">460px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">230px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">460px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">970px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">460px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>左侧<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span>右侧<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410121929718.jpg"></p><hr><p><img src="http://picgo.kongshier.top/2767/20210410123510406.jpg"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动元素搭配标准流父盒子2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 取消 li 前的圆点 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1226px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">285px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 让大盒子水平居中 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">296px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">285px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: gray;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 每个小盒子用右边距隔开 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 取消最后一个小盒子的右外边距 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 这里必须写 .box .last 要注意权重的问题  20 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> <span class="selector-class">.last</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;last&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410122632628.jpg"></p><hr><p><img src="http://picgo.kongshier.top/2767/20210410123520625.jpg"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动布局练习3<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1226px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">615px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">234px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">615px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: gray;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">992px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">615px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.right</span>&gt;<span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">234px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>左青龙<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410122643298.jpg"></p><p><img src="http://picgo.kongshier.top/2767/image-20220116104204568.png"></p><h2 id="13-7-常见网页布局"><a href="#13-7-常见网页布局" class="headerlink" title="13.7 常见网页布局"></a>13.7 常见网页布局</h2><h3 id="13-7-1-初识常见网页布局"><a href="#13-7-1-初识常见网页布局" class="headerlink" title="13.7.1 初识常见网页布局"></a>13.7.1 初识常见网页布局</h3><p><img src="http://picgo.kongshier.top/2767/20210410125437174.jpg"></p><p><img src="http://picgo.kongshier.top/2767/20210410125449278.jpg"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>常见网页布局<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.top</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: gray;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.banner</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">980px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: gray;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">10px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">980px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">237px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: gray;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> <span class="selector-class">.last</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 只要是通栏的盒子（和浏览器一样宽）不需要指定宽度 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.footer</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: gray;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;top&quot;</span>&gt;</span>top<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;banner&quot;</span>&gt;</span>banner<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;last&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span>footer<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410125651546.jpg"></p><h3 id="13-7-2-浮动布局注意点"><a href="#13-7-2-浮动布局注意点" class="headerlink" title="13.7.2 浮动布局注意点"></a>13.7.2 浮动布局注意点</h3><p><strong>（1）浮动和标准流的父盒子搭配</strong></p><p>先用标准流的父元素排列上下位置，之后内部子元素采取浮动排列左右位置。</p><p><strong>（2）一个元素浮动了，理论上其余的兄弟元素也要浮动</strong></p><p>一个盒子里面有多个子盒子，如果其中一个盒子浮动了，那么其他兄弟也应该浮动，以防止引起问题。</p><p>浮动的盒子只会影响浮动盒子后面的标准流，不会影响前面的标准流。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动注意点<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 如果一个子元素浮动了，尽量其他盒子也浮动，这样保证这些子元素一行显示 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">900px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.damao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: palevioletred;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.ermao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: palegreen;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.sanmao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">240px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;damao&quot;</span>&gt;</span>大毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- float: left; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ermao&quot;</span>&gt;</span>二毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- float: left; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sanmao&quot;</span>&gt;</span>三毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- float: left; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410130344660.jpg"></p><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动注意点<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 浮动的盒子只会影响浮动盒子后面的标准流，不会影响前面的标准流。 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 大毛为标准流，所以大毛会占据其所在的一行，后面的二毛就算浮动也不会跑到大毛上方！*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">900px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.damao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* float: left; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: palevioletred;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.ermao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: palegreen;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.sanmao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">240px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;damao&quot;</span>&gt;</span>大毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- 标准流 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ermao&quot;</span>&gt;</span>二毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- float: left; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sanmao&quot;</span>&gt;</span>三毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- float: left; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410130529987.jpg"></p><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动注意点<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 浮动的盒子只会影响浮动盒子后面的标准流，不会影响前面的标准流。 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">900px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.damao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: palevioletred;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.ermao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* float: left; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: palegreen;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.sanmao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">240px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;damao&quot;</span>&gt;</span>大毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- float: left; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ermao&quot;</span>&gt;</span>二毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- 标准流 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sanmao&quot;</span>&gt;</span>三毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- float: left; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410130858443.jpg"></p><p>由于大毛是浮动的，所以原来大毛的位置会空出来，此时二毛就会向上补齐空位，由于二毛高度小于大毛，所以二毛被大毛挡住了，又因为二毛是标准流，所以二毛会占据所在的一行，所以后面浮动的三毛就只能在二毛的底部之下，又由于大毛也是浮动的，所以三毛就会紧贴在大毛右侧。</p><p><img src="http://picgo.kongshier.top/2767/20210410131113979.jpg"></p><h2 id="13-8-清除浮动"><a href="#13-8-清除浮动" class="headerlink" title="13.8 清除浮动"></a>13.8 清除浮动</h2><h3 id="13-8-1-思考题"><a href="#13-8-1-思考题" class="headerlink" title="13.8.1 思考题"></a>13.8.1 思考题</h3><p>我们前面浮动元素有一个标准流的父元素，他们有一个共同的特点，都是有高度的。</p><p>但是，所有的父盒子都必须有高度吗？</p><p>答案：不一定！比如，一个产品列表，随着时期的不同，产品数量也不同，所需的盒子大小也会随之改变，那么直接固定盒子高度的形式显然就是不行的。再比如，文章之类的盒子，不同的文章字数是不相同的，那么显然盒子也不能直接固定高度。</p><p>理想中的状态，让子盒子撑开父亲。有多少孩子，我父盒子就有多高。</p><p>但是不给父盒子高度会有问题吗？</p><p>答案：会！但有方法解决（清除浮动）。</p><h3 id="13-8-2-为什么需要清除浮动？"><a href="#13-8-2-为什么需要清除浮动？" class="headerlink" title="13.8.2 为什么需要清除浮动？"></a>13.8.2 为什么需要清除浮动？</h3><p>由于父级盒子很多情况下不方便给高度，但是子盒子浮动又不占有位置，最后父级盒子高度为 0 时，就会影响下面的标准流盒子。</p><p><img src="http://picgo.kongshier.top/2767/20210410133601570.png"></p><ul><li><p>由于浮动元素不再占用原文档流的位置，所以它会对后面的元素排版产生影响</p></li><li><p>此时一但父盒子下面有其他盒子，那么布局就会发生严重混乱！</p></li></ul><h3 id="13-8-3-清除浮动本质"><a href="#13-8-3-清除浮动本质" class="headerlink" title="13.8.3 清除浮动本质"></a>13.8.3 清除浮动本质</h3><ul><li>清除浮动的本质是清除浮动元素造成的影响</li><li>如果父盒子本身有高度，则不需要清除浮动</li><li>清除浮动之后，父级就会根据浮动的子盒子自动检测高度。父级有了高度，就不会影响下面的标准流了</li></ul><h3 id="13-8-4-清除浮动"><a href="#13-8-4-清除浮动" class="headerlink" title="13.8.4 清除浮动"></a>13.8.4 清除浮动</h3><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">clear</span>: 属性值; &#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>left</td><td>不允许左侧有浮动元素（清除左侧浮动的影响）</td></tr><tr><td>right</td><td>不允许右侧有浮动元素（清除右侧浮动的影响）</td></tr><tr><td>both</td><td>同时清除左右两侧浮动的影响</td></tr></tbody></table><p>我们实际工作中，几乎只用 <code>clear: both;</code></p><p>清除浮动的策略是：闭合浮动。</p><h3 id="13-8-5-清除浮动方法"><a href="#13-8-5-清除浮动方法" class="headerlink" title="13.8.5 清除浮动方法"></a>13.8.5 清除浮动方法</h3><ol><li>额外标签法也称为隔墙法，是 W3C 推荐的做法。(实际开发不推荐)</li><li>父级添加 overflow 属性</li><li>父级添加 after 伪元素</li><li>父级添加 双伪元素</li></ol><h3 id="13-8-6-清除浮动-——-额外标签法"><a href="#13-8-6-清除浮动-——-额外标签法" class="headerlink" title="13.8.6 清除浮动 —— 额外标签法"></a>13.8.6 清除浮动 —— 额外标签法</h3><p>额外标签法也称为隔墙法，是 W3C 推荐的做法。</p><p>额外标签法会在浮动元素末尾添加一个空的标签。例如 <code>&lt;div style=&quot;clear: both&quot;&gt;&lt;/div&gt;</code>，或者其他标签（如 <code>&lt;br&gt;</code> 等）。</p><ul><li>优点： 通俗易懂，书写方便</li><li>缺点： 添加许多无意义的标签，结构化较差</li></ul><p>注意： 要求这个新的空标签必须是<strong>块级元素</strong>。</p><p>总结：</p><ul><li>清除浮动本质是？</li></ul><p>清除浮动的本质是清除浮动元素脱离标准流造成的影响。</p><ul><li>清除浮动策略是？</li></ul><p>闭合浮动。只让浮动在父盒子内部影响，不影响父盒子外面的其他盒子。</p><ul><li>额外标签法？</li></ul><p><strong>隔墙法，就是在最后一个浮动的子元素后面添加一个额外空标签（块级标签），添加清除浮动样式。</strong></p><p>实际工作可能会遇到，但是不常用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>清除浮动之额外标签法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">3px</span> solid black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.damao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: salmon;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.ermao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.footer</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: gray;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clear</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;damao&quot;</span>&gt;</span>大毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ermao&quot;</span>&gt;</span>二毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ermao&quot;</span>&gt;</span>二毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ermao&quot;</span>&gt;</span>二毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ermao&quot;</span>&gt;</span>二毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;clear&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 这个新增的盒子要求必须是块级元素不能是行内元素 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;span class=&quot;clear&quot;&gt;&lt;/span&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410140435474.jpg"></p><h3 id="13-8-7-清除浮动-——-父级添加-overflow"><a href="#13-8-7-清除浮动-——-父级添加-overflow" class="headerlink" title="13.8.7 清除浮动 —— 父级添加 overflow"></a>13.8.7 清除浮动 —— 父级添加 overflow</h3><p>可以给父级添加 <code>overflow</code> 属性，将其属性值设置为 <code>hidden</code>、 <code>auto</code> 或 <code>scroll</code>。</p><p>子不教，父之过，注意是给父元素添加代码。</p><ul><li>优点：代码简洁</li><li>缺点：无法显示溢出的部分</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>overflow清除浮动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 清除浮动 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid blue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.damao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: purple;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.ermao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.footer</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;damao&quot;</span>&gt;</span>大毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ermao&quot;</span>&gt;</span>二毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410141717785.jpg"></p><h3 id="13-8-8-清除浮动-——-after-伪元素法"><a href="#13-8-8-清除浮动-——-after-伪元素法" class="headerlink" title="13.8.8 清除浮动 —— :after 伪元素法"></a>13.8.8 清除浮动 —— :after 伪元素法</h3><p><code>:after</code> 方式是额外标签法的升级版，也是给父元素添加代码。</p><p>原理：自动在父盒子里的末尾添加一个 行内盒子，我们将它转换为 块级盒子，就间接实现了额外标签法。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line"><span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">clear</span>: both;</span><br><span class="line"><span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clearfix</span> &#123; </span><br><span class="line">    <span class="comment">/* IE6、7 专有 */</span></span><br><span class="line">*zoom: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：类名不一定非要是 clearfix，但是还是推荐这么写以提高可读性。</p><ul><li>优点：没有增加标签，结构更简单</li><li>缺点：需要单独照顾低版本浏览器</li><li>代表网站： 百度、淘宝网、网易等</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>伪元素清除浮动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">visibility</span>: hidden;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clearfix</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* IE6、7 专有 */</span></span></span><br><span class="line"><span class="language-css">            *zoom: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid blue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.damao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: purple;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.ermao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.footer</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box clearfix&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;damao&quot;</span>&gt;</span>大毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ermao&quot;</span>&gt;</span>二毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410141717785-164230099450328.jpg"></p><h3 id="13-8-9-清除浮动-——-双伪元素清除浮动"><a href="#13-8-9-清除浮动-——-双伪元素清除浮动" class="headerlink" title="13.8.9 清除浮动 —— 双伪元素清除浮动"></a>13.8.9 清除浮动 —— 双伪元素清除浮动</h3><p>额外标签法的升级版，也是给给父元素添加代码。</p><p>原理：自动在父盒子里的两端添加两个行内盒子，并把它们转换为 表格，间接实现了额外标签法。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>,</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line"><span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="attribute">display</span>: table;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line"><span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">    <span class="comment">/* IE6、7 专有 */</span></span><br><span class="line">*zoom:<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：类名不一定非要是 clearfix，但是还是推荐这么写以提高可读性。</p><ul><li><p>优点：代码更简洁</p></li><li><p>缺点：需要单独照顾低版本浏览器</p></li><li><p>代表网站：小米、腾讯等</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>双伪元素清除浮动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: table;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clearfix</span> &#123;</span></span><br><span class="line"><span class="language-css">            *zoom: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid blue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.damao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: purple;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.ermao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.footer</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box clearfix&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;damao&quot;</span>&gt;</span>大毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ermao&quot;</span>&gt;</span>二毛<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210410141717785-164230099808930.jpg"></p><h3 id="13-8-10-清除浮动总结"><a href="#13-8-10-清除浮动总结" class="headerlink" title="13.8.10 清除浮动总结"></a>13.8.10 清除浮动总结</h3><p>为什么需要清除浮动？</p><ul><li>父级没高度</li><li>子盒子浮动了</li><li>影响下面布局了，我们就应该清除浮动了</li></ul><table><thead><tr><th>清除浮动的方式</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>额外标签法（隔墙法）</td><td>通俗易懂，书写方便</td><td>添加许多无意义的标签，结构化较差</td></tr><tr><td>父级 overflow: hidden;</td><td>书写简单</td><td>溢出隐藏</td></tr><tr><td>父级 after 伪元素</td><td>结构语义化正确</td><td>由于 IE6~7 不支持 :after，兼容性问题</td></tr><tr><td>父级双伪元素</td><td>结构语义化正确</td><td>由于 IE6~7 不支持 :after，兼容性问题</td></tr></tbody></table><blockquote><p>after 伪元素、双伪元素 清除浮动的原理将在后面的 CSS3 中解释。</p></blockquote><h1 id="十四、定位"><a href="#十四、定位" class="headerlink" title="十四、定位"></a>十四、定位</h1><h2 id="14-1-为什么需要定位？"><a href="#14-1-为什么需要定位？" class="headerlink" title="14.1 为什么需要定位？"></a>14.1 为什么需要定位？</h2><p>提问： 以下情况使用标准流或者浮动能实现吗？</p><ol><li><p>某个元素可以<strong>自由</strong>的在一个盒子内移动位置，并且压住其他盒子。</p></li><li><p>当我们滚动窗口的时候，盒子是<strong>固定</strong>屏幕某个位置的。</p></li></ol><p>以上效果，标准流或浮动都无法快速实现，此时需要定位来实现。</p><p>所以：</p><ol><li>浮动可以让多个块级盒子一行没有缝隙排列显示， 经常用于横向排列盒子。</li><li>定位则是可以让盒子自由的在某个盒子内移动位置或者固定屏幕中某个位置，并且可以压住其他盒子。</li></ol><h2 id="14-2-定位组成"><a href="#14-2-定位组成" class="headerlink" title="14.2 定位组成"></a>14.2 定位组成</h2><p>定位：将盒子定在某一个位置，所以定位也是在摆放盒子， 按照定位的方式移动盒子。</p><p><code>定位 = 定位模式 + 边偏移</code></p><ul><li>定位模式用于指定一个元素在文档中的定位方式</li><li>边偏移则决定了该元素的最终位置</li></ul><p><strong>（1）定位模式</strong></p><p>定位模式决定元素的定位方式，它通过 CSS 的 <code>position</code> 属性来设置，其值可以分为四个。</p><table><thead><tr><th>值</th><th>语义</th></tr></thead><tbody><tr><td><code>static</code></td><td>静态定位</td></tr><tr><td><code>relative</code></td><td>相对定位</td></tr><tr><td><code>absolute</code></td><td>绝对定位</td></tr><tr><td><code>fixed</code></td><td>固定定位</td></tr></tbody></table><p><strong>（2）边偏移</strong></p><p>边偏移就是定位的盒子移动的最终位置。有 <code>top</code>、<code>bottom</code>、<code>left</code> 和 <code>right</code> 4 个属性。</p><p>注意：可以为负值。</p><table><thead><tr><th>边偏移属性</th><th>实例</th><th>描述</th></tr></thead><tbody><tr><td><code>top</code></td><td><code>top: 80px</code></td><td>顶端偏移量，定义元素相对于其父元素上边线的距离</td></tr><tr><td><code>bottom</code></td><td><code>bottom: 80px</code></td><td>底部偏移量，定义元素相对于其父元素下边线的距离</td></tr><tr><td><code>left</code></td><td><code>left: 80px</code></td><td>左侧偏移量，定义元素相对于其父元素左边线的距离</td></tr><tr><td><code>rigth</code></td><td><code>right: 80px</code></td><td>右侧偏移量，定义元素相对于其父元素右边线的距离</td></tr></tbody></table><h2 id="14-3-静态定位-static（了解）"><a href="#14-3-静态定位-static（了解）" class="headerlink" title="14.3 静态定位 static（了解）"></a>14.3 静态定位 static（了解）</h2><p>静态定位是元素的默认定位方式，无定位的意思。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">position</span>: static; &#125;</span><br></pre></td></tr></table></figure><ol><li><p>静态定位按照标准流特性摆放位置，它没有边偏移</p></li><li><p>静态定位在布局时很少用到</p></li></ol><h2 id="14-4-相对定位-relative（重要）"><a href="#14-4-相对定位-relative（重要）" class="headerlink" title="14.4 相对定位 relative（重要）"></a>14.4 相对定位 relative（重要）</h2><p>相对定位是元素在移动位置的时候<strong>相对于它原来的位置</strong>来说的定位（自恋型）。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">position</span>: relative; &#125;</span><br></pre></td></tr></table></figure><p>相对定位的特点：（务必记住）</p><ol><li>它是相对于自己原来的位置来移动的（移动位置的时候参照点是自己原来的位置点）</li><li>原来在<strong>标准流的位置继续占有</strong>，后面的盒子仍然以标准流的方式对待它</li></ol><p>因此，<strong>相对定位并没有脱标</strong>。它最典型的应用是给绝对定位当爹的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>相对定位<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: deeppink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/2021041022482559.gif" style="zoom:50%;" /><h2 id="14-5-绝对定位-absolute（重要）"><a href="#14-5-绝对定位-absolute（重要）" class="headerlink" title="14.5 绝对定位 absolute（重要）"></a>14.5 绝对定位 absolute（重要）</h2><p>绝对定位是元素在移动位置的时候<strong>相对于它祖先元素</strong>来说的定位（拼爹型）。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">position</span>: absolute; &#125;</span><br></pre></td></tr></table></figure><p>绝对定位的特点：（务必记住）</p><ol><li>如果没有祖先元素或者祖先元素没有定位，则以浏览器为准定位（Document 文档）</li><li>如果祖先元素有定位（相对、绝对、固定定位），则以<strong>最近一级的有定位祖先元素为参考点</strong>移动位置</li><li>绝对定位<strong>不再占有原先的位置</strong>（脱标），并且<strong>脱标的程度大于浮动</strong>（会压住浮动）</li></ol><p>所以绝对定位是<strong>脱离标准流</strong>的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>绝对定位-无父亲或者父亲无定位<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.father</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* top: 10px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            left: 10px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* top: 100px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            right: 200px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210410225323359.gif" style="zoom:50%;" /><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>绝对定位-父级有定位-一级父亲<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.father</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* top: 10px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            left: 10px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* top: 100px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            right: 200px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210410225829682.gif" style="zoom:50%;" /><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>绝对定位-父级有定位-多级父亲<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 以最近一级的有定位祖先元素为参考点移动位置 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 即：谁带有定位并且离我最近，我就以谁为准！ */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.yeye</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.father</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;yeye&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210410230310223.gif" style="zoom:50%;" /><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>绝对定位-脱标<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.father</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.son</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.son2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: gray;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210410231150803.gif" style="zoom:50%;" /><p><strong>问题：</strong></p><ol><li>绝对定位和相对定位到底有什么使用场景呢？</li><li>为什么说相对定位给绝对定位当爹的呢？</li></ol><h2 id="14-6-子绝父相的由来"><a href="#14-6-子绝父相的由来" class="headerlink" title="14.6 子绝父相的由来"></a>14.6 子绝父相的由来</h2><p>弄清楚这个口诀，就明白了绝对定位和相对定位的使用场景。</p><p>这个 “子绝父相” 太重要了，是我们学习定位的口诀，是定位中最常用的一种方式这句话的意思是：子级是绝对定位的话，父级要用相对定位。</p><ol><li><strong>子级绝对定位，不会占有位置，可以放到父盒子里面的任何一个地方，不会影响其他的兄弟盒子</strong></li><li><strong>父盒子需要加定位限制子盒子在父盒子内显示</strong></li><li><strong>父盒子布局时，需要占有位置，因此父亲只能是相对定位</strong></li></ol><p>这就是子绝父相的由来，所以相对定位经常用来作为绝对定位的父级。</p><p>总结： 因为父级需要占有位置，因此是相对定位， 子盒子不需要占有位置，则是绝对定位。</p><p>当然，子绝父相不是永远不变的，如果父元素不需要占有位置，“子绝父绝” 也会遇到。</p><p><strong>思考：为什么非要用定位？浮动不可以吗？</strong></p><p>答案：用浮动做某些布局远远没有定位简单和方便！例如，轮播图。</p><img src="http://picgo.kongshier.top/2767/20210410231958333-164233328088033.jpg" style="zoom:50%;" /><ul><li>左右两边的图片切换按钮，利用浮动也可以做。但是，假如放置图片的盒子是在切换按钮之前添加的，那么根据浮动元素只能影响后面盒子的特性，切换按钮就只可能在图片底部之下，不可能浮于图片之上！</li><li>就算切换按钮用浮动实现了，但是左下角的轮播序号点图如果也用浮动实现，结果就是轮播序号点图会与切换按钮在一行并排浮动！</li></ul><p>可见，浮动单纯用于左右排列盒子是非常适合的，但是用于空间层次上排列盒子就不适合了！应该用定位实现。</p><p><strong>重点：竖向上布局找标准流，横向上布局找浮动，空间上布局找定位！</strong></p><p>【案例：学成在线 hot new 模块】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-bd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;clearfix&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">&lt;em&gt; 不是单纯的倾斜文本，该标签本质上是告诉浏览器把其中的文本表示为强调的内容，</span></span><br><span class="line"><span class="comment">所以，&lt;em&gt; 可以用来包含强调的元素。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">em</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/hot.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/pic.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h4</span>&gt;</span></span><br><span class="line">            Think PHP 5.0 博客系统实战项目演练</span><br><span class="line">          <span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>高级<span class="tag">&lt;/<span class="name">span</span>&gt;</span> • 1125人在学习</span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1225px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="comment">/* 子绝父相 */</span></span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">228px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">270px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &gt; <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">h4</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#050505</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">em</span> &#123;</span><br><span class="line">    <span class="comment">/* 子绝父相 */</span></span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">right</span>: -<span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-class">.info</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">20px</span> <span class="number">0</span> <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-class">.info</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff7c2d</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210411001207402.jpg"></p><h2 id="14-7-固定定位-fixed-（重要）"><a href="#14-7-固定定位-fixed-（重要）" class="headerlink" title="14.7 固定定位 fixed （重要）"></a>14.7 固定定位 fixed （重要）</h2><p>固定定位是元素固定于浏览器可视区的位置。</p><p>主要使用场景： 可以在浏览器页面滚动时元素的位置不会改变。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">position</span>: fixed; &#125;</span><br></pre></td></tr></table></figure><p>固定定位的特点（务必记住）：</p><ol><li>以<strong>浏览器的可视窗口为参照点</strong>移动元素<ul><li>跟父元素没有任何关系</li><li>不随滚动条滚动</li></ul></li><li>固定定位不再占有原先的位置<ul><li>固定定位也是<strong>脱标</strong>的，其实固定定位也可以看做是一种<strong>特殊的绝对定位</strong>。</li></ul></li></ol><p>应用举例：</p><img src="http://picgo.kongshier.top/2767/20210411000419348.gif" style="zoom:50%;" /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>固定定位<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.dj</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dj&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/pvp.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请尽情吩咐妲己，主人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210411002138603.gif" style="zoom:50%;" /><h2 id="14-8-固定定位小技巧：固定在版心右侧位置"><a href="#14-8-固定定位小技巧：固定在版心右侧位置" class="headerlink" title="14.8 固定定位小技巧：固定在版心右侧位置"></a>14.8 固定定位小技巧：固定在版心右侧位置</h2><p><strong>小算法：</strong></p><ol><li>让固定定位的盒子 <code>left: 50%</code>，走到浏览器可视区（也可以看做版心） 一半的位置</li><li>让固定定位的盒子 <code>margin-left: 版心宽度的一半距离</code>，多走版心宽度的一半位置</li></ol><p>就可以让固定定位的盒子贴着版心右侧对齐了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>固定定位小技巧-固定到版心右侧<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.w</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">1400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.fixed</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 1. 走浏览器宽度的一半 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 2. 利用 margin 走版心盒子宽度的一半距离（为了美观多加了 5px）*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">405px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fixed&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;w&quot;</span>&gt;</span>版心盒子 800像素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210411002750577.gif"></p><h2 id="14-9-粘性定位-sticky（了解）"><a href="#14-9-粘性定位-sticky（了解）" class="headerlink" title="14.9 粘性定位 sticky（了解）"></a>14.9 粘性定位 sticky（了解）</h2><p>粘性定位可以被认为是相对定位和固定定位的混合。</p><p>Sticky 粘性的。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">position</span>: sticky; <span class="attribute">top</span>: <span class="number">10px</span>; &#125;</span><br></pre></td></tr></table></figure><p>粘性定位的特点：</p><ol><li>以浏览器的<strong>可视窗口为参照点</strong>移动元素（固定定位特点）</li><li>粘性定位<strong>占有原先的位置</strong>（相对定位特点）</li><li>必须添加 top 、left、right、bottom 其中一个才有效</li></ol><p>跟页面滚动搭配使用。 兼容性较差，IE 不支持。</p><p>未来开发的趋势，但目前并不常用（目前用 javascript 来实现粘性定位效果）。</p><p>应用举例：</p><img src="http://picgo.kongshier.top/2767/20210411000442416.gif" style="zoom:50%;" /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>粘性定位<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">3000px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 粘性定位 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: sticky;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span>我是导航栏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210411003401335.gif"></p><p><img src="http://picgo.kongshier.top/2767/a6b709f41c9f42558b8d6870202bc171.gif"></p><h2 id="14-10-定位的总结"><a href="#14-10-定位的总结" class="headerlink" title="14.10 定位的总结"></a>14.10 定位的总结</h2><table><thead><tr><th>定位模式</th><th>是否脱标</th><th>移动位置</th><th>是否常用</th></tr></thead><tbody><tr><td>static 静态定位</td><td>否</td><td>不能使用边偏移</td><td>很少</td></tr><tr><td>relative 相对定位</td><td>否（占有位置）</td><td>相对于自身位置移动</td><td>常用</td></tr><tr><td>absolute 绝对定位</td><td>是（不占有位置）</td><td>带有定位的父级</td><td>常用</td></tr><tr><td>fixed 固定定位</td><td>是（不占有位置）</td><td>浏览器可视区</td><td>常用</td></tr><tr><td>sticky 粘性定位</td><td>否（占有位置）</td><td>浏览器可视区</td><td>当前阶段少</td></tr></tbody></table><ol><li>一定记住，相对定位、固定定位、绝对定位 两个大的特点： 1. 是否占有位置（脱标否） 2. 以谁为基准点移动位置。</li><li>学习定位重点学会子绝父相。</li></ol><h2 id="14-11-定位叠放次序-z-index"><a href="#14-11-定位叠放次序-z-index" class="headerlink" title="14.11 定位叠放次序 z-index"></a>14.11 定位叠放次序 z-index</h2><p>在使用定位布局时，可能会出现盒子重叠的情况。此时，可以使用 z-index 来控制盒子的前后次序（z轴）。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">z-index</span>: <span class="number">1</span>; &#125;</span><br></pre></td></tr></table></figure><ul><li>数值可以是正整数、负整数或 0，默认是 auto，数值越大，盒子越靠上</li><li>如果属性值相同，则按照书写顺序，后来居上</li><li>数字后面不能加单位</li><li>只有定位的盒子才有 z-index 属性</li></ul><h2 id="14-12-定位的拓展"><a href="#14-12-定位的拓展" class="headerlink" title="14.12 定位的拓展"></a>14.12 定位的拓展</h2><p><strong>（1）绝对定位的盒子居中</strong></p><p>加了绝对定位的盒子不能通过 <code>margin: 0 auto</code> 水平居中，但是可以通过以下计算方法实现水平和垂直居中。</p><ol><li><code>left: 50%;</code>：让盒子的左侧移动到父级元素的水平中心位置。</li><li><code>margin-left: -0.5widthpx;</code>：让盒子向左移动自身宽度的一半。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>绝对定位水平垂直居中<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 1. left 走 50%  父容器宽度的一半 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 2. margin 负值 往左边走 自己盒子宽度的一半 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: -<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 垂直居中同理 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: -<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* margin: auto; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210411004813982.jpg"></p><p><strong>（2）定位特殊特性</strong></p><p><strong>绝对定位和固定定位也和浮动类似。</strong></p><ol><li>行内元素添加绝对或者固定定位，可以直接设置高度和宽度。</li><li>块级元素添加绝对或者固定定位，如果不给宽度或者高度，默认大小是内容的大小。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>定位的特殊特性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>123<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>abcd<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210411005338704.jpg"></p><p><strong>（3）脱标的盒子不会触发外边距塌陷</strong></p><p>浮动元素、绝对定位（固定定位）元素的都不会触发外边距合并的问题。</p><p><strong>（4）绝对定位（固定定位）会完全压住盒子</strong></p><p>浮动元素不同，只会压住它下面标准流的盒子，但是不会压住下面标准流盒子里面的文字（图片）。</p><p>但是绝对定位（固定定位） 会压住下面标准流所有的内容。</p><p>浮动之所以不会压住文字，因为浮动产生的目的最初是为了做文字环绕效果的。 文字会围绕浮动元素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动产生原来的目的是做文字环绕效果<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    1993年，在古装片《战神传说》中扮演一个武功超群的渔民；同年，主演动作喜剧片《至尊三十六计之偷天换日》，在片中饰演赌术高明的千门高手钱文迪；此外，他还主演了爱情片《天长地久》，在片中塑造了一个风流不羁的江湖浪子形象。</span><br><span class="line">    1994年，刘德华投资并主演了剧情片《天与地》，在片中饰演面对恶势力却毫不退缩的禁毒专员张一鹏。1995年，主演赛车励志片《烈火战车》，在片中饰演叛逆、倔强的阿祖，并凭借该片获得第15届香港电影金像奖最佳男主角提名；同年在动作片《大冒险家》中演绎了立仁从小时候父母双亡到长大后进入泰国空军的故事。</span><br><span class="line">    1996年，主演黑帮题材的电影《新上海滩》，在片中饰演对冯程程痴情一片的丁力。1997年，担任剧情片《香港制造》的制作人；同年，主演爱情片《天若有情之烽火佳人》，在片中饰演家世显赫的空军少尉刘天伟；12月，与梁家辉联袂主演警匪动作片《黑金》，在片中饰演精明干练、嫉恶如仇的调查局机动组组长方国辉。1998年，主演动作片《龙在江湖》</span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/img.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    ，饰演重义气的黑帮成员韦吉祥；同年，出演喜剧片《赌侠1999》；此外，他还担任剧情片《去年烟花特别多》的制作人。</span><br><span class="line">    1993年，在古装片《战神传说》中扮演一个武功超群的渔民；同年，主演动作喜剧片《至尊三十六计之偷天换日》，在片中饰演赌术高明的千门高手钱文迪；此外，他还主演了爱情片《天长地久》，在片中塑造了一个风流不羁的江湖浪子形象。</span><br><span class="line">    1994年，刘德华投资并主演了剧情片《天与地》，在片中饰演面对恶势力却毫不退缩的禁毒专员张一鹏。1995年，主演赛车励志片《烈火战车》，在片中饰演叛逆、倔强的阿祖，并凭借该片获得第15届香港电影金像奖最佳男主角提名；同年在动作片《大冒险家》中演绎了立仁从小时候父母双亡到长大后进入泰国空军的故事。</span><br><span class="line">    1996年，主演黑帮题材的电影《新上海滩》，在片中饰演对冯程程痴情一片的丁力。1997年，担任剧情片《香港制造》的制作人；同年，主演爱情片《天若有情之烽火佳人》，在片中饰演家世显赫的空军少尉刘天伟；12月，与梁家辉联袂主演警匪动作片《黑金》，在片中饰演精明干练、嫉恶如仇的调查局机动组组长方国辉。1998年，主演动作片《龙在江湖》，饰演重义气的黑帮成员韦吉祥；同年，出演喜剧片《赌侠1999》；此外，他还担任剧情片《去年烟花特别多》的制作人。</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210411005813237.jpg"></p><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>定位会完全压住标准流盒子内容<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 1.浮动的元素不会压住下面标准流的文字 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* float: left; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 2. 绝对定位（固定定位） 会压住下面标准流所有的内容。 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>阁下何不同风起，扶摇直上九万里<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210411005914370.jpg"></p><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><p><strong>【案例：淘宝焦点图布局】</strong></p><p><img src="http://picgo.kongshier.top/2767/20210411010357458.jpg"></p><p>布局分析：</p><p><img src="http://picgo.kongshier.top/2767/20210411010357453.jpg"></p><p>制作：</p><ol><li>大盒子我们类名为： tb-promo 淘宝广告</li><li>里面先放一张图片</li><li>左右两个按钮用链接就好了，左箭头 prev 右箭头 next</li><li>底侧小圆点 ul 继续做，类名为 promo-nav</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>淘宝轮播图做法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.tb-promo</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">520px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">280px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.tb-promo</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">520px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">280px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 并集选择器可以集体声明相同的样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.prev</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.next</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 绝对定位的盒子垂直居中 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: -<span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 加了绝对定位的盒子可以直接设置高度和宽度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.prev</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-radius: 15px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top-right-radius</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom-right-radius</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.next</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 如果一个盒子既有 left 属性也有 right 属性，则默认会执行 left 属性 </span></span></span><br><span class="line"><span class="comment"><span class="language-css">            同理 top bottom 会执行 top */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-radius: 15px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top-left-radius</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom-left-radius</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.promo-nav</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: -<span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">70px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">13px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-color: pink; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">3</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">7px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.promo-nav</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 不要忘记选择器权重的问题 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.promo-nav</span> <span class="selector-class">.selected</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#ff5000</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tb-promo&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/tb.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 左侧按钮箭头 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span> <span class="symbol">&amp;lt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 右侧按钮箭头 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span> <span class="symbol">&amp;gt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 小圆点 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;promo-nav&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;selected&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210411010727218.jpg"></p><h2 id="14-13-网页布局总结"><a href="#14-13-网页布局总结" class="headerlink" title="14.13 网页布局总结"></a>14.13 网页布局总结</h2><p>通过盒子模型，清楚知道大部分 html 标签是一个盒子。</p><p>通过 CSS 浮动、定位可以让每个盒子排列成为网页。</p><p>一个完整的网页，是标准流、浮动、定位一起完成布局的，每个都有自己的专门用法。</p><ol><li>标准流</li></ol><p>可以让盒子上下排列或者左右排列，垂直的块级盒子显示就用标准流布局。</p><ol start="2"><li>浮动</li></ol><p>可以让多个块级元素一行显示或者左右对齐盒子，多个块级盒子水平显示就用浮动布局。</p><ol start="3"><li>定位</li></ol><p>定位最大的特点是有层叠的概念，就是可以让多个盒子前后叠压来显示。如果元素自由在某个盒子内移动就用定位布局。</p><p><strong>重点：竖向上布局找标准流，横向上布局找浮动，空间上布局找定位！</strong></p><h2 id="14-14-元素的显示与隐藏"><a href="#14-14-元素的显示与隐藏" class="headerlink" title="14.14 元素的显示与隐藏"></a>14.14 元素的显示与隐藏</h2><p>类似网站广告，当我们点击关闭就不见了，但是我们重新刷新页面，会重新出现！</p><p>本质：让一个元素在页面中隐藏或者显示出来。</p><p>注意：是隐藏，不是删除！</p><ol><li>display 显示隐藏（脱标）</li><li>visibility 显示隐藏（不脱标）</li><li>overflow 溢出显示隐藏</li></ol><h3 id="14-14-1-display-属性"><a href="#14-14-1-display-属性" class="headerlink" title="14.14.1 display 属性"></a>14.14.1 display 属性</h3><p>display 属性用于设置一个元素应如何显示。</p><ul><li><code>display: none</code>：隐藏对象</li><li><code>display：block</code>：除了转换为块级元素之外，同时还有显示元素的意思</li></ul><p>display 隐藏元素后，不再占有原来的位置（<strong>脱标</strong>）。</p><p>后面应用及其广泛，搭配 JS 可以做很多的网页特效。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>显示隐藏元素之display<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.peppa</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* display: block; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.george</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;peppa&quot;</span>&gt;</span>佩奇<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- 佩奇被隐藏 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;george&quot;</span>&gt;</span>乔治<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/2021041101335757.gif"></p><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>显示隐藏元素之display<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.peppa</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* display: none; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.george</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;peppa&quot;</span>&gt;</span>佩奇<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- 佩奇被显示 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;george&quot;</span>&gt;</span>乔治<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210411013334551.gif"></p><h3 id="14-14-2-visibility-可见性"><a href="#14-14-2-visibility-可见性" class="headerlink" title="14.14.2 visibility 可见性"></a>14.14.2 visibility 可见性</h3><p>visibility 属性用于指定一个元素应可见还是隐藏。</p><ul><li><code>visibility：visible</code>：元素可视</li><li><code>visibility：hidden</code>：元素隐藏</li></ul><p>visibility <strong>隐藏元素后，继续占有原来的位置</strong>。</p><p>如果隐藏元素想要原来位置， 就用 visibility：hidden。</p><p>如果隐藏元素不想要原来位置， 就用 display：none（用处更多，重点）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>显示隐藏元素之display<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.baba</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">visibility</span>: hidden;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.mama</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;baba&quot;</span>&gt;</span>猪爸爸<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mama&quot;</span>&gt;</span>猪妈妈<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210411013759206.gif"></p><h3 id="14-14-3-overflow-溢出"><a href="#14-14-3-overflow-溢出" class="headerlink" title="14.14.3 overflow 溢出"></a>14.14.3 overflow 溢出</h3><p>overflow 属性指定了如果内容溢出一个元素的框（<strong>超过其指定高度及宽度</strong>）时，会发生什么。</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><code>visible</code></td><td>不剪切内容也不添加滚动条（默认方式）</td></tr><tr><td><code>hidden</code></td><td>不显示超过对象尺寸的内容，超出的部分隐藏掉（并非删除）</td></tr><tr><td><code>scroll</code></td><td>不管超出的内容否，总是显示滚动条</td></tr><tr><td><code>auto</code></td><td>超出自动显示滚动条，不超出不显示滚动条</td></tr></tbody></table><p>一般情况下，我们都不想让溢出的内容显示出来，因为溢出的部分会影响布局。</p><p>但是如果有定位的盒子， 请慎用 overflow: hidden 因为它会隐藏多余的部分（例如：学成在线 hot new 模块，右上角有故意超出的部分，此时就不能使用 overflow: hidden）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>显示隐藏元素之overflow<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.peppa</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: visible; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: hidden; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* scroll 溢出的部分显示滚动条  不溢出也显示滚动条 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: scroll; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* auto 溢出的时候才显示滚动条 不溢出不显示滚动条 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: auto; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">3px</span> solid pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;peppa&quot;</span>&gt;</span></span><br><span class="line">        小猪佩奇》，又译作《粉红猪小妹》（台湾译为粉红猪），原名为《Peppa</span><br><span class="line">        Pig》，是由英国人阿斯特利（Astley）、贝克（Baker）、戴维斯（Davis）创作、</span><br><span class="line">        导演和制作的一部英国学前电视动画片，也是历年来最具潜力的学前儿童品牌。</span><br><span class="line">        故事围绕小猪佩奇与家人的愉快经历，幽默而有趣，</span><br><span class="line">        藉此宣扬传统家庭观念与友情，鼓励小朋友们体验生活。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210411015310864.jpg"></p><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>显示隐藏元素之overflow<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.peppa</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: visible;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: hidden; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* scroll 溢出的部分显示滚动条  不溢出也显示滚动条 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: scroll; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* auto 溢出的时候才显示滚动条 不溢出不显示滚动条 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: auto; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">3px</span> solid pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;peppa&quot;</span>&gt;</span></span><br><span class="line">        小猪佩奇》，又译作《粉红猪小妹》（台湾译为粉红猪），原名为《Peppa</span><br><span class="line">        Pig》，是由英国人阿斯特利（Astley）、贝克（Baker）、戴维斯（Davis）创作、</span><br><span class="line">        导演和制作的一部英国学前电视动画片，也是历年来最具潜力的学前儿童品牌。</span><br><span class="line">        故事围绕小猪佩奇与家人的愉快经历，幽默而有趣，</span><br><span class="line">        藉此宣扬传统家庭观念与友情，鼓励小朋友们体验生活。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210411015310864-164232733571925.jpg"></p><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>显示隐藏元素之overflow<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.peppa</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: visible; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* scroll 溢出的部分显示滚动条  不溢出也显示滚动条 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: scroll; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* auto 溢出的时候才显示滚动条 不溢出不显示滚动条 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: auto; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">3px</span> solid pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;peppa&quot;</span>&gt;</span></span><br><span class="line">        小猪佩奇》，又译作《粉红猪小妹》（台湾译为粉红猪），原名为《Peppa</span><br><span class="line">        Pig》，是由英国人阿斯特利（Astley）、贝克（Baker）、戴维斯（Davis）创作、</span><br><span class="line">        导演和制作的一部英国学前电视动画片，也是历年来最具潜力的学前儿童品牌。</span><br><span class="line">        故事围绕小猪佩奇与家人的愉快经历，幽默而有趣，</span><br><span class="line">        藉此宣扬传统家庭观念与友情，鼓励小朋友们体验生活。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210411015442418.jpg"></p><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>显示隐藏元素之overflow<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.peppa</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: visible; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: hidden; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* scroll 溢出的部分显示滚动条  不溢出也显示滚动条 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: scroll;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* auto 溢出的时候才显示滚动条 不溢出不显示滚动条 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: auto; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">3px</span> solid pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;peppa&quot;</span>&gt;</span></span><br><span class="line">        小猪佩奇》，又译作《粉红猪小妹》（台湾译为粉红猪），原名为《Peppa</span><br><span class="line">        Pig》，是由英国人阿斯特利（Astley）、贝克（Baker）、戴维斯（Davis）创作、</span><br><span class="line">        导演和制作的一部英国学前电视动画片，也是历年来最具潜力的学前儿童品牌。</span><br><span class="line">        故事围绕小猪佩奇与家人的愉快经历，幽默而有趣，</span><br><span class="line">        藉此宣扬传统家庭观念与友情，鼓励小朋友们体验生活。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210411015532804.jpg"></p><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>显示隐藏元素之overflow<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.peppa</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: visible; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: hidden; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* scroll 溢出的部分显示滚动条  不溢出也显示滚动条 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: scroll;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* auto 溢出的时候才显示滚动条 不溢出不显示滚动条 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: auto; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">3px</span> solid pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;peppa&quot;</span>&gt;</span></span><br><span class="line">        小猪佩奇》，又译作《粉红猪小妹》（台湾译为粉红猪），原名为《Peppa</span><br><span class="line">        Pig》</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210411015657674.jpg"></p><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>显示隐藏元素之overflow<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.peppa</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: visible; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: hidden; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* scroll 溢出的部分显示滚动条  不溢出也显示滚动条 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: scroll; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* auto 溢出的时候才显示滚动条 不溢出不显示滚动条 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">3px</span> solid pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;peppa&quot;</span>&gt;</span></span><br><span class="line">        小猪佩奇》，又译作《粉红猪小妹》（台湾译为粉红猪），原名为《Peppa</span><br><span class="line">        Pig》，是由英国人阿斯特利（Astley）、贝克（Baker）、戴维斯（Davis）创作、</span><br><span class="line">        导演和制作的一部英国学前电视动画片，也是历年来最具潜力的学前儿童品牌。</span><br><span class="line">        故事围绕小猪佩奇与家人的愉快经历，幽默而有趣，</span><br><span class="line">        藉此宣扬传统家庭观念与友情，鼓励小朋友们体验生活。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/2021041101581715.jpg"></p><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>显示隐藏元素之overflow<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.peppa</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: visible; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: hidden; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* scroll 溢出的部分显示滚动条  不溢出也显示滚动条 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* overflow: scroll; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* auto 溢出的时候才显示滚动条 不溢出不显示滚动条 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">3px</span> solid pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;peppa&quot;</span>&gt;</span></span><br><span class="line">        小猪佩奇》，又译作《粉红猪小妹》（台湾译为粉红猪），原名为《Peppa</span><br><span class="line">        Pig》</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210411015908937.jpg"></p><h3 id="14-14-5-总结"><a href="#14-14-5-总结" class="headerlink" title="14.14.5 总结"></a>14.14.5 总结</h3><ol><li>display 显示隐藏元素 但是不保留位置</li><li>visibility 显示隐藏元素 但是保留原来的位置</li><li>overflow 溢出显示隐藏 但是只是对于溢出的部分处理</li></ol><h2 id="综合案例-1"><a href="#综合案例-1" class="headerlink" title="综合案例"></a>综合案例</h2><p><strong>【案例：土豆网鼠标经过显示遮罩】</strong></p><ol><li>练习元素的显示与隐藏</li><li>练习元素的定位</li></ol><p>核心原理：原先半透明的黑色遮罩看不见， 鼠标经过大盒子，就显示出来。</p><p>遮罩的盒子不占有位置，就需要用绝对定位 和 display 配合使用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>仿土豆网显示隐藏遮罩案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.tudou</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">444px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">320px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">30px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.tudou</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.mask</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 隐藏遮罩层 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加定位使其能够浮与其他盒子上方 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">4</span>) <span class="built_in">url</span>(<span class="string">images/arr.png</span>) no-repeat center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 当我们鼠标经过了 土豆这个盒子，就让里面遮罩层显示出来 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.tudou</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.mask</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 而是显示元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tudou&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mask&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/tudou.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210411020723514.gif"></p><h1 id="十五、动画转换"><a href="#十五、动画转换" class="headerlink" title="十五、动画转换"></a>十五、动画转换</h1><h2 id="15-1-CSS3-2D转换"><a href="#15-1-CSS3-2D转换" class="headerlink" title="15.1 CSS3 2D转换"></a>15.1 CSS3 2D转换</h2><p>转换（transform）是 CSS3 中具有颠覆性的特征之一。可以实现元素的位移、旋转、缩放等效果。</p><p>转换（transform）你可以简单理解为变形。</p><ul><li>移动：translate</li><li>旋转：rotate</li><li>缩放：scale</li></ul><h3 id="15-1-1-二维坐标系"><a href="#15-1-1-二维坐标系" class="headerlink" title="15.1.1 二维坐标系"></a>15.1.1 二维坐标系</h3><p>2D 转换是改变标签在二维平面上的位置和形状的一种技术，先来学习二维坐标系。</p><img src="http://picgo.kongshier.top/2767/20210424224831926.png" style="zoom: 50%;" /><h3 id="15-1-2-2D-转换之移动-translate"><a href="#15-1-2-2D-转换之移动-translate" class="headerlink" title="15.1.2 2D 转换之移动 translate"></a>15.1.2 2D 转换之移动 translate</h3><p>2D 移动是 2D 转换里面的一种功能，可以改变元素在页面中的位置，类似定位。</p><p><img src="http://picgo.kongshier.top/2767/20210424225359665.png"></p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(x, y); </span><br><span class="line"><span class="comment">/* 或者分开写 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateX</span>(n);</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateY</span>(n);</span><br></pre></td></tr></table></figure><p>重点：</p><ul><li>定义 2D 转换中的移动，沿着 X 和 Y 轴移动元素</li><li>translate 最大的优点：<strong>不会影响到任何其他元素的位置</strong>（优于定位的地方）</li><li>translate 中的百分比单位是<strong>相对于自身</strong>元素的 translate: (50%, 50%);</li><li><strong>对行内元素没有效果</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>2D转换之移动translate<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 移动盒子的位置：定位、盒子的外边距、2D转换移动 */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* x就是x轴上移动位置，y就是y轴上移动位置，中间用逗号分隔 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: translate(x, y); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: translate(100px, 100px); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 1. 只移动x坐标 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: translate(100px, 0); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: translateX(100px); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 2. 只移动y坐标 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: translate(0, 100px); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: translateY(100px); */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-pseudo">:first</span>-child &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">30px</span>, <span class="number">30px</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-pseudo">:last-child</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210424230655649.png" style="zoom: 80%;" /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>让一个盒子水平居中<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 1. 我们 tranlate 里面的参数是可以用 % */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 2. 如果里面的参数是 % 那么移动的距离是以盒子自身的宽度或者高度来对比的 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 这里的 50% 就是 250px 因为盒子的宽度是 500px */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: translateX(50%); */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            在前面的定位中使用直接减去自身宽度与高度的一半，此种方式的缺点在于不能随盒子大小的变化而变化</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            margin-top: -100px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            margin-left: -100px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* translate 对于行内元素是无效的 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">300px</span>, <span class="number">300px</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>123<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210425000618488.png" style="zoom:50%;" /><h3 id="15-1-3-2D-转换之旋转-rotate"><a href="#15-1-3-2D-转换之旋转-rotate" class="headerlink" title="15.1.3 2D 转换之旋转 rotate"></a>15.1.3 2D 转换之旋转 rotate</h3><p>2D 旋转指的是让元素在 2 维平面内顺时针旋转或者逆时针旋转。</p><img src="http://picgo.kongshier.top/2767/2021042500110849.png" style="zoom:50%;" /><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(度数)</span><br></pre></td></tr></table></figure><p>重点：</p><ul><li>rotate 里面跟度数，单位是 deg，比如 rotate(45deg)</li><li>角度为正时，顺时针；负时，逆时针</li><li>默认旋转的中心点是元素的中心点</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>2D转换之旋转rotate<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 顺时针旋转45度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: rotate(45deg); */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">5px</span> solid pink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 过渡写到本身上，谁做动画给谁加 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all <span class="number">0.5s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;media/pic.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/2021042500182360.gif"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>旋转三角<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">249px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 三角可以通过盒子来制作，不一定非得字体图标 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 让一个旋转45度的正方形（菱形）的两个边框显示出来 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all <span class="number">0.2s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 鼠标经过 div 里面的三角旋转 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">225deg</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210425075729489.gif"></p><h3 id="15-1-4-转换中心点-transform-origin"><a href="#15-1-4-转换中心点-transform-origin" class="headerlink" title="15.1.4 转换中心点 transform-origin"></a>15.1.4 转换中心点 transform-origin</h3><p>我们可以设置元素转换的中心点。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform-origin</span>: x y;</span><br></pre></td></tr></table></figure><p>重点：</p><ul><li>注意后面的参数 x 和 y 用空格隔开</li><li>x y 默认转换的中心点是元素的中心点（50% 50%）</li><li>还可以给 x y 设置 像素 或者 方位名词（top  bottom  left  right  center）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>transform-origin<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all <span class="number">1s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 1.可以跟方位名词 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform-origin: left bottom; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 2. 默认的是 50% 50% 等价于 center center */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 3. 可以是 px 像素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform-origin</span>: <span class="number">25px</span> <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210425081548859.gif" style="zoom: 33%;" /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>旋转中心点<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 溢出隐藏 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&quot;黑马&quot;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">180deg</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform-origin</span>: left bottom;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all <span class="number">0.4s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 鼠标经过 div 里面的 before 复原 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210425082315183.gif"></p><h3 id="15-1-5-2D-转换之缩放-scale"><a href="#15-1-5-2D-转换之缩放-scale" class="headerlink" title="15.1.5 2D 转换之缩放 scale"></a>15.1.5 2D 转换之缩放 scale</h3><p>缩放，顾名思义，可以放大和缩小。只要给元素添加上了这个属性就能控制它放大还是缩小。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">scale</span>(x, y);</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>注意其中的 x 和 y 用逗号分隔</li><li>transform: scale(1, 1) ：宽和高都放大一倍，相当于没有放大</li><li>transform: scale(2, 2) ：宽和高都放大了 2 倍</li><li>transform: scale(2) ：只写一个参数，第二个参数默认等于第一个参数，相当于 scale(2, 2)</li><li>transform: scale(0.5, 0.5) ：缩小</li><li>scale 缩放最大的优势：可以设置缩放的基准点（默认以中心点缩放）；并且缩放不会影响其他盒子的位置（以上两个特点都是直接设置 width 和 height 都无法做到的）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>2D转换之缩放<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 可以设置缩放的中心点 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform-origin: left bottom; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 1. 里面写的数字不跟单位 就是倍数的意思， 1 就是 1 倍；2 就是 2 倍 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: scale(x, y); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: scale(2, 2); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 2. 修改了宽度为原来的 2 倍，高度不变 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: scale(2, 1); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 3. 等比例缩放 同时修改宽度和高度，我们有简单的写法以下是宽度修改了 2 倍，高度默认和第一个参数一样 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: scale(2); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 4. 我们可以进行缩小，小于 1就是缩小 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: scale(0.5, 0.5); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: scale(0.5); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 5. scale 的优势之处：不会影响其他的盒子，而且可以设置缩放的中心点 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            直接设置宽高时无法做到以上优点的！</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            width: 300px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            height: 300px;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">2</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210425085529554.gif" style="zoom:50%;" /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>图片放大案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">225px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">137px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all .<span class="number">4s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;media/scale.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;media/scale.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;media/scale.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210425085900832.gif"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid hotpink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all .<span class="number">4s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.2</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>6<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>7<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210425090230504.gif"></p><h3 id="15-1-6-2D-转换综合写法"><a href="#15-1-6-2D-转换综合写法" class="headerlink" title="15.1.6 2D 转换综合写法"></a>15.1.6 2D 转换综合写法</h3><p>注意：</p><ol><li>同时使用多个转换，其格式为：<code>transform: translate() rotate() scale()</code> …等</li><li>其顺序会影转换的效果。（先旋转会改变坐标轴方向）</li><li>当我们同时有位移和其他属性的时候，记得要将<strong>位移放到最前</strong></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all <span class="number">1s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: rotate(180deg) translate(150px, 50px); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 我们同时有位移和其他属性，我们需要把位移放到最前面 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">150px</span>, <span class="number">50px</span>) <span class="built_in">rotate</span>(<span class="number">180deg</span>) <span class="built_in">scale</span>(<span class="number">1.2</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/readme-164241763228313.gif" style="zoom:50%;" /><h3 id="15-1-7-2D-转换总结"><a href="#15-1-7-2D-转换总结" class="headerlink" title="15.1.7 2D 转换总结"></a>15.1.7 2D 转换总结</h3><ul><li>转换 transform 我们简单理解就是变形，有 2D 和 3D 之分</li><li>我们暂且学了三个，分别是：位移、旋转 和 缩放</li><li>2D 移动 translate(x, y) 最大的优势是不影响其他盒子，里面参数用 %，是相对于自身宽度和高度来计算的</li><li>可以分开写比如 translateX(x)  和 translateY(y)</li><li>2D 旋转 rotate(度数) 可以实现旋转元素，度数的单位是 deg</li><li>2D 缩放 sacle(x, y) 里面参数是数字，不跟单位，可以是小数。最大的优势在于不影响其他盒子</li><li>设置转换中心点 transform-origin : x y; 参数可以百分比、像素或者是方位名词</li><li>当我们进行综合写法，同时有位移和其他属性的时候，记得要将位移放到最前</li></ul><h2 id="15-2-CSS3-动画"><a href="#15-2-CSS3-动画" class="headerlink" title="15.2 CSS3 动画"></a>15.2 CSS3 动画</h2><p>动画（animation）是 CSS3 中具有颠覆性的特征之一，可通过<strong>设置多个节点来精确控制一个或一组动画</strong>，常用来实现复杂的动画效果。</p><p><strong>相比较过渡，动画可以实现更多变化，更多控制，连续自动播放等效果。</strong></p><h3 id="15-2-1-动画的基本使用"><a href="#15-2-1-动画的基本使用" class="headerlink" title="15.2.1 动画的基本使用"></a>15.2.1 动画的基本使用</h3><p>制作动画分为两步：</p><ol><li>先定义动画</li><li>再使用（调用）动画</li></ol><h4 id="15-2-1-1-用-keyframes-定义动画（类似定义类选择器）"><a href="#15-2-1-1-用-keyframes-定义动画（类似定义类选择器）" class="headerlink" title="15.2.1.1 用 keyframes 定义动画（类似定义类选择器）"></a>15.2.1.1 用 keyframes 定义动画（类似定义类选择器）</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> 动画名称 &#123;</span><br><span class="line">   <span class="number">0%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="number">100%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>动画序列</strong></p><ul><li>0% 是动画的开始，100% 是动画的完成。这样的规则就是动画序列</li><li>在 @keyframes 中规定某项 CSS 样式，就能创建由当前样式逐渐改为新样式的动画效果</li><li>动画是使元素从一种样式逐渐变化为另一种样式的效果。您可以改变任意多的样式任意多的次数</li><li>请用百分比来规定变化发生的时间，或用关键词 “from” 和 “to”，等同于 0% 和 100%</li></ul><h3 id="15-2-1-2-元素使用动画"><a href="#15-2-1-2-元素使用动画" class="headerlink" title="15.2.1.2 元素使用动画"></a>15.2.1.2 元素使用动画</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: aqua;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line"><span class="comment">/* 调用动画 */</span></span><br><span class="line"><span class="attribute">animation-name</span>: 动画名称;</span><br><span class="line"><span class="comment">/* 持续时间 */</span></span><br><span class="line"><span class="attribute">animation-duration</span>: 持续时间;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS3动画的基本使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 我们想页面一打开，一个盒子就从左边走到右边 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 1. 定义动画 */</span></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> move &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 开始状态 */</span></span></span><br><span class="line"><span class="language-css">            <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">0px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 结束状态 */</span></span></span><br><span class="line"><span class="language-css">            <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">1000px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 2. 调用动画 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 动画名称 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-name</span>: move;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 持续时间 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-duration</span>: <span class="number">2s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210425104436533.gif"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>动画序列<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* from to 等价于 0% 和 100% */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        @keyframes move &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            from &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                transform: translate(0, 0);</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            to &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">                transform: translate(1000px, 0);</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 动画序列 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 1. 可以做多个状态的变化 keyframe 关键帧 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 2. 里面的百分比要是整数 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 3. 里面的百分比就是 总的时间（我们这个案例 10s）的划分 25% * 10 = 2.5s */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> move &#123;</span></span><br><span class="line"><span class="language-css">            <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">25%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">1000px</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">50%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">1000px</span>, <span class="number">500px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">75%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, <span class="number">500px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-name</span>: move;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-duration</span>: <span class="number">10s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210425103016385.gif"></p><h2 id="15-3-动画常用属性"><a href="#15-3-动画常用属性" class="headerlink" title="15.3 动画常用属性"></a>15.3 动画常用属性</h2><table><thead><tr><th><strong>属性</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>@keyframes</td><td>规定动画</td></tr><tr><td>animation</td><td>所有动画属性的简写属性，除了animation-play-state 属性</td></tr><tr><td>animation-name</td><td>规定 @keyframes 动画的名称（必须的）</td></tr><tr><td>animation-duration</td><td>规定动画完成一个周期所花费的秒或毫秒，默认是 0（必须的）</td></tr><tr><td>animation-timing-function</td><td>规定动画的速度曲线，默认是 “ease”</td></tr><tr><td>animation-delay</td><td>规定动画何时开始，默认是 0</td></tr><tr><td>animation-iteration-count</td><td>规定动画被播放的次数，默认是 1，还有 infinite</td></tr><tr><td>animation-direction</td><td>规定动画是否在下一周期逆向播放，默认是 “normal”, alternate 逆播放</td></tr><tr><td>animation-play-state</td><td>规定动画是否正在运行或暂停。默认是 “running”, 还有 “paused”</td></tr><tr><td>animation-fill-mode</td><td>规定动画结束后状态，保持 forwards 回到起始 backwards</td></tr></tbody></table><h2 id="15-4-动画简写属性"><a href="#15-4-动画简写属性" class="headerlink" title="15.4 动画简写属性"></a>15.4 动画简写属性</h2><p>animation：动画名称 持续时间 运动曲线 何时开始 播放次数 是否反方向 动画起始或者结束的状态。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">animation</span>: myfirst <span class="number">5s</span> linear <span class="number">2s</span> infinite alternate;</span><br></pre></td></tr></table></figure><ul><li>简写属性里面不包含 animation-play-state</li><li>暂停动画：animation-play-state: puased; 经常和鼠标经过等其他配合使用</li><li>想要动画走回来，而不是直接跳回来：animation-direction: alternate</li><li>盒子动画结束后，停在结束位置：animation-fill-mode: forwards</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>动画属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> move &#123;</span></span><br><span class="line"><span class="language-css">            <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">1000px</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 动画名称 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-name</span>: move;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 持续时间 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* animation-duration: 2s; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 运动曲线 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* animation-timing-function: ease; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 何时开始 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: <span class="number">1s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 重复次数 iteration 重复的 conut 次数 infinite 无限 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* animation-iteration-count: infinite; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 是否反方向播放 默认的是 normal 如果想要反方向 就写 alternate */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* animation-direction: alternate; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 动画结束后的状态 默认的是 backwards 回到起始状态 我们可以让他停留在结束状态 forwards */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* animation-fill-mode: forwards; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* animation: name duration timing-function delay iteration-count direction fill-mode; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* animation: move 2s linear 0s 1 alternate forwards; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 前面 2 个属性 name duration 一定要写 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* animation: move 2s linear alternate forwards; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 鼠标经过 div 让这个 div 停止动画，鼠标离开就继续动画 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-play-state</span>: paused;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>大数据热点图<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.map</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">747px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">616px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">media/map.png</span>) no-repeat;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.city</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">227px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">193px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.tb</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 此处只能使用 top right 因为这样才能层叠 city，</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            否则如果使用 bottom 的话，还会基础 city 的 top，bottom 与 top 优先执行 top */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.dotted</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#09f</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.city</span> <span class="selector-tag">div</span><span class="selector-attr">[class^=<span class="string">&quot;pulse&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 保证我们小波纹在父盒子里面水平垂直居中 放大之后就会中心向四周发散 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">12px</span> <span class="number">#009dfd</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation</span>: pulse <span class="number">1.2s</span> linear infinite;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.city</span> <span class="selector-tag">div</span><span class="selector-class">.pulse2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: <span class="number">0.4s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.city</span> <span class="selector-tag">div</span><span class="selector-class">.pulse3</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: <span class="number">0.8s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> pulse &#123;</span></span><br><span class="line"><span class="language-css">            <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">70%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* transform: scale(5);  我们不要用scale 因为他会让 阴影变大*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">opacity</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">70px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">70px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">opacity</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;city&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dotted&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pulse1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pulse2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pulse3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;city tb&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dotted&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pulse1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pulse2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pulse3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210425105240855.gif"></p><h2 id="15-5-速度曲线细节"><a href="#15-5-速度曲线细节" class="headerlink" title="15.5 速度曲线细节"></a>15.5 速度曲线细节</h2><p>animation-timing-function：规定动画的速度曲线，默认是 “ease”。</p><table><thead><tr><th><strong>值</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>linear</td><td>动画从头到尾的速度是相同的（匀速）</td></tr><tr><td>ease</td><td>默认。动画以低速开始，然后加快，在结束前变慢</td></tr><tr><td>ease-in</td><td>动画以低速开始</td></tr><tr><td>ease-out</td><td>动画以低速结束</td></tr><tr><td>ease-in-out</td><td>动画以低速开始和结束</td></tr><tr><td>steps()</td><td>指定了时间函数中的间隔数量（步长）</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>速度曲线步长<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 让我们的文字强制一行内显示 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">white-space</span>: nowrap;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* steps 就是分几步来完成我们的动画 有了 steps 就不要在写 ease 或者 linear 了 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation</span>: w <span class="number">4s</span> <span class="built_in">steps</span>(<span class="number">10</span>) forwards;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> w &#123;</span></span><br><span class="line"><span class="language-css">            <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>世纪佳缘我在这里等你<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210425105455354.gif"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>奔跑的熊大案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">media/bear.png</span>) no-repeat;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 我们元素可以添加多个动画，用逗号分隔 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation</span>: bear .<span class="number">4s</span> <span class="built_in">steps</span>(<span class="number">8</span>) infinite, move <span class="number">3s</span> forwards;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> bear &#123;</span></span><br><span class="line"><span class="language-css">            <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-position</span>: -<span class="number">1600px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> move &#123;</span></span><br><span class="line"><span class="language-css">            <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* margin-left: -100px; */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">50%</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210425105628305.png"></p><p><img src="http://picgo.kongshier.top/2767/20210425105802965.gif"></p><h1 id="十六、CSS3-3D转换"><a href="#十六、CSS3-3D转换" class="headerlink" title="十六、CSS3 3D转换"></a>十六、CSS3 3D转换</h1><p>我们生活的环境是 3D 的，照片就是 3D 物体在 2D 平面呈现的例子。</p><p><strong>有什么特点</strong></p><ul><li>近大远小</li><li>物体后面遮挡不可见</li></ul><p>当我们在网页上构建 3D 效果的时候参考这些特点就能产出 3D 效果。</p><h2 id="16-1-三维坐标系"><a href="#16-1-三维坐标系" class="headerlink" title="16.1 三维坐标系"></a>16.1 三维坐标系</h2><p>三维坐标系其实就是指立体空间，立体空间是由3个轴共同组成的。</p><img src="http://picgo.kongshier.top/2767/20210425110200341.png" style="zoom: 33%;" /><ul><li>x 轴：水平向右（注意：x 右边是正值，左边是负值）</li><li>y 轴：垂直向下（注意：y 下面是正值，上面是负值）</li><li>z 轴：垂直屏幕（注意：往外面是正值，往里面是负值）</li></ul><p><strong>3D 转换我们主要学习工作中最常用的 3D 位移 和 3D 旋转。</strong></p><p><strong>主要知识点</strong></p><ul><li>3D 位移：translate3d(x, y, z)</li><li>3D 旋转：rotate3d(x, y, z)</li><li>透视：perspective</li><li>3D 呈现：transfrom-style</li></ul><h2 id="16-2-3D移动-translate3d"><a href="#16-2-3D移动-translate3d" class="headerlink" title="16.2 3D移动 translate3d"></a>16.2 3D移动 translate3d</h2><p>3D 移动在 2D 移动的基础上多加了一个可以移动的方向，就是 z 轴方向。</p><ul><li>transform:translateX(100px)：仅仅是在 X 轴上移动</li><li>transform:translateY(100px)：仅仅是在 Y 轴上移动</li><li>transform:translateZ(100px)：仅仅是在 Z 轴上移动（注意：translateZ 一般用 px 单位）</li><li>transform:translate3d(x, y, z)：其中 x、y、z 分别指要移动的轴的方向的距离</li></ul><p>因为 z 轴是垂直屏幕，由里指向外面，所以默认是看不到元素在 z 轴的方向上移动（要借助透视）。</p><h2 id="16-3-透视-perspective"><a href="#16-3-透视-perspective" class="headerlink" title="16.3 透视 perspective"></a>16.3 透视 perspective</h2><img src="http://picgo.kongshier.top/2767/20210425110852340.png" style="zoom: 25%;" /><img src="http://picgo.kongshier.top/2767/20210425111023799.png" style="zoom:25%;" /><p>在 2D 平面产生近大远小视觉立体，但是效果只是二维的。</p><ul><li>如果想要在网页产生 3D 效果需要透视（理解成 3D 物体投影在 2D 平面内）</li><li>模拟人类的视觉位置，可认为安排一只眼睛去看</li><li>透视我们也称为视距：视距就是人的眼睛到屏幕的距离</li><li>距离视觉点越近的，在电脑平面成像越大，越远成像越小</li><li>透视的单位是像素</li></ul><p><strong>透视写在被观察元素的父盒子上面。</strong></p><p>d：就是视距，视距就是一个距离人的眼睛到屏幕的距离。</p><p>z：就是 z 轴，物体距离屏幕的距离，z 轴越大（正值）我们看到的物体就越大。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>3D移动translate3d<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 透视写到被观察元素的父盒子上面 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">perspective</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: translateX(100px) translateY(100px) translateZ(100px); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 1. translateZ 沿着 Z 轴移动 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 2. translateZ 后面的单位我们一般跟 px */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 3. translateZ(100px) 向外移动 100px（向我们的眼睛来移动的） */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 4. 3D 移动有简写的方法 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: translate3d(x, y, z); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: translate3d(100px, 100px, 100px); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 5. xyz 是不能省略的，如果没有就写 0 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">400px</span>, <span class="number">100px</span>, <span class="number">100px</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210425113455393.png"></p><h2 id="16-4-translateZ"><a href="#16-4-translateZ" class="headerlink" title="16.4 translateZ"></a>16.4 translateZ</h2><p>translform:translateZ(100px)：仅仅是在 Z 轴上移动。有了透视，就能看到 translateZ 引起的变化了。</p><ul><li>translateZ：近大远小</li><li>translateZ：往外是正值</li><li>translateZ：往里是负值</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>translateZ<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">perspective</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210425114658704.png" style="zoom:50%;" /><h2 id="16-5-3D旋转-rotate3d"><a href="#16-5-3D旋转-rotate3d" class="headerlink" title="16.5 3D旋转 rotate3d"></a>16.5 3D旋转 rotate3d</h2><p>3D旋转指可以让元素在三维平面内沿着 x轴，y轴，z轴或者自定义轴进行旋转。</p><p><strong>语法</strong></p><ul><li>transform: rotateX(45deg)：沿着 x 轴正方向旋转 45 度</li><li>transform: rotateY(45deg)：沿着 y 轴正方向旋转 45deg</li><li>transform: rotateZ(45deg)：沿着 z 轴正方向旋转 45deg</li><li>transform: rotate3d(x, y, z, deg)：沿着自定义轴旋转 deg 为角度（了解即可）</li></ul><p><img src="http://picgo.kongshier.top/2767/20210425115234419.gif"></p><p>对于元素旋转的方向的判断，我们需要先学习一个左手准则。</p><p><strong>左手准则</strong></p><ul><li>左手的手拇指指向 x 轴的正方向</li><li>其余手指的弯曲方向就是该元素沿着 x 轴旋转的方向</li></ul><img src="http://picgo.kongshier.top/2767/20210425115458965.png" style="zoom:50%;" /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>rotateX<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 利用透视产生近大远小效果 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">perspective</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all <span class="number">1s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">45deg</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;media/pig.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210425120806628.gif" style="zoom:50%;" /><hr><ul><li>左手的手拇指指向 y 轴的正方向</li><li>其余手指的弯曲方向就是该元素沿着 y 轴旋转的方向（正值）</li></ul><img src="http://picgo.kongshier.top/2767/20210425115711121.png" style="zoom:33%;" /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>rotateY<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">perspective</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all <span class="number">1s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">45deg</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;media/pig.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210425121401130.gif" style="zoom:50%;" /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>rotateZ<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">perspective</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all <span class="number">1s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">180deg</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;media/pig.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210425121713541.gif" style="zoom:50%;" /><p>transform: rotate3d(x, y, z, deg)：沿着自定义轴旋转 deg 为角度（了解即可）。</p><p>xyz 是表示旋转轴的矢量，表示你是否希望沿着该轴旋转，最后一个表示旋转的角度。</p><ul><li>transform: rotate3d(1, 0, 0, 45deg)：就是沿着 x 轴旋转 45deg</li><li>transform: rotate3d(0, 1, 0, 45deg)：就是沿着 y 轴旋转 45deg</li><li>transform: rotate3d(0, 0, 1, 45deg)：就是沿着 z 轴旋转 45deg</li><li>transform: rotate3d(1, 1, 0, 45deg)：就是沿着对角线（矢量计算）旋转 45deg</li></ul><img src="http://picgo.kongshier.top/2767/20210425122158983.png" style="zoom: 33%;" /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>rotate3d<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">perspective</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all <span class="number">1s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: rotate3d(x,y,z,deg); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: rotate3d(1, 0, 0, 45deg); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* transform: rotate3d(0, 1, 0, 45deg); */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotate3d</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">45deg</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;media/pig.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210425121831607.gif" style="zoom:50%;" /><h2 id="16-6-3D呈现-transfrom-style"><a href="#16-6-3D呈现-transfrom-style" class="headerlink" title="16.6 3D呈现 transfrom-style"></a>16.6 3D呈现 transfrom-style</h2><ul><li>控制子元素是否开启三维立体环境</li><li>transform-style: flat 子元素不开启 3d 立体空间（默认的）</li><li>transform-style: preserve-3d; 子元素开启立体空间</li><li>代码写给父级，但是影响的是子盒子</li><li>这个属性很重要，后面必用</li></ul><p><img src="http://picgo.kongshier.top/2767/20210425123348956.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>transform-style<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">perspective</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all <span class="number">2s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 让子元素保持3d立体空间环境 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">60deg</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> <span class="selector-tag">div</span><span class="selector-pseudo">:last-child</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: purple;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">60deg</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/20210425124112130.gif" style="zoom:50%;" /><p>【案例：两面翻转的盒子】</p><img src="http://picgo.kongshier.top/2767/20210425124741907.gif" style="zoom:50%;" /><p>实现步骤：</p><ol><li>搭建 HTML 结构</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;front&quot;</span>&gt;</span>黑马程序员<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;back&quot;</span>&gt;</span>pink老师等你<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>box 父盒子里面包含前后两个子盒子</li><li>box 是翻转的盒子 front 是前面盒子 back 是后面盒子</li></ul><ol start="2"><li>CSS 样式</li></ol><ul><li>box 指定大小，切记要添加 3d 呈现</li><li>back 盒子要沿着 Y 轴翻转 180 度</li><li>最后鼠标经过 box 沿着 Y 旋转 180deg</li></ul><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>两面翻转的盒子<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">perspective</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all .<span class="number">4s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 让背面的紫色盒子保留立体空间 给父级添加的 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.front</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.back</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.front</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">z-index</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.back</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: purple;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 像手机一样 背靠背 旋转 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;front&quot;</span>&gt;</span>黑马程序员<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;back&quot;</span>&gt;</span>pink老师这里等你<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>【案例：3D 导航栏】</p><p><img src="http://picgo.kongshier.top/2767/20210425125609662.gif"></p><p>实现步骤：</p><ol><li>搭建 HTML 结构</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;front&quot;</span>&gt;</span>黑马程序员<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span>pink老师等你<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>li 做导航栏</li><li>.box 是翻转的盒子 front 是前面盒子 bottom 是底下盒子</li></ul><ol start="2"><li>CSS 样式</li></ol><ul><li>li 设置大小，加透视和 3d 呈现</li><li>front 需要前移 17.5 像素</li><li>bottom 需要下移 17.5 像素并且要沿着 x 轴翻转 负 90 度</li><li>鼠标放到 box 让盒子旋转 90 度</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>3D导航栏案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 一会我们需要给 box 旋转 也需要透视 干脆给 li 加 里面的子盒子都有透视效果 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">perspective</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all .<span class="number">4s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.front</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.bottom</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.front</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">z-index</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">17.5px</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.bottom</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: purple;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 这个x轴一定是负值 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 我们如果有移动 或者其他样式，必须先写我们的移动 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">17.5px</span>) <span class="built_in">rotateX</span>(-<span class="number">90deg</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;front&quot;</span>&gt;</span>黑马程序员<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span>pink老师等你<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;front&quot;</span>&gt;</span>黑马程序员<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span>pink老师等你<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;front&quot;</span>&gt;</span>黑马程序员<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span>pink老师等你<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;front&quot;</span>&gt;</span>黑马程序员<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span>pink老师等你<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;front&quot;</span>&gt;</span>黑马程序员<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span>pink老师等你<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;front&quot;</span>&gt;</span>黑马程序员<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span>pink老师等你<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>【综合案例：旋转木马】</p><p><img src="http://picgo.kongshier.top/2767/20210425130327326.gif"></p><ol><li>搭建 HTML 结构</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>里面的 6 个 div 分别是 6 个狗狗图片</li><li>注意最终旋转是 section 标签旋转</li></ul><ol start="2"><li>CSS 样式</li></ol><ul><li>给 body 添加 透视效果 perspective: 1000px;</li><li>给 section 添加大小，一定不要忘记添加 3d 呈现效果控制里面的 6 个 div<ul><li>别忘记子绝父相，section 要加相对定位</li></ul></li><li>里面 6 个 div 全部绝对定位叠到一起，然后移动不同角度旋转和距离<ul><li>注意：旋转角度用 rotateY 距离肯定用 translateZ 来控制</li></ul></li><li>给 section 添加动画 animation，让它可以自动旋转即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>综合案例：旋转木马<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">perspective</span>: <span class="number">1000px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">section</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">150px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加动画效果 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation</span>: rotate <span class="number">10s</span> linear infinite;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">media/pig.jpg</span>) no-repeat;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">section</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 鼠标放入 section 停止动画 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-play-state</span>: paused;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> rotate &#123;</span></span><br><span class="line"><span class="language-css">            <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">360deg</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">section</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">media/dog.jpg</span>) no-repeat;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0</span>) <span class="built_in">translateZ</span>(<span class="number">300px</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 先旋转好了再 移动距离 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">60deg</span>) <span class="built_in">translateZ</span>(<span class="number">300px</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 先旋转好了再 移动距离 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">120deg</span>) <span class="built_in">translateZ</span>(<span class="number">300px</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 先旋转好了再 移动距离 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>) <span class="built_in">translateZ</span>(<span class="number">300px</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">5</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 先旋转好了再 移动距离 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">240deg</span>) <span class="built_in">translateZ</span>(<span class="number">300px</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">section</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">6</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 先旋转好了再 移动距离 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">300deg</span>) <span class="built_in">translateZ</span>(<span class="number">300px</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="16-7浏览器私有前缀"><a href="#16-7浏览器私有前缀" class="headerlink" title="16.7浏览器私有前缀"></a>16.7浏览器私有前缀</h2><p>浏览器私有前缀是为了<strong>兼容老版本</strong>的写法，<strong>比较新版本的浏览器无须添加</strong>。</p><h3 id="16-7-1-私有前缀"><a href="#16-7-1-私有前缀" class="headerlink" title="16.7.1 私有前缀"></a>16.7.1 私有前缀</h3><ul><li>-moz-：代表 firefox 浏览器私有属性</li><li>-ms-：代表 ie 浏览器私有属性</li><li>-webkit-：代表 safari、chrome 私有属性</li><li>-o-：代表 Opera 私有属性</li></ul><h3 id="16-7-2-提倡的写法"><a href="#16-7-2-提倡的写法" class="headerlink" title="16.7.2 提倡的写法"></a>16.7.2 提倡的写法</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-moz-<span class="attribute">border-radius</span>: <span class="number">10px</span>; </span><br><span class="line">-webkit-<span class="attribute">border-radius</span>: <span class="number">10px</span>; </span><br><span class="line">-o-<span class="attribute">border-radius</span>: <span class="number">10px</span>; </span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br></pre></td></tr></table></figure><h1 id="十七、美化技巧"><a href="#十七、美化技巧" class="headerlink" title="十七、美化技巧"></a>十七、美化技巧</h1><h2 id="17-1-精灵图"><a href="#17-1-精灵图" class="headerlink" title="17.1 精灵图"></a>17.1 精灵图</h2><h3 id="17-1-1-为什么需要精灵图？"><a href="#17-1-1-为什么需要精灵图？" class="headerlink" title="17.1.1 为什么需要精灵图？"></a>17.1.1 为什么需要精灵图？</h3><p>一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接收和发送<br>请求图片，造成服务器请求压力过大，这将大大降低页面的加载速度。</p><p>因此，为了有效地减少服务器接收和发送请求的次数，提高页面的加载速度，出现了 CSS 精灵技术（也称<br>CSS Sprites、CSS 雪碧）。</p><p>核心原理：将网页中的一些小背景图像整合到一张大图中 ，这样服务器只需要一次请求就可以了。</p><p>精灵技术目的：为了有效地减少服务器接收和发送请求的次数，提高页面的加载速度。</p><h3 id="17-1-2-精灵图（sprites）的使用"><a href="#17-1-2-精灵图（sprites）的使用" class="headerlink" title="17.1.2 精灵图（sprites）的使用"></a>17.1.2 精灵图（sprites）的使用</h3><p>使用精灵图核心：</p><ol><li>精灵技术主要针对于背景图片使用。就是把多个小背景图片整合到一张大图片中</li><li>这个大图片也称为 sprites 精灵图 或者 雪碧图</li><li>移动背景图片位置以控制显示区域， 此时可以使用 <code>background-position</code></li><li>移动的距离就是这个目标图片的 <code>x</code> 和 <code>y</code> 坐标。注意网页中的坐标有所不同</li><li>因为一般情况下都是将精灵图往上往左移动，所以两个坐标数值基本是负值</li><li>使用精灵图的时候需要精确测量，每个小背景图片的大小和位置</li></ol><p>使用精灵图核心总结：</p><ol><li>精灵图主要针对于小的背景图片使用</li><li>主要借助于背景位置来实现 <code>background-position</code></li><li>一般情况下精灵图都是负值（千万注意网页中的坐标： x轴右边走是正值，左边走是负值， y轴同理）</li></ol><p>【王者荣耀案例】</p><p><img src="http://picgo.kongshier.top/2767/20210420081150387.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>精灵图使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">images/sprites.png</span>) no-repeat -<span class="number">182px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">27px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-color: pink; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">images/sprites.png</span>) no-repeat -<span class="number">155px</span> -<span class="number">106px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/202104200817544.png"></p><h3 id="17-1-3-案例：拼单词"><a href="#17-1-3-案例：拼单词" class="headerlink" title="17.1.3 案例：拼单词"></a>17.1.3 案例：拼单词</h3><img src="http://picgo.kongshier.top/2767/20210420081150457.jpg" style="zoom:67%;" /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>利用精灵图拼出自己名字<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">images/abcd.jpg</span>) no-repeat;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">112px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-color: pink; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: -<span class="number">493px</span> -<span class="number">276px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.i</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">108px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-color: pink; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: -<span class="number">327px</span> -<span class="number">142px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.n</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">115px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">112px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-color: pink; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: -<span class="number">255px</span> -<span class="number">275px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.k</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">105px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">114px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-color: pink; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: -<span class="number">495px</span> -<span class="number">142px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;p&quot;</span>&gt;</span>p<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;i&quot;</span>&gt;</span>i<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;n&quot;</span>&gt;</span>n<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;k&quot;</span>&gt;</span>k<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210420083302981.png"></p><p>【PS 切片工具的使用】</p><img src="http://picgo.kongshier.top/2767/20210424224831926.png" style="zoom: 50%;" /><p><img src="http://picgo.kongshier.top/2767/8141d1fc65ba4b31acfc903b948a09a8.png"></p><p><img src="http://picgo.kongshier.top/2767/b9b0bf21c37a40a6a37a09f759218c16.png"></p><p><img src="http://picgo.kongshier.top/2767/d8fea6eba89048dfb6cf0421f620d04e.png"></p><h2 id="17-2字体图标"><a href="#17-2字体图标" class="headerlink" title="17.2字体图标"></a>17.2字体图标</h2><h3 id="17-2-1-字体图标的产生"><a href="#17-2-1-字体图标的产生" class="headerlink" title="17.2.1 字体图标的产生"></a>17.2.1 字体图标的产生</h3><p>字体图标使用场景：主要用于显示网页中通用、常用的一些小图标。</p><p>精灵图是有诸多优点的，但是缺点很明显。</p><ol><li>图片文件还是比较大的</li><li>图片本身放大和缩小会失真</li><li>一旦图片制作完毕想要更换非常复杂</li></ol><p>此时，有一种技术的出现很好的解决了以上问题，就是字体图标 iconfont。</p><p>字体图标可以为前端工程师提供一种方便高效的图标使用方式，展示的是图标，但本质却属于字体。</p><h3 id="17-2-2-字体图标的优点"><a href="#17-2-2-字体图标的优点" class="headerlink" title="17.2.2 字体图标的优点"></a>17.2.2 字体图标的优点</h3><ul><li>轻量级：一个图标字体要比一系列的图像要小。一旦字体加载了，图标就会马上渲染出来，减少了服务器请求</li><li>灵活性：本质其实是文字，可以很随意的改变颜色、产生阴影、透明效果、旋转等</li><li>兼容性：几乎支持所有的浏览器，请放心使用</li></ul><p>注意： 字体图标不能替代精灵技术，只是对工作中图标部分技术的提升和优化。</p><p>总结：</p><ol><li>如果遇到一些结构和样式比较简单的小图标，就用字体图标</li><li>如果遇到一些结构和样式复杂一点的小图片，就用精灵图</li></ol><p>字体图标是一些网页常见的小图标，我们直接网上下载即可。 因此使用可以分为：</p><ol><li>字体图标的下载</li><li>字体图标的引入（引入到我们 html 页面中）</li><li>字体图标的追加（在原有的基础上添加新的小图标）</li></ol><h3 id="17-2-3-字体图标的下载"><a href="#17-2-3-字体图标的下载" class="headerlink" title="17.2.3 字体图标的下载"></a>17.2.3 字体图标的下载</h3><p>推荐下载网站：</p><ul><li>icomoon 字库 <a href="https://icomoon.io/">https://icomoon.io/</a></li></ul><p>IcoMoon 成立于 2011 年，推出了第一个自定义图标字体生成器，它允许用户选择所需要的图标，使它们成一字型。该字库内容种类繁多，非常全面，唯一的遗憾是国外服务器，打开网速较慢。</p><ul><li>阿里 iconfont 字库 <a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a></li></ul><p>这个是阿里妈妈 M2UX 的一个 iconfont 字体图标字库，包含了淘宝图标库和阿里妈妈图标库。可以使用 AI 制作图标上传生成。 重点是，免费！</p><blockquote><p>以下内容以 icomoon 字库 为例。</p></blockquote><h3 id="17-2-4-字体图标的引入"><a href="#17-2-4-字体图标的引入" class="headerlink" title="17.2.4 字体图标的引入"></a>17.2.4 字体图标的引入</h3><p>下载完毕之后，注意原先的文件不要删，后面会用！</p><ol><li><strong>把下载包里面的 fonts 文件夹放入页面根目录下</strong></li></ol><p>不同浏览器所支持的字体格式是不一样的，字体图标之所以兼容，就是因为包含了主流浏览器支持的字体文件。</p><ul><li>TureType (.ttf) 格式 .ttf 字体是 Windows 和 Mac 的最常见的字体，支持这种字体的浏览器有 IE9+、Firefox3.5+、Chrome4+、Safari3+、Opera10+、iOS Mobile、Safari4.2+；</li><li>Web Open Font Format (.woff) 格式 woff 字体，支持这种字体的浏览器有 IE9+、Firefox3.5+、Chrome6+、Safari3.6+、Opera11.1+；</li><li>Embedded Open Type (.eot) 格式 .eot 字体是 IE 专用字体，支持这种字体的浏览器有 IE4+；</li><li>SVG (.svg) 格式 .svg 字体是基于 SVG 字体渲染的一种格式，支持这种字体的浏览器有 Chrome4+、Safari3.1+、Opera10.0+、iOS Mobile Safari3.2+；</li></ul><ol start="2"><li><strong>在 CSS 样式中全局声明字体：简单理解把这些字体文件通过 css 引入到我们页面中</strong></li></ol><p>一定注意字体文件路径的问题。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">&#x27;icomoon&#x27;</span>;</span><br><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.eot?7kkyc2&#x27;</span>);</span><br><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.eot?7kkyc2#iefix&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;embedded-opentype&#x27;</span>),</span><br><span class="line"><span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.ttf?7kkyc2&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;truetype&#x27;</span>),</span><br><span class="line"><span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.woff?7kkyc2&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff&#x27;</span>),</span><br><span class="line"><span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.svg?7kkyc2#icomoon&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;svg&#x27;</span>);</span><br><span class="line"><span class="attribute">font-weight</span>: normal;</span><br><span class="line"><span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>html 标签内添加小图标</strong></li></ol><p>复制小图标对应的字符（一个小方框）到 html 中，一般建议放在 <code>&lt;span&gt;&lt;/span&gt;</code> 标签里。 </p><ol start="4"><li><strong>给标签定义字体</strong></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">&quot;icomoon&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：务必保证这个字体和上面 @font-face 里面的字体保持一致（默认为：icomoon）。</p><h3 id="17-2-5-字体图标的追加"><a href="#17-2-5-字体图标的追加" class="headerlink" title="17.2.5 字体图标的追加"></a>17.2.5 字体图标的追加</h3><p>如果工作中，原来的字体图标不够用了，我们便需要添加新的字体图标到原来的字体文件中。</p><p>选择 Import Icons 按钮，把原压缩包里面的 selection.json 重新上传，然后选中自己想要新的图标，从新下载压缩包，并替换原来的文件即可。</p><h3 id="17-2-6-字体图标加载的原理"><a href="#17-2-6-字体图标加载的原理" class="headerlink" title="17.2.6 字体图标加载的原理"></a>17.2.6 字体图标加载的原理</h3><p>服务器只需接受一次浏览器请求便可以将 fonts 文件一次性返回，如此而来网页中所有用到 fonts 字体图标的部分便一次性加载好了，大大减轻了服务器压力。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>字体图标的使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/* 字体声明 */</span></span></span><br><span class="line"><span class="language-css">    <span class="keyword">@font-face</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-family</span>: <span class="string">&#x27;icomoon&#x27;</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.eot?p4ssmb&#x27;</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.eot?p4ssmb#iefix&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;embedded-opentype&#x27;</span>),</span></span><br><span class="line"><span class="language-css">        <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.ttf?p4ssmb&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;truetype&#x27;</span>),</span></span><br><span class="line"><span class="language-css">        <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.woff?p4ssmb&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff&#x27;</span>),</span></span><br><span class="line"><span class="language-css">        <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.svg?p4ssmb#icomoon&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;svg&#x27;</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-weight</span>: normal;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-style</span>: normal;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-display</span>: block;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-family</span>: <span class="string">&#x27;icomoon&#x27;</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: salmon;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210420093539188.png"></p><h2 id="17-3-CSS三角"><a href="#17-3-CSS三角" class="headerlink" title="17.3 CSS三角"></a>17.3 CSS三角</h2><p>网页中常见一些三角形，使用 CSS 直接画出来就可以，不必做成图片或者字体图标。</p><p><img src="http://picgo.kongshier.top/2767/20210420102851826.png"></p><p>CSS 三角是怎么来的？原理如下：</p><p>对一个没有大小的盒子设置边框，那么只要边框足够粗，就可以呈现三角效果。</p><p>如果只需要一个三角，那么对其他三个边框设置透明色即可。</p><p>通常 CSS 三角要配合定位来布局。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS 三角制作<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border: 10px solid pink; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top</span>: <span class="number">30px</span> solid hotpink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-right</span>: <span class="number">30px</span> solid black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">30px</span> solid skyblue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-left</span>: <span class="number">30px</span> solid gray;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">50px</span> solid transparent;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-left-color</span>: black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.jd</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 子绝父相 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">249px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.jd</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 子绝父相 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: -<span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 下面两行为了照顾兼容性 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">10px</span> solid transparent;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom-color</span>: black;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;jd&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210420104336278.png"></p><h2 id="17-4-CSS用户界面样式"><a href="#17-4-CSS用户界面样式" class="headerlink" title="17.4 CSS用户界面样式"></a>17.4 CSS用户界面样式</h2><h3 id="17-4-1-什么是界面样式"><a href="#17-4-1-什么是界面样式" class="headerlink" title="17.4.1 什么是界面样式"></a>17.4.1 什么是界面样式</h3><p>所谓的界面样式，就是更改一些用户操作样式，以提高更好的用户体验。</p><ul><li>更改用户的鼠标样式</li><li>表单轮廓</li><li>防止表单域拖拽</li></ul><h3 id="17-4-2-鼠标样式-cursor"><a href="#17-4-2-鼠标样式-cursor" class="headerlink" title="17.4.2 鼠标样式 cursor"></a>17.4.2 鼠标样式 cursor</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span> &#123; <span class="attribute">cursor</span>: pointer; &#125;</span><br></pre></td></tr></table></figure><p>设置或检索在对象上移动的鼠标指针采用何种系统预定义的光标形状。</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><code>default</code></td><td>默认箭头</td></tr><tr><td><code>pointer</code></td><td>小手</td></tr><tr><td><code>move</code></td><td>十字移动</td></tr><tr><td><code>text</code></td><td>文本竖杠</td></tr><tr><td><code>not-allowed</code></td><td>禁止</td></tr></tbody></table><p>注意：除了以上类型，还有其他很多类型。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>用户界面样式-鼠标样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">&quot;cursor: default;&quot;</span>&gt;</span>我是默认的小白鼠标样式<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">&quot;cursor: pointer;&quot;</span>&gt;</span>我是鼠标小手样式<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">&quot;cursor: move;&quot;</span>&gt;</span>我是鼠标移动样式<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">&quot;cursor: text;&quot;</span>&gt;</span>我是鼠标文本样式<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">&quot;cursor: not-allowed;&quot;</span>&gt;</span>我是鼠标禁止样式<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/2021042011003289.gif"></p><h3 id="17-4-3-轮廓线-outline"><a href="#17-4-3-轮廓线-outline" class="headerlink" title="17.4.3 轮廓线 outline"></a>17.4.3 轮廓线 outline</h3><p>给表单添加 <code>outline: 0;</code> 或者 <code>outline: none;</code> 样式之后，就可以去掉默认的边框。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span> &#123; <span class="attribute">outline</span>: none; &#125;</span><br></pre></td></tr></table></figure><p>默认样式：</p><p><img src="http://picgo.kongshier.top/2767/20210420111135354.gif"></p><p>修改后样式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>轮廓线 outline<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 取消表单轮廓 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 取消表单轮廓 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210420111315285.gif"></p><h3 id="17-4-4-防止拖拽文本域-resize"><a href="#17-4-4-防止拖拽文本域-resize" class="headerlink" title="17.4.4 防止拖拽文本域 resize"></a>17.4.4 防止拖拽文本域 resize</h3><p>实际开发中，我们文本域右下角是不允许拖拽的。（会破坏布局！）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">textarea</span> &#123; <span class="attribute">resize</span>: none; &#125;</span><br></pre></td></tr></table></figure><p>默认样式：</p><p><img src="http://picgo.kongshier.top/2767/2021042011203862.gif"></p><p>修改后样式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>防止拖拽文本域 resize<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">textarea</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 取消表单轮廓 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 防止拖拽文本域 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">resize</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 防止拖拽文本域 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;textarea&gt;&lt;/textarea&gt;起始标签建议放在一行，因为这样不会导致文本域里文字前有空白，</span></span><br><span class="line"><span class="comment">    后期可以专门通过 padding 来设置文本周围的留白 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/202104201120370.gif"></p><h2 id="17-5-vertical-align-属性应用"><a href="#17-5-vertical-align-属性应用" class="headerlink" title="17.5 vertical-align 属性应用"></a>17.5 vertical-align 属性应用</h2><p>CSS 的 vertical-align 属性使用场景：经常用于设置图片或者表单（行内块元素）与文字垂直对齐。</p><p>官方解释：用于设置一个元素的垂直对齐方式，但是它只针对于行内元素或者行内块元素有效。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vertical-align</span>: baseline | top | middle | bottom</span><br></pre></td></tr></table></figure><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td><code>baseline</code></td><td>默认。元素放置在父元素的基线上</td></tr><tr><td><code>top</code></td><td>把元素的顶端与行中最高元素的顶端对齐</td></tr><tr><td><code>middle</code></td><td>把此元素放置在父元素的中部</td></tr><tr><td><code>bottom</code></td><td>把元素的顶端与行中最低的元素的顶端对齐</td></tr></tbody></table><p><img src="http://picgo.kongshier.top/2767/20210420124542850.png"></p><h3 id="17-5-1-图片、表单和文字对齐"><a href="#17-5-1-图片、表单和文字对齐" class="headerlink" title="17.5.1 图片、表单和文字对齐"></a>17.5.1 图片、表单和文字对齐</h3><p>图片、表单都属于行内块元素，默认的 vertical-align 是基线对齐。</p><p>此时可以给图片、表单这些行内块元素的 vertical-align 属性设置为 middle 就可以让文字和图片垂直居中对齐了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>利用vertical-align实现图片文字垂直居中对齐<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* vertical-align: bottom; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 让图片和文字垂直居中 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">vertical-align</span>: middle;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* vertical-align: top; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">textarea</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">vertical-align</span>: middle;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/ldh.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span> pink老师是刘德华</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span> 请您留言</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210420124932560.png"></p><blockquote><p>运用重点：</p><p>我们知道，当对盒子设置 <code>line-height: 盒子高度;</code> 时，盒子内的 <code>文字</code> 会垂直居中，其实不只是文字可以垂直居中，盒子内的图片同样也能垂直居中，只不过图片默认是基于基线对齐的，所以要真正实现 <code>垂直居中</code> 需要在图片加上：<code>vertical-align: middle;</code></p></blockquote><h3 id="17-5-2-解决图片底部默认空白缝隙问题"><a href="#17-5-2-解决图片底部默认空白缝隙问题" class="headerlink" title="17.5.2  解决图片底部默认空白缝隙问题"></a>17.5.2  解决图片底部默认空白缝隙问题</h3><p>图片底侧会有一个空白缝隙，原因是行内块元素会和文字的基线对齐。</p><p><img src="http://picgo.kongshier.top/2767/20210420125635475.png"></p><p>主要解决方法有两种：</p><ol><li>给图片添加 <code>vertical-align: middle | top | bottom</code> 等（推荐）</li><li>把图片转换为块级元素 <code>display: block;</code></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>图片底侧空白缝隙解决方案<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">2px</span> solid black;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">vertical-align</span>: middle;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* display: block; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/ldh.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210420125750954.png"></p><h2 id="17-6-溢出的文字省略号显示"><a href="#17-6-溢出的文字省略号显示" class="headerlink" title="17.6 溢出的文字省略号显示"></a>17.6 溢出的文字省略号显示</h2><h3 id="17-6-1-单行文本溢出省略号显示"><a href="#17-6-1-单行文本溢出省略号显示" class="headerlink" title="17.6.1 单行文本溢出省略号显示"></a>17.6.1 单行文本溢出省略号显示</h3><p>三个必要条件：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 1. 先强制一行内显示文本 */</span> </span><br><span class="line"><span class="attribute">white-space</span>: nowrap; <span class="comment">/*（ 默认 normal 自动换行）*/</span> </span><br><span class="line"><span class="comment">/* 2. 超出的部分隐藏 */</span> </span><br><span class="line"><span class="attribute">overflow</span>: hidden; </span><br><span class="line"><span class="comment">/* 3. 文字用省略号替代超出的部分 */</span> </span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br></pre></td></tr></table></figure><p>案例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>单行文本溢出显示省略号<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 这个单词的意思是如果文字显示不开自动换行 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* white-space: normal; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 1.这个单词的意思是如果文字显示不开也必须强制一行内显示 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">white-space</span>: nowrap;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 2.溢出的部分隐藏起来 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 3.文字溢出的时候用省略号来显示 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-overflow</span>: ellipsis;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        啥也不说，此处省略一万字</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/20210420132753998.png"></p><h3 id="17-6-2-多行文本溢出省略号显示"><a href="#17-6-2-多行文本溢出省略号显示" class="headerlink" title="17.6.2 多行文本溢出省略号显示"></a>17.6.2 多行文本溢出省略号显示</h3><p>多行文本溢出显示省略号，有较大兼容性问题， 适合于 webkit 浏览器或移动端（移动端大部分是 webkit 内核）。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line"><span class="comment">/* 弹性伸缩盒子模型显示 */</span></span><br><span class="line"><span class="attribute">display</span>: -webkit-box;</span><br><span class="line"><span class="comment">/* 限制在一个块元素显示的文本的行数 */</span></span><br><span class="line">-webkit-line-clamp: <span class="number">2</span>;</span><br><span class="line"><span class="comment">/* 设置或检索伸缩盒对象的子元素的排列方式 */</span></span><br><span class="line">-webkit-box-orient: vertical;</span><br></pre></td></tr></table></figure><p>更推荐让后台人员来做这个效果，因为后台人员可以设置显示多少个字，操作更简单。</p><p>案例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>单行文本溢出显示省略号<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">65px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-overflow</span>: ellipsis;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 弹性伸缩盒子模型显示 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: -webkit-box;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 限制在一个块元素显示的文本的行数 */</span></span></span><br><span class="line"><span class="language-css">            -webkit-line-clamp: <span class="number">3</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置或检索伸缩盒对象的子元素的排列方式 */</span></span></span><br><span class="line"><span class="language-css">            -webkit-box-orient: vertical;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        啥也不说，此处省略一万字,啥也不说，此处省略一万字此处省略一万字</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Chrome 浏览器效果：</p><p><img src="http://picgo.kongshier.top/2767/20210420132822674.png"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习路线</title>
      <link href="/post/5d7b6fc6.html"/>
      <url>/post/5d7b6fc6.html</url>
      
        <content type="html"><![CDATA[<h1 id="Python-学习路线"><a href="#Python-学习路线" class="headerlink" title="Python 学习路线"></a>Python 学习路线</h1><blockquote><p>文章来源于 鱼皮大佬，为了方便我个人观看因此转载来此。<br>Python 学习路线 by 程序员鱼皮</p></blockquote><p>在看路线前，建议大家先通过以下视频了解几个问题：</p><ul><li>Python 为什么这么火？</li><li>为什么都在说学 Python 找不到工作？Python 真香么？</li><li>我要学 Python 么？</li><li>怎么快速学习？</li></ul><p>视频地址：<a href="https://www.bilibili.com/video/BV133411C7u5/">https://www.bilibili.com/video/BV133411C7u5/</a></p><h2 id="Python-为什么火了？"><a href="#Python-为什么火了？" class="headerlink" title="Python 为什么火了？"></a>Python 为什么火了？</h2><p>有很多原因，列举几点：</p><ol><li>语法简单易学，其他语言 5 行代码才能实现的东西，Python 一行搞定！可以少写很多代码，因此不少同学拿 Python 刷算法题（但注意要理解算法本身哦）。</li><li>类库生态丰富，想做什么功能基本都有现成的代码，拿来直接用就行，无比方便！</li><li>免费开源，感兴趣、有能力的同学可以自己去研究源码。</li><li>其他特性，比如跨平台、可扩展等。</li><li>作为数据科学、人工智能的首选语言，踩到了时代的风口。</li></ol><p>于是乎，Python 被推向了神坛，甚至在 2021 年 10 月的编程语言排行榜中，Python 登上了第一位！</p><p><img src="https://qiniuyun.code-nav.cn/image-20211009115608685.png" alt="TIOBE 编程语言排行榜"></p><p>但就是这样一门 “永远的神” 的编程语言，却在网上被口口相传说：学了 Python 找不到工作！</p><p>哎，为啥呢？</p><h2 id="为什么-Python-不适合找工作？"><a href="#为什么-Python-不适合找工作？" class="headerlink" title="为什么 Python 不适合找工作？"></a>为什么 Python 不适合找工作？</h2><p>一方面是，大多数的企业，都不用 Python 来开发应用。</p><p>因为 Python 的运行速度太慢了，别说跟底层的 C++ 比了，Java 都能甩它几条街！而且这和语言本身的设计实现有关，所以哪怕你再出什么技术去优化它的性能，也终究有个瓶颈，世界上最好的语言 PHP 也是一样。</p><p>而对企业来说，<strong>性能</strong> 会直接影响用户体验和机器成本，尤其是在这个信息爆炸、大家都在追求性能的时代，Python 在应用开发领域的地位就很尴尬，而开发岗又正好是程序员中占比极高的岗位。</p><p>另一方面，虽然 Python 的应用场景很多、相关岗位也不少，又是什么 AI、数据科学的主流语言是吧，未来很美好。但是，这些前沿技术的难点并不是 Python 语言的代码本身，而是算法和思想。Python 只是一个调包、把你思想表达出来的工具而已。所以这些前沿岗位的门槛远比你入门 Python、或者听培训机构画饼时要高的多，算法岗位、大厂的产品岗真就是神仙打架，而且研究生居多。</p><h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><p>既然这样，那我还要不要学 Python 呢？</p><p>我认为：<strong>必须要学！</strong></p><p>但是，一定要先思考自己的学习目标，目标不同，对 Python 的学习态度和投入的时间也不同。</p><p>如果想找开发岗位的工作，像上面说的，不建议把 Python 作为你的主语言，而是把它当做你的副武器。只需简单学学 Python 基础，就可以编写 Python 脚本来自动化办公、提高工作效率、做一些小工具了，性价比很高。</p><p><strong>如果说编程语言是工具，那 Python 是对这句话的完美诠释。</strong> 多会用一个神器，谁不爱呢？</p><p>如果你想找其他岗位的工作，比如运维、测试、数据分析、产品经理、大数据、爬虫、人工智能、图像处理、多媒体处理、算法研究，当然也可以，只是如果以这些岗位为目标，除了要打好 Python 基础外，更重要的是理解对应领域的思想、方法和实践，而不是只会引库调包。</p><p>如果你是初学编程或者出于好奇学编程，我也建议你学 Python，好玩、能学下去、能培养兴趣，这些对初学者非常重要，有了兴趣之后，再学别的语言就会如鱼得水。</p><h2 id="学习建议"><a href="#学习建议" class="headerlink" title="学习建议"></a>学习建议</h2><p>对于初学者和非 Python 岗位的从业者，就把 Python 当工具学，了解下基础语法和常用类库，需要写 Python 脚本时，能利用搜索引擎和文档写出（或者复制）代码就行。只要你学过其他编程语言，上手 Python 真的都很容易，3 - 7 天就能学会。</p><p>建议学习时多写些小例子，比如 Python 处理表格、Python 处理 PDF 等，感受 Python 类库的强大就完事儿~</p><h2 id="学习路线大纲"><a href="#学习路线大纲" class="headerlink" title="学习路线大纲"></a>学习路线大纲</h2><p>折叠了一部分，还是老长，<strong>思维导图获取见文末</strong> ：</p><p><img src="https://qiniuyun.code-nav.cn/img/%E9%B1%BC%E7%9A%AE%20-%20Python%20%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.png" alt="鱼皮 - Python 学习路线"></p><h2 id="学习路线"><a href="#学习路线" class="headerlink" title="学习路线"></a>学习路线</h2><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><ul><li>Python 安装</li><li>开发工具<ul><li>PyCharm</li><li>Sublime</li><li>VS Code</li></ul></li><li>变量<ul><li>定义变量</li><li>关键字</li><li>命名规则</li><li>基本数据类型</li><li>类型转换</li></ul></li><li>运算符和表达式</li><li>流程控制<ul><li>条件分支</li><li>循环</li></ul></li><li>基本数据结构<ul><li>字符串</li><li>列表</li><li>元组</li><li>集合</li><li>字典</li></ul></li><li>函数<ul><li>定义</li><li>参数传递</li><li>作用域</li><li>lambda 表达式</li><li>常用内置函数</li></ul></li><li>⭐ 面向对象编程<ul><li>类和对象</li><li>三大特性<ul><li>封装<ul><li>self</li><li>属性</li><li>方法<ul><li>类方法</li><li>实例方法</li><li>静态方法</li></ul></li><li>访问控制</li></ul></li><li>继承<ul><li>单继承</li><li>多继承</li></ul></li><li>多态<ul><li>方法重写</li></ul></li></ul></li><li>运算符重载</li><li>装饰器</li><li>反射</li></ul></li><li>模块<ul><li>导入模块</li><li>常用模块<ul><li>文件处理</li><li>日期时间</li></ul></li></ul></li><li>包<ul><li>导入包</li><li>生成包</li></ul></li><li>异常处理<ul><li>捕获异常</li><li>try … else … finally 结构</li><li>自定义异常</li></ul></li><li>文件操作<ul><li>文件开闭</li><li>文件读写</li></ul></li></ul><h3 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h3><ul><li>函数进阶<ul><li>闭包</li><li>匿名函数</li><li>生成器函数</li><li>装饰器</li><li>高阶函数</li></ul></li><li>正则表达式</li><li>数据库编程<ul><li>数据库基础</li><li>SQL 编写</li><li>查询<ul><li>聚合</li><li>分组</li><li>关联</li><li>排序</li></ul></li><li>事务</li><li>数据库设计</li><li>数据库调优</li></ul></li><li>并发编程<ul><li>同步和异步</li><li>阻塞和非阻塞</li><li>多线程</li><li>多进程</li><li>协程</li><li>并发类库</li></ul></li><li>网络编程<ul><li>网络基础（七层模型、IP）</li><li>网络协议（TCP、UDP、HTTP、HTTPS、FTP、DNS）</li><li>WebSocket</li></ul></li></ul><h3 id="web-开发"><a href="#web-开发" class="headerlink" title="web 开发"></a>web 开发</h3><ul><li>Django 框架<ul><li>安装与 Demo</li><li>MVT 分层</li><li>模型<ul><li>数据库基础</li><li>ORM<ul><li>单表查询</li><li>多表查询</li><li>聚合查询</li></ul></li></ul></li><li>视图</li><li>模板<ul><li>模板语法</li><li>静态资源</li></ul></li><li>路由</li><li>Django Admin 管理工具</li><li>测试</li><li>会话</li><li>鉴权</li><li>文件上传</li><li>中间件</li><li>高级特性<ul><li>分页</li><li>缓存<ul><li>本地缓存</li><li>Redis 分布式缓存</li></ul></li><li>序列化</li><li>信号</li><li>celery 任务调度</li></ul></li><li>Restful API 开发<ul><li>概念</li><li>数据序列化</li><li>Django Rest Framework</li></ul></li><li>部署</li><li>项目实战</li></ul></li><li>前端基础<ul><li>HTML</li><li>CSS</li><li>JavaScript</li></ul></li><li>Flask 框架</li></ul><h3 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h3><ul><li>概念</li><li>合法性</li><li>数据抓取<ul><li>常用网络协议（http &#x2F; https）概念</li><li>请求<ul><li>请求头</li><li>请求参数</li><li>请求类型</li></ul></li><li>响应<ul><li>响应头</li><li>响应参数</li></ul></li><li>requests 模块</li><li>urllib 模块</li><li>模拟登陆</li><li>静态 &#x2F; 动态网站抓取</li><li>无头浏览器<ul><li>selenium</li><li>puppeteer</li></ul></li></ul></li><li>数据解析<ul><li>常用标签</li><li>BeautifulSoup</li><li>正则表达式</li><li>xpath</li></ul></li><li>数据导出<ul><li>文件<ul><li>Excel</li><li>CSV</li></ul></li><li>数据库<ul><li>MongoDB</li><li>MySQL</li></ul></li><li>中间件<ul><li>Redis</li></ul></li></ul></li><li>Scrapy 框架<ul><li>核心概念<ul><li>命令行工具</li><li>Spiders</li><li>Selectors</li><li>Items</li><li>Item Loaders</li><li>管道</li><li>Scrapy Shell</li><li>Link Extractors</li></ul></li><li>调度器</li><li>分布式爬虫</li><li>部署</li></ul></li><li>并发异步爬虫<ul><li>aioHttp</li><li>asyncio</li></ul></li><li>高级<ul><li>IP 代理</li><li>验证码识别</li><li>APP 抓取</li><li>增量式爬虫</li></ul></li><li>项目实战</li><li>反爬虫<ul><li>请求头限制</li><li>验证码</li><li>黑白名单</li><li>封禁 IP</li><li>数据加密</li><li>数据混淆</li><li>行为分析</li></ul></li></ul><h3 id="自动化运维"><a href="#自动化运维" class="headerlink" title="自动化运维"></a>自动化运维</h3><ul><li>Linux 环境</li><li>Shell 脚本编写</li><li>脚本管理</li><li>脚本发布</li><li>Python 运维库</li><li>常用运维工具</li></ul><h3 id="数据分析（数据科学）"><a href="#数据分析（数据科学）" class="headerlink" title="数据分析（数据科学）"></a>数据分析（数据科学）</h3><ul><li>环境搭建<ul><li>Anaconda</li><li>Conda</li><li>Miniconda</li><li>Jupyter Notebook</li></ul></li><li>常用数据结构</li><li>常用类库<ul><li>Numpy<ul><li>数组</li><li>索引</li><li>切片</li><li>多维数组</li><li>函数</li></ul></li><li>Pandas<ul><li>Series</li><li>DataFrame</li><li>索引</li><li>对齐</li><li>函数</li><li>统计</li></ul></li></ul></li><li>数据处理<ul><li>数据清洗</li><li>层次化索引</li><li>数据连接</li><li>数据合并</li><li>分组聚合</li><li>轴向旋转</li></ul></li><li>数据可视化<ul><li>matplotlib</li><li>seaborn</li><li>pyechart</li></ul></li></ul><h3 id="算法（人工智能）"><a href="#算法（人工智能）" class="headerlink" title="算法（人工智能）"></a>算法（人工智能）</h3><blockquote><p>鱼皮自己没怎么接触人工智能，结合网上很多大神的资料整理而成，也有一定参考意义。</p></blockquote><ul><li>数学基础<ul><li>高等数学</li><li>线性代数</li><li>概率论</li><li>统计分析</li></ul></li><li>机器学习<ul><li>特征工程</li><li>模型<ul><li>模型分类</li><li>模型评估</li><li>模型训练</li><li>模型调优</li></ul></li><li>常用算法<ul><li>监督与无监督学习</li><li>回归（有监督）<ul><li>线性回归</li><li>决策树</li><li>集成算法</li></ul></li><li>分类（有监督）<ul><li>逻辑回归</li><li>决策树</li><li>支持向量机</li><li>集成算法</li><li>贝叶斯算法</li></ul></li><li>聚类（无监督）<ul><li>k-means</li><li>dbscan</li></ul></li><li>降维<ul><li>主成分分析</li><li>线性判别分析</li></ul></li><li>进阶<ul><li>GBDT 提升算法</li><li>lightgbm</li><li>EM 算法</li><li>隐马尔科夫模型</li></ul></li></ul></li><li>多因子模型</li><li>常用库<ul><li>Scikit-learn</li></ul></li><li>量化交易策略</li></ul></li><li>深度学习<ul><li>数据预处理</li><li>算法<ul><li>神经网络</li><li>卷积神经网络</li><li>递归神经网络</li><li>对抗生成网络</li><li>序列网络模型</li></ul></li><li>常用算法</li><li>框架和平台<ul><li>Tenserflow2</li><li>Pytorch</li><li>Keras</li><li>Caffe</li></ul></li></ul></li><li>自然语言处理</li><li>图像处理</li><li>计算机视觉</li></ul><h2 id="常用类库"><a href="#常用类库" class="headerlink" title="常用类库"></a>常用类库</h2><p>Python 能被广泛应用，很大程度上是因为其丰富的类库，就是他人提前写好并封装的代码。基本你要做什么东西都能找到对应的类库，直接看文档用就行了，大大提高开发效率！</p><p>开源项目 <code>awesome-python-cn</code>（地址：<a href="https://github.com/jobbole/awesome-python-cn%EF%BC%89">https://github.com/jobbole/awesome-python-cn）</a> 和 <code>awesome-python</code>（地址：<a href="https://github.com/vinta/awesome-python%EF%BC%89%E5%B7%B2%E7%BB%8F%E5%B8%AE%E5%A4%A7%E5%AE%B6%E6%95%B4%E7%90%86%E4%BA%86%E5%90%84%E6%96%B9%E5%90%91%E7%9A%84">https://github.com/vinta/awesome-python）已经帮大家整理了各方向的</a> Python 类库，数量非常多。鱼皮在此基础上筛选了一些相对优质的库，分享给大家。</p><h3 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h3><h4 id="日期处理"><a href="#日期处理" class="headerlink" title="日期处理"></a>日期处理</h4><ul><li>delorean：日期处理库</li><li>pendulum：日期时间操作库</li><li>dateutil：对标准 datetime 模块的强大扩展</li></ul><h4 id="终端优化"><a href="#终端优化" class="headerlink" title="终端优化"></a>终端优化</h4><ul><li>IPython：功能丰富的交互式 Python 解析器</li><li>Jupyter Notebook：基于网页的用于交互计算的应用程序</li><li>Prettytable：生成美观的 ASCII 格式的表格</li><li>Colorama：让终端具有颜色</li><li>bashplotlib：在终端中进行基本绘图</li><li>emoji：支持在 Python 终端输出表情</li><li>Ipyvolume：在 Jupyter notebook 中可视化 3d 体积和字形</li></ul><h4 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a>文本处理</h4><ul><li>FlashText：高效的文本查找替换库</li><li>furl：url 处理库</li><li>pypinyin：汉字拼音转换工具</li><li>simplejson：JSON 编 &#x2F; 解码器</li><li>JMESPath：JSON 查询语法库</li></ul><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li><p>Pipenv：Python 官方推荐的新一代包管理工具</p></li><li><p>threading：自带的线程库</p></li><li><p>multiprocessing：自带的多线程库</p></li><li><p>Chardet：字符编码检测器</p></li><li><p>logging：日志功能</p></li><li><p>PySnooper：Python 调试工具</p></li><li><p>sphinx：Python 文档生成器</p></li><li><p>pyttsx3：文字转语音库</p></li><li><p>PyWin32：提供和 windows 的交互</p></li><li><p>shortuuid：生成唯一 uuid 的库</p></li><li><p>more-itertools：支持迭代操作对象</p></li><li><p>cryptography：密码学工具包</p></li></ul><h3 id="网络请求-amp-解析"><a href="#网络请求-amp-解析" class="headerlink" title="网络请求 &amp; 解析"></a>网络请求 &amp; 解析</h3><ul><li>requests：HTTP 请求库</li><li>aiohttp：异步 HTTP 网络库</li><li>scrapy：分布式网页采集框架</li><li>pyspider：一个强大的爬虫系统</li><li>BeautifulSoup：从 HTML 或 XML 文件中提取数据的库</li><li>you-get：网页视频下载器</li><li>wget：网页文件下载</li><li>musicdl：Python 音乐下载器</li></ul><h3 id="文件处理"><a href="#文件处理" class="headerlink" title="文件处理"></a>文件处理</h3><ul><li>openpyxl：Excel 读写库</li><li>tablib：处理表格数据</li><li>csvkit：用于转换和操作 CSV 的工具</li><li>XlsxWriter：操作 Excel</li><li>python-docx：操作 office word 文档</li><li>PyPDF2：操作 PDF 文档</li><li>pdfminer：从 PDF 文档中抽取信息的工具</li><li>xhtml2pdf：HTML 转 PDF 工具</li><li>WeasyPrint：可视化网页，并支持导出为 PDF</li><li>html2text：将 HTML 转换为 Markdown 文档</li><li>xmltodict：像处理 JSON 一样处理 XML</li><li>moviepy：基于脚本的视频编辑模块</li><li>eyeD3：操作音频文件的工具</li><li>pyAudioAnalysis：音频特征提取分析</li></ul><h3 id="界面开发"><a href="#界面开发" class="headerlink" title="界面开发"></a>界面开发</h3><ul><li>pyQT：跨平台的用户界面开发框架</li><li>Turtle：交互式绘画库</li><li>pyglet：跨平台界面及多媒体框架</li><li>wxPython：Python 用户界面开发工具</li><li>Pygame：一组用来开发游戏的 Python 模块</li><li>Manim：Python 数学动画引擎</li><li>progressbar：一个滚动条函数库</li><li>progress：进度条输出</li><li>tqdm：快速、可扩展的进度条</li></ul><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><ul><li>nose：测试框架</li><li>faker：生成假数据</li><li>PyAutoGUI：跨平台 GUI 自动测试模块</li><li>coverage：代码覆盖率测量</li><li>sqlmap：自动 SQL 注入和渗透测试工具</li></ul><h3 id="Web-开发"><a href="#Web-开发" class="headerlink" title="Web 开发"></a>Web 开发</h3><ul><li>Django：Python 界最流行的 web 框架</li><li>Django REST framework：用于开发 web api 的框架</li><li>FastAPI：快速构建 web 应用程序</li><li>flask：Python 微型框架</li><li>Twisted：一个事件驱动的网络引擎</li></ul><h3 id="运维"><a href="#运维" class="headerlink" title="运维"></a>运维</h3><ul><li>psutil：跨平台的进程和系统工具模块</li><li>supervisor：进程控制管理系统</li><li>sh：让 Python 支持 shell 脚本</li><li>dnspython：DNS 工具包</li><li>scapy：数据包处理库</li><li>pexpect：在伪终端中控制交互程序</li><li>paramiko：远程连接服务</li><li>Ansible：IT 自动化平台</li><li>SaltStack：基础设施自动化和管理系统</li><li>watchdog：管理文件系统事件的 API 和 shell 工具</li></ul><h3 id="图像处理-amp-计算机视觉"><a href="#图像处理-amp-计算机视觉" class="headerlink" title="图像处理 &amp; 计算机视觉"></a>图像处理 &amp; 计算机视觉</h3><ul><li>Pillow：图像处理库</li><li>kornia：计算机视觉库</li><li>Opencv：开源计算机视觉库</li><li>Mahotas：计算机视觉和图像处理库</li><li>Luminoth：计算机视觉的深度学习工具集</li></ul><h3 id="数据分析-amp-数据科学"><a href="#数据分析-amp-数据科学" class="headerlink" title="数据分析 &amp; 数据科学"></a>数据分析 &amp; 数据科学</h3><ul><li>NumPy：数值计算工具包</li><li>Pandas：主流的数据分析工具</li><li>pyecharts：基于百度 Echarts 的数据可视化库</li><li>Dash：快速构建 Web 数据可视化应用</li><li>matplotlib：Python 2D 绘图库</li><li>Seaborn：使用 Matplotlib 进行统计数据可视化</li><li>python-recsys：实现推荐系统的库</li><li>vaex：高速大数据处理库</li><li>SciPy：算法和数学工具库</li><li>blaze：NumPy 和 Pandas 的大数据接口</li><li>statsmodels：统计建模和计量经济学</li></ul><h3 id="人工智能"><a href="#人工智能" class="headerlink" title="人工智能"></a>人工智能</h3><ul><li>Tensorflow：谷歌开源的最受欢迎的深度学习框架</li><li>keras：深度学习封装库，快速上手神经网络</li><li>Pytorch：具有张量和动态神经网络，并有强大 GPU 加速能力的深度学习框架</li><li>Caffe2：一个轻量、模块化、可扩展的深度学习框架</li><li>scikit-learn：基于 SciPy 构建的机器学习 Python 模块</li><li>PyMC：马尔科夫链蒙特卡洛采样工具</li><li>mmdetection：深度学习目标检测工具箱</li><li>imbalanced-learn：不平衡学习工具包</li><li>XGBoost：分布式梯度增强库</li><li>Gym：强化学习算法的工具包</li></ul><h3 id="自然语言处理"><a href="#自然语言处理" class="headerlink" title="自然语言处理"></a>自然语言处理</h3><ul><li>NLTK：自然语言处理工具包</li><li>Gensim：话题建模库</li><li>Pattern：自然语言处理工具</li><li>fuzzywuzzy：用于字符串模糊匹配、令牌匹配等</li><li>TextBlob：为进行普通自然语言处理任务提供一致的 API</li><li>PyFlux：时间序列处理库</li><li>jieba：中文分词工具</li></ul><h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><p>（大纲图）</p><h2 id="岗位"><a href="#岗位" class="headerlink" title="岗位"></a>岗位</h2><ul><li>腾讯校招 Python 相关岗位：<a href="https://join.qq.com/post.html?keyword=python">https://join.qq.com/post.html?keyword=python</a></li><li>岗位薪资查询：OfferShow 小程序</li><li>运维工程师</li><li>Web 开发工程师（后端、全栈为主）</li><li>测试工程师</li><li>数据分析师</li><li>产品经理</li><li>算法工程师<ul><li>机器学习</li><li>计算机视觉</li><li>NLP</li><li>多媒体处理</li></ul></li><li>大数据工程师<ul><li>大数据开发</li><li>数据挖掘</li></ul></li><li>网络爬虫工程师</li><li>技术研究员</li></ul><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><h4 id="零基础"><a href="#零基础" class="headerlink" title="零基础"></a>零基础</h4><ul><li>⭐ 千锋教育 700 集零基础 Python 教程：<a href="https://www.bilibili.com/video/BV1R7411F7JV%EF%BC%88%E9%9D%9E%E5%B8%B8%E5%85%A8%E9%9D%A2%EF%BC%8C%E5%9F%BA%E7%A1%80%E3%80%81web">https://www.bilibili.com/video/BV1R7411F7JV（非常全面，基础、web</a> 开发、爬虫、数据分析、AI 基础都讲了，例子也很丰富）</li><li>⭐ 黑马程序员600集 Python 教程：<a href="https://www.bilibili.com/video/BV1ex411x7Em%EF%BC%88%E6%AF%94%E8%BE%83%E5%85%A8%E9%9D%A2%EF%BC%8C%E5%9F%BA%E4%BA%8E">https://www.bilibili.com/video/BV1ex411x7Em（比较全面，基于</a> Linux 环境学习，以 Python 基础 + 面向对象为重点，还包含一部分游戏开发） </li><li>⭐ Python 全栈开发教程：<a href="https://www.bilibili.com/video/BV1wD4y1o7AS%EF%BC%88%E5%BE%88%E7%BA%AF%E7%B2%B9%E7%9A%84">https://www.bilibili.com/video/BV1wD4y1o7AS（很纯粹的</a> Python 基础教程，案例多，适合快速入门）</li><li>小甲鱼 -《零基础入门学习Python》最新版：<a href="https://www.bilibili.com/video/av52080698%EF%BC%88%E5%8F%AF%E6%83%9C%EF%BC%8C%E6%9B%B4%E6%96%B0%E5%88%B0%E4%B8%80%E5%8D%8A%E5%B0%B1%E6%B2%A1%E4%BA%86%E3%80%82%E3%80%82%EF%BC%89">https://www.bilibili.com/video/av52080698（可惜，更新到一半就没了。。）</a></li><li>【麻省理工学院-中文字幕版】Python 和计算机科学导论公开课：<a href="https://www.bilibili.com/video/BV1ty4y1x7xP%EF%BC%88%E9%80%82%E5%90%88%E5%A4%96%E8%AF%AD%E4%B8%8D%E9%94%99%E7%9A%84%E5%90%8C%E5%AD%A6%E8%AF%BE%E5%A4%96%E7%9C%8B%EF%BC%8C%E6%84%9F%E5%8F%97%E5%9B%BD%E5%A4%96%E6%95%99%E5%AD%A6%E6%B0%9B%E5%9B%B4%EF%BC%89">https://www.bilibili.com/video/BV1ty4y1x7xP（适合外语不错的同学课外看，感受国外教学氛围）</a></li><li>阿里云 python 工程师学习：<a href="https://developer.aliyun.com/graph/python%EF%BC%88%E6%9C%89%E5%9C%A8%E7%BA%BF%E7%BC%96%E7%A8%8B%E4%BD%93%E9%AA%8C%EF%BC%89">https://developer.aliyun.com/graph/python（有在线编程体验）</a></li><li>鱼皮公众号【程序员鱼皮】后台回复 Python，也有一套视频课</li></ul><h4 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h4><ul><li><p>Web 开发</p><ul><li>Python Django 项目实战教程：<a href="https://www.bilibili.com/video/BV1pq4y1W7a1">https://www.bilibili.com/video/BV1pq4y1W7a1</a></li><li>Python + 微信小程序实战开发：<a href="https://www.bilibili.com/video/BV1Xy4y1s792%EF%BC%88%E6%8C%BA%E5%AE%8C%E6%95%B4%EF%BC%8C%E5%90%8E%E5%8F%B0%E7%94%A8%E7%9A%84">https://www.bilibili.com/video/BV1Xy4y1s792（挺完整，后台用的</a> Django 框架）</li></ul></li><li><p>数据结构与算法</p><ul><li>Python 数据结构与算法全套 100 节：<a href="https://www.bilibili.com/video/BV1uA411N7c5">https://www.bilibili.com/video/BV1uA411N7c5</a></li><li>【北京大学】数据结构与算法Python版（完整版）：<a href="https://www.bilibili.com/video/BV1VC4y1x7uv">https://www.bilibili.com/video/BV1VC4y1x7uv</a></li></ul></li><li><p>爬虫</p><ul><li>2020 年Python爬虫全套课程（学完可做项目）：<a href="https://www.bilibili.com/video/BV1Yh411o7Sz">https://www.bilibili.com/video/BV1Yh411o7Sz</a></li><li>Python 爬虫编程基础 5 天速成：<a href="https://www.bilibili.com/video/BV12E411A7ZQ%EF%BC%88%E5%BE%88%E7%9F%AD%E7%9A%84%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98%E5%85%A5%E9%97%A8%E8%AF%BE%EF%BC%89">https://www.bilibili.com/video/BV12E411A7ZQ（很短的爬虫实战入门课）</a></li></ul></li><li><p>数据分析</p><ul><li>自学数据分析课程：<a href="https://www.bilibili.com/video/BV1ZM4y1u7uF%EF%BC%88%E5%BE%88%E7%BA%AF%E7%B2%B9%E7%9A%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90">https://www.bilibili.com/video/BV1ZM4y1u7uF（很纯粹的数据分析</a> + 可视化课程，适合办公党快速上手）</li><li>完整数据分析课程：<a href="https://www.bilibili.com/video/BV1vV411p7D6%EF%BC%88%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90">https://www.bilibili.com/video/BV1vV411p7D6（数据分析</a> + 机器学习，很全面）</li><li>Python 数据分析入门视频合集：<a href="https://shimowendang.com/docs/36pykCPH6XCjKJcv/read">https://shimowendang.com/docs/36pykCPH6XCjKJcv/read</a></li></ul></li><li><p>其他</p><ul><li><p>一天搞定人脸识别项目（python+opencv）：<a href="https://www.bilibili.com/video/BV1Lq4y1Z7dm">https://www.bilibili.com/video/BV1Lq4y1Z7dm</a></p></li><li><p>Python 自动化办公：<a href="https://www.bilibili.com/video/BV1uv411W7Fi%EF%BC%88%E4%B8%BB%E8%A6%81%E6%98%AF%E5%A4%84%E7%90%86">https://www.bilibili.com/video/BV1uv411W7Fi（主要是处理</a> Excel）</p></li></ul></li></ul><h3 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h3><ul><li>⭐《Python编程：从入门到实践》：<a href="https://www.code-nav.cn/rd/?rid=cbddf0af6064484f002658102cdbba17">https://www.code-nav.cn/rd/?rid=cbddf0af6064484f002658102cdbba17</a></li><li>《python学习手册》：<a href="https://www.code-nav.cn/rd/?rid=79550af260643c8e0ce47ab84633e200">https://www.code-nav.cn/rd/?rid=79550af260643c8e0ce47ab84633e200</a></li><li>《笨办法学Python3》：<a href="https://www.code-nav.cn/rd/?rid=b00064a760643bb90cbba72836995fd5">https://www.code-nav.cn/rd/?rid=b00064a760643bb90cbba72836995fd5</a></li><li>《Python编程快速上手》（第2版）：<a href="https://book.douban.com/subject/35387685/">https://book.douban.com/subject/35387685/</a></li><li>《Python Cookbook 中文版》（第3版）：<a href="https://book.douban.com/subject/26381341/">https://book.douban.com/subject/26381341/</a></li><li>《父与子的编程之旅》：<a href="https://www.code-nav.cn/rd/?rid=8937eaa9615519680ed81c0e3165ee65">https://www.code-nav.cn/rd/?rid=8937eaa9615519680ed81c0e3165ee65</a></li><li>⭐《Python 深度学习》<a href="https://www.code-nav.cn/rd/?rid=2d44d6c261624dd31224ed1b5841920c">https://www.code-nav.cn/rd/?rid=2d44d6c261624dd31224ed1b5841920c</a></li><li>《Python网络爬虫实战》第2版：<a href="https://www.code-nav.cn/rd/?rid=b00064a7606440d40cbc2fca19192e4f">https://www.code-nav.cn/rd/?rid=b00064a7606440d40cbc2fca19192e4f</a></li><li>《Python数据科学手册》：<a href="https://book.douban.com/subject/27667378/">https://book.douban.com/subject/27667378/</a></li><li>《利用Python进行数据分析》：<a href="https://book.douban.com/subject/25779298/">https://book.douban.com/subject/25779298/</a></li><li>《轻量级Django》：<a href="https://www.code-nav.cn/rd/?rid=28ee4e3e60641fd60d91fd2441418491">https://www.code-nav.cn/rd/?rid=28ee4e3e60641fd60d91fd2441418491</a></li><li>⭐ <strong>编程导航 - 超多 Python 书籍直接免费下载</strong> ：<a href="https://www.code-nav.cn/topic/Python%EF%BC%88%E9%80%89%E6%8B%A9%E4%B9%A6%E7%B1%8D%E6%A0%87%E7%AD%BE%EF%BC%89">https://www.code-nav.cn/topic/Python（选择书籍标签）</a></li><li>Python Guide（英文）：<a href="https://docs.python-guide.org/">https://docs.python-guide.org/</a></li></ul><h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3><ul><li>⭐ Python 入门教程（菜鸟教程）：<a href="https://www.runoob.com/python3/python3-tutorial.html%EF%BC%88%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%BA%BF%E5%86%99%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A0%EF%BC%89">https://www.runoob.com/python3/python3-tutorial.html（可以在线写代码练习）</a></li><li>Python 入门教程（W3Cschool）：<a href="https://www.w3cschool.cn/python3/%EF%BC%88%E6%94%AF%E6%8C%81%E6%89%8B%E6%9C%BA%E9%98%85%E8%AF%BB%EF%BC%89">https://www.w3cschool.cn/python3/（支持手机阅读）</a></li><li>Python 中文学习大本营：<a href="http://www.pythondoc.com/%EF%BC%88%E4%B8%80%E7%B3%BB%E5%88%97%E6%96%87%E6%A1%A3%E6%95%99%E7%A8%8B%E7%9A%84%E9%9B%86%E5%90%88%EF%BC%89">http://www.pythondoc.com/（一系列文档教程的集合）</a></li><li>Python 100 天：<a href="https://github.com/jackfrued/Python-100-Days">https://github.com/jackfrued/Python-100-Days</a></li><li>廖雪峰 Python 入门教程：<a href="https://www.liaoxuefeng.com/wiki/1016959663602400">https://www.liaoxuefeng.com/wiki/1016959663602400</a></li><li>莫烦 Python 教程：<a href="https://mofanpy.com/%EF%BC%88%E5%8C%85%E6%8B%AC%E5%9F%BA%E7%A1%80%E3%80%81%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E3%80%81%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AD%89%EF%BC%8C%E9%83%A8%E5%88%86%E5%86%85%E5%AE%B9%E6%9C%89%E8%A7%86%E9%A2%91%EF%BC%89">https://mofanpy.com/（包括基础、数据处理、机器学习等，部分内容有视频）</a></li><li>Django 官方教程：<a href="https://docs.djangoproject.com/zh-hans/3.2/intro/tutorial01/">https://docs.djangoproject.com/zh-hans/3.2/intro/tutorial01/</a></li><li>Manim 动画引擎教程：<a href="https://docs.manim.org.cn/shaders/">https://docs.manim.org.cn/shaders/</a></li><li>A Byte of Python：<a href="https://python.swaroopch.com/%EF%BC%88Python">https://python.swaroopch.com/（Python</a> 英文入门教程）</li><li>⭐ 谷歌 Python 代码规范：<a href="https://google.github.io/styleguide/pyguide.html">https://google.github.io/styleguide/pyguide.html</a></li></ul><h3 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h3><ul><li>⭐ 蓝桥云课 Python 实战合集：<a href="https://www.lanqiao.cn/courses/?fee=free&amp;tag=Python">https://www.lanqiao.cn/courses/?fee=free&amp;tag=Python</a></li><li>腾讯云在线 Python 实验：<a href="https://cloud.tencent.com/developer/labs/gallery?tagId=23">https://cloud.tencent.com/developer/labs/gallery?tagId=23</a></li><li>阿里云 Python 入门实验：<a href="https://developer.aliyun.com/adc/scenario/e04fe73ad95d4782aef7aecca206196e">https://developer.aliyun.com/adc/scenario/e04fe73ad95d4782aef7aecca206196e</a></li><li>华为云沙箱实验室：<a href="https://lab.huaweicloud.com/testList.html">https://lab.huaweicloud.com/testList.html</a></li><li>Python123：<a href="https://python123.io/index%EF%BC%88%E5%9C%A8%E7%BA%BF%E7%BC%96%E7%A8%8B%EF%BC%8C%E9%83%A8%E5%88%86%E8%AF%BE%E6%94%B6%E8%B4%B9%EF%BC%89">https://python123.io/index（在线编程，部分课收费）</a></li><li>CheckiO 游戏学 Python：<a href="https://py.checkio.org/">https://py.checkio.org/</a></li><li>通过测试交互式学 Python（英文）：<a href="https://github.com/gregmalcolm/python_koans">https://github.com/gregmalcolm/python_koans</a></li><li>交互式 Python 挑战（英文）：<a href="https://github.com/donnemartin/interactive-coding-challenges">https://github.com/donnemartin/interactive-coding-challenges</a></li><li>通过项目学 Python（英文）：<a href="https://github.com/practical-tutorials/project-based-learning#python">https://github.com/practical-tutorials/project-based-learning#python</a></li><li>通过示例交互式学 Python（英文）：<a href="https://github.com/jerry-git/learn-python3">https://github.com/jerry-git/learn-python3</a></li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><ul><li>数据结构和算法 Python 实现：<a href="https://github.com/keon/algorithms">https://github.com/keon/algorithms</a></li><li>《剑指 Offer》算法面试题 Python 实现：<a href="https://github.com/JushuangQiao/Python-Offer">https://github.com/JushuangQiao/Python-Offer</a></li><li>设计模式 Python 实现：<a href="http://www.pythontip.com/python-patterns/detail/abstract_factory">http://www.pythontip.com/python-patterns/detail/abstract_factory</a></li><li>Python Machine Learning 代码：<a href="https://github.com/rasbt/python-machine-learning-book-3rd-edition">https://github.com/rasbt/python-machine-learning-book-3rd-edition</a></li><li>Python 小脚本：<a href="https://github.com/RealHacker/python-gems">https://github.com/RealHacker/python-gems</a></li></ul><h3 id="合集"><a href="#合集" class="headerlink" title="合集"></a>合集</h3><ul><li><p>⭐ GitHub Python 专区：<a href="https://github.com/topics/python">https://github.com/topics/python</a></p></li><li><p>神经网络和深度学习相关框架：<a href="https://github.com/ChristosChristofidis/awesome-deep-learning">https://github.com/ChristosChristofidis/awesome-deep-learning</a></p></li><li><p>机器学习相关库：<a href="https://github.com/josephmisiti/awesome-machine-learning#python">https://github.com/josephmisiti/awesome-machine-learning#python</a></p></li><li><p>开源 Python 应用程序大全：<a href="https://github.com/mahmoud/awesome-python-applications">https://github.com/mahmoud/awesome-python-applications</a></p></li><li><p>Python 类库大全：<a href="https://github.com/vinta/awesome-python">https://github.com/vinta/awesome-python</a></p></li><li><p>Python 类库大全（中文版）：<a href="https://github.com/jobbole/awesome-python-cn">https://github.com/jobbole/awesome-python-cn</a></p></li><li><p>Python 异步大全：<a href="https://github.com/timofurrer/awesome-asyncio">https://github.com/timofurrer/awesome-asyncio</a></p></li><li><p>jupyter 相关：<a href="https://github.com/markusschanta/awesome-jupyter">https://github.com/markusschanta/awesome-jupyter</a></p></li><li><p>Python 书单：<a href="https://github.com/Junnplus/awesome-python-books">https://github.com/Junnplus/awesome-python-books</a></p></li><li><p>Python 书单（中文版）：<a href="https://github.com/jobbole/awesome-python-books">https://github.com/jobbole/awesome-python-books</a></p></li><li><p>StackOverflow Python 专区：<a href="https://stackoverflow.com/questions/tagged/python%EF%BC%88%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E5%BF%85%E5%A4%87%EF%BC%89">https://stackoverflow.com/questions/tagged/python（解决问题必备）</a></p></li><li><p>⭐ 掘金 Python 专区：<a href="https://juejin.cn/tag/Python%EF%BC%88%E7%9C%8B%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0%EF%BC%89">https://juejin.cn/tag/Python（看技术文章）</a></p></li></ul><h3 id="社区"><a href="#社区" class="headerlink" title="社区"></a>社区</h3><ul><li>⭐ PythonTab：<a href="https://www.pythontab.com/%EF%BC%88%E4%B8%AD%E6%96%87">https://www.pythontab.com/（中文</a> Python 开发者社区）</li><li>Learnku Python 技术论坛：<a href="https://learnku.com/python">https://learnku.com/python</a></li><li>开源中国：<a href="https://www.oschina.net/%EF%BC%88%E7%BB%BC%E5%90%88%E7%9A%84%E5%BC%80%E6%BA%90%E7%A4%BE%E5%8C%BA%EF%BC%89">https://www.oschina.net/（综合的开源社区）</a></li></ul><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ul><li>⭐ Python 在线编程（菜鸟教程）：<a href="https://c.runoob.com/compile/6/">https://c.runoob.com/compile/6/</a></li><li>腾讯云 Python 在线手册：<a href="https://cloud.tencent.com/developer/devdocs">https://cloud.tencent.com/developer/devdocs</a></li><li>Python 在线手册汇总：<a href="https://docs.pythontab.com/">https://docs.pythontab.com/</a></li></ul><h3 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h3><ul><li>⭐ 牛客 Python 专项练习：<a href="https://www.nowcoder.com/intelligentTest">https://www.nowcoder.com/intelligentTest</a></li><li>牛客 Python 试题：<a href="https://www.nowcoder.com/search?query=python&amp;type=question">https://www.nowcoder.com/search?query=python&amp;type=question</a></li><li>牛客机器学习面试题：<a href="https://www.nowcoder.com/search?type=question&amp;query=%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0">https://www.nowcoder.com/search?type=question&amp;query=%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0</a></li><li>牛客机器学习笔试：<a href="https://www.nowcoder.com/search?type=paper&amp;query=%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0">https://www.nowcoder.com/search?type=paper&amp;query=%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0</a></li><li>Python 面试题整理：<a href="https://github.com/taizilongxu/interview_python%EF%BC%88%E9%AB%98%E6%98%9F%EF%BC%89">https://github.com/taizilongxu/interview_python（高星）</a></li><li>Python 面试题整理：<a href="https://github.com/kenwoodjw/python_interview_question">https://github.com/kenwoodjw/python_interview_question</a></li><li>机器学习面试题：<a href="https://geektutu.com/post/qa-ml.html">https://geektutu.com/post/qa-ml.html</a></li></ul><h3 id="其他-2"><a href="#其他-2" class="headerlink" title="其他"></a>其他</h3><ul><li>⭐ Python 常见问题：<a href="https://docs.python.org/zh-cn/3/faq/general.html%EF%BC%88%E5%AE%98%E6%96%B9%E6%8F%90%E4%BE%9B%E7%9A%84">https://docs.python.org/zh-cn/3/faq/general.html（官方提供的</a> ）</li><li>GitHub Python 趋势：<a href="https://github.com/trending/python">https://github.com/trending/python</a></li><li>Python 模块推荐：<a href="https://pymotw.com/3/">https://pymotw.com/3/</a></li><li>Python 练习册：<a href="https://github.com/Yixiaohan/show-me-the-code%EF%BC%88%E4%B8%80%E4%BA%9B">https://github.com/Yixiaohan/show-me-the-code（一些</a> Python 练习题目）</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端学习路线</title>
      <link href="/post/e5cf9037.html"/>
      <url>/post/e5cf9037.html</url>
      
        <content type="html"><![CDATA[<h1 id="前端学习路线"><a href="#前端学习路线" class="headerlink" title="前端学习路线"></a>前端学习路线</h1><blockquote><p>文章来源于 鱼皮大佬，为了方便我个人观看因此转载来此。<br>这份学习路线并不完美，也不会有最终形态，正如前端不可预见、永无止境的未来。</p></blockquote><p>💂 + 💻 &#x3D; 👴🏽</p><p>建议先观看视频导读：<a href="https://www.bilibili.com/video/BV1nh411e7oG/">https://www.bilibili.com/video/BV1nh411e7oG/</a></p><h2 id="路线特点"><a href="#路线特点" class="headerlink" title="路线特点"></a>路线特点</h2><ol><li>一份全面的前端知识点大梳理和汇总</li><li>分阶段学习，每个阶段给出学习目标</li><li>使用符号对知识点的重要程度做了区分，按需学习</li><li>知识点附有描述和资源链接</li><li>提供一份清晰的个人顺序学习路线方法</li><li>提供大量优质学习资源</li></ol><h2 id="符号表"><a href="#符号表" class="headerlink" title="符号表"></a>符号表</h2><p>可根据知识点前的符号按需选学，并获取知识点描述和学习资源。</p><ul><li><p>⭐️ 必学（追求速成）</p></li><li><p>✅ 建议学（重要知识）</p></li><li><p>❗ 面试重点</p></li><li><p>❌ 一般没必要学习</p></li><li><p>💬 描述</p></li><li><p>📚 资源</p></li><li><p>🎯 目标</p></li></ul><h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><ol><li>前言 - 学编程需要的特质</li><li>前端学习七阶段<ol><li>前端入门</li><li>巩固基础</li><li>前端工程化</li><li>前端优化</li><li>前端生态</li><li>前端求职</li><li>前端未来</li></ol></li><li>我的前端学习路线</li><li>尾声 - 持续学习</li></ol><h2 id="前言-学编程需要的特质"><a href="#前言-学编程需要的特质" class="headerlink" title="前言 - 学编程需要的特质"></a>前言 - 学编程需要的特质</h2><p>相信自己有能力，那么你就真的会有！</p><ul><li>兴趣</li><li>坚持</li><li>付出</li><li>心态</li></ul><h2 id="一、前端入门"><a href="#一、前端入门" class="headerlink" title="一、前端入门"></a>一、前端入门</h2><ul><li><p>💬 描述：学习前端基础三件套，建议从实战开始，边学边练，培养兴趣，快速入门。</p></li><li><p>📚 资源</p><ul><li>freeCodecamp 在线编程：<a href="https://www.freecodecamp.org/">https://www.freecodecamp.org/</a></li><li>阿里云前端实战学习：<a href="https://edu.aliyun.com/roadmap/frontend">https://edu.aliyun.com/roadmap/frontend</a></li><li>W3Cschool 编程入门实战：<a href="https://www.w3cschool.cn/codecamp/">https://www.w3cschool.cn/codecamp/</a></li><li>pink老师前端入门教程：<a href="https://www.bilibili.com/video/BV14J4114768">https://www.bilibili.com/video/BV14J4114768</a></li></ul></li><li><p>🎯 目标：了解和实践各语言的基础语法，并能使用开发工具来独立开发一个留言板网站。</p></li></ul><h3 id="⭐️-开发工具"><a href="#⭐️-开发工具" class="headerlink" title="⭐️ 开发工具"></a>⭐️ 开发工具</h3><ul><li>💬 描述：工欲善其事，必先利其器。</li></ul><h4 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h4><ul><li>⭐️ Chrome</li><li>✅ Edge</li><li>✅ Firefox</li><li>❌ Opera</li><li>Safari</li></ul><h4 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h4><ul><li>⭐️ VSCode</li><li>✅ WebStorm</li><li>Atom</li><li>⭐️ Sublime Text</li><li>HBuilder X</li><li>记事本</li><li>在线 IDE</li></ul><h4 id="文档笔记"><a href="#文档笔记" class="headerlink" title="文档笔记"></a>文档笔记</h4><ul><li>✅ Markdown 语法</li><li>✅ Typora</li><li>在线笔记<ul><li>语雀</li><li>腾讯文档</li><li>石墨文档</li><li>印象笔记</li></ul></li><li>Mdnice</li></ul><h3 id="⭐️-HTML"><a href="#⭐️-HTML" class="headerlink" title="⭐️ HTML"></a>⭐️ HTML</h3><ul><li><p>💬 描述：用于定义一个网页结构的基本技术。</p></li><li><p>📚 资源：<a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML">https://developer.mozilla.org/zh-CN/docs/Learn/HTML</a></p></li><li><p>⭐️ 基本语法</p></li><li><p>⭐️ 标签</p><ul><li>分区 div</li><li>标题 h1 ~ h6</li><li>段落 p</li><li>图像 img</li><li>列表 ul &#x2F; ol</li><li>超链接 a</li><li>表单 form</li><li>表格 table</li><li>框架 iframe</li></ul></li><li><p>⭐️ 属性</p></li><li><p>✅ HTML5 特性</p><ul><li>语义化标签</li><li>浏览器支持</li><li>多媒体标签</li><li>Canvas 画布</li><li>❌ 内联 SVG</li><li>本地存储<ul><li>localStorage</li><li>sessionStorage</li><li>❌ Web SQL</li></ul></li><li>Web Workers</li><li>应用缓存（Cache Manifest）</li><li>无障碍</li></ul></li></ul><h3 id="⭐️-CSS"><a href="#⭐️-CSS" class="headerlink" title="⭐️ CSS"></a>⭐️ CSS</h3><ul><li><p>💬 描述：层叠样式表，用于设计风格和布局。</p></li><li><p>📚 资源：<a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS">https://developer.mozilla.org/zh-CN/docs/Learn/CSS</a></p></li><li><p>⭐️ 基本语法</p></li><li><p>⭐️ 引入方式</p><ul><li>行内样式</li><li>内部样式表</li><li>外部样式表</li></ul></li><li><p>⭐️ 选择器</p><ul><li>通用选择器</li><li>标签选择器</li><li>id 选择器</li><li>class 选择器</li><li>属性选择器</li><li>派生选择器<ul><li>后代选择器</li><li>子元素选择器</li><li>相邻兄弟选择器</li></ul></li><li>组合选择器</li><li>伪选择器</li><li>选择器优先级</li></ul></li><li><p>⭐️ 属性</p><ul><li>单位<ul><li>px</li><li>em</li><li>rem</li><li>vw</li><li>vh</li></ul></li><li>背景</li><li>文本</li><li>字体</li><li>列表</li><li>表格</li></ul></li><li><p>⭐️ 文档流</p><ul><li>标准流</li><li>浮动流</li><li>定位流</li></ul></li><li><p>⭐️ 内联元素 &#x2F; 块状元素</p></li><li><p>⭐️ 盒子模型</p><ul><li>content</li><li>padding</li><li>border</li><li>margin</li></ul></li><li><p>⭐️ 浮动</p><ul><li>设置浮动 float</li><li>清除浮动 clear</li></ul></li><li><p>⭐️ 定位</p><ul><li>static</li><li>absolute</li><li>fixed</li><li>relative</li><li>sticky</li></ul></li><li><p>⭐️ 层叠规则</p></li><li><p>❗ BFC 和 IFC 机制</p></li><li><p>CSS3</p><ul><li>⭐️ 响应式布局<ul><li>媒体查询</li><li>Flex 布局</li><li>Grid 布局</li><li>瀑布流</li></ul></li><li>动画</li><li>过渡</li><li>渐变</li><li>背景</li><li>边框</li><li>圆角</li><li>字体</li><li>2D &#x2F; 3D 转换</li></ul></li></ul><h3 id="⭐️-JavaScript"><a href="#⭐️-JavaScript" class="headerlink" title="⭐️ JavaScript"></a>⭐️ JavaScript</h3><ul><li><p>💬 描述：具有函数优先的轻量级，解释型或即时编译型的编程语言。</p></li><li><p>📚 资源：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript</a></p></li><li><p>⭐️ 基本语法</p></li><li><p>⭐️ 数据类型</p><ul><li>值类型<ul><li>字符串 String</li><li>数组 Number</li><li>布尔 Boolean</li><li>空值 Null</li><li>未定义 Undefined</li><li>Symbol</li></ul></li><li>引用类型<ul><li>对象 Object</li><li>数组 Array</li><li>函数 Function</li></ul></li></ul></li><li><p>✅ 数据类型转换</p></li><li><p>✅ 函数</p><ul><li>⭐️ 概念</li><li>⭐️ 自定义函数</li><li>调用方式<ul><li>⭐️ 全局调用</li><li>构造函数调用</li><li>⭐️ 函数方法调用</li><li>apply</li><li>call</li></ul></li><li>✅❗ 闭包</li></ul></li><li><p>✅ 对象</p><ul><li>概念</li><li>this</li><li>原型链和继承</li><li>常用对象<ul><li>数字 Number</li><li>字符串 String 对象</li><li>日期 Date 对象</li><li>数组 Array</li><li>布尔 Boolean</li><li>算数 Math</li></ul></li><li>自定义对象</li></ul></li><li><p>✅❗ 作用域（作用域链）</p></li><li><p>✅ BOM API</p></li><li><p>⭐️ DOM API</p></li><li><p>⭐️ JSON</p></li><li><p>⭐️ Ajax</p></li><li><p>✅ JavaScript 执行机制</p></li></ul><h4 id="✅-ES6-特性"><a href="#✅-ES6-特性" class="headerlink" title="✅ ES6+ 特性"></a>✅ ES6+ 特性</h4><ul><li><p>💬 描述：新引入的 JavaScript 语法特性。</p></li><li><p>📚 资源：ES6 入门教程 <a href="https://es6.ruanyifeng.com/">https://es6.ruanyifeng.com/</a></p></li><li><p>let 和 const</p></li><li><p>变量解构赋值</p></li><li><p>对象扩展和新增方法</p></li><li><p>Symbol</p></li><li><p>Set 和 Map 数据结构</p></li><li><p>⭐️❗ Promise &amp; async &#x2F; await 异步编程</p></li><li><p>Generator 函数异步编程</p></li></ul><h2 id="二、巩固基础"><a href="#二、巩固基础" class="headerlink" title="二、巩固基础"></a>二、巩固基础</h2><ul><li><p>💬 描述：学习前端、计算机、软件开发相关基础知识，并复习巩固上阶段学到的前端三件套。</p></li><li><p>📚 资源</p><ul><li>《JavaScript 高级程序设计》：<a href="https://www.code-nav.cn/rd/?rid=28ee4e3e606b1e1a0e3cfd8952d172cf">https://www.code-nav.cn/rd/?rid=28ee4e3e606b1e1a0e3cfd8952d172cf</a></li><li>《JavaScript 忍者秘籍》：<a href="https://www.code-nav.cn/rd/?rid=28ee4e3e606b16c00e3c5b18609e3dc2">https://www.code-nav.cn/rd/?rid=28ee4e3e606b16c00e3c5b18609e3dc2</a></li></ul></li><li><p>🎯 目标：熟悉前端三件套语法，尤其是 JavaScript，并了解互联网、域名、浏览器、服务器等，扎实前端程序员的基本功，为下面进入实战开发做准备。</p></li></ul><h3 id="前端基础知识"><a href="#前端基础知识" class="headerlink" title="前端基础知识"></a>前端基础知识</h3><ul><li><p>✅ 互联网</p></li><li><p>⭐️ 域名</p></li><li><p>⭐️ DNS</p></li><li><p>⭐️ 服务器</p></li><li><p>✅ 浏览器</p><ul><li>浏览器 DOM 事件流 &#x2F; 事件委托</li><li>⭐️ 浏览器加载顺序</li><li>⭐️ 浏览器渲染过程</li><li>浏览器事件循环</li><li>浏览器同源策略</li><li>❗ 跨域解决方案</li><li>浏览器缓存</li><li>控制台调试技巧</li></ul></li><li><p>✅ HTTP</p><ul><li>❗ HTTP 请求过程</li><li>常见 HTTP 协议<ul><li>HTTP 1.0</li><li>⭐️ HTTP 1.1</li><li>HTTP 2</li><li>HTTP 3</li></ul></li><li>⭐️ HTTP 请求类别</li><li>⭐️ 常见状态码<ul><li>1xx 信息</li><li>2xx 成功</li><li>3xx 重定向</li><li>4xx 客户端错误</li><li>5xx 服务器错误</li></ul></li><li>WebSocket</li><li>⭐️ Cookie</li><li>Session</li><li>⭐️ HTTPS</li></ul></li></ul><h3 id="计算机基础"><a href="#计算机基础" class="headerlink" title="计算机基础"></a>计算机基础</h3><h4 id="✅-算法和数据结构"><a href="#✅-算法和数据结构" class="headerlink" title="✅ 算法和数据结构"></a>✅ 算法和数据结构</h4><ul><li><p>⭐️ 时间 &#x2F; 空间复杂度分析</p></li><li><p>数据结构</p><ul><li>数组</li><li>字符串</li><li>队列</li><li>栈</li><li>链表</li><li>集合</li><li>哈希表</li><li>二叉树</li></ul></li><li><p>算法</p><ul><li>排序</li><li>双指针</li><li>查找</li><li>分治</li><li>动态规划</li><li>递归</li><li>回溯</li><li>贪心</li><li>位运算</li><li>DFS</li><li>BFS</li><li>图</li></ul></li></ul><h4 id="✅-计算机网络"><a href="#✅-计算机网络" class="headerlink" title="✅ 计算机网络"></a>✅ 计算机网络</h4><ul><li>HTTP 协议</li><li>网络模型</li><li>UDP &#x2F; TCP 协议</li></ul><h4 id="✅-操作系统"><a href="#✅-操作系统" class="headerlink" title="✅ 操作系统"></a>✅ 操作系统</h4><ul><li>进程、线程</li><li>进程 &#x2F; 线程间通讯方式</li><li>进程调度算法</li><li>进程 &#x2F; 线程状态</li><li>死锁</li><li>内存管理</li></ul><h3 id="软件开发基础"><a href="#软件开发基础" class="headerlink" title="软件开发基础"></a>软件开发基础</h3><h4 id="✅-设计模式"><a href="#✅-设计模式" class="headerlink" title="✅ 设计模式"></a>✅ 设计模式</h4><ul><li>单例模式</li><li>代理模式</li><li>工厂模式</li><li>装饰者模式</li><li>观察者模式</li><li>策略模式</li><li>门面模式</li></ul><h4 id="⭐️-Git-版本控制"><a href="#⭐️-Git-版本控制" class="headerlink" title="⭐️ Git 版本控制"></a>⭐️ Git 版本控制</h4><ul><li>常用命令</li></ul><h4 id="✅-Linux-服务器"><a href="#✅-Linux-服务器" class="headerlink" title="✅ Linux 服务器"></a>✅ Linux 服务器</h4><ul><li>常用命令</li></ul><h4 id="✅-正则表达式"><a href="#✅-正则表达式" class="headerlink" title="✅ 正则表达式"></a>✅ 正则表达式</h4><h2 id="三、前端工程化"><a href="#三、前端工程化" class="headerlink" title="三、前端工程化"></a>三、前端工程化</h2><ul><li><p>💬 描述：前端工程化是使用软件工程的技术和方法来进行前端的开发流程、技术、工具、经验等规范化、标准化，其主要目的为了提高开发过程中的开发效率，减少不必要的重复工作时间。</p></li><li><p>📚 资源</p><ul><li>什么是前端工程化？<a href="https://www.zhihu.com/question/433854153/answer/1713597311">https://www.zhihu.com/question/433854153/answer/1713597311</a></li></ul></li><li><p>🎯 目标：至少学会一门主流的前端开发框架（Vue &#x2F; React），并配合脚手架、组件库、工具等从 0 开始独立搭建并开发一个完整的前端网站，可以试着仿一些知名站点。要求遵循企业开发规范，将项目代码提交到代码仓库中，并独立发布上线，供他人访问。此外，建议抓住机会参与一些团队项目，感受团队开发模式和前端工程化的优势。</p></li></ul><h3 id="⭐️-研发流程"><a href="#⭐️-研发流程" class="headerlink" title="⭐️ 研发流程"></a>⭐️ 研发流程</h3><ol><li>技术选型</li><li>初始化</li><li>开发</li><li>本地测试</li><li>代码提交</li><li>编译、打包、构建</li><li>部署</li><li>集成测试</li><li>发布上线</li><li>监控运维</li></ol><h3 id="⭐️-代码托管"><a href="#⭐️-代码托管" class="headerlink" title="⭐️ 代码托管"></a>⭐️ 代码托管</h3><ul><li><p>💬 描述：集中存储、备份你的代码，还能和团队成员协作开发。</p></li><li><p>⭐️ GitHub</p></li><li><p>Gitee</p></li><li><p>GitLab</p></li></ul><h3 id="✅-Node-JS"><a href="#✅-Node-JS" class="headerlink" title="✅ Node.JS"></a>✅ Node.JS</h3><ul><li>💬 描述：一个开源与跨平台的 JavaScript 运行时环境。 它是一个可用于几乎任何项目的流行工具！</li><li>📚 资源<ul><li>Node.js 官方教程：<a href="http://nodejs.cn/learn">http://nodejs.cn/learn</a></li><li>Node.js 入门：<a href="https://cnodejs.org/getstart">https://cnodejs.org/getstart</a></li></ul></li></ul><h4 id="⭐️-包管理"><a href="#⭐️-包管理" class="headerlink" title="⭐️ 包管理"></a>⭐️ 包管理</h4><ul><li><p>💬 描述：用于安装 Node.js 的扩展、工具等。</p></li><li><p>⭐️ npm</p></li><li><p>⭐️ yarn</p></li><li><p>❌ bower</p></li><li><p>✅ npx</p></li></ul><h4 id="开发框架"><a href="#开发框架" class="headerlink" title="开发框架"></a>开发框架</h4><ul><li>Express</li><li>Koa</li><li>Egg</li></ul><h3 id="开发框架-1"><a href="#开发框架-1" class="headerlink" title="开发框架"></a>开发框架</h3><ul><li>💬 描述：解决特定的问题,提高<em>开发</em>效率、简化我们的代码复杂度。</li></ul><h4 id="⭐️-CSS-框架"><a href="#⭐️-CSS-框架" class="headerlink" title="⭐️ CSS 框架"></a>⭐️ CSS 框架</h4><ul><li>✅ BootStrap</li><li>⭐️ Tailwind CSS</li></ul><h4 id="⭐️-JavaScript-框架"><a href="#⭐️-JavaScript-框架" class="headerlink" title="⭐️ JavaScript 框架"></a>⭐️ JavaScript 框架</h4><h5 id="⭐️-Vue"><a href="#⭐️-Vue" class="headerlink" title="⭐️ Vue"></a>⭐️ Vue</h5><ul><li>Vue Router</li><li>Vuex</li></ul><h5 id="⭐️-React"><a href="#⭐️-React" class="headerlink" title="⭐️ React"></a>⭐️ React</h5><ul><li>React DOM</li><li>React Router</li><li>Redux</li><li>MobX</li><li>React Hooks</li></ul><h5 id="❌-Angular"><a href="#❌-Angular" class="headerlink" title="❌ Angular"></a>❌ Angular</h5><ul><li>RxJS</li><li>NgRx</li></ul><h5 id="✅-Svelte"><a href="#✅-Svelte" class="headerlink" title="✅ Svelte"></a>✅ Svelte</h5><h5 id="✅-UmiJS"><a href="#✅-UmiJS" class="headerlink" title="✅ UmiJS"></a>✅ UmiJS</h5><h3 id="封装库"><a href="#封装库" class="headerlink" title="封装库"></a>封装库</h3><h4 id="⭐️-组件库"><a href="#⭐️-组件库" class="headerlink" title="⭐️ 组件库"></a>⭐️ 组件库</h4><ul><li>✅ LayUI</li><li>⭐️ ElementUI（Vue）</li><li>✅ VantUI（Vue）</li><li>⭐️ Ant Design（React）</li><li>Material UI</li></ul><h4 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h4><ul><li>✅ AntV</li><li>Apache ECharts</li><li>HighCharts</li><li>D3.js</li></ul><h4 id="组件（插件）"><a href="#组件（插件）" class="headerlink" title="组件（插件）"></a>组件（插件）</h4><ul><li>富文本编辑器</li><li>弹窗</li><li>轮播图</li></ul><h4 id="工具库"><a href="#工具库" class="headerlink" title="工具库"></a>工具库</h4><ul><li>✅ jQuery</li><li>✅ Lodash</li><li>✅ Axios</li><li>时间处理 Moment.js</li></ul><h4 id="动效库"><a href="#动效库" class="headerlink" title="动效库"></a>动效库</h4><ul><li>✅ Animate.css</li><li>Ant Motion</li></ul><h4 id="字体图标库"><a href="#字体图标库" class="headerlink" title="字体图标库"></a>字体图标库</h4><ul><li>⭐️ IconFont</li><li>IconPark</li><li>Font Awesome</li></ul><h3 id="⭐️-脚手架"><a href="#⭐️-脚手架" class="headerlink" title="⭐️ 脚手架"></a>⭐️ 脚手架</h3><ul><li><p>💬 描述：快速生成新项目的目录模板，提升开发效率和开发舒适性。</p></li><li><p>📚 资源：<a href="https://www.jianshu.com/p/25ce8cf2e6a7">https://www.jianshu.com/p/25ce8cf2e6a7</a></p></li><li><p>Vue CLI</p></li><li><p>create-react-app</p></li><li><p>✅ Yeoman</p></li></ul><h3 id="⭐️-前端架构设计"><a href="#⭐️-前端架构设计" class="headerlink" title="⭐️ 前端架构设计"></a>⭐️ 前端架构设计</h3><ul><li><p>💬 描述：一系列工具和流程的集合，旨在提升前端代码的质量，并实现高效可持续的工作流。</p></li><li><p>模块化</p></li><li><p>组件化</p></li><li><p>✅ MVVM</p></li><li><p>设计原则</p></li><li><p>⭐️ SPA 单页应用</p></li><li><p>⭐️ 多页应用</p></li><li><p>✅ 前端路由</p></li><li><p>PWA</p></li><li><p>有损服务</p></li></ul><h4 id="✅-服务端渲染"><a href="#✅-服务端渲染" class="headerlink" title="✅ 服务端渲染"></a>✅ 服务端渲染</h4><ul><li><p>💬 描述：在服务端渲染 HTML 页面的模式。</p></li><li><p>📚 资源：<a href="https://www.zhihu.com/question/379563505">https://www.zhihu.com/question/379563505</a></p></li><li><p>Next.js（React）</p></li><li><p>Nuxt.js（Vue）</p></li><li><p>❌ Universal（Angular）</p></li></ul><h4 id="BFF"><a href="#BFF" class="headerlink" title="BFF"></a>BFF</h4><ul><li><p>💬 描述：Backend For Frontend（服务于前端的后端），就是服务器设计 API 时会考虑前端的使用，并在服务端直接进行业务逻辑的处理。</p></li><li><p>📚 资源：<a href="https://www.jianshu.com/p/eb1875c62ad3">https://www.jianshu.com/p/eb1875c62ad3</a></p></li><li><p>GraphQL</p></li></ul><h4 id="✅-微前端"><a href="#✅-微前端" class="headerlink" title="✅ 微前端"></a>✅ 微前端</h4><ul><li><p>💬 描述：将前端应用分解成一些更小、更简单的能够独立开发、测试、部署的小块，从而解决庞大的一整块后端服务带来的变更与扩展方面的限制。</p></li><li><p>📚 资源：<a href="https://zhuanlan.zhihu.com/p/96464401">https://zhuanlan.zhihu.com/p/96464401</a></p></li><li><p>qiankun</p></li><li><p>single-spa</p></li></ul><h3 id="CSS-in-JS"><a href="#CSS-in-JS" class="headerlink" title="CSS in JS"></a>CSS in JS</h3><ul><li><p>💬 描述：用 JavaScript 来写 CSS。</p></li><li><p>📚 资源：<a href="http://www.ruanyifeng.com/blog/2017/04/css_in_js.html">http://www.ruanyifeng.com/blog/2017/04/css_in_js.html</a></p></li><li><p>内联样式</p></li><li><p>声明样式</p></li><li><p>引入样式</p></li></ul><h4 id="⭐️-CSS-模块化"><a href="#⭐️-CSS-模块化" class="headerlink" title="⭐️ CSS 模块化"></a>⭐️ CSS 模块化</h4><ul><li>⭐️ CSS Modules</li><li>✅ styled-components</li><li>✅ Styled JSX</li><li>Emotion</li></ul><h3 id="✅-开发调试"><a href="#✅-开发调试" class="headerlink" title="✅ 开发调试"></a>✅ 开发调试</h3><ul><li><p>💬 描述：本地开发时热更新，提升开发效率。</p></li><li><p>webpack-dev-server</p></li><li><p>serve</p></li></ul><h4 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h4><ul><li><p>💬 描述：将内网外网通过 nat 隧道打通，让内网的网站、数据让外网可以访问。</p></li><li><p>Ngrok</p></li><li><p>NATAPP</p></li></ul><h3 id="⭐️-CSS-预编译"><a href="#⭐️-CSS-预编译" class="headerlink" title="⭐️ CSS 预编译"></a>⭐️ CSS 预编译</h3><ul><li><p>💬 描述：使用新的扩展语言以增强 CSS 的能力，并通过预编译的方式将其转换为浏览器认识的 CSS 代码。</p></li><li><p>⭐️ SASS</p></li><li><p>✅ PostCSS</p></li><li><p>Stylus</p></li><li><p>❌ LESS</p></li></ul><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h4 id="测试分类"><a href="#测试分类" class="headerlink" title="测试分类"></a>测试分类</h4><ul><li>⭐️ UT 单元测试</li><li>SIT 系统集成测试</li><li>E2E 端到端测试</li><li>UAT 用户验收测试</li></ul><h4 id="✅-Mock"><a href="#✅-Mock" class="headerlink" title="✅ Mock"></a>✅ Mock</h4><ul><li><p>💬 描述：通过随机数据，模拟各种场景，增加单元测试的真实性。</p></li><li><p>Mock.js</p></li></ul><h4 id="✅-测试框架"><a href="#✅-测试框架" class="headerlink" title="✅ 测试框架"></a>✅ 测试框架</h4><ul><li><p>✅ Jest</p></li><li><p>Enzyme</p></li><li><p>✅ Puppeteer（Headless Browser）</p></li><li><p>Mocha</p></li><li><p>Jasmine</p></li></ul><h3 id="✅-代码质量"><a href="#✅-代码质量" class="headerlink" title="✅ 代码质量"></a>✅ 代码质量</h3><h4 id="开发规范"><a href="#开发规范" class="headerlink" title="开发规范"></a>开发规范</h4><ul><li><p>💬 描述：依照规范写出的代码会更加合理。</p></li><li><p>📚 资源：Airbnb 代码规范 <a href="https://github.com/BingKui/javascript-zh">https://github.com/BingKui/javascript-zh</a></p></li><li><p>CSS Style Guide</p></li><li><p>JavaScript Style Guide</p></li></ul><h4 id="类型校验"><a href="#类型校验" class="headerlink" title="类型校验"></a>类型校验</h4><ul><li>TypeScript</li></ul><h4 id="代码检查"><a href="#代码检查" class="headerlink" title="代码检查"></a>代码检查</h4><ul><li>ESLint</li><li>StyleLint</li></ul><h4 id="代码风格"><a href="#代码风格" class="headerlink" title="代码风格"></a>代码风格</h4><ul><li><p>💬 描述：根据配置自动格式化代码，统一格式。</p></li><li><p>Prettier</p></li></ul><h4 id="提交规范"><a href="#提交规范" class="headerlink" title="提交规范"></a>提交规范</h4><ul><li>约定式提交</li></ul><h4 id="提交检查"><a href="#提交检查" class="headerlink" title="提交检查"></a>提交检查</h4><ul><li><p>💬 描述：在提交代码时触发一些操作，比如检查代码的风格等。</p></li><li><p>pre-commit</p></li><li><p>husky</p></li></ul><h3 id="构建工具"><a href="#构建工具" class="headerlink" title="构建工具"></a>构建工具</h3><h4 id="自动化构建"><a href="#自动化构建" class="headerlink" title="自动化构建"></a>自动化构建</h4><ul><li><p>💬 描述：按照配置好的流程自动打包构建项目，提高团队的开发效率，降低项目的维护难度。</p></li><li><p>Gulp</p></li><li><p>✅ npm script</p></li><li><p>Grunt</p></li></ul><h4 id="打包工具"><a href="#打包工具" class="headerlink" title="打包工具"></a>打包工具</h4><ul><li><p>💬 描述：将各种零散的📚 资源文件打包为可在浏览器等环境运行的代码。</p></li><li><p>⭐️ Webpack</p></li><li><p>✅ Rollup</p></li><li><p>✅ Vite</p></li><li><p>Parcel</p></li><li><p>Snowpack</p></li></ul><h3 id="CI-x2F-CD"><a href="#CI-x2F-CD" class="headerlink" title="CI &#x2F; CD"></a>CI &#x2F; CD</h3><ul><li>💬 描述：通过在应用开发阶段引入自动化来频繁向客户交付应用。</li><li>GitLab CI</li><li>✅ Jenkins</li></ul><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="⭐️-Web-服务器"><a href="#⭐️-Web-服务器" class="headerlink" title="⭐️ Web 服务器"></a>⭐️ Web 服务器</h4><h5 id="⭐️-Nginx"><a href="#⭐️-Nginx" class="headerlink" title="⭐️ Nginx"></a>⭐️ Nginx</h5><ul><li><p>💬 描述：高性能的 HTTP 和反向代理 web 服务器。</p></li><li><p>📚 资源：腾讯云动手实验室 <a href="https://cloud.tencent.com/developer/labs/gallery">https://cloud.tencent.com/developer/labs/gallery</a></p></li><li><p>反向代理</p></li><li><p>解决跨域</p></li><li><p>改写请求</p></li></ul><h5 id="✅-Apache"><a href="#✅-Apache" class="headerlink" title="✅ Apache"></a>✅ Apache</h5><h4 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h4><h5 id="✅-Docker"><a href="#✅-Docker" class="headerlink" title="✅ Docker"></a>✅ Docker</h5><ul><li><p>💬 描述：容器是一个标准化的软件单元，它将代码及其所有依赖关系打包，以便应用程序从一个计算环境可靠快速地运行到另一个计算环境。Docker容器镜像是一个轻量的独立的可执行的软件包。包含程序运行的时候所需的一切：代码，运行时间，系统工具，系统库和设置。</p></li><li><p>📚 资源：Docker 从入门到实践 <a href="https://vuepress.mirror.docker-practice.com/">https://vuepress.mirror.docker-practice.com/</a></p></li><li><p>Dockerfile</p></li></ul><h5 id="Kubernetes"><a href="#Kubernetes" class="headerlink" title="Kubernetes"></a>Kubernetes</h5><h4 id="部署策略"><a href="#部署策略" class="headerlink" title="部署策略"></a>部署策略</h4><ul><li>全量发布</li><li>蓝绿部署</li><li>滚动发布</li><li>灰度发布</li></ul><h3 id="监控告警"><a href="#监控告警" class="headerlink" title="监控告警"></a>监控告警</h3><ul><li>前端埋点</li><li>错误监控</li><li>性能监控</li><li>行为监控</li></ul><h2 id="四、前端优化"><a href="#四、前端优化" class="headerlink" title="四、前端优化"></a>四、前端优化</h2><ul><li><p>💬 描述：通过分析和优化手段，提高网站的性能和用户体验。</p></li><li><p>🎯 目标：实践前端优化方法，从多个方面优化自己做过的项目，最好能将优化后的网站与原网站进行对比，得到一些数据和体验上的明显提升。</p></li></ul><h3 id="✅-性能优化"><a href="#✅-性能优化" class="headerlink" title="✅ 性能优化"></a>✅ 性能优化</h3><h4 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h4><ul><li><p>💬 描述：用于衡量一个 Web 页面的性能。</p></li><li><p>📚 资源：<a href="https://juejin.cn/post/6844904153869713416">https://juejin.cn/post/6844904153869713416</a></p></li><li><p>FP（First Paint）</p><ul><li>💬 描述：从开始加载到浏览器首次绘制像素到屏幕上的时间，也就是页面在屏幕上首次发生视觉变化的时间。</li></ul></li><li><p>FCP（First Contentful Paint）</p><ul><li>💬 描述：浏览器首次绘制来自 DOM 的内容的时间。</li></ul></li><li><p>FMP（First Meaningful Paint）</p><ul><li>💬 描述：页面的主要内容绘制到屏幕上的时间。</li></ul></li><li><p>FSP（First Screen Paint）</p><ul><li>💬 描述：页面从开始加载到首屏内容全部绘制完成的时间，用户可以看到首屏的全部内容。</li></ul></li><li><p>TTI（Time to Interactive）</p><ul><li>💬 描述：表示网页第一次完全达到可交互状态的时间点，浏览器已经可以持续性的响应用户的输入。</li></ul></li></ul><h4 id="优化手段"><a href="#优化手段" class="headerlink" title="优化手段"></a>优化手段</h4><ul><li><p>性能监控</p><ul><li>Performance API</li></ul></li><li><p>样式优化</p></li><li><p>JavaScript 优化</p><ul><li>防抖</li><li>节流</li></ul></li><li><p>代码分割</p></li><li><p>📚 资源压缩</p></li><li><p>打包优化</p></li><li><p>服务器优化</p></li><li><p>缓存优化</p><ul><li>Service Worker</li></ul></li><li><p>动画性能</p></li><li><p>dns-prefetch</p></li><li><p>Lazy loading</p></li><li><p>优化启动性能</p><ul><li>异步化</li></ul></li><li><p>渲染优化</p></li><li><p>网络优化</p></li><li><p>移动端性能优化</p></li><li><p>✅ CDN</p><ul><li>💬 描述：内容分发网络，是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。</li><li>📚 资源：BootCDN <a href="https://www.bootcdn.cn/">https://www.bootcdn.cn/</a></li></ul></li></ul><h3 id="用户体验"><a href="#用户体验" class="headerlink" title="用户体验"></a>用户体验</h3><ul><li>设计系统</li><li>骨架屏</li></ul><h3 id="✅-兼容性"><a href="#✅-兼容性" class="headerlink" title="✅ 兼容性"></a>✅ 兼容性</h3><h4 id="浏览器兼容性"><a href="#浏览器兼容性" class="headerlink" title="浏览器兼容性"></a>浏览器兼容性</h4><ul><li>normalize.css</li><li>html5shiv.js</li><li>respond.js</li><li>Babel</li><li>Polyfill</li></ul><h4 id="屏幕分辨率兼容性"><a href="#屏幕分辨率兼容性" class="headerlink" title="屏幕分辨率兼容性"></a>屏幕分辨率兼容性</h4><h4 id="跨平台兼容性"><a href="#跨平台兼容性" class="headerlink" title="跨平台兼容性"></a>跨平台兼容性</h4><h3 id="SEO"><a href="#SEO" class="headerlink" title="SEO"></a>SEO</h3><ul><li><p>💬 描述：搜索引擎优化，利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名。</p></li><li><p>📚 资源：百度搜索📚 资源平台 <a href="https://ziyuan.baidu.com/cooperateresource/index">https://ziyuan.baidu.com/cooperateresource/index</a></p></li><li><p>robots.txt</p></li><li><p>description</p></li><li><p>keywords</p></li><li><p>SiteMap</p></li><li><p>HTML 标签优化</p></li><li><p>站内链接建设</p></li><li><p>友情链接</p></li></ul><h3 id="✅-安全"><a href="#✅-安全" class="headerlink" title="✅ 安全"></a>✅ 安全</h3><ul><li>⭐️ XSS</li><li>CSRF</li><li>反爬虫</li><li>SQL 注入</li><li>DDoS</li></ul><h2 id="五、前端生态"><a href="#五、前端生态" class="headerlink" title="五、前端生态"></a>五、前端生态</h2><ul><li><p>💬 描述：如今，前端领域的范围越来越广，出现了更多前端工程师需要了解和关注的技术。</p></li><li><p>🎯 目标：能用学到的前端技术去做更多的事情，比如开发个人博客、文档网站、小程序、APP 等。</p></li></ul><h3 id="⭐️-静态站点构建"><a href="#⭐️-静态站点构建" class="headerlink" title="⭐️ 静态站点构建"></a>⭐️ 静态站点构建</h3><h4 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h4><ul><li>React Static</li></ul><h4 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h4><ul><li>✅ Gatsby.js</li><li>✅ Docusaurus</li><li>Hugo</li><li>Hexo</li></ul><h4 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h4><ul><li>JekyII</li><li>⭐️ Docsify</li><li>VuePress</li><li>✅ Dumi</li></ul><h3 id="✅-大前端"><a href="#✅-大前端" class="headerlink" title="✅ 大前端"></a>✅ 大前端</h3><p>💬 描述：前端技术的融合更加紧密，应用的领域也更加广泛，前端领域的内容呈现多样化，除了网站外，还可以用前端技术跨平台开发 Android、iOS、小程序、虚拟现实、增强现实等。</p><h4 id="移动应用"><a href="#移动应用" class="headerlink" title="移动应用"></a>移动应用</h4><ul><li>Hybrid</li><li>WebView</li><li>React Native</li><li>Flutter</li></ul><h4 id="移动应用打包"><a href="#移动应用打包" class="headerlink" title="移动应用打包"></a>移动应用打包</h4><ul><li>Weex</li><li>Cordova</li><li>Phonegap</li><li>Ionic</li></ul><h4 id="桌面应用"><a href="#桌面应用" class="headerlink" title="桌面应用"></a>桌面应用</h4><ul><li>Electron</li><li>NW.js</li><li>Proton Native</li></ul><h4 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h4><ul><li>原生</li><li>WebView</li></ul><h4 id="跨端开发框架"><a href="#跨端开发框架" class="headerlink" title="跨端开发框架"></a>跨端开发框架</h4><ul><li>✅ uni-app</li><li>✅ Taro</li><li>Flutter</li><li>Chameleon</li><li>Wepy</li><li>Rax</li></ul><h4 id="移动端调试"><a href="#移动端调试" class="headerlink" title="移动端调试"></a>移动端调试</h4><ul><li>Chrome Dev Tools</li><li>Android Simulator</li><li>IOS Simulator</li></ul><h3 id="✅-Serverless"><a href="#✅-Serverless" class="headerlink" title="✅ Serverless"></a>✅ Serverless</h3><ul><li>💬 描述：一种构建和管理基于微服务架构的完整流程，允许你在服务部署级别而不是服务器部署级别来管理你的应用部署，你甚至可以管理某个具体功能或端口的部署，这就能让开发者快速迭代，更快速地开发软件。</li></ul><h3 id="✅-云开发"><a href="#✅-云开发" class="headerlink" title="✅ 云开发"></a>✅ 云开发</h3><ul><li><p>💬 描述：云端一体化的后端云服务 ，采用 Serverless 架构，免去了移动应用构建中繁琐的服务器搭建和运维。同时云开发提供的静态托管、命令行工具（CLI）、Flutter SDK 等能力降低了应用开发的门槛。使用云开发可以构建完整的小程序&#x2F;小游戏、H5、Web、移动 App 等应用。</p></li><li><p>✅ 腾讯云云开发</p></li><li><p>阿里云云开发</p></li></ul><h3 id="低代码"><a href="#低代码" class="headerlink" title="低代码"></a>低代码</h3><ul><li><p>💬 描述：无需编码（零代码）或通过少量代码就可以快速生成应用程序的开发平台。通过可视化进行应用程序开发的方法，使具有不同经验水平的开发人员可以通过图形化的用户界面，使用拖拽组件和模型驱动的逻辑来创建网页和移动应用程序。</p></li><li><p>腾讯云低码</p></li><li><p>阿里宜搭</p></li></ul><h2 id="六、前端求职"><a href="#六、前端求职" class="headerlink" title="六、前端求职"></a>六、前端求职</h2><ul><li><p>💬 描述：求职是一个漫长的过程，建议拉长战线，尽早准备。</p></li><li><p>🎯 目标：找到理想的工作。</p></li></ul><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><ul><li>2020 秋招面经汇总：<a href="https://www.nowcoder.com/discuss/205497">https://www.nowcoder.com/discuss/205497</a></li></ul><h3 id="简历"><a href="#简历" class="headerlink" title="简历"></a>简历</h3><ul><li>超级简历</li></ul><h3 id="面试题库"><a href="#面试题库" class="headerlink" title="面试题库"></a>面试题库</h3><ul><li>牛客前端工程师面试宝典：<a href="https://www.nowcoder.com/tutorial/96/f5212664ab664984882b00635066ded2">https://www.nowcoder.com/tutorial/96/f5212664ab664984882b00635066ded2</a></li><li>前端面试每日 3+1：<a href="https://github.com/haizlin/fe-interview">https://github.com/haizlin/fe-interview</a></li><li>React 面试题目 &amp; 题解：<a href="https://github.com/sudheerj/reactjs-interview-questions">https://github.com/sudheerj/reactjs-interview-questions</a></li></ul><h3 id="面经"><a href="#面经" class="headerlink" title="面经"></a>面经</h3><ul><li>前端面经汇总：<a href="https://www.nowcoder.com/discuss/experience?tagId=644">https://www.nowcoder.com/discuss/experience?tagId=644</a></li></ul><h3 id="面试实战"><a href="#面试实战" class="headerlink" title="面试实战"></a>面试实战</h3><ul><li>AI 模拟面试：<a href="https://www.nowcoder.com/interview/ai/cover?jobTagId=644">https://www.nowcoder.com/interview/ai/cover?jobTagId=644</a></li></ul><h2 id="七、前端未来"><a href="#七、前端未来" class="headerlink" title="七、前端未来"></a>七、前端未来</h2><ul><li><p>💬 描述：前端未来可能的发展趋势和热门技术。</p></li><li><p>🎯 目标：关注前沿，持续进步。</p></li><li><p>WebAssembly</p></li><li><p>智能 UI</p></li><li><p>React Server Component</p></li><li><p>CSS Houdini</p></li></ul><h3 id="WebComponents"><a href="#WebComponents" class="headerlink" title="WebComponents"></a>WebComponents</h3><ul><li>HTML templates（HTML模板）</li><li>Custom elements（自定义元素）</li><li>Shadow DOM（影子DOM）</li></ul><h2 id="我的前端学习路线"><a href="#我的前端学习路线" class="headerlink" title="我的前端学习路线"></a>我的前端学习路线</h2><p>虽然上面整理的学习路线知识点非常多，但是大家也别太担心，其实按照一定顺序和方法来学习，并不会很难，聊聊我的学习经历。</p><h3 id="1-快速入门，培养兴趣"><a href="#1-快速入门，培养兴趣" class="headerlink" title="1. 快速入门，培养兴趣"></a>1. 快速入门，培养兴趣</h3><p>刚开始学习前端时，一定要以培养兴趣、快速入门为目标。我入门前端时，由于没有基础、啥都不懂，因此选择在线实战教程网站来学习，跟着教程案例一行行把代码敲下来，实时浏览显示效果，很轻松地就把 HTML、CSS、JavaScript 的语法基础过了一遍。但是这时，我对看过的知识点没有什么印象，基本是看了就忘，当我想要自己写一个网站，也根本无从下手。</p><p>于是，我开始试着死记硬背代码，结果发现背了之后还是不会写。那干脆一不做二不休，直接打开编辑器和教程网站，把之前在线实战时敲过的代码复制粘贴到编辑器中，然后再修改保存，到浏览器中打开文件。这样虽然要在编辑器和浏览器中来回切换，但起码能看到自己的网页文件运行的效果了。后来，我利用浏览器开发者工具提升了自己开发网站的调试效率，敲出的代码达不到满意的效果时，就再去查，再改，再浏览，最后终于完成了一个留言板网站！</p><p>通过这件事，我明白了一个道理，既然记不住知识，那就先别强行记忆，上手多写，忘了就去查不就好了？不要担心自己知识不够做不出来，只要你去试，都一定能实现。</p><h3 id="2-多看多写，巩固基础"><a href="#2-多看多写，巩固基础" class="headerlink" title="2. 多看多写，巩固基础"></a>2. 多看多写，巩固基础</h3><p>在这种操作下，我虽然能使用基础三件套开发简易网站了，但做的很慢，还老出问题。于是，我开始完整地看了几本前端入门和项目实战书籍，有三件套入门的，也有响应式网站设计的，还有 JavaScript 综合讲解的，以及一套完整的视频教程，通过这些来复习巩固之前学过的知识，打好了基础，并且了解了更多实战教程上没见到的知识。</p><p>看书和视频的过程中，我跟着做了几个简易的网站，也是边看边做。在这之后，我发现自己渐渐地能够脱离文档来写网站了！</p><h3 id="3-框架学习，学以致用"><a href="#3-框架学习，学以致用" class="headerlink" title="3. 框架学习，学以致用"></a>3. 框架学习，学以致用</h3><p>但是，总感觉开发网站时，什么都要自己写，重复的代码写一大堆，很麻烦。于是，我试着上网搜了解决这些问题的方法，发现可以用组件库减少重复编写 HTML 和 CSS 代码，于是学了 LayUI，其实和之前一样的，就是打开官网找到要用的组件，然后复制到项目中修改就行了，写的多了竟然还真记住了一些（虽然这个没必要记）。</p><p>界面和样式代码简化了，但是 JavaScript 写的我依旧头疼。于是我决定进入下一个阶段的学习，当时先看了本书叫《锋利的 jQuery》来学习 jQuery，学会之后使用它趁热打铁做了几个网站，发现的确能大大简化繁琐的 JavaScript DOM 操作，让我尝到了甜头，又有了继续学习前端的动力。</p><p>在那之后大概半年，我开始学习主流前端框架 Vue，也是跟着视频教程学，并且结合 ElementUI 组件库开发了一个响应式网站。不得不说，习惯了用原生 JavaScript 和 jQuery 开发后，再去用 Vue 开发，真的是爽飞了，小有成就感。</p><h3 id="4-根据需要，自主学习"><a href="#4-根据需要，自主学习" class="headerlink" title="4. 根据需要，自主学习"></a>4. 根据需要，自主学习</h3><p>在那之后，我就是通过不断地做项目来积累经验，既然编程知识太多学不完，那我就随需随学，逐渐拓宽自己的知识面。举个例子，我要做一个移动端 H5 页面，那就去搜 Vue 的移动端组件库，学会了 MintUI、VantUI 等；项目中要处理日期，那我就去搜日期处理库，学会了 Moment.js；项目重复文件和代码太多，我就去网上搜一些组件化、模块化的最佳实践；项目代码太大、加载太慢，我就去网上搜一些前端压缩、性能优化的方式；要把开发好的项目变成 APP，那我就去网上搜到了 Cordova 等打包工具；跟其他同学一起做项目时比较混乱、开发效率低，我就去搜了一些代码规范、前端工程化等；遇到 Bug 时，也是自己去网上搜索解决方案，并且还要看看有没有知识点是我遗漏的，我会再去弥补学习。通过不断实践、不断遇到问题和自主解决问题，我始终保持着学习的积极性，学到了越来越多前端的知识，并通过归纳总结来加深印象。</p><h3 id="5-渐入佳境，拓宽视野"><a href="#5-渐入佳境，拓宽视野" class="headerlink" title="5. 渐入佳境，拓宽视野"></a>5. 渐入佳境，拓宽视野</h3><p>在那之后，我学前端技术非常快了，像 React、TypeScript、Redux、Dva、Umi、Lerna 等等都随用随学，随学随用。此外，我不仅仅关注前端网页开发本身，还同时关注前端的生态和发展，学习了微前端、Serverless、云开发、低代码等技术，因此个人的能力提升也很大。如今在鹅厂工作中也是，面对各种不同技术栈的前端项目，我都能迎难而上，毕竟不会就学嘛！</p><p>哦，写的渐入佳境，我都忘了，自己是一名后端工程师，还搁这儿吹牛逼呢（ 所以本路线难免会有不专业的地方，请大家见谅~</p><h3 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h3><p>总结一下，学前端的路线其实就一句话：基础三件套 &#x3D;&gt; 巩固基础 &#x3D;&gt; 学习框架 &#x3D;&gt; 多做项目 &#x3D;&gt; 按需学习 &#x3D;&gt; 拓宽视野。还有一个学任何编程技术都要注意的点，全程多敲代码！多敲代码！多敲代码！</p><h2 id="尾声-持续学习"><a href="#尾声-持续学习" class="headerlink" title="尾声 - 持续学习"></a>尾声 - 持续学习</h2><h3 id="优秀前端人的特质"><a href="#优秀前端人的特质" class="headerlink" title="优秀前端人的特质"></a>优秀前端人的特质</h3><ul><li><p>深厚的功底</p></li><li><p>良好的编码习惯</p></li><li><p>发现问题的洞察力</p></li><li><p>思维灵活，善于思考</p></li><li><p>追求技术，紧跟前沿</p></li><li><p>有创造力，有行动力</p></li><li><p>追求用户体验</p></li><li><p>时刻保持好奇</p></li><li><p>全栈意识</p></li><li><p>解决问题的能力强</p></li><li><p>懂得合作和高效沟通</p></li><li><p>重视工作，同样重视生活</p></li><li><p>责任心和全局观</p></li><li><p>个人的进步能带动团队的进步</p></li></ul><h3 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h3><ul><li>编程导航（包含以下所有资源，强烈推荐 👍）：<a href="https://www.code-nav.cn/">https://www.code-nav.cn</a></li><li>freeCodecamp 在线编程：<a href="https://learn.freecodecamp.one/">https://learn.freecodecamp.one/</a></li><li>阿里云前端实战学习：<a href="https://edu.aliyun.com/roadmap/frontend">https://edu.aliyun.com/roadmap/frontend</a></li><li>W3Cschool 编程入门实战：<a href="https://www.w3cschool.cn/codecamp/">https://www.w3cschool.cn/codecamp/</a></li><li>腾讯云动手实验室：<a href="https://cloud.tencent.com/developer/labs/gallery">https://cloud.tencent.com/developer/labs/gallery</a></li><li>pink老师前端入门教程：<a href="https://www.bilibili.com/video/BV14J4114768">https://www.bilibili.com/video/BV14J4114768</a></li><li>MDN 前端文档：<a href="https://developer.mozilla.org/zh-CN">https://developer.mozilla.org/zh-CN</a></li><li>Node.js 入门：<a href="https://cnodejs.org/getstart">https://cnodejs.org/getstart</a></li><li>前端清单：<a href="https://cheatsheets.devtool.tech/">https://cheatsheets.devtool.tech/</a></li><li>前端小课：<a href="https://lefex.github.io/">https://lefex.github.io/</a></li><li>被删的前端游乐场：<a href="http://www.godbasin.com/">http://www.godbasin.com/</a></li><li>《ES6 入门教程》：<a href="https://es6.ruanyifeng.com/">https://es6.ruanyifeng.com/</a></li><li>谷歌 Web 开发者：<a href="https://developers.google.com/web">https://developers.google.com/web</a></li><li>JavaScript 明星项目：<a href="https://risingstars.js.org/2020/zh">https://risingstars.js.org/2020/zh</a></li><li>Best of JS：<a href="https://bestofjs.org/">https://bestofjs.org/</a></li><li>Codewars：<a href="https://www.codewars.com/?language=javascript">https://www.codewars.com/?language=javascript</a></li><li>Vue.js examples：<a href="https://vuejsexamples.com/">https://vuejsexamples.com/</a></li></ul><h3 id="前端资讯"><a href="#前端资讯" class="headerlink" title="前端资讯"></a>前端资讯</h3><ul><li>掘金资讯：<a href="https://juejin.cn/news">https://juejin.cn/news</a></li><li>InfoQ：<a href="https://www.infoq.cn/topic/Front-end">https://www.infoq.cn/topic/Front-end</a></li><li>daily.dev：<a href="https://daily.dev/">https://daily.dev/</a></li></ul><h3 id="技术博客"><a href="#技术博客" class="headerlink" title="技术博客"></a>技术博客</h3><ul><li><p>掘金：<a href="https://juejin.cn/frontend">https://juejin.cn/frontend</a></p></li><li><p>腾讯前端 IMWEB：<a href="http://imweb.io/">http://imweb.io</a></p></li><li><p>腾讯 Web 前端团队 Alloy Team：<a href="http://www.alloyteam.com/">http://www.alloyteam.com</a></p></li><li><p>淘宝前端团队：<a href="http://taobaofed.org/">http://taobaofed.org</a></p></li><li><p>百度 Web 前端研发部：<a href="http://fex.baidu.com/">http://fex.baidu.com</a></p></li><li><p>京东凹凸实验室：<a href="https://aotu.io/">https://aotu.io</a></p></li><li><p>360 奇舞团：<a href="https://75team.com/">https://75team.com</a></p></li><li><p>七牛团队技术博客：<a href="http://blog.qiniu.com/">http://blog.qiniu.com</a></p></li><li><p>有赞技术团队：<a href="https://tech.youzan.com/tag/front-end/">https://tech.youzan.com/tag/front-end/</a></p></li><li><p>百度 EFE Tech：<a href="https://efe.baidu.com/">https://efe.baidu.com/</a></p></li><li><p>css-tricks：<a href="https://css-tricks.com/archives">https://css-tricks.com/archives</a></p></li><li><p>web.dev：<a href="https://web.dev/blog/">https://web.dev/blog/</a></p></li></ul><h3 id="学习要点"><a href="#学习要点" class="headerlink" title="学习要点"></a>学习要点</h3><ul><li>前期学习以培养兴趣为主，不要过于追求深层理解。</li><li>前端学习不能靠死记硬背，要多敲代码、多做项目实践。</li><li>不要急于求成，踏实积累才是硬道理。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大厂开发流程</title>
      <link href="/post/1dcaa99.html"/>
      <url>/post/1dcaa99.html</url>
      
        <content type="html"><![CDATA[<h1 id="一线大厂研发流程"><a href="#一线大厂研发流程" class="headerlink" title="一线大厂研发流程"></a>一线大厂研发流程</h1><blockquote><p>文章来源于 鱼皮大佬，为了方便我个人观看因此转载来此。</p></blockquote><p>大家好，我是鱼皮。</p><p>很多未工作过的小伙伴都很好奇：企业中做项目是怎样的流程？尤其是大厂那些百万用户的项目，和自己学编程时做项目到底有什么区别呢？</p><p><strong>实话说，区别可大了！</strong></p><p>自己开发项目那是单打独斗，自己掌握命运，不会拖垮队友；但企业中开发项目是开团打本，大家是一根绳上的蚂蚱，每个人都会影响整个项目。</p><p><img src="https://qiniuyun.code-nav.cn/image-20210712012036685.png"></p><p>我自己也在几家公司实习过，不得不说，大厂和其他公司的研发流程也有很大的区别。</p><p>因此，对于大多数同学，如果没有在大厂工作过，对很多研发环节可能都是一无所知的。</p><p>所以今天给大家揭秘一下大厂的项目研发流程，帮大家开拓思路。</p><p>正好之前有同志质疑我的日常工作就只有写代码和摸鱼？！这篇文章就作为回击，让他明白，在大厂做项目，可不止写代码那么简单！</p><p><img src="https://qiniuyun.code-nav.cn/image-20210712011545940.png"></p><h2 id="大厂研发流程揭秘"><a href="#大厂研发流程揭秘" class="headerlink" title="大厂研发流程揭秘"></a>大厂研发流程揭秘</h2><p>为了规范团队、保证项目的进展，大厂研发流程通常还是比较复杂的。</p><p>可以分为很多个阶段，用一张思维导图来概括：</p><p><img src="https://qiniuyun.code-nav.cn/%E4%B8%80%E7%BA%BF%E5%A4%A7%E5%8E%82%E7%A0%94%E5%8F%91%E6%B5%81%E7%A8%8B%E6%8F%AD%E7%A7%98.png" alt="一线大厂研发流程导图"></p><blockquote><p>需要注意的是，以上阶段并不是完全按从上到下的顺序执行，阶段间可能存在交叉，比如 <strong>技术选型</strong> 其实在 <strong>设计阶段</strong> 就应该考虑。</p></blockquote><p>正式工作一年多，我也是经历过多次项目的完整研发流程的。下面就以我的视角，带大家快速过一遍~</p><p>（为了内容更有趣，以下故事有虚构成分）</p><h3 id="需求阶段"><a href="#需求阶段" class="headerlink" title="需求阶段"></a>需求阶段</h3><p>今天是周一，鱼皮像往常一样骑着他的小电动车来到公司，殊不知，等待他的是一场噩梦的开始。</p><h4 id="需求产生"><a href="#需求产生" class="headerlink" title="需求产生"></a>需求产生</h4><p>上午十点，产品妹子找到鱼皮，告诉他：咱们的系统上线后，用户表示很多功能并不好用，需要大改。</p><p>老板也找到鱼皮，告诉他：我今天打开页面竟然加载了十几秒，咱们这个系统的性能太烂了吧！</p><p>鱼皮心想：呕豁，完蛋！估计得做个新的项目了，又要开会了。</p><p><img src="https://qiniuyun.code-nav.cn/image-20210712141645333.png"></p><p>果然，没过多久，屏幕上弹出了一条 “欢迎加入会议” 的邀请。</p><h4 id="需求评审"><a href="#需求评审" class="headerlink" title="需求评审"></a>需求评审</h4><p>第二天上午，老板、产品、测试、几位开发大哥和鱼皮一起来到会议室，具体讨论昨天提到的那些需求 <strong>是否合理、要不要做</strong> ？</p><p>产品妹子打开文档，说到：这一期呢，我们要做这几个需求，下面我来详细讲一下，大家一起评估下有没有问题。</p><h4 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h4><p>接下来，产品妹子正在对着屏幕侃侃而谈、疯狂输出时，旁边的开发大哥坐不住了。</p><p>开发大哥：这个需求不合理啊！</p><p>产品：为啥不合理？用户就是有这个需求啊！</p><p>开发大哥：我知道，实现不了啊！</p><p>于是开始了经典的产品开发撕逼大战。。。</p><p><img src="https://qiniuyun.code-nav.cn/image-20210712141444097.png"></p><p>而鱼皮正躲在角落冷静分析 <strong>这个需求怎么做</strong> ，过了一会儿，提出了一种改动低、实现快的解决方案，平息了这场战争。</p><h4 id="排期"><a href="#排期" class="headerlink" title="排期"></a>排期</h4><p>确定需求合理、可实现之后，产品妹子问到：那这个需求啥时候能上线呀？</p><p>开发大哥：我这周忙，下周吧。</p><p>产品：用户可能比较着急，这周就要呢！</p><p>开发大哥：我知道，做不完啊！</p><p>于是开始了经典的产品开发撕逼大战。。。</p><p><img src="https://qiniuyun.code-nav.cn/image-20210712141336633.png"></p><p>鱼皮：要不我们把这个需求拆解为功能 A 和功能 B，这周我先把功能 A 做了，功能 B 排到下周二测试，下周四上线？</p><p>就这样，我们一个个安排了需求的计划完成日期。</p><h3 id="设计阶段"><a href="#设计阶段" class="headerlink" title="设计阶段"></a>设计阶段</h3><p>终于开完会了，看了下时间，都该下班了！</p><p>唉，需求讨论完了，产品的工作是完成了一些，可鱼皮的工作才刚刚开始。</p><p>急着开始写代码么？</p><p><strong>不，想好怎么写代码比写代码更重要。</strong></p><h4 id="架构设计"><a href="#架构设计" class="headerlink" title="架构设计"></a>架构设计</h4><p>鱼皮打开写文档软件和画图软件，开始梳理整个系统，从整体到局部，依次设计出系统的层次结构、各层间交互的接口和通讯方式、每层之间包含哪些重要模块、模块选择何种物理部署方式等。</p><p><img src="https://qiniuyun.code-nav.cn/693275-20180308155215280-770422402.png" alt="知名框架 Dubbo 的架构设计"></p><h4 id="概要设计"><a href="#概要设计" class="headerlink" title="概要设计"></a>概要设计</h4><p>写完架构设计后，鱼皮开始对着产品妹子写的 PRD（产品需求文档），分析需求，然后依然是从整体到局部，先整理出系统需要的功能模块，再分析每个功能模块内有哪些子模块。</p><p>和抽象的架构设计相比，概要设计和需求的关系更紧密，是对架构设计的细化。</p><p>打个比方大家就明白了，你要盖一栋楼，架构设计就是从整体来考虑，总共有几层、每层管道怎么接、每层有几户、地基怎么打等；而概要设计就是考虑每户套件的内部怎么划分，哪里是客厅、哪里是卫生间。</p><blockquote><p>很多情况下，概要设计和架构设计可能会在一个文档中进行，划分并不明确。</p></blockquote><h4 id="详细设计"><a href="#详细设计" class="headerlink" title="详细设计"></a>详细设计</h4><p>想好系统有哪些功能后，鱼皮就开始具体分析每个功能如何实现，用到哪些算法、需要注重哪些细节等。</p><h4 id="方案对齐"><a href="#方案对齐" class="headerlink" title="方案对齐"></a>方案对齐</h4><p>写好设计文档后，下次会议上，鱼皮和其他的开发同学（前端、后端等）一起针对自己设计的方案展开讨论，最终产生一个统一的方案，然后大家分工去做就好了。</p><h4 id="测试用例设计"><a href="#测试用例设计" class="headerlink" title="测试用例设计"></a>测试用例设计</h4><p>为了保证系统功能的正常稳定，测试同学（或者叫 QA）是非常重要的，测试不是像我们自己做项目一样对着网页点几下就 ok 了。</p><p>在大公司中，为了保证测试的覆盖度、提高测试效率，一般是要设计测试用例的，比如：用户点击 “登录”，未传任何数据，期望结果是警告用户输入用户名和密码。</p><p><img src="https://qiniuyun.code-nav.cn/product-content-testcase-1X3-12439a68c4.png" alt="测试用例管理"></p><p>测试用例设计完后，需要其他同学一起来评审把关，而不是只交给测试同学。因为一个人很容易忽略掉很多测试细节，最好让更熟悉代码的开发同学一起帮忙补充。</p><p>鱼皮自己也写了几个测试可能会遗漏的用例，和测试同学一起进行了确认，尽量让问题暴露在测试阶段而不是线上。</p><h3 id="研发准备"><a href="#研发准备" class="headerlink" title="研发准备"></a>研发准备</h3><p>写了快一周的设计文档，终于准备开始动手搭建项目了。但在此之前，还有一些准备工作要进行。</p><h4 id="技术预研"><a href="#技术预研" class="headerlink" title="技术预研"></a>技术预研</h4><p>如今技术发展太快，新技术层出不穷，所以鱼皮首先对项目中需要或可能需要用到的技术进行了调研。</p><h4 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h4><p>通过调研，鱼皮得到了几个可以满足需求的技术，但他开始纠结：这么多技术，我该用哪一个呢？是用 SSM 框架还是 Play 框架呢？用 guava 包还是 Apache Commons 呢？</p><p>鱼皮又打开了写文档软件，开始对比不同技术的优劣，头疼啊，技术选型要考量的因素太多了，比如：</p><ul><li>单从技术考虑：性能、易用性、稳定性、主流程度和生态、文档详细度</li><li>结合团队：团队成员对技术的熟悉度、掌控度（有无精通该技术的人）</li><li>结合业务：是否适应业务的量级（单机 or 微服务）、是否适应业务（读多、写多 or 分析多）</li></ul><p>对于关键的项目，鱼皮自己还不敢完全确定选型，因此在写好自己的选型文档后，与同事和 Leader 一起讨论，才最终确认。</p><h4 id="资源申请"><a href="#资源申请" class="headerlink" title="资源申请"></a>资源申请</h4><p>确认好技术后，就要申请资源。比如鱼皮用到了 MySQL 数据库，但是这个 MySQL 从哪儿来呢？</p><p>以前的话，鱼皮都是去买一台云服务器，自己搭建 MySQL。但是在企业中，一般是有集中管理和分配资源的平台的，直接到平台填写预算、等领导审批、然后等着下发资源就好了。千万不能私自用自己的或买外部的服务器来部署项目，不安全！</p><p>鱼皮这次直接申请到了 2 万多一年的云数据库，真的是爽死了。</p><p><img src="https://qiniuyun.code-nav.cn/image-20210712140804895.png"></p><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><p>申请好数据库等资源后，鱼皮按照申请机器的版本搭建了一模一样的本地开发环境和测试环境，后面就可以直接连接了。</p><h4 id="项目初始化"><a href="#项目初始化" class="headerlink" title="项目初始化"></a>项目初始化</h4><p>环境准备妥当后，由于是新项目，鱼皮要搞一个最小可运行的初始化项目 Demo，使用 <strong>脚手架</strong> 自动生成代码，而不是从零开始一个个新建文件、手敲重复代码。</p><h4 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h4><p>生成了项目代码后，鱼皮使用包管理工具（前端 yarn、Java Maven &#x2F;  Gradle 等）自动安装依赖，然后项目 Demo 就可以运行啦！</p><h3 id="研发阶段"><a href="#研发阶段" class="headerlink" title="研发阶段"></a>研发阶段</h3><p>前期准备完成后，这才到了程序员朋友们最熟悉的写代码环节，也是鱼皮最爱的环节。</p><p><img src="https://qiniuyun.code-nav.cn/image-20210712140724830.png"></p><p>因为之前设计方案时需要保持冷静、仔细思考，没法边听歌儿边做；而方案设计好后，已经明确了该怎么做，写代码实现就很简单了，顶多是遇到一些坑，上网搜索去解决就好了。</p><h4 id="本地开发"><a href="#本地开发" class="headerlink" title="本地开发"></a>本地开发</h4><p>开发时，一般鱼皮会先在本地写代码，通过配置热更新工具，实现代码更新时自动重新编译打包，而不用手动重启项目，大大提高了开发效率。</p><p>对了，企业开发都会使用版本控制系统的，比如 Git，开发前记得先创建一个自己的分支，在这个分支上开发。</p><h4 id="远程开发"><a href="#远程开发" class="headerlink" title="远程开发"></a>远程开发</h4><p>现在还有一种比较流行的远程开发方式，就是可以像编辑本地文件一样编辑远程文件，直接修改服务器上的代码。一般我们每位研发同学是有自己的开发机的，通过远程开发就省去了反复部署调试的麻烦，提高效率。一般用 VSCode 等开发工具，安装远程开发插件就可以实现了。</p><h4 id="代码优化"><a href="#代码优化" class="headerlink" title="代码优化"></a>代码优化</h4><p>鱼皮在写代码的时候，始终保持主动优化代码的好习惯，注重代码的时空复杂度；并且当重复代码多了，会想办法抽象成函数或者使用设计模式。之前专门写文章分享过我的编程习惯：<a href="https://mp.weixin.qq.com/s/df5JMmBbw294y2sAPMwGbA">我写代码时的小倔强</a> 。</p><h4 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h4><p>注意！不要听到测试就以为是测试同学的工作，开发同学也同样需要编写小粒度的测试来为自己的代码负责。</p><p>鱼皮一般会为每个数据库读写函数和业务逻辑函数编写单元测试，像 Java 的话一般用 JUnit 等工具，还可以用 Jacoco 生成测试覆盖度报告。每次修改关键代码后，都要执行一遍单元测试，防止意外错误。</p><p><img src="https://qiniuyun.code-nav.cn/image-20210712140554038.png" alt="Jacoco 测试覆盖度报告"></p><h4 id="开发联调"><a href="#开发联调" class="headerlink" title="开发联调"></a>开发联调</h4><p>鱼皮终于写好了后端代码，也自测完成了，下面就是把写好的代码打包构建，然后把可执行项目包发布到测试服务器上，和前端同学一起联调，让他请求我的接口，验证系统的功能是否可用。</p><h3 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h3><p>鱼皮和前端联调完毕后，告知了测试和产品同学。</p><p>测试验证是企业中至关重要的环节，甚至可以说是最后一道防线。测试的目的是找 Bug，尽量发现系统中的问题，把它们扼杀在测试阶段。</p><p>在企业中，测试验证又有很多类型。</p><h4 id="集成测试"><a href="#集成测试" class="headerlink" title="集成测试"></a>集成测试</h4><p>集成测试比单元测试粒度更大，是把多个模块或代码单元放在一起，验证模块之间的集成和调用关系。</p><p>因为单个函数的执行可能是正常的，但把多个函数组合在一起顺序调用，可能就会出现问题。</p><p>打个比方，我们有个吃面包系统：</p><p>功能 A：小鱼吃一个面包</p><p>功能 B：小皮吃一个面包</p><p>每次只有一个面包，独立执行功能 A 和 B 都是允许的。但如果两个一起执行，后执行的那个功能就会报错。</p><p><img src="https://qiniuyun.code-nav.cn/image-20210712140428508.png"></p><h4 id="系统测试"><a href="#系统测试" class="headerlink" title="系统测试"></a>系统测试</h4><p>系统测试比集成测试的粒度更大，测试对象是整个系统，不仅包括软件，还可能覆盖对硬件的测试。</p><h4 id="产品体验"><a href="#产品体验" class="headerlink" title="产品体验"></a>产品体验</h4><p>除了测试同学要验证系统可用性，产品妹子也要体验下功能是否符合预期、是否易用。大多数情况下，产品会在体验时提出修改建议，开发可能还要再去做一些修改。</p><h4 id="验收测试"><a href="#验收测试" class="headerlink" title="验收测试"></a>验收测试</h4><p>测试和产品妹子终于表示没有问题啦，那就到了最后一步，把整个产品或功能给最终的用户来体验。<del>老板</del> 用户说没问题，才是真的没问题！</p><h3 id="提交阶段"><a href="#提交阶段" class="headerlink" title="提交阶段"></a>提交阶段</h3><p>系统没问题之后，鱼皮就可以把代码发布到远程仓库了，一般使用 Git 和 SVN 等版本控制系统。</p><h4 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h4><p>鱼皮首先在本地触发代码提交（git commit），为保证规范，在大项目中一般会使用提交检测插件，防止你把错误的代码进行了提交。</p><h4 id="代码推送"><a href="#代码推送" class="headerlink" title="代码推送"></a>代码推送</h4><p>下一步就是把本地的提交推送到远程的同名分支。一般大厂会有推送检测工具，检测代码的错误、圈复杂度、代码规范等，和提交检测一样，防止你把错误或不规范的代码进行了推送。</p><h4 id="合并请求"><a href="#合并请求" class="headerlink" title="合并请求"></a>合并请求</h4><p>代码分支推送到远程之后，鱼皮发起了一个分支合并请求（MR），希望把该分支的代码合并到主干分支（没问题的代码）。</p><p><img src="https://qiniuyun.code-nav.cn/image-20210712140308463.png" alt="发起新合并请求"></p><h4 id="代码审查"><a href="#代码审查" class="headerlink" title="代码审查"></a>代码审查</h4><p>并不是发起了合并请求就能直接合并，还要通过代码审查，即 CR。</p><p>审查又分为两种方式：人审和机审。</p><p>相信不少同学都知道人审，一般是由你的上级和其他项目负责人来阅读和评论你的代码，觉得没问题就 Approve（通过），否则打回去修改。</p><p>那机审是个啥呢？其实就是机器自动检测你的代码是否符合规范，是否能够成功自动化构建等，一般是由项目负责人配置的，可以帮助发现一些人工难以发现的问题。</p><p>刚接触新项目的时候，鱼皮经常被机审折磨得苦不堪言，经常被提示一些莫名其妙的代码问题，比如加号要换行，文件行末要加空行等。但后来注意编码习惯后，就很自然地适应了，的确不错。</p><h3 id="发布阶段"><a href="#发布阶段" class="headerlink" title="发布阶段"></a>发布阶段</h3><p>代码审查通过后，鱼皮的项目代码就可以发布上线啦。</p><p><img src="https://qiniuyun.code-nav.cn/image-20210613143744811.png"></p><h4 id="打包构建"><a href="#打包构建" class="headerlink" title="打包构建"></a>打包构建</h4><p>传统上线方式是开发人员到正式服务器上拉取代码，然后安装依赖，再通过工具把代码打包构建，得到部署包，通过 Nginx、Tomcat、Docker 等技术运行。</p><p>但这样效率很低，有很多重复工作。所以大厂一般是用自动化构建的，像 Jenkins、各种 CI &#x2F; CD 工具等。代码合并到主分之后，由机器把代码打包构建为最终的部署包。</p><h4 id="预发布"><a href="#预发布" class="headerlink" title="预发布"></a>预发布</h4><p>为了防止上线出问题，一般我们会先在预发布环境部署项目，再观察一下是否能够正常运行。</p><h4 id="正式发布"><a href="#正式发布" class="headerlink" title="正式发布"></a>正式发布</h4><p>预发布测试正常后，鱼皮终于等到了上线的这一刻。大项目一般都会部署在多台机器上，所以不可能一台台登录机器去发布部署包。</p><p>通常公司会提供可视化发布平台，点选需要发布机器（一般先灰度，选一小部分机器，再全量发布），点击一键发布，等项目管理员审批通过之后，就交给机器自动部署吧！</p><h3 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h3><p>鱼皮曾天真地以为项目上线之后，就可以高枕无忧了。但后来发现，项目上线之后，同样需要保持警觉。虽然已经测试过，但仍然时不时会出现个预期之外的小 Bug，还是很考验心态的。</p><p><img src="https://qiniuyun.code-nav.cn/image-20210712140135097.png"></p><p>来看看上线之后，鱼皮做了哪些事呢？</p><h4 id="监控运维"><a href="#监控运维" class="headerlink" title="监控运维"></a>监控运维</h4><p>鱼皮会定期查看项目的监控面板，观察项目的运行情况，机器的负载等。</p><h4 id="统计分析"><a href="#统计分析" class="headerlink" title="统计分析"></a>统计分析</h4><p>鱼皮在代码中添加了一些日志，可以利用 ELK 等日志收集可视化平台对这些日志进行分析，从而感知到用户的行为，进一步优化业务和系统。</p><p>比如我会统计用户执行 SQL 查询的耗时，对重复率高的慢 SQL 进行针对性地优化。</p><h4 id="事件反馈"><a href="#事件反馈" class="headerlink" title="事件反馈"></a>事件反馈</h4><p>有的时候，用户自己都不能清楚地描述 Bug，而且历史 Bug 也不方便找到。所以公司内部一般会有事件反馈平台，产品等内部同学在接收到 Bug 时，会在该平台发布一个 Bug 事件，详细描述 Bug 出现的时间、状况、详情等，便于我们开发集中分析和处理问题。</p><p><img src="https://qiniuyun.code-nav.cn/image-20210712140028393.png" alt="事件反馈平台"></p><h4 id="文档沉淀"><a href="#文档沉淀" class="headerlink" title="文档沉淀"></a>文档沉淀</h4><p>每次上线了新功能和项目，鱼皮都会通过写文档来记录项目的背景、设计方案、开发过程和一些坑点，便于后续其他同学了解项目，这是非常重要的！利人利己。</p><p>曾经分享过我的写文档技巧：<a href="https://mp.weixin.qq.com/s/oQTksFE-cPYRKGJnr71-kw">如何写好文档？</a></p><h4 id="迭代优化"><a href="#迭代优化" class="headerlink" title="迭代优化"></a>迭代优化</h4><p>最后，一个需求的结束往往只是另一个需求的开始。像鱼皮最近在跟进的项目，一期做完做二期，二期还没做完三期就来了；还要抽出时间去优化以前的代码，这日子遥遥无期，没盼头啊！</p><hr><p>看完本文后，欢迎阅读我之前的这篇文章：<a href="https://mp.weixin.qq.com/s/RyqO8ry29zAL40ToVitxTQ">大厂机密！30 个提升团队研发效能的锦囊</a> ，了解更多大厂技术。</p>]]></content>
      
      
      <categories>
          
          <category> 开发流程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发流程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习路线</title>
      <link href="/post/f8b3f36.html"/>
      <url>/post/f8b3f36.html</url>
      
        <content type="html"><![CDATA[<h1 id="Java-学习路线"><a href="#Java-学习路线" class="headerlink" title="Java 学习路线"></a>Java 学习路线</h1><blockquote><p>文章来源于 鱼皮大佬，为了方便我个人观看因此转载来此。</p></blockquote><blockquote><p>Java 学习路线一条龙版 by 程序员鱼皮</p></blockquote><p><img src="http://picgo.kongshier.top/2767/Java.jpg" alt="Java"></p><p>💂 + 💻 &#x3D; 👴🏽</p><p>建议先观看视频导读：<a href="https://www.bilibili.com/video/BV1Qf4y1K7ff/">https://www.bilibili.com/video/BV1Qf4y1K7ff/</a></p><h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><p><img src="https://qiniuyun.code-nav.cn/img/image-20211127235325557.png" alt="image-20211127235325557"></p><h2 id="路线特点"><a href="#路线特点" class="headerlink" title="路线特点"></a>路线特点</h2><ol><li>最新，完整一条龙的大厂 Java 学习路线，从入门到入土</li><li>同时适用于想全面学习 &#x2F; 快速求职的同学，可以根据符号来定制自己的专属学习路线</li><li>给出目标、学习建议、关键知识点、最优资源以及各类资源推荐（视频、书籍、文档、项目、工具等）</li><li>鱼皮自己是 Java 开发者，融入个人自学和从业的经历 + 思考，让路线有灵魂</li><li>划分阶段、更有计划，且在最后给出持续学习的方向、探索 Java 程序员发展的无限可能</li><li>完全开源，回馈社区，持续更新！</li></ol><h2 id="符号表"><a href="#符号表" class="headerlink" title="符号表"></a>符号表</h2><p>可以通过路线知识点前的表情字符，根据自己的实际情况选择学习：</p><ul><li>🌕 所有同学必须学习！！！</li><li>🌖 非常急着找工作，才可不学；目标大厂，必须学习！</li><li>🌗 急着找工作的话，可不学；目标大厂，建议学习</li><li>🌘 时间充足的话，再去学</li><li>⭐ 表示推荐资源</li></ul><h2 id="写在开头"><a href="#写在开头" class="headerlink" title="写在开头"></a>写在开头</h2><p>首先呢，我们要了解 Java 的应用场景和就业方向，看看和自己的学习目的是否一致。</p><p>目前，Java 由于其优秀的特性以及火爆的生态，岗位需求量大，是后台开发、安卓开发、大数据开发的主流编程语言，因此学习资源也很丰富，值得学习！</p><p>有关更多编程语言的选择，大家可以看我的视频了解：<a href="https://www.bilibili.com/video/BV1y3411r7pX/">https://www.bilibili.com/video/BV1y3411r7pX/</a></p><h2 id="阶段-0：前期准备"><a href="#阶段-0：前期准备" class="headerlink" title="阶段 0：前期准备"></a>阶段 0：前期准备</h2><ol><li>准备好一款在线、随时随地写代码的工具，不用在本地去安装和配置，是初学者的好帮手。<ul><li>推荐网站 - 菜鸟工具：<a href="https://c.runoob.com/compile/10">https://c.runoob.com/compile/10</a></li></ul></li><li>准备一款记笔记的软件，学编程的过程中老师的思路、自己遇到的问题、解决问题的方法、心得感悟、遇到的好资料，都要记下来哦，好记性不如烂笔头，可以帮助你事半功倍。<ul><li>推荐本地软件 Typora：<a href="https://www.typora.io/">https://www.typora.io/</a> （线上可以用 xx 文档）</li><li>推荐使用 Markdown 语法编写，鱼皮教程：<a href="https://www.bilibili.com/video/BV1no4y1k7YT/">https://www.bilibili.com/video/BV1no4y1k7YT/</a></li></ul></li><li>想学好编程，别背代码，要多写，把这句话刻到脑子里。</li><li>选视频和找资料的小技巧：多看评论区、多看隔壁评论区、不要看过期的视频。</li><li>如何访问 GitHub：<a href="https://mp.weixin.qq.com/s/uBFsuThsZ4kdkZgqfX12qA">https://mp.weixin.qq.com/s/uBFsuThsZ4kdkZgqfX12qA</a> （上面有很多免费的编程学习资源、项目源码，程序员必备）</li></ol><h2 id="阶段-1：Java-入门"><a href="#阶段-1：Java-入门" class="headerlink" title="阶段 1：Java 入门"></a>阶段 1：Java 入门</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>培养兴趣、快速上手，能运行和编写简单的 Java 程序。</p><p>学完本阶段后，可以试着用 Java 解决一些数学计算问题、编写图书管理系统等桌面端 GUI 程序，甚至是五子棋之类的小游戏。</p><h3 id="🌕-Java-编程基础（45-天）"><a href="#🌕-Java-编程基础（45-天）" class="headerlink" title="🌕 Java 编程基础（45 天）"></a>🌕 Java 编程基础（45 天）</h3><h4 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h4><ul><li>Java 特点（看不懂没事，别背！）</li><li>环境搭建</li><li>IDEA 开发工具<ul><li>新建项目</li><li>运行调试</li><li>界面配置</li><li>插件管理</li></ul></li><li><strong>Java 基础语法</strong><ul><li>数据类型</li><li>流程控制</li></ul></li><li>数组</li><li><strong>面向对象</strong><ul><li>方法</li><li>重载</li><li>封装</li><li>继承</li><li>多态</li></ul></li><li>抽象类</li><li>接口</li><li>枚举</li><li>常用类<ul><li>String</li><li>日期时间</li></ul></li><li>集合类</li><li>泛型</li><li>注解</li><li>异常处理</li><li>多线程</li><li>IO 流</li><li>反射</li></ul><h4 id="学习建议"><a href="#学习建议" class="headerlink" title="学习建议"></a>学习建议</h4><p>初学一门语言时，一定要持续学习，不能中断！</p><p>想要学好编程，一定要多敲代码！建议先跟着书上的例子敲一遍代码，然后试着自主编写代码，并完成课后练习。</p><p>不理解代码也没关系，可以学习 Debug 后，一行一行地打断点执行，查看程序的执行过程。千万不要觉得麻烦，养成习惯后真的能节省很多重复学习的时间。</p><h4 id="经典面试题"><a href="#经典面试题" class="headerlink" title="经典面试题"></a>经典面试题</h4><ol><li>为什么重写 equals 还要重写 hashcode？</li><li>&#x3D;&#x3D; 和 equals 比较的区别</li><li>为啥有时会出现 4.0 - 3.6 &#x3D; 0.40000001 这种现象？</li><li>final 关键字的作用</li><li>介绍 Java 的集合类</li><li>ArrayList 和 LinkedList 的区别</li></ol><h4 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h4><ul><li><p>视频</p><ul><li>⭐ 韩顺平 - 零基础 30 天学会 Java：<a href="https://www.bilibili.com/video/BV1fh411y7R8">https://www.bilibili.com/video/BV1fh411y7R8</a> （900 多集，顺序安排很合理，每个知识真正的打碎了，通俗、有示例、有实战、有思想）</li></ul></li><li><p>文档</p><ul><li><p>⭐ 菜鸟教程：<a href="https://www.runoob.com/java/java-tutorial.html">https://www.runoob.com/java/java-tutorial.html</a> （可以在线练习）</p></li><li><p>廖雪峰 Java 教程：<a href="https://www.liaoxuefeng.com/wiki/1252599548343744">https://www.liaoxuefeng.com/wiki/1252599548343744</a></p></li><li><p>IDEA 中文教程：<a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial">https://github.com/judasn/IntelliJ-IDEA-Tutorial</a></p></li><li><p>IDEA Mac 快捷键指南，地址：<a href="https://www.jianshu.com/p/454c71172c46">https://www.jianshu.com/p/454c71172c46</a></p></li><li><p>IDEA Win 常用快捷键，地址：<a href="https://www.jianshu.com/p/5de7cca0fefc">https://www.jianshu.com/p/5de7cca0fefc</a></p></li></ul></li><li><p>书籍</p><ul><li>《Head First Java》</li></ul></li><li><p>在线游戏</p><ul><li>Codegym：<a href="https://codegym.cc/zh">https://codegym.cc/zh</a> （玩玩前几关培养兴趣不错，但后面收费了）</li></ul></li></ul><h3 id="🌖-Java-8（3-天）"><a href="#🌖-Java-8（3-天）" class="headerlink" title="🌖 Java 8（3 天）"></a>🌖 Java 8（3 天）</h3><h4 id="知识-1"><a href="#知识-1" class="headerlink" title="知识"></a>知识</h4><ul><li>Stream API</li><li>Lambda 表达式</li><li>新日期时间 API</li><li>接口默认方法</li></ul><h4 id="学习建议-1"><a href="#学习建议-1" class="headerlink" title="学习建议"></a>学习建议</h4><p>Java 8 是如今企业开发中最主流的 Java 稳定版本，在这个版本出现了很多实用的新特性，虽然面试考点不多，但能够提升编程效率，建议学习。</p><h4 id="经典面试题-1"><a href="#经典面试题-1" class="headerlink" title="经典面试题"></a>经典面试题</h4><ol><li>java 8 有哪些新特性？</li><li>HashMap 在 jdk 1.7 和 1.8 的区别？</li></ol><h4 id="资源-1"><a href="#资源-1" class="headerlink" title="资源"></a>资源</h4><ul><li><p>视频</p><ul><li>⭐ 宋红康 - 全网最全Java零基础入门教程：<a href="https://www.bilibili.com/video/BV1Kb411W75N">https://www.bilibili.com/video/BV1Kb411W75N</a> （只看 Java 8 部分即可）</li></ul></li><li><p>文档</p><ul><li>⭐ 菜鸟教程：<a href="https://www.runoob.com/java/java8-new-features.html">https://www.runoob.com/java/java8-new-features.html</a></li></ul></li><li><p>书籍</p><ul><li>《Java 8 实战》</li></ul></li><li><p>工具</p><ul><li>⭐ 在线编写运行  Java 8：<a href="https://www.tutorialspoint.com/compile_java8_online.php">https://www.tutorialspoint.com/compile_java8_online.php</a></li></ul></li><li><p>其他</p><ul><li>Java 8 小代码片段：<a href="https://github.com/biezhi/30-seconds-of-java8">https://github.com/biezhi/30-seconds-of-java8</a></li></ul></li></ul><h3 id="练手项目"><a href="#练手项目" class="headerlink" title="练手项目"></a>练手项目</h3><ul><li>Java 实现简单计算器：<a href="https://www.lanqiao.cn/courses/185">https://www.lanqiao.cn/courses/185</a></li><li>Eclipse 实现 Java 编辑器：<a href="https://www.lanqiao.cn/courses/287">https://www.lanqiao.cn/courses/287</a></li><li>一本糊涂账：<a href="https://how2j.cn/module/104.html">https://how2j.cn/module/104.html</a></li><li>Java 五子棋：<a href="https://blog.csdn.net/cnlht/article/details/8176130">https://blog.csdn.net/cnlht/article/details/8176130</a></li><li>Java 中国象棋：<a href="https://blog.csdn.net/cnlht/article/details/8205733">https://blog.csdn.net/cnlht/article/details/8205733</a></li><li>JAVA GUI 图书馆管理系统：<a href="https://github.com/uboger/LibraryManager">https://github.com/uboger/LibraryManager</a></li><li>JAVA 坦克大战小游戏：<a href="https://github.com/wangzhengyi/TankWar">https://github.com/wangzhengyi/TankWar</a></li><li>Swing 编写的俄罗斯方块：<a href="https://github.com/HelloClyde/Tetris-Swing">https://github.com/HelloClyde/Tetris-Swing</a></li><li>小小记账本：<a href="https://github.com/xenv/SmallAccount">https://github.com/xenv/SmallAccount</a> （适合了解数据库的同学）</li></ul><h3 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h3><p>学完了 Java 基础后，有些同学会感到迷茫了啊，感觉好像啥也做不出来，不知道下一步做什么，我这一身的本领该如何施展啊？</p><p>不要慌，也不要急着去学新技术，接下来我们要多用 Java 来写代码了，巩固基础，但是写什么呢？</p><p>当然是数据结构和算法！</p><h2 id="阶段-2：巩固基础"><a href="#阶段-2：巩固基础" class="headerlink" title="阶段 2：巩固基础"></a>阶段 2：巩固基础</h2><h3 id="目标-1"><a href="#目标-1" class="headerlink" title="目标"></a>目标</h3><p>想学好编程，计算机基础知识要学好。</p><p>比如算法，是程序员的灵魂。学好算法有助于我们理解程序、开拓思路，因此也是很多公司面试时考察的关键，在找工作前，还是要刷个上百道算法题目的。</p><p>我们这个阶段的目标是：熟练使用 Java 语言来编写程序，巩固 Java 基础。（那直接用 Java 来写算法题目，一举两得，岂不美哉？）</p><p>此外，建议大家利用零碎时间多去了解 <strong>计算机基础知识</strong> ，比如操作系统、计算机网络等，对你后面学习开发框架之类的知识都有帮助。</p><h3 id="Java-基础（30-天）"><a href="#Java-基础（30-天）" class="headerlink" title="Java 基础（30 天）"></a>Java 基础（30 天）</h3><h4 id="学习建议-2"><a href="#学习建议-2" class="headerlink" title="学习建议"></a>学习建议</h4><p>建议大家去阅读 《Java 核心技术卷 1》，这本书堪称经典，是帮助你复习巩固  Java 的不二之选，其中图形界面章节可以选择不看。</p><p>之后可以刷牛客的 Java 练习题，检验自己的水平，我当时刷了两遍 1000 题（每天 30 题，1 个月也就刷完了，二刷会更快！）。虽然都是选择题，但能学到很多 Java 语言的特性、避免写代码时容易犯的错误。</p><p>如果你时间不够，只是想快速找到工作，那么本章节甚至可以完全跳过，后面慢慢弥补即可。</p><h4 id="资源-2"><a href="#资源-2" class="headerlink" title="资源"></a>资源</h4><ul><li>书籍<ul><li>⭐《Java 核心技术卷 1》</li></ul></li><li>练习<ul><li>⭐ 牛客题库：<a href="https://www.nowcoder.com/intelligentTest">https://www.nowcoder.com/intelligentTest</a></li></ul></li></ul><h3 id="🌖-数据结构与算法"><a href="#🌖-数据结构与算法" class="headerlink" title="🌖 数据结构与算法"></a>🌖 数据结构与算法</h3><h4 id="知识-2"><a href="#知识-2" class="headerlink" title="知识"></a>知识</h4><ul><li><p><strong>时间 &#x2F; 空间复杂度分析</strong></p></li><li><p>数据结构</p><ul><li>数组</li><li>字符串</li><li>队列</li><li>栈</li><li>链表</li><li>集合</li><li>哈希表</li><li>树<ul><li>二叉树</li><li>多叉树</li><li>字典树</li></ul></li></ul></li><li><p>算法</p><ul><li>排序</li><li>双指针</li><li>查找</li><li>分治</li><li>动态规划</li><li>递归</li><li>回溯</li><li>贪心</li><li>位运算</li><li>DFS</li><li>BFS</li><li>图</li></ul></li></ul><h4 id="学习建议-3"><a href="#学习建议-3" class="headerlink" title="学习建议"></a>学习建议</h4><p>学算法一定要多思考、多练习！！！</p><p>在复习 Java、巩固基础的过程中，每天可以坚持用 Java 做 2 - 3 道算法题目。</p><p>不用担心看不懂，直接进入 LeetCode 学习板块 LeetBook，提供了免费的教程，文字、图解、动画讲算法、在线练习应有尽有，从 0 开始，跟着学习基础知识、跟着教程刷一些同类题目，培养算法思路。</p><p>之后再由简单到复杂、由通过率高到低，自主刷题，多看题解，举一反三。一定要把自己做过的每道题目代码都自行保存好，定期复习。时间足够的话，也可以试着自己写写题解，在网上分享一下自己的刷题思路，找到自己坚持的动力。</p><p>有条件的朋友也可以试着参与竞赛，没什么门槛，可以帮助你集中精神，而且周赛的题目还是挺友好的~</p><h4 id="经典面试题-2"><a href="#经典面试题-2" class="headerlink" title="经典面试题"></a>经典面试题</h4><ul><li>LeetCode 精选 100 道：<a href="https://leetcode-cn.com/problem-list/2cktkvj/">https://leetcode-cn.com/problem-list/2cktkvj/</a></li><li>LeetCode 精选算法 200 题：<a href="https://leetcode-cn.com/problem-list/qg88wci/">https://leetcode-cn.com/problem-list/qg88wci/</a></li></ul><h4 id="资源-3"><a href="#资源-3" class="headerlink" title="资源"></a>资源</h4><ul><li>文章<ul><li>⭐ 刷了 1000 多道算法题，一点心得：<a href="https://t.1yb.co/oT9q">https://t.1yb.co/oT9q</a> （鱼皮原创）</li></ul></li><li>在线教程<ul><li>⭐ LeetCode LeetBook：<a href="https://leetcode-cn.com/leetbook/">https://leetcode-cn.com/leetbook/</a></li></ul></li><li>在线刷题<ul><li>⭐ LeetCode：<a href="https://leetcode-cn.com/">https://leetcode-cn.com/</a></li></ul></li><li>书籍<ul><li>⭐《小灰的漫画算法》</li><li>⭐《剑指 Offer》</li><li>《程序员代码面试指南》</li><li>图解算法数据结构：<a href="https://leetcode-cn.com/leetbook/detail/illustration-of-algorithm/">https://leetcode-cn.com/leetbook/detail/illustration-of-algorithm/</a></li><li>LeetCode 101（C++）：<a href="https://github.com/changgyhub/leetcode_101">https://github.com/changgyhub/leetcode_101</a></li><li>LeetCode 题解（C++）：<a href="https://github.com/soulmachine/leetcode">https://github.com/soulmachine/leetcode</a></li><li>LeetCode Cookbook（Go 语言）：<a href="https://github.com/halfrost/LeetCode-Go">https://github.com/halfrost/LeetCode-Go</a></li></ul></li><li>视频<ul><li>尚硅谷 Java 数据结构与算法：<a href="https://www.bilibili.com/video/BV1E4411H73v">https://www.bilibili.com/video/BV1E4411H73v</a> （难度比面试的要求大一些，适合希望更全面学习的朋友）</li><li>Leetcode 真题解析：<a href="https://www.bilibili.com/video/BV1a54y1b74k">https://www.bilibili.com/video/BV1a54y1b74k</a></li></ul></li><li>工具<ul><li>VisuAlgo 数据结构和算法动态可视化：<a href="https://visualgo.net/zh">https://visualgo.net/zh</a></li><li>数据结构可视化：<a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html">https://www.cs.usfca.edu/~galles/visualization/Algorithms.html</a></li><li>RegExr：<a href="https://www.code-nav.cn/rd/?rid=79550af2601114e9012110711798772b">https://www.code-nav.cn/rd/?rid=79550af2601114e9012110711798772b</a> （学习、创建和测试正则表达式的在线可视化工具）</li></ul></li><li>网站<ul><li>五分钟学算法：<a href="https://www.cxyxiaowu.com/">https://www.cxyxiaowu.com/</a></li></ul></li></ul><h3 id="🌘-计算机导论"><a href="#🌘-计算机导论" class="headerlink" title="🌘 计算机导论"></a>🌘 计算机导论</h3><h4 id="知识-3"><a href="#知识-3" class="headerlink" title="知识"></a>知识</h4><ul><li>计算机发展历史</li><li>计算机应用领域</li><li>计算机发展方向</li><li>计算机基本组成</li><li>二进制</li><li>编程语言发展</li></ul><h4 id="学习建议-4"><a href="#学习建议-4" class="headerlink" title="学习建议"></a>学习建议</h4><p>大学计算机专业的同学一般刚开学就会上这门课，虽说学习它并不会直接提高你的编程技能，但能够让你更了解计算机和编程，从而在一定程度上帮助你培养学习兴趣、确定学习方向。</p><p>自学的话，不用刻意去学习计算机导论，而是可以通过看视频、阅读课外读物的方式慢慢地了解计算机的故事。</p><h4 id="资源-4"><a href="#资源-4" class="headerlink" title="资源"></a>资源</h4><ul><li>视频<ul><li>《计算机科学速成课》：<a href="https://www.bilibili.com/video/BV1EW411u7th">https://www.bilibili.com/video/BV1EW411u7th</a> （从底层到上层的计算机知识科普，强烈推荐）</li></ul></li><li>书籍<ul><li>《半小时漫画计算机》</li></ul></li></ul><h3 id="🌖-操作系统"><a href="#🌖-操作系统" class="headerlink" title="🌖 操作系统"></a>🌖 操作系统</h3><h4 id="知识-4"><a href="#知识-4" class="headerlink" title="知识"></a>知识</h4><ul><li>操作系统的组成</li><li>进程、线程</li><li>进程 &#x2F; 线程间通讯方式</li><li>进程调度算法</li><li>进程 &#x2F; 线程同步方式</li><li>进程 &#x2F; 线程状态</li><li>死锁</li><li>内存管理</li><li>局部性原理</li></ul><h4 id="学习建议-5"><a href="#学习建议-5" class="headerlink" title="学习建议"></a>学习建议</h4><p>说实话，操作系统这一块知识挺枯燥的。你说说我现在项目都不会做，你又让我看这些理论，是不是想让我头秃？</p><p>我的建议是，可以先利用课余时间看一些网课或者有趣的课外书，对一些操作系统的概念先有个大致的印象，比如进程、线程、死锁，等后面有时间了再系统学习、等到找工作了再去背相关八股文。</p><p>还在校园就跟着学校的进度学习就成，自学的话可以看下《清华操作系统原理》视频，有实力的小伙伴，能看懂大黑书就更好了，但如果看不懂也别担心，这并不影响你后续知识的学习。</p><h4 id="经典面试题-3"><a href="#经典面试题-3" class="headerlink" title="经典面试题"></a>经典面试题</h4><ol><li>什么是死锁？死锁产生的条件？</li><li>线程有哪几种状态？</li><li>有哪些进程调度算法？</li><li>什么是缓冲区溢出？</li></ol><h4 id="资源-5"><a href="#资源-5" class="headerlink" title="资源"></a>资源</h4><ul><li><p>视频</p><ul><li>《清华操作系统原理》：<a href="https://www.bilibili.com/video/BV1uW411f72n">https://www.bilibili.com/video/BV1uW411f72n</a></li></ul></li><li><p>书籍</p><ul><li>《编码》</li><li>《30天自制操作系统》</li><li>《现代操作系统》（难度较大，不推荐新手看）</li><li>《深入理解计算机系统》（难度较大，不推荐新手看）</li><li>《 自己动手写操作系统》（国产好书，网上可以下载）</li></ul></li><li><p>大学课件</p><ul><li>浙大操作系统：<a href="https://github.com/QSCTech/zju-icicles">https://github.com/QSCTech/zju-icicles</a></li></ul></li></ul><h3 id="🌖-计算机网络"><a href="#🌖-计算机网络" class="headerlink" title="🌖 计算机网络"></a>🌖 计算机网络</h3><h4 id="知识-5"><a href="#知识-5" class="headerlink" title="知识"></a>知识</h4><ul><li>网络分层模型</li><li>网络传输过程</li><li>IP、端口</li><li>HTTP &#x2F; HTTPS 协议</li><li>UDP &#x2F; TCP 协议</li><li>ARP 地址解析协议</li><li>网络安全</li><li>DNS 域名解析</li></ul><h4 id="学习建议-6"><a href="#学习建议-6" class="headerlink" title="学习建议"></a>学习建议</h4><p>很多学习 Java 开发的同学最后都是从事 <strong>后端开发</strong> 的工作，而计算机网络知识是后端开发的重点。</p><p>和操作系统一样，自学网络可能会很枯燥，建议先看有趣的课外书，比如《图解 HTTP》；或者有趣的视频，比如《计算机网络微课堂》。后面要找工作面试前，再重点去背一些八股文就好了。还在学校的同学好好上课一般就没问题。</p><p>学习基础能帮助自己今后发展更稳定，且更容易接受新知识，所以请不要相信基础无用论。</p><h4 id="经典面试题-4"><a href="#经典面试题-4" class="headerlink" title="经典面试题"></a>经典面试题</h4><ol><li>计算机网络各层有哪些协议？</li><li>TCP 和 UDP 协议的区别？</li><li>TCP 为什么需要三次握手和四次挥手？</li><li>HTTP 和 HTTPS 协议的区别？</li></ol><h4 id="资源-6"><a href="#资源-6" class="headerlink" title="资源"></a>资源</h4><ul><li><p>视频</p><ul><li>《计算机网络微课堂》：<a href="https://www.bilibili.com/video/BV1c4411d7jb">https://www.bilibili.com/video/BV1c4411d7jb</a></li></ul></li><li><p>书籍</p><ul><li>⭐《图解 HTTP》</li><li>《网络是怎样连接的》</li><li>⭐《图解 TCP &#x2F; IP》</li></ul></li><li><p>大学课件</p><ul><li>浙大计算机网络基础：<a href="https://github.com/QSCTech/zju-icicles">https://github.com/QSCTech/zju-icicles</a></li></ul></li></ul><h3 id="尾声-1"><a href="#尾声-1" class="headerlink" title="尾声"></a>尾声</h3><p>巩固基础要花至少 1 个月的时间，当你读完《Java 核心技术卷1》并且不用查询文档也能熟练地用 Java 做题时，就可以接着往下了。</p><h2 id="阶段-3：Java-企业开发基础"><a href="#阶段-3：Java-企业开发基础" class="headerlink" title="阶段 3：Java 企业开发基础"></a>阶段 3：Java 企业开发基础</h2><h3 id="目标-2"><a href="#目标-2" class="headerlink" title="目标"></a>目标</h3><p>面向薪资编程，学习实际后台开发工作要用的基础技术和框架，并能 <strong>独立</strong> 做出一个具有完整功能的 Java Web 项目。</p><p>学完这个阶段后，你应该已经能独立开发出大多数常见的后台系统了，比如各种管理系统、商城系统等。</p><h3 id="🌕-MySQL-数据库（7-天）"><a href="#🌕-MySQL-数据库（7-天）" class="headerlink" title="🌕 MySQL 数据库（7 天）"></a>🌕 MySQL 数据库（7 天）</h3><p>企业中大部分业务数据都是用关系型数据库存储的，因此数据库是后台开发同学的必备技能，其中 MySQL 数据库是目前的主流，也是面试时的重点。</p><h4 id="知识-6"><a href="#知识-6" class="headerlink" title="知识"></a>知识</h4><ul><li>基本概念</li><li>MySQL 搭建</li><li>SQL 语句编写</li><li>约束</li><li>索引</li><li>事务</li><li>锁机制</li><li>设计数据库表</li><li>性能优化</li></ul><h4 id="学习建议-7"><a href="#学习建议-7" class="headerlink" title="学习建议"></a>学习建议</h4><p>其中，<strong>SQL 语句编写</strong> 和 <strong>设计数据库表</strong> 这两个能力一定要有！</p><p>比如让你做一个学生管理系统，你要能想到需要哪些表，比如学生表、班级表；每个表需要哪些字段、字段类型。</p><p>这就要求大家多写 SQL、多根据实际的业务场景去练习设计能力。</p><h4 id="经典面试题-5"><a href="#经典面试题-5" class="headerlink" title="经典面试题"></a>经典面试题</h4><ol><li>MySQL 索引的最左原则</li><li>InnoDB 和 MyIsam 引擎的区别？</li><li>有哪些优化数据库性能的方法？</li><li>如何定位慢查询？</li><li>MySQL 支持行锁还是表锁？分别有哪些优缺点？</li></ol><h4 id="资源-7"><a href="#资源-7" class="headerlink" title="资源"></a>资源</h4><ul><li>视频<ul><li>⭐ 老杜 - mysql入门基础 + 数据库实战：<a href="https://www.bilibili.com/video/BV1Vy4y1z7EX">https://www.bilibili.com/video/BV1Vy4y1z7EX</a> （较新、内容相对精炼，有习题）</li><li>尚硅谷 - MySQL基础教程：<a href="https://www.bilibili.com/video/BV1xW411u7ax">https://www.bilibili.com/video/BV1xW411u7ax</a> （小姐姐讲课，但感觉音质一般）</li></ul></li><li>在线练习<ul><li>⭐ SQL 自学网：<a href="http://xuesql.cn/">http://xuesql.cn/</a></li><li>⭐ SQL 在线运行：<a href="https://www.bejson.com/runcode/sql/">https://www.bejson.com/runcode/sql/</a></li></ul></li><li>文档<ul><li>SQL - 菜鸟教程：<a href="https://www.runoob.com/sql/sql-tutorial.html">https://www.runoob.com/sql/sql-tutorial.html</a></li><li>MySQL - 菜鸟教程：<a href="https://www.runoob.com/mysql/mysql-tutorial.html">https://www.runoob.com/mysql/mysql-tutorial.html</a></li></ul></li><li>网站<ul><li><a href="https://www.code-nav.cn/rd/?rid=b00064a76012546b016e274a3724c5f0">数据库大全</a>：果创云收录的各种数据库表设计</li></ul></li></ul><h3 id="🌕-开发框架（60-天）"><a href="#🌕-开发框架（60-天）" class="headerlink" title="🌕 开发框架（60 天）"></a>🌕 开发框架（60 天）</h3><p>Java 之所以能成为主流的企业开发语言，很大一部分原因是它完善的框架生态，用好框架，不仅能够大大提升开发效率，还能提高项目的稳定性、减少维护成本。</p><p>开发框架是后台开发工作中不可或缺的，也是面试考察的重点，一定要好好学！</p><p>不知道 Java 能做什么的朋友们，学完开发框架，就会有答案啦。</p><p>下面给大家推荐的都是企业中应用最多的主流开发框架，知识点比较零碎，就放在一起讲了。</p><h4 id="知识-7"><a href="#知识-7" class="headerlink" title="知识"></a>知识</h4><h5 id="🌕-Java-Web"><a href="#🌕-Java-Web" class="headerlink" title="🌕 Java Web"></a>🌕 Java Web</h5><ul><li><p>描述：Java 网页应用开发基础</p></li><li><p>一丢丢前端基础</p></li><li><p>XML</p></li><li><p>JSON</p></li><li><p>Servlet</p></li><li><p>Filter</p></li><li><p>Listener</p></li><li><p>JSP</p></li><li><p>JSTL</p></li><li><p>Cookie</p></li><li><p>Session</p></li></ul><h5 id="🌕-Spring-5"><a href="#🌕-Spring-5" class="headerlink" title="🌕 Spring 5"></a>🌕 Spring 5</h5><ul><li>描述：Java 轻量级应用框架</li><li>IOC</li><li>AOP</li><li>事务</li></ul><h5 id="🌕-SpringMVC"><a href="#🌕-SpringMVC" class="headerlink" title="🌕 SpringMVC"></a>🌕 SpringMVC</h5><ul><li>描述：Java 轻量级 web 开发框架</li><li>什么是 MVC？</li><li>请求与响应</li><li>Restful API</li><li>拦截器</li><li>配置</li><li>执行过程</li></ul><h5 id="🌕-MyBatis"><a href="#🌕-MyBatis" class="headerlink" title="🌕 MyBatis"></a>🌕 MyBatis</h5><ul><li>描述：数据访问框架，操作数据库进行增删改查等操作</li><li>增删改查</li><li>全局配置</li><li>动态 SQL</li><li>缓存</li><li>和其他框架的整合</li><li>逆向工程</li></ul><h5 id="🌗-MyBatis-Plus"><a href="#🌗-MyBatis-Plus" class="headerlink" title="🌗 MyBatis Plus"></a>🌗 MyBatis Plus</h5><ul><li>描述：Mybatis 的增强工具，能够简化开发、提高效率</li><li>引入</li><li>通用 CRUD</li><li>条件构造器</li><li>代码生成器</li><li>插件扩展</li><li>自定义全局操作</li></ul><h5 id="🌕-SpringBoot-2"><a href="#🌕-SpringBoot-2" class="headerlink" title="🌕 SpringBoot 2"></a>🌕 SpringBoot 2</h5><ul><li>描述：简化 Spring 应用的初始搭建以及开发过程，提高效率</li><li>常用注解</li><li>资源整合</li><li>高级特性</li><li>本地热部署</li></ul><h5 id="🌗-Spring-Security"><a href="#🌗-Spring-Security" class="headerlink" title="🌗 Spring Security"></a>🌗 Spring Security</h5><ul><li>描述：Spring 的安全管理框架</li><li>用户认证</li><li>权限管理</li><li>相关技术：Shiro</li></ul><h5 id="🌗-Maven-x2F-Gradle"><a href="#🌗-Maven-x2F-Gradle" class="headerlink" title="🌗 Maven &#x2F; Gradle"></a>🌗 Maven &#x2F; Gradle</h5><ul><li>描述：项目管理工具</li><li>构建</li><li>依赖管理</li><li>插件</li><li>配置</li><li>子父工程</li><li>多模块打包构建</li><li>Nexus 私服搭建</li></ul><h4 id="学习建议-8"><a href="#学习建议-8" class="headerlink" title="学习建议"></a>学习建议</h4><p>由于技术较多，且框架之间存在一定的联系，因此建议大家看同一系列的视频教程（尚硅谷、狂神说等等都可以），以保证学习内容的连续以及体验上的一致。</p><p>学这些技术的时候，<strong>千万不能懒</strong> ！一定要多记笔记，并且跟着老师写代码。原理部分不要太过纠结，先以能跟着敲出代码、写出可运行的项目为主，有些东西做出来也能帮助你更好地理解理论。</p><p>学习顺序挺重要的，建议按我推荐的顺序学，不要一上手就学 Spring Boot。只有先学习下自己整合框架的方法，才能帮你理解 SpringBoot 解决的问题，感受到它的方便和高效。</p><p>Maven &#x2F; Gradle 当成工具用就好，面试基本不问，跟着框架教程去用就行了，急着找工作的话，先不用花太多时间去深入学。大厂面试问这个的也不多。</p><h4 id="经典面试题-6"><a href="#经典面试题-6" class="headerlink" title="经典面试题"></a>经典面试题</h4><ol><li>Spring 的 IOC 和 AOP 是什么，有哪些优点？</li><li>Spring 框架用到了哪些设计模式？</li><li>介绍 Spring Bean 的生命周期</li><li>MyBatis 如何实现延迟加载？</li><li>介绍 MyBatis 的多级缓存机制</li></ol><h4 id="资源-8"><a href="#资源-8" class="headerlink" title="资源"></a>资源</h4><ul><li><p>视频（按顺序看）</p><ul><li><p>⭐ 尚硅谷最新版 JavaWeb 全套教程：<a href="https://www.bilibili.com/video/BV1Y7411K7zz">https://www.bilibili.com/video/BV1Y7411K7zz</a> （前端部分最好也看下）</p></li><li><p>⭐ 尚硅谷 - Spring 5 框架最新版教程（idea版）：<a href="https://www.bilibili.com/video/BV1Vf4y127N5">https://www.bilibili.com/video/BV1Vf4y127N5</a></p></li><li><p>⭐ 尚硅谷 - SpringMVC 2021 最新教程：<a href="https://www.bilibili.com/video/BV1Ry4y1574R">https://www.bilibili.com/video/BV1Ry4y1574R</a></p></li><li><p>⭐ 尚硅谷 - MyBatis 实战教程全套完整版：<a href="https://www.bilibili.com/video/BV1mW411M737">https://www.bilibili.com/video/BV1mW411M737</a></p></li><li><p>⭐ 尚硅谷 - MyBatisPlus 教程：<a href="https://www.bilibili.com/video/BV1Ds411E76Y">https://www.bilibili.com/video/BV1Ds411E76Y</a></p></li><li><p>Maven 零基础入门教程：<a href="https://www.bilibili.com/video/BV1TW411g7hP">https://www.bilibili.com/video/BV1TW411g7hP</a> （搞不懂 Maven 可以看看）</p></li><li><p>⭐ 雷丰阳 2021 版 SpringBoot2 零基础入门：<a href="https://www.bilibili.com/video/BV19K4y1L7MT">https://www.bilibili.com/video/BV19K4y1L7MT</a></p></li><li><p>尚硅谷 - SpringSecurity 框架教程：<a href="https://www.bilibili.com/video/BV15a411A7kP">https://www.bilibili.com/video/BV15a411A7kP</a></p></li></ul></li></ul><h3 id="🌘-开发规范（3-天）"><a href="#🌘-开发规范（3-天）" class="headerlink" title="🌘 开发规范（3 天）"></a>🌘 开发规范（3 天）</h3><p>开发不规范，同事两行泪。</p><p>开发规范是团队开发中必须遵守的，有利于提高项目的开发效率、降低维护成本。</p><h4 id="知识-8"><a href="#知识-8" class="headerlink" title="知识"></a>知识</h4><ul><li>代码规范<ul><li>代码风格</li><li>命名</li><li>其他规则</li></ul></li><li>代码校验（CheckStyle）</li><li>提交规范</li></ul><h4 id="学习建议-9"><a href="#学习建议-9" class="headerlink" title="学习建议"></a>学习建议</h4><p>有时间的话，简单过一遍大厂团队的代码规范手册就好了，以后做项目的时候能想起来的话就去使用，或者从书中、网上查规范文档，再去遵守。</p><p>项目做得多了，自然会养成好的习惯，不用刻意去记（毕竟每个团队规范也不完全相同，背了也没用）。也可以直接利用开发工具自带的一些代码检查插件，帮忙养成好的编码习惯。</p><h4 id="资源-9"><a href="#资源-9" class="headerlink" title="资源"></a>资源</h4><ul><li><p>书籍</p><ul><li>⭐ 阿里巴巴 Java 开发手册：<a href="https://developer.aliyun.com/graph/java">https://developer.aliyun.com/graph/java</a> （搜索《Java开发手册》）</li></ul></li><li><p>视频</p><ul><li>华山版《Java开发手册》独家讲解：<a href="https://developer.aliyun.com/live/1201">https://developer.aliyun.com/live/1201</a></li></ul></li><li><p>文档</p><ul><li>Google Java Style Guide：<a href="https://google.github.io/styleguide/javaguide.html">https://google.github.io/styleguide/javaguide.html</a> （谷歌 Java 代码规范）</li></ul></li></ul><h3 id="🌕-Git（3-天）"><a href="#🌕-Git（3-天）" class="headerlink" title="🌕 Git（3 天）"></a>🌕 Git（3 天）</h3><p>此前大家可能听说过 GitHub，一流的代码开源托管平台。</p><p>Git 和它可不一样，是一个版本控制工具，可以更好地管理和共享项目代码，比如把自己的代码传到 GitHub 上、或者从远程下载。</p><p>无论自己做项目、还是团队开发，Git 都是现在不可或缺的神器。</p><h4 id="知识-9"><a href="#知识-9" class="headerlink" title="知识"></a>知识</h4><ul><li>区分 Git 和 GitHub</li><li>工作区</li><li>分支</li><li>代码提交、推送、拉取、回退、重置</li><li>分支操作</li><li>代码合并、解决冲突</li><li>标签</li><li>cherry-pick</li><li>Git Flow</li><li>相关技术：SVN（比较老）</li></ul><h4 id="学习建议-10"><a href="#学习建议-10" class="headerlink" title="学习建议"></a>学习建议</h4><p>每个命令跟着敲一遍，有个大致的印象，会用即可。</p><p>建议平时大家可以多把自己的代码使用 Git 命令上传到 GitHub 上，用的多了自然就熟悉了。</p><h4 id="经典面试题-7"><a href="#经典面试题-7" class="headerlink" title="经典面试题"></a>经典面试题</h4><ol><li>如何解决提交冲突？</li><li>提交不小心出现误操作，如何撤销？</li><li>什么是 Git Flow，它有什么好处？</li></ol><h4 id="资源-10"><a href="#资源-10" class="headerlink" title="资源"></a>资源</h4><ul><li><p>视频</p><ul><li>⭐【尚硅谷】5h打通Git全套教程丨2021最新IDEA版 <a href="https://www.bilibili.com/video/BV1vy4y1s7k6">https://www.bilibili.com/video/BV1vy4y1s7k6</a></li></ul></li><li><p>书籍</p><ul><li>猴子都能懂的 Git 入门 <a href="https://backlog.com/git-tutorial/cn/">https://backlog.com/git-tutorial/cn/</a></li><li>⭐ GitHub 漫游指南 <a href="https://github.phodal.com/">https://github.phodal.com/</a></li></ul></li><li><p>文档</p><ul><li>GitHub 官方文档：<a href="https://docs.github.com/cn">https://docs.github.com/cn</a></li></ul></li><li><p>游戏</p><ul><li>Learning Git Branching：<a href="https://learngitbranching.js.org/?locale=zh_CN">https://learngitbranching.js.org/?locale=zh_CN</a></li></ul></li></ul><h3 id="🌖-Linux（10-天）"><a href="#🌖-Linux（10-天）" class="headerlink" title="🌖 Linux（10 天）"></a>🌖 Linux（10 天）</h3><p>企业中的很多前后台项目都是部署在 Linux 服务器上的，因此很有必要熟悉 Linux 的操作和脚本的编写。</p><p>后面学微服务、学架构都是在多台服务器操作，如果你不熟悉 Linux，会有点吃力。</p><h4 id="知识-10"><a href="#知识-10" class="headerlink" title="知识"></a>知识</h4><ul><li>Linux 系统安装</li><li>环境变量</li><li>文件管理</li><li>用户管理</li><li>内存管理</li><li>磁盘管理</li><li>进程管理</li><li>网络管理</li><li>软件包管理</li><li>服务管理</li><li>日志管理</li><li>Linux 内核</li><li><strong>常用命令</strong></li><li><strong>常用环境搭建</strong></li><li><strong>Shell 脚本编程</strong></li><li><strong>VIM 的使用</strong></li></ul><h4 id="学习建议-11"><a href="#学习建议-11" class="headerlink" title="学习建议"></a>学习建议</h4><p>多动手实践，建议自己购买一台云服务器，并且在本地搭建 Linux 虚拟机环境。</p><p>一定要自己从 0 开始手敲命令安装软件、部署服务，熟悉整个项目的上线流程。</p><p>每个命令至少要跟着敲一遍，了解它们的作用，并通过自然地练习，熟悉常用的 Linux 命令。</p><p>记不住没关系，用文档查就行了。</p><p>先会用，再理解。一般面试问的 Linux 题目也不会很难，面试前去背一下八股文就没什么问题，感兴趣的话可以去看看 Linux 内核设计。</p><h4 id="经典面试题-8"><a href="#经典面试题-8" class="headerlink" title="经典面试题"></a>经典面试题</h4><ol><li>如何查看某个进程的运行状态？</li><li>如何在 Linux 上查看 2 G 的大文件？</li><li>Linux 软链接和硬链接的区别</li></ol><h4 id="资源-11"><a href="#资源-11" class="headerlink" title="资源"></a>资源</h4><ul><li><p>视频</p><ul><li>⭐ 2021 韩顺平 一周学会Linux <a href="https://www.bilibili.com/video/BV1Sv411r7vd">https://www.bilibili.com/video/BV1Sv411r7vd</a> （基于 CentOS 7.6 版本较新）</li></ul></li><li><p>书籍</p><ul><li>《鸟哥的 Linux 私房菜 —— 基础篇》<a href="http://cn.linux.vbird.org/linux_basic/linux_basic.php">http://cn.linux.vbird.org/linux_basic/linux_basic.php</a> （经典）</li></ul></li><li><p>文档</p><ul><li>Linux 工具快速教程：<a href="https://linuxtools-rst.readthedocs.io/">https://linuxtools-rst.readthedocs.io</a> （基础、工具进阶、工具参考）</li></ul></li><li><p>实战</p><ul><li>⭐ 蓝桥云课 Linux 基础入门：<a href="https://www.lanqiao.cn/courses/1">https://www.lanqiao.cn/courses/1</a></li><li>腾讯云动手实验室：<a href="https://cloud.tencent.com/developer/labs">https://cloud.tencent.com/developer/labs</a></li><li>阿里云体验实验室：<a href="https://developer.aliyun.com/adc/labs/">https://developer.aliyun.com/adc/labs/</a></li><li>阿里云知行实验室：<a href="https://start.aliyun.com/">https://start.aliyun.com/</a></li><li>华为云沙箱实验室：<a href="https://lab.huaweicloud.com/">https://lab.huaweicloud.com/</a></li></ul></li><li><p>社区</p><ul><li>Linux 中国：<a href="https://linux.cn/">https://linux.cn/</a></li></ul></li><li><p>工具</p><ul><li>⭐ Linux 命令搜索：<a href="https://wangchujiang.com/linux-command">https://wangchujiang.com/linux-command</a></li><li>Linux 命令大全手册：<a href="https://www.linuxcool.com/">https://www.linuxcool.com/</a></li><li>Linux 命令示例：<a href="http://linux-commands-examples.com/">http://linux-commands-examples.com/</a></li><li>宝塔 Linux 面板：<a href="https://www.bt.cn/">https://www.bt.cn/</a></li></ul></li></ul><h3 id="🌘-前端基础（14-天）"><a href="#🌘-前端基础（14-天）" class="headerlink" title="🌘 前端基础（14 天）"></a>🌘 前端基础（14 天）</h3><p>虽然 Java 程序员面试时基本不会出现前端相关问题，但是在企业中，往往需要前后端程序员配合完成工作。会一些前端，不仅可以提高你们的协作效率，还能提高自己对整个项目的了解和掌控力，甚至能独立开发出一个完整项目！这点也是能给面试加分的。</p><h4 id="知识-11"><a href="#知识-11" class="headerlink" title="知识"></a>知识</h4><ul><li>HTML</li><li>CSS</li><li>JavaScript<ul><li>Ajax</li></ul></li><li>Vue</li></ul><h4 id="学习建议-12"><a href="#学习建议-12" class="headerlink" title="学习建议"></a>学习建议</h4><p>不需要学习太多的前端技术，熟悉下基础的前端三件套，了解前端是如何向后端发送请求来做数据交互的一般就够了。有时间的话可以学下 Vue ，是比较容易上手的主流前端开发框架，Vue + SpringBoot 还是很香的。</p><h4 id="资源-12"><a href="#资源-12" class="headerlink" title="资源"></a>资源</h4><p>参见鱼皮原创的前端学习路线：<a href="https://mp.weixin.qq.com/s/HbzLEt6NOP9Is9F3GOnbUQ">https://mp.weixin.qq.com/s/HbzLEt6NOP9Is9F3GOnbUQ</a></p><h3 id="练手项目-1"><a href="#练手项目-1" class="headerlink" title="练手项目"></a>练手项目</h3><blockquote><p>更多请见本路线阶段 5：[项目源码（50 套）](###项目源码（50 套）) 。</p></blockquote><ul><li>HotelSystem：<a href="https://github.com/misterchaos/HotelSystem">https://github.com/misterchaos/HotelSystem</a> （酒店管理系统 Java,tomcat,mysql,servlet,jsp实现，没有使用任何框架）</li><li>超市管理系统：<a href="https://github.com/zhanglei-workspace/shopping-management-system">https://github.com/zhanglei-workspace/shopping-management-system</a></li><li>Mall4j：<a href="https://github.com/gz-yami/mall4j">https://github.com/gz-yami/mall4j</a> （Spring Boot 电商系统）</li><li>newbee-mall：<a href="https://github.com/newbee-ltd/newbee-mall">https://github.com/newbee-ltd/newbee-mall</a> （基于 Spring Boot 2.X 的全栈电商系统）</li><li>litemall：<a href="https://github.com/linlinjava/litemall">https://github.com/linlinjava/litemall</a> （小商城系统，Spring Boot 后端 + Vue 管理员前端 + 微信小程序用户前端 + Vue 用户移动端）</li><li>forum-java：<a href="https://github.com/Qbian61/forum-java">https://github.com/Qbian61/forum-java</a> （一款用 Java Spring Boot 实现的现代化社区系统）</li></ul><h3 id="尾声-2"><a href="#尾声-2" class="headerlink" title="尾声"></a>尾声</h3><p>学完这个阶段的知识后，一定要再串起来回忆一遍，必须自己独立开发一个 Java Web 项目（量级可以不大，但你学过的技术尽可能地用上），能发布到 Linux 服务器上让其他小伙伴访问就更好了~</p><p>如果你只是对 Java 感兴趣、或者只是想试着自己开发后台，并不是想靠 Java 找工作的话，学到这里就可以了。可以把更多时间投入到你主方向的学习中。</p><p>但如果你是想找 Java 方向的工作，尤其是想进大厂的话，一定要继续努力，用心学习下个阶段的企业开发进阶知识。</p><h2 id="阶段-4：Java-企业开发进阶"><a href="#阶段-4：Java-企业开发进阶" class="headerlink" title="阶段 4：Java 企业开发进阶"></a>阶段 4：Java 企业开发进阶</h2><h3 id="目标-3"><a href="#目标-3" class="headerlink" title="目标"></a>目标</h3><p>学习更多企业级开发技术和编程思想，能够结合多种技术，独立开发出架构合理的完整系统，<strong>解决实际问题</strong> 。</p><p>要了解为什么需要这个技术？什么时候用这个技术？某个需求该用哪些技术？</p><p>当然，这个阶段的内容有些过于丰富，不是所有的东西都要学，大家可以根据自己的实际情况（时间），有选择地学习。</p><h3 id="🌘-软件工程"><a href="#🌘-软件工程" class="headerlink" title="🌘 软件工程"></a>🌘 软件工程</h3><p>软件开发和管理的一些概念、原则、技术、方法、工具和经验。</p><h4 id="知识-12"><a href="#知识-12" class="headerlink" title="知识"></a>知识</h4><ul><li>软件的本质</li><li>软件特性</li><li>软件过程</li><li>软件开发原则<ul><li>开闭原则</li><li>里氏替换原则</li><li>依赖倒置原则</li><li>单一职责原则</li><li>接口隔离原则</li><li>迪米特法则</li></ul></li><li>软件过程模型</li><li>敏捷开发</li><li>软件开发模型</li><li>需求建模</li><li>软件设计</li><li>UML</li><li>体系结构设计</li><li>设计模式</li><li>软件质量管理</li><li>评审</li><li>软件质量保证</li><li>软件测试<ul><li>单元测试</li><li>集成测试</li><li>系统测试</li><li>压力测试</li><li>部署测试</li></ul></li><li>软件配置管理</li><li>软件项目管理</li><li>软件项目估算</li><li>项目进度安排</li><li>风险管理</li><li>软件过程改进<ul><li>成熟度模型</li></ul></li></ul><h4 id="学习建议-13"><a href="#学习建议-13" class="headerlink" title="学习建议"></a>学习建议</h4><p>大学软件专业的必修课，偏理论，能学到很多企业软件开发的方法，也是对软件开发同学综合能力的提升，有时间的话可以了解下。但对想要快速找工作的同学来说，忽略即可，面试基本不会问。</p><h4 id="资源-13"><a href="#资源-13" class="headerlink" title="资源"></a>资源</h4><ul><li><p>书籍</p><ul><li>《软件工程：实践者的研究方法》：<a href="https://book.douban.com/subject/6047742/">https://book.douban.com/subject/6047742/</a> （经典大黑书，讲的非常全面，但同样完整读下来还是有些难度的）</li><li>《软件开发的 201 个原则》：<a href="https://book.douban.com/subject/35628886/">https://book.douban.com/subject/35628886/</a> （工具书，看一遍挺好的）</li></ul></li><li><p>视频</p><ul><li>清华大学软件工程：<a href="https://www.bilibili.com/video/BV1eE411V7Cr">https://www.bilibili.com/video/BV1eE411V7Cr</a></li><li>北京大学软件工程：<a href="https://www.bilibili.com/video/BV1Vt411V72G">https://www.bilibili.com/video/BV1Vt411V72G</a></li><li>大连工业大学软件工程：<a href="https://www.bilibili.com/video/BV1Ns41177VM">https://www.bilibili.com/video/BV1Ns41177VM</a></li></ul></li><li><p>大学课件</p><ul><li>浙大计算机软件工程：<a href="https://github.com/QSCTech/zju-icicles">https://github.com/QSCTech/zju-icicles</a></li></ul></li></ul><h3 id="🌖-设计模式（21-天）"><a href="#🌖-设计模式（21-天）" class="headerlink" title="🌖 设计模式（21 天）"></a>🌖 设计模式（21 天）</h3><p>设计模式是软件开发中解决一类问题的通用方法。</p><p>使用设计模式能让你写出更优雅、可维护的代码，也正因如此，很多框架源码都用到了设计模式，你不学很难看懂。</p><h4 id="知识-13"><a href="#知识-13" class="headerlink" title="知识"></a>知识</h4><ul><li><p>创建型模式：对象实例化的模式，创建型模式用于解耦对象的实例化过程</p><ul><li>单例模式</li><li>工厂方法模式</li><li>抽象工厂</li><li>建造者模式</li><li>原型模式</li></ul></li><li><p>结构型模式：把类或对象结合在一起形成一个更大的结构</p><ul><li>适配器模式</li><li>组合模式</li><li>装饰器模式</li><li>代理模式</li><li>享元模式</li><li>外观模式</li><li>桥接模式</li></ul></li><li><p>行为型模式：类和对象如何交互，及划分责任和算法</p><ul><li>迭代器模式</li><li>模板方法模式</li><li>策略模式</li><li>命令模式</li><li>状态模式</li><li>责任链模式</li><li>备忘录模式</li><li>观察者模式</li><li>访问者模式</li><li>中介者模式</li><li>解释器模式</li></ul></li></ul><h4 id="学习建议-14"><a href="#学习建议-14" class="headerlink" title="学习建议"></a>学习建议</h4><p>先理解概念，了解每个设计模式的特点和应用场景，再多加练习，运用到实际项目。</p><h4 id="经典面试题-9"><a href="#经典面试题-9" class="headerlink" title="经典面试题"></a>经典面试题</h4><ol><li>单例模式有哪些实现方式？有哪些优缺点？请手写其中一种</li><li>你用过哪些设计模式，为什么用它？</li></ol><h4 id="资源-14"><a href="#资源-14" class="headerlink" title="资源"></a>资源</h4><ul><li><p>书籍</p><ul><li>⭐《图解设计模式》（强烈推荐这本书，正是用 Java 语言实现，图多、有示例代码、有习题和答案，很不错）</li><li>《Head First 设计模式》</li><li>《大话设计模式》</li><li>《设计模式：可复用面向对象软件的基础》（大黑书，有能力的话也可以去读）</li></ul></li><li><p>视频</p><ul><li>尚硅谷图解 Java 设计模式：<a href="https://www.bilibili.com/video/BV1G4411c7N4">https://www.bilibili.com/video/BV1G4411c7N4</a></li></ul></li><li><p>文档</p><ul><li>菜鸟教程：<a href="https://www.runoob.com/design-pattern/design-pattern-tutorial.html">https://www.runoob.com/design-pattern/design-pattern-tutorial.html</a></li><li>图说设计模式：<a href="https://design-patterns.readthedocs.io/zh_CN/latest/">https://design-patterns.readthedocs.io/zh_CN/latest/</a></li></ul></li></ul><h3 id="🌕-缓存（14-天）"><a href="#🌕-缓存（14-天）" class="headerlink" title="🌕 缓存（14 天）"></a>🌕 缓存（14 天）</h3><p>缓存是高并发系统不可或缺的技术，可以提高系统的性能和并发，因此是后台开发必学的知识点，也是面试重点。</p><h4 id="知识-14"><a href="#知识-14" class="headerlink" title="知识"></a>知识</h4><ul><li>什么是缓存？</li><li>本地缓存<ul><li>Caffeine 库</li></ul></li><li>多级缓存</li><li>Redis 分布式缓存<ul><li>数据类型</li><li>常用操作</li><li>Java 操作 Redis<ul><li>Spring Boot Redis Template</li><li>Redisson</li></ul></li><li>主从模型搭建</li><li>哨兵集群搭建</li><li>日志持久化</li></ul></li><li>缓存（Redis）应用场景<ul><li>数据共享</li><li>单点登录</li><li>计数器</li><li>限流</li><li>点赞</li><li>实时排行榜</li><li>分布式锁</li></ul></li><li>缓存常见问题<ul><li>缓存雪崩</li><li>缓存击穿</li><li>缓存穿透</li><li>缓存更新一致性</li></ul></li><li>相关技术：Memcached、Ehcache</li></ul><h4 id="学习建议-15"><a href="#学习建议-15" class="headerlink" title="学习建议"></a>学习建议</h4><p>学会如何简单地使用缓存并不难，和数据库类似，无非就是调用 API 对数据进行增删改查。</p><p>因此，建议先能够独立使用它，了解缓存的应用场景；再学习如何在 Java 中操作缓存中间件，并尝试和项目相结合，提高系统的性能。</p><p>跟着视频教程实操一遍即可，可以等到面试前再去深入了解原理和高级特性。</p><h4 id="经典面试题-10"><a href="#经典面试题-10" class="headerlink" title="经典面试题"></a>经典面试题</h4><ol><li>Redis 为什么快？</li><li>Redis 有哪些常用的数据结构？</li><li>Redis RDB 和 AOF 持久化的区别，如何选择？</li><li>如何解决缓存击穿、缓存穿透、雪崩问题？</li><li>如何用 Redis 实现点赞功能，怎么设计 Key &#x2F; Value？</li></ol><h4 id="资源-15"><a href="#资源-15" class="headerlink" title="资源"></a>资源</h4><ul><li>视频<ul><li>⭐ 尚硅谷 - 2021 最新 Redis 6 入门到精通教程：<a href="https://www.bilibili.com/video/BV1Rv41177Af">https://www.bilibili.com/video/BV1Rv41177Af</a> （基于 Redis 6 的，推荐）</li></ul></li><li>文档<ul><li>Redis 命令参考：<a href="http://redisdoc.com/">http://redisdoc.com/</a></li><li>Redis 面试题整理：<a href="https://github.com/lokles/Web-Development-Interview-With-Java/blob/main/Redis%E9%97%AE%E9%A2%98.md">https://github.com/lokles/Web-Development-Interview-With-Java/blob/main/Redis%E9%97%AE%E9%A2%98.md</a></li></ul></li><li>书籍<ul><li>《Redis 实战》（经典）</li></ul></li><li>工具<ul><li>⭐ Redis 在线练习：<a href="https://try.redis.io/">https://try.redis.io/</a> （强烈推荐）</li></ul></li></ul><h3 id="🌖-消息队列（14-天）"><a href="#🌖-消息队列（14-天）" class="headerlink" title="🌖 消息队列（14 天）"></a>🌖 消息队列（14 天）</h3><p>消息队列是用于传输和保存消息的容器，也是大型分布式系统中常用的技术，主要解决应用耦合、异步消息、流量削锋等问题。后台开发必学，也是面试重点。</p><h4 id="知识-15"><a href="#知识-15" class="headerlink" title="知识"></a>知识</h4><ul><li>消息队列的作用</li><li>RabbitMQ 消息队列<ul><li>生产消费模型</li><li>交换机模型</li><li>死信队列</li><li>延迟队列</li><li>消息持久化</li><li>Java 操作</li><li>集群搭建</li></ul></li><li>相关技术：Kafka、ActiveMQ、TubeMQ、RocketMQ</li></ul><h4 id="学习建议-16"><a href="#学习建议-16" class="headerlink" title="学习建议"></a>学习建议</h4><p>和缓存一样，学会如何使用消息队列并不难，无非就是调用 API 去生产、转发和消费消息。</p><p>因此，建议先能够独立使用它，了解消息队列的应用场景；再学习如何在 Java 中操作消息队列中间件，并尝试和项目相结合，感受消息队列带来的好处。</p><p>这里我建议初学者先学习 RabbitMQ，比 Kafka 要好理解一些。跟着视频教程实操一遍即可，可以等到面试前再去深入了解原理和高级特性。</p><h4 id="经典面试题-11"><a href="#经典面试题-11" class="headerlink" title="经典面试题"></a>经典面试题</h4><ol><li>使用消息队列有哪些优缺点？</li><li>如何保证消息消费的幂等性？</li><li>消息队列有哪些路由模型？</li><li>你是否用过消息队列，解决过什么问题？</li></ol><h4 id="资源-16"><a href="#资源-16" class="headerlink" title="资源"></a>资源</h4><ul><li>视频<ul><li>⭐ 尚硅谷 - 2021 最新 RabbitMQ 教程：<a href="https://www.bilibili.com/video/BV1cb4y1o7zz">https://www.bilibili.com/video/BV1cb4y1o7zz</a> （很新很全面）</li></ul></li><li>文档<ul><li>RabbitMQ 中文文档：<a href="http://rabbitmq.mr-ping.com/">http://rabbitmq.mr-ping.com/</a></li></ul></li><li>书籍<ul><li>《RabbitMQ 实战：高效部署分布式消息队列》（经典）</li></ul></li><li>工具<ul><li>⭐ RabbitMQ 在线模拟器：<a href="http://tryrabbitmq.com/">http://tryrabbitmq.com/</a></li></ul></li></ul><h3 id="🌖-Nginx（14-天）"><a href="#🌖-Nginx（14-天）" class="headerlink" title="🌖 Nginx（14 天）"></a>🌖 Nginx（14 天）</h3><p>Nginx 是主流的、开源的、高性能的 HTTP 和反向代理 web 服务器，可以用于挂载网站、请求转发、负载均衡、网关路由等。前后端开发同学都需要学习，在后端开发的面试中有时会考到。</p><h4 id="知识-16"><a href="#知识-16" class="headerlink" title="知识"></a>知识</h4><ul><li>Nginx 作用</li><li>正向代理</li><li>反向代理（负载均衡）</li><li>常用命令</li><li>配置</li><li>动静分离（网站部署）</li><li>集群搭建</li><li>相关技术：HAProxy、Apache</li></ul><h4 id="学习建议-17"><a href="#学习建议-17" class="headerlink" title="学习建议"></a>学习建议</h4><p>Nginx 的基本使用非常简单，甚至不需要看任何的视频，跟着一篇文章就能够用它来提供网站访问能力、实现反向代理。</p><p>但是在企业中，Nginx 的使用往往没那么简单，作为负载均衡、请求转发的重要组件，往往需要针对实际场景去写一些特定的配置。因此建议有时间的话，实践下 Nginx 的配置方法，了解 Nginx 基本的设计思想，对今后自己设计系统时也有帮助。</p><h4 id="经典面试题-12"><a href="#经典面试题-12" class="headerlink" title="经典面试题"></a>经典面试题</h4><ol><li>Nginx 有哪些作用？</li><li>Nginx 为什么支持高并发？</li><li>Nginx 有哪些负载均衡策略？</li><li>什么是 Nginx 惊群问题，如何解决它？</li></ol><h4 id="资源-17"><a href="#资源-17" class="headerlink" title="资源"></a>资源</h4><ul><li>视频<ul><li>⭐ 尚硅谷 - Nginx 教程由浅入深：<a href="https://www.bilibili.com/video/BV1zJ411w7SV">https://www.bilibili.com/video/BV1zJ411w7SV</a> （讲的比较全面）</li><li>⭐ Nginx 鱼皮 - 手把手带你从0搭建个人网站：<a href="https://www.bilibili.com/video/BV1rU4y1J785/">https://www.bilibili.com/video/BV1rU4y1J785/</a> （简单演示 Nginx 部署网站）</li></ul></li><li>文档<ul><li>Nginx 中文文档：<a href="https://www.nginx.cn/doc/index.html">https://www.nginx.cn/doc/index.html</a></li></ul></li><li>工具<ul><li>Nginx 配置在线生成：<a href="https://www.digitalocean.com/community/tools/nginx?global.app.lang=zhCN">https://www.digitalocean.com/community/tools/nginx?global.app.lang=zhCN</a></li></ul></li></ul><h3 id="🌗-Netty-网络编程（21-天）"><a href="#🌗-Netty-网络编程（21-天）" class="headerlink" title="🌗 Netty 网络编程（21 天）"></a>🌗 Netty 网络编程（21 天）</h3><p>开源的 Java 网络编程框架，用于开发高性能（事件驱动、异步非阻塞）、高可靠的网络服务器和客户端程序。</p><p>很多网络框架和服务器程序都用到了 Netty 作为底层，学好 Netty 不仅可以让我们自己实现高性能服务器，也能更好地理解其他的框架应用、阅读源码。</p><h4 id="知识-17"><a href="#知识-17" class="headerlink" title="知识"></a>知识</h4><ul><li>IO 模型（BIO &#x2F; NIO）</li><li>Channel</li><li>Buffer</li><li>Seletor</li><li>Netty 模型</li><li>WebSocket 编程（动手做个聊天室）</li><li>相关技术：Vertx（中文文档：<a href="http://vertxchina.github.io/vertx-translation-chinese/">http://vertxchina.github.io/vertx-translation-chinese/</a> ，比 Netty 简单多了，实在看不懂 Netty 也可以学习下这个）</li></ul><h4 id="学习建议-18"><a href="#学习建议-18" class="headerlink" title="学习建议"></a>学习建议</h4><p>不同于之前学的 SSM 框架，Netty 还是需要一定学习成本的，一方面是国内资源太缺乏，另一方面很多重要的概念（比如 NIO）还是要多动手写代码调试才能理解。</p><p>还是建议先从视频入门，并且不建议在 Netty 上花太多时间，面试的时候一般也就考察一些 Netty 背后的思想（比如 NIO）而非框架本身的语法细节。</p><h4 id="经典面试题-13"><a href="#经典面试题-13" class="headerlink" title="经典面试题"></a>经典面试题</h4><ol><li>Netty 有哪些优点？</li><li>什么是 NIO？</li><li>介绍 Netty 的零拷贝机制</li></ol><h4 id="资源-18"><a href="#资源-18" class="headerlink" title="资源"></a>资源</h4><ul><li><p>视频</p><ul><li><p>⭐ 尚硅谷Netty教程：<a href="https://www.bilibili.com/video/BV1DJ411m7NR">https://www.bilibili.com/video/BV1DJ411m7NR</a></p></li><li><p>Netty 技术演讲（中文字幕版）：<a href="https://www.youtube.com/watch?v=I8yy2Cy7dDI">https://www.youtube.com/watch?v=I8yy2Cy7dDI</a></p></li></ul></li><li><p>文档</p><ul><li>Netty 4 用户指南：<a href="https://www.w3cschool.cn/netty_4_user_guide/">https://www.w3cschool.cn/netty_4_user_guide/</a></li></ul></li><li><p>书籍</p><ul><li>《Netty 实战》</li></ul></li></ul><h3 id="🌖-微服务（60-天）"><a href="#🌖-微服务（60-天）" class="headerlink" title="🌖 微服务（60 天）"></a>🌖 微服务（60 天）</h3><p>随着互联网的发展，项目越来越复杂，单机且庞大的巨石项目已无法满足开发、运维、并发、可靠性等需求。</p><p>因此，后台架构不断演进，可以将庞大的项目拆分成一个个职责明确、功能独立的细小模块，模块可以部署在多台服务器上，相互配合协作，提供完整的系统能力。</p><p>换言之，想做大型项目，这块儿一定要好好学！</p><h4 id="知识-18"><a href="#知识-18" class="headerlink" title="知识"></a>知识</h4><h5 id="Dubbo"><a href="#Dubbo" class="headerlink" title="Dubbo"></a>Dubbo</h5><ul><li>架构演进</li><li>RPC</li><li>Zookeeper</li><li>服务提供者</li><li>服务消费者</li><li>项目搭建</li><li>相关技术：DubboX（对 Dubbo 的扩展）</li></ul><h5 id="🌖-微服务"><a href="#🌖-微服务" class="headerlink" title="🌖 微服务"></a>🌖 微服务</h5><ul><li>微服务概念</li><li>Spring Cloud 框架<ul><li>子父工程</li><li>服务注册与发现</li><li>注册中心 Eureka、Zookeeper、Consul</li><li>Ribbon 负载均衡</li><li>Feign 服务调用</li><li>Hystrix 服务限流、降级、熔断</li><li>Resilience4j 服务容错</li><li>Gateway（Zuul）微服务网关</li><li>Config 分布式配置中心</li><li>分布式服务总线</li><li>Sleuth + Zipkin 分布式链路追踪</li></ul></li><li>Spring Cloud Alibaba<ul><li>Nacos 注册、配置中心</li><li>OpenFeign 服务调用</li><li>Sentinel 流控</li><li>Seata 分布式事务</li></ul></li></ul><h5 id="接口管理"><a href="#接口管理" class="headerlink" title="接口管理"></a>接口管理</h5><ul><li>Swagger 接口文档</li><li>Postman 接口测试</li><li>相关技术：YApi、ShowDoc</li></ul><h4 id="学习建议-19"><a href="#学习建议-19" class="headerlink" title="学习建议"></a>学习建议</h4><p>时间不急的话，建议先从 Dubbo 学起，对分布式、RPC、微服务有些基本的了解，再去食用 Spring Cloud 全家桶会更香。学完 Spring Cloud 全家桶后，再去学 Spring Cloud Alibaba 就很简单了。</p><p>这部分内容的学习，原理 + 实践都很重要，也不要被各种高大上的词汇唬住了，都是上层（应用层）的东西，基本没有什么算法，跟着视频教程学，其实还是很好理解的。</p><p>分布式相关知识非常多，但这里不用刻意去背，先通过视频教程实战使用一些微服务框架，也能对其中的概念有基本的了解。</p><p>大厂面试的时候很少问 Spring Cloud 框架的细节，更多的是微服务以及各组件的一些思想，比如网关的好处、消息总线的好处等。</p><h4 id="经典面试题-14"><a href="#经典面试题-14" class="headerlink" title="经典面试题"></a>经典面试题</h4><ol><li>什么是微服务，有哪些优缺点？</li><li>什么是注册中心，能解决什么问题？</li></ol><h4 id="资源-19"><a href="#资源-19" class="headerlink" title="资源"></a>资源</h4><ul><li><p>视频</p><ul><li><p>⭐ 尚硅谷 Dubbo 教程：<a href="https://www.bilibili.com/video/BV1ns411c7jV">https://www.bilibili.com/video/BV1ns411c7jV</a></p></li><li><p>⭐ 尚硅谷 SpringCloud（H版&amp;alibaba）框架开发教程（微服务分布式架构）：<a href="https://www.bilibili.com/video/BV18E411x7eT">https://www.bilibili.com/video/BV18E411x7eT</a> （把国外的 Spring Cloud 和国内的 Spring Cloud Alibaba 结合在一起对比着去讲，主流技术栈、知识点都讲到了，真心不错！）</p></li></ul></li><li><p>文档</p><ul><li>Apache Dubbo 官方文档：<a href="https://dubbo.apache.org/zh/">https://dubbo.apache.org/zh/</a></li><li>Spring Cloud Alibaba 官方文档：<a href="https://github.com/alibaba/spring-cloud-alibaba/blob/master/README-zh.md">https://github.com/alibaba/spring-cloud-alibaba/blob/master/README-zh.md</a></li><li>⭐ Swagger 教学文档：<a href="https://doc.xiaominfo.com/">https://doc.xiaominfo.com/</a> （跟着快速开始直接用就好了）</li></ul></li></ul><h3 id="🌖-容器（7-天）"><a href="#🌖-容器（7-天）" class="headerlink" title="🌖 容器（7 天）"></a>🌖 容器（7 天）</h3><p>将应用和环境进行封装，相互隔离、独立部署、便于移植，提高安全性、提高开发和维护效率。</p><p>便于实现微服务、持续集成和交付。</p><h4 id="知识-19"><a href="#知识-19" class="headerlink" title="知识"></a>知识</h4><ul><li>🌖 Docker<ul><li>容器概念</li><li>镜像</li><li>部署服务</li><li>Dockerfile</li><li>Docker Compose</li><li>Docker Machine</li><li>Docker Swarm</li><li>多阶段构建</li></ul></li><li>🌘 K8S（Kubernetes）<ul><li>K8S 架构</li><li>工作负载<ul><li>资源类型</li><li>Pod</li><li>Pod 生命周期</li><li>Pod 安全策略</li></ul></li><li>K8S 组件</li><li>K8S 对象</li><li>部署应用</li><li>服务<ul><li>Ingress</li></ul></li><li>Kubectl 命令行</li><li>集群管理</li></ul></li><li>相关技术：Apache Mesos、Mesosphere</li></ul><h4 id="学习建议-20"><a href="#学习建议-20" class="headerlink" title="学习建议"></a>学习建议</h4><p>业务上云是趋势，但是对于开发同学来说，会用 Docker &#x2F; K8S 部署项目和服务就行。实际工作中，企业一般都有现成的平台直接用，面试考察的也不多，不用花太多时间。</p><h4 id="经典面试题-15"><a href="#经典面试题-15" class="headerlink" title="经典面试题"></a>经典面试题</h4><ol><li>什么是容器？</li><li>使用  Docker 有哪些好处？</li><li>如何快速启动多个 Docker 节点？</li></ol><h4 id="资源-20"><a href="#资源-20" class="headerlink" title="资源"></a>资源</h4><ul><li><p>视频</p><ul><li>⭐【狂神说】Docker 最新超详细版教程通俗易懂：<a href="https://www.bilibili.com/video/BV1og4y1q7M4">https://www.bilibili.com/video/BV1og4y1q7M4</a></li><li>K8S 视频教程：<a href="https://www.bilibili.com/video/BV1K5411N7j8">https://www.bilibili.com/video/BV1K5411N7j8</a></li></ul></li><li><p>书籍</p><ul><li>《深入浅出 Docker》：<a href="https://www.zhihu.com/pub/reader/119632192">https://www.zhihu.com/pub/reader/119632192</a></li></ul></li><li><p>文档</p><ul><li>Docker — 从入门到实践：<a href="https://vuepress.mirror.docker-practice.com/">https://vuepress.mirror.docker-practice.com/</a></li><li>菜鸟教程 Docker：<a href="https://www.runoob.com/docker/docker-tutorial.html">https://www.runoob.com/docker/docker-tutorial.html</a></li><li>国外 Docker 官方文档：<a href="https://docs.docker.com/get-started/">https://docs.docker.com/get-started/</a></li></ul></li><li><p>网站</p><ul><li>Docker 中文社区：<a href="https://www.docker.org.cn/">https://www.docker.org.cn/</a> （强烈推荐，有很多 Docker 技术文章和学习笔记）</li><li>Docker Blog：<a href="https://www.docker.com/blog/">https://www.docker.com/blog/</a> （国外 Docker 技术博客）</li></ul></li><li><p>镜像源</p><ul><li>Docker Hub：<a href="https://hub.docker.com/">https://hub.docker.com</a></li><li>腾讯软件源：<a href="http://mirrors.tencent.com/#/index">http://mirrors.tencent.com/#/index</a></li><li>阿里云 Docker 仓库：<a href="https://cr.console.aliyun.com/">https://cr.console.aliyun.com/</a></li></ul></li></ul><h3 id="🌗-CI-x2F-CD（3-天）"><a href="#🌗-CI-x2F-CD（3-天）" class="headerlink" title="🌗 CI &#x2F; CD（3 天）"></a>🌗 CI &#x2F; CD（3 天）</h3><p>持续集成 &#x2F; 持续交付，贯穿整个研发到项目上线的过程，提高效率。</p><p>大公司一般都有自己的 CI &#x2F; CD 平台。</p><h4 id="知识-20"><a href="#知识-20" class="headerlink" title="知识"></a>知识</h4><ul><li>什么是 CI &#x2F; CD</li><li>CI &#x2F; CD 有什么好处</li><li>使用任一 CI &#x2F; CD 平台</li><li>相关技术：Jenkins、GitLab、微信云托管</li></ul><h4 id="学习建议-21"><a href="#学习建议-21" class="headerlink" title="学习建议"></a>学习建议</h4><p>了解它是什么，并且实战使用任一 CI &#x2F; CD 平台，感受它和传统开发运维到底有什么不同，就足够了。其实很简单，不要花太多时间。</p><p>真正要自己去搭建的时候，跟着官方文档来就行。</p><h4 id="资源-21"><a href="#资源-21" class="headerlink" title="资源"></a>资源</h4><ul><li><p>视频</p><ul><li>⭐【狂神说】CI&#x2F;CD到底是什么？十分钟理解企业级DevOps：<a href="https://www.bilibili.com/video/BV1zf4y127vu">https://www.bilibili.com/video/BV1zf4y127vu</a> （讲的非常棒！带你快速理解 CI &#x2F; CD 的作用和部分原理）</li><li>尚硅谷 - Jenkins 持续集成工具教程：<a href="https://www.bilibili.com/video/BV1GW411w7pn">https://www.bilibili.com/video/BV1GW411w7pn</a> （实在要用到 Jenkins 再去学）</li></ul></li><li><p>文档</p><ul><li>Jenkins 官方文档：<a href="https://www.jenkins.io/zh/">https://www.jenkins.io/zh/</a> （有很多案例，要用的时候查一下就行了）</li></ul></li><li><p>实战平台</p><ul><li>⭐ 微信云托管：<a href="https://cloud.weixin.qq.com/cloudrun">https://cloud.weixin.qq.com/cloudrun</a> （直播演示过，鱼皮后面会给大家出视频教程）</li><li>前端托管 Webify：<a href="https://cloud.tencent.com/product/webify">https://cloud.tencent.com/product/webify</a> （鱼皮给大家出过视频教程的 <a href="https://www.bilibili.com/video/BV11V411p7vf/%EF%BC%89">https://www.bilibili.com/video/BV11V411p7vf/）</a></li></ul></li></ul><h3 id="练手项目-2"><a href="#练手项目-2" class="headerlink" title="练手项目"></a>练手项目</h3><blockquote><p>更多请见本路线阶段 5：[项目源码（50 套）](###项目源码（50 套）) 。</p></blockquote><ul><li><p>mall-learning：<a href="https://github.com/macrozheng/mall-learningmall">https://github.com/macrozheng/mall-learningmall</a> （学习教程，架构、业务、技术要点全方位解析）</p></li><li><p>miaosha：<a href="https://github.com/qiurunze123/miaosha">https://github.com/qiurunze123/miaosha</a> （秒杀系统设计与实现）</p></li><li><p>Mall：<a href="https://github.com/macrozheng/mall">https://github.com/macrozheng/mall</a> （包括前台商城系统及后台管理系统，基于 SpringBoot+MyBatis 实现）</p></li><li><p>Spring-Cloud-Admin：<a href="https://github.com/wxiaoqi/Spring-Cloud-AdminCloud-Admin">https://github.com/wxiaoqi/Spring-Cloud-AdminCloud-Admin</a> （基于 Spring Cloud 微服务化开发平台，具有统一授权、认证的后台管理系统）</p></li><li><p>paascloud-master：<a href="https://github.com/paascloud/paascloud-master">https://github.com/paascloud/paascloud-master</a> （基于 spring cloud + vue + oAuth2.0，前后端分离商城系统）</p></li><li><p>mall-swarm：<a href="https://github.com/macrozheng/mall-swarm">https://github.com/macrozheng/mall-swarm</a> （一套微服务商城系统，采用了 Spring Cloud Greenwich、Spring Boot 2、MyBatis、Docker、Elasticsearch 等核心技术，同时提供了基于 Vue 的管理后台方便快速搭建系统）</p></li><li><p>SecKill：<a href="https://github.com/hfbin/Seckill">https://github.com/hfbin/Seckill</a> （基于 SpringBoot+Mybatis+Redis+RabbitMQ 秒杀系统）</p></li><li><p>jeecg-boot：<a href="https://github.com/zhangdaiscott/jeecg-boot">https://github.com/zhangdaiscott/jeecg-boot</a> （低代码开发平台）</p></li><li><p>PassJava-Platform：<a href="https://github.com/Jackson0714/PassJava-Platform">https://github.com/Jackson0714/PassJava-Platform</a> （一款面试刷题的 Spring Cloud 开源系统）</p></li></ul><h3 id="尾声-3"><a href="#尾声-3" class="headerlink" title="尾声"></a>尾声</h3><p>看到这里，相信你已经感叹：编程语言一辈子学不完了！</p><p>但是，不用担心，通过对这么多知识点的学习，相信你已经有了一定的积累，也不知不觉地锻炼了自主学习能力、资源检索能力、代码阅读能力、问题解决能力，之后的学习会越来越轻松。</p><p>接下来，可以试着用你学到的技术来解决实际的问题，自主从 0 开始做一些项目，保持编程手感。</p><h2 id="阶段-5：项目实战"><a href="#阶段-5：项目实战" class="headerlink" title="阶段 5：项目实战"></a>阶段 5：项目实战</h2><h3 id="目标-4"><a href="#目标-4" class="headerlink" title="目标"></a>目标</h3><p>综合所学技术从 0 到 1 开发和上线一个全面、有特色的、可以写进简历的个人项目。</p><h3 id="学习建议-22"><a href="#学习建议-22" class="headerlink" title="学习建议"></a>学习建议</h3><p>其实在之前的框架学习视频中应该就做过几个项目了，但相对不够完整和体系化。</p><p>有想法的同学可以做任何自己想做的项目，推荐参加一些作品类竞赛，练手、拿奖、收获项目经历一举三得。</p><p>暂时没想法的朋友，建议先跟着专门带做项目的视频教程做 1 - 2 套 Java 完整项目，一定要从 0 到 1 自己手写！</p><p>有能力的朋友也可以试着用 GitHub 上的源码来学习啦~</p><p>做一个完整的项目的确很不容易，建议大家根据自己的 <strong>时间、兴趣</strong> 选择 <strong>较新的</strong>、<strong>有配套源码的</strong> 教程，保持耐心。</p><p>如何选择编程学习资源，可以看下我的原创文章：<a href="https://mp.weixin.qq.com/s/mlMql9RJCd7THt6rpGb8UA">https://mp.weixin.qq.com/s/mlMql9RJCd7THt6rpGb8UA</a></p><p>下面推荐一些优质的、较新的项目实战视频教程 + 50 套项目源码。</p><h3 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h3><ul><li><p>尚硅谷 - 谷粒学院 - 微服务 + 全栈 - 在线教育实战项目：<a href="https://www.bilibili.com/video/BV1dQ4y1A75e">https://www.bilibili.com/video/BV1dQ4y1A75e</a> （全栈项目，前后端讲得都很全面）</p></li><li><p>尚硅谷 - 尚筹网 - Java项目实战开发教程 - SSM 框架 + 微服务架构：<a href="https://www.bilibili.com/video/BV1bE411T7oZ%EF%BC%88500">https://www.bilibili.com/video/BV1bE411T7oZ（500</a> 多集，包含完整的用户权限管理，功能丰富、讲得很细致全面）</p></li><li><p>黑马 - 24 小时搞定 Java 毕设电商项目：<a href="https://www.bilibili.com/video/BV13f4y1r7fS">https://www.bilibili.com/video/BV13f4y1r7fS</a></p></li><li><p>黑马程序员 Java 项目《传智健康》，超完整的企业级医疗行业项目：<a href="https://www.bilibili.com/video/BV1Bo4y117zV">https://www.bilibili.com/video/BV1Bo4y117zV</a></p></li><li><p>黑马程序员 Java 项目《万信金融》企业级开发实战，互联网金融行业解决方案：<a href="https://www.bilibili.com/video/BV1Ub4y1f7rk">https://www.bilibili.com/video/BV1Ub4y1f7rk</a></p></li><li><p>黑马程序员 Java 项目 SaaS 移动办公完整版《iHRM 人力资源管理系统》，跨行业 SaaS 办公整合性解决方案：<a href="https://www.bilibili.com/video/BV18A411L7UX">https://www.bilibili.com/video/BV18A411L7UX</a></p></li><li><p>黑马程序员 Java 大型分布式微服务闪聚支付项目，Java 移动支付全生态系统：<a href="https://www.bilibili.com/video/BV17v411V79c">https://www.bilibili.com/video/BV17v411V79c</a></p></li><li><p>黑马程序员 Java 项目《好客租房》：<a href="https://www.bilibili.com/video/BV1sZ4y1F7PD">https://www.bilibili.com/video/BV1sZ4y1F7PD</a></p></li></ul><h3 id="常用类库"><a href="#常用类库" class="headerlink" title="常用类库"></a>常用类库</h3><h5 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h5><ul><li>Guava：谷歌开发的 Java 工具库（<a href="https://github.com/google/guava%EF%BC%89">https://github.com/google/guava）</a></li><li>Apache Commons：各类工具库，比如 commons-lang、commons-io、commons-collections 等（<a href="https://github.com/apache/commons-lang%EF%BC%89">https://github.com/apache/commons-lang）</a></li><li>Hutool：Java 工具集库（<a href="https://github.com/looly/hutool%EF%BC%89">https://github.com/looly/hutool）</a></li><li>Lombok：Java 增强库（<a href="https://github.com/projectlombok/lombok%EF%BC%89">https://github.com/projectlombok/lombok）</a></li><li>Apache HttpComponents Client：HTTP 客户端库（<a href="https://github.com/apache/httpcomponents-client%EF%BC%89">https://github.com/apache/httpcomponents-client）</a></li><li>OkHttp：适用于 JVM、Android 等平台的 Http 客户端（<a href="https://github.com/square/okhttp%EF%BC%89">https://github.com/square/okhttp）</a></li><li>Gson：谷歌的 JSON 处理库（<a href="https://github.com/google/gson%EF%BC%89">https://github.com/google/gson）</a></li><li>Jcommander：Java 命令行参数解析框架（<a href="https://github.com/cbeust/jcommander%EF%BC%89">https://github.com/cbeust/jcommander）</a></li><li>Apache PDFBox：PDF 操作库（<a href="https://github.com/apache/pdfbox%EF%BC%89">https://github.com/apache/pdfbox）</a></li><li>EasyExcel：阿里的 Excel 处理库（<a href="https://github.com/alibaba/easyexcel%EF%BC%89">https://github.com/alibaba/easyexcel）</a></li><li>Apache POI：表格文件处理库（<a href="https://github.com/apache/poi%EF%BC%89">https://github.com/apache/poi）</a></li></ul><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><ul><li>JUnit：Java 测试框架（<a href="https://github.com/junit-team/junit4%EF%BC%89">https://github.com/junit-team/junit4）</a></li><li>Mockito：Java 单元测试 Mock 框架（<a href="https://github.com/mockito/mockito%EF%BC%89">https://github.com/mockito/mockito）</a></li><li>Selenium：浏览器自动化框架（<a href="https://github.com/SeleniumHQ/selenium%EF%BC%89">https://github.com/SeleniumHQ/selenium）</a></li><li>htmlunit：Java 模拟浏览器（<a href="https://github.com/HtmlUnit/htmlunit%EF%BC%89">https://github.com/HtmlUnit/htmlunit）</a></li><li>TestNG：Java 测试框架（<a href="https://github.com/cbeust/testng%EF%BC%89">https://github.com/cbeust/testng）</a></li><li>Jacoco：Java 代码覆盖度库（<a href="https://github.com/jacoco/jacoco%EF%BC%89">https://github.com/jacoco/jacoco）</a></li></ul><h5 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h5><ul><li>cglib：字节码生成库（<a href="https://github.com/cglib/cglib%EF%BC%89">https://github.com/cglib/cglib）</a></li><li>Arthas：Java 诊断工具（<a href="https://github.com/alibaba/arthas%EF%BC%89">https://github.com/alibaba/arthas）</a></li><li>config：针对 JVM 的配置库（<a href="https://github.com/lightbend/config%EF%BC%89">https://github.com/lightbend/config）</a></li><li>Quasar：Java 纤程库（<a href="https://github.com/puniverse/quasar%EF%BC%89">https://github.com/puniverse/quasar）</a></li><li>drools：Java 规则引擎（<a href="https://github.com/kiegroup/drools%EF%BC%89">https://github.com/kiegroup/drools）</a></li><li>Caffeine：Java 高性能缓存库（<a href="https://github.com/ben-manes/caffeine%EF%BC%89">https://github.com/ben-manes/caffeine）</a></li><li>Disruptor：高性能线程间消息传递库（<a href="https://github.com/LMAX-Exchange/disruptor%EF%BC%89">https://github.com/LMAX-Exchange/disruptor）</a></li><li>Knife4j：Swagger 文档增强（<a href="https://doc.xiaominfo.com/%EF%BC%89">https://doc.xiaominfo.com/）</a></li><li>Thumbnailator：Java 缩略图生成库（<a href="https://github.com/coobird/thumbnailator%EF%BC%89">https://github.com/coobird/thumbnailator）</a></li><li>Logback：Java 日志库（<a href="https://github.com/qos-ch/logback%EF%BC%89">https://github.com/qos-ch/logback）</a></li><li>Apache Camel：消息传输集成框架（<a href="https://github.com/apache/camel%EF%BC%89">https://github.com/apache/camel）</a></li><li>Quartz：定时任务调度库（<a href="https://github.com/quartz-scheduler/quartz%EF%BC%89">https://github.com/quartz-scheduler/quartz）</a></li><li>Apache Mahout：机器学习库（<a href="https://github.com/apache/mahout%EF%BC%89">https://github.com/apache/mahout）</a></li><li>Apache OpenNLP：NLP 工具库（<a href="https://github.com/apache/opennlp%EF%BC%89">https://github.com/apache/opennlp）</a></li><li>RxJava：JVM 反应式编程框架（<a href="https://github.com/ReactiveX/RxJava%EF%BC%89">https://github.com/ReactiveX/RxJava）</a></li><li>JProfiler：性能分析库（<a href="https://www.ej-technologies.com/products/jprofiler/overview.html%EF%BC%89">https://www.ej-technologies.com/products/jprofiler/overview.html）</a></li><li>jsoup：HTML 文档解析库（<a href="https://jsoup.org/%EF%BC%89">https://jsoup.org/）</a></li><li>webmagic：Java 爬虫框架（<a href="https://github.com/code4craft/webmagic/%EF%BC%89">https://github.com/code4craft/webmagic/）</a></li></ul><h3 id="IDEA-插件"><a href="#IDEA-插件" class="headerlink" title="IDEA 插件"></a>IDEA 插件</h3><p>综合实用性、易用性、流行度、维护频率，精选了以下插件，简单分类为天地二品。</p><h4 id="精选地品插件"><a href="#精选地品插件" class="headerlink" title="精选地品插件"></a>精选地品插件</h4><p>简单好用、增强功能</p><ul><li><p>Background Image Plus +</p><ul><li>描述：给编辑器设置背景图片（小姐姐图片）</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/11247-background-image-plus-">https://plugins.jetbrains.com/plugin/11247-background-image-plus-</a></li></ul></li><li><p>Chinese Language Pack</p><ul><li>描述：中文支持</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/13710-chinese-simplified-language-pack----">https://plugins.jetbrains.com/plugin/13710-chinese-simplified-language-pack----</a></li></ul></li><li><p>Translation</p><ul><li>描述：翻译插件，鼠标选中文本，点击右键即可自动翻译成多国语言。</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8579-translation/">https://plugins.jetbrains.com/plugin/8579-translation/</a></li></ul></li><li><p>Key Promoter X</p><ul><li>描述：快捷键提示插件。当你执行鼠标操作时，如果该操作可被快捷键代替，会给出提示，帮助你自然形成使用快捷键的习惯，告别死记硬背。</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/9792-key-promoter-x/">https://plugins.jetbrains.com/plugin/9792-key-promoter-x/</a></li></ul></li><li><p>Rainbow Brackets</p><ul><li>描述：给括号添加彩虹色，使开发者通过颜色区分括号嵌套层级，便于阅读</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/10080-rainbow-brackets/">https://plugins.jetbrains.com/plugin/10080-rainbow-brackets/</a></li></ul></li><li><p>CodeGlance</p><ul><li>描述：在编辑器右侧生成代码小地图，可以拖拽小地图光标快速定位代码，阅读行数很多的代码文件时非常实用。</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7275-codeglance/">https://plugins.jetbrains.com/plugin/7275-codeglance/</a></li></ul></li><li><p>WakaTime</p><ul><li>描述：代码统计和跟踪插件</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7425-wakatime">https://plugins.jetbrains.com/plugin/7425-wakatime</a></li></ul></li><li><p>Statistic</p><ul><li>描述：代码统计</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/4509-statistic">https://plugins.jetbrains.com/plugin/4509-statistic</a></li></ul></li></ul><h4 id="精选天品插件"><a href="#精选天品插件" class="headerlink" title="精选天品插件"></a>精选天品插件</h4><p>提高开发效率和代码质量</p><ul><li><p>String Manipulation</p><ul><li>描述：字符串快捷处理</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/2162-string-manipulation">https://plugins.jetbrains.com/plugin/2162-string-manipulation</a></li></ul></li><li><p>Tabnine AI Code Completion</p><ul><li>描述：使用 AI 去自动提示和补全代码，比 IDEA 自带的代码补全更加智能化</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/12798-tabnine-ai-code-completion-js-java-python-ts-rust-go-php--more">https://plugins.jetbrains.com/plugin/12798-tabnine-ai-code-completion-js-java-python-ts-rust-go-php--more</a></li></ul></li><li><p>GsonFormatPlus</p><ul><li>描述：根据 json 生成对象</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/14949-gsonformatplus">https://plugins.jetbrains.com/plugin/14949-gsonformatplus</a></li></ul></li><li><p>JUnitGenerator V2.0</p><ul><li>描述：自动生成单元测试</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/3064-junitgenerator-v2-0">https://plugins.jetbrains.com/plugin/3064-junitgenerator-v2-0</a></li></ul></li><li><p>RestfulTool</p><ul><li>描述：辅助 web 开发的工具集</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/14280-restfultool">https://plugins.jetbrains.com/plugin/14280-restfultool</a></li></ul></li><li><p>SequenceDiagram</p><ul><li>描述：自动生成方法调用时序图</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8286-sequencediagram">https://plugins.jetbrains.com/plugin/8286-sequencediagram</a></li></ul></li><li><p>CheckStyle-IDEA</p><ul><li>描述：自动检查 Java 代码规范</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/1065-checkstyle-idea">https://plugins.jetbrains.com/plugin/1065-checkstyle-idea</a></li></ul></li><li><p>Alibaba Java Coding Guidelines</p><ul><li>描述：代码规范检查插件</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/10046-alibaba-java-coding-guidelines">https://plugins.jetbrains.com/plugin/10046-alibaba-java-coding-guidelines</a></li></ul></li><li><p>SonarLint</p><ul><li>描述：帮助你发现和修复代码的错误和漏洞</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7973-sonarlint">https://plugins.jetbrains.com/plugin/7973-sonarlint</a></li></ul></li><li><p>MybatisX</p><ul><li>描述：MyBatis 增强插件，支持自动生成 entity、mapper、service 等常用操作的代码，优化体验</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/10119-mybatisx">https://plugins.jetbrains.com/plugin/10119-mybatisx</a></li></ul></li></ul><h4 id="美化类"><a href="#美化类" class="headerlink" title="美化类"></a>美化类</h4><ul><li><p>Extra Icons</p><ul><li>描述：图标美化插件，支持更多文件类型</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/11058-extra-icons">https://plugins.jetbrains.com/plugin/11058-extra-icons</a></li></ul></li><li><p>Chinese Language Pack</p><ul><li>描述：中文支持</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/13710-chinese-simplified-language-pack----">https://plugins.jetbrains.com/plugin/13710-chinese-simplified-language-pack----</a></li></ul></li><li><p>Grep Console</p><ul><li>描述：自定义设置控制台输出颜色</li><li>官网：<a href="https://plugins.jetbrains.com/idea/plugin/7125-grep-console">https://plugins.jetbrains.com/idea/plugin/7125-grep-console</a></li></ul></li><li><p>Material Theme UI</p><ul><li>描述：美观的主题</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8006-material-theme-ui">https://plugins.jetbrains.com/plugin/8006-material-theme-ui</a></li></ul></li><li><p>Nyan Progress Bar</p><ul><li>描述：进度条美化</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8575-nyan-progress-bar">https://plugins.jetbrains.com/plugin/8575-nyan-progress-bar</a></li></ul></li><li><p>activate-power-mode</p><ul><li>描述：打字特效</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8330-activate-power-mode">https://plugins.jetbrains.com/plugin/8330-activate-power-mode</a></li></ul></li><li><p>Power Mode II</p><ul><li>描述：打字特效插件升级版</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8251-power-mode-ii">https://plugins.jetbrains.com/plugin/8251-power-mode-ii</a></li></ul></li><li><p>Rainbow Brackets</p><ul><li>描述：给括号添加彩虹色，使开发者通过颜色区分括号嵌套层级，便于阅读</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/10080-rainbow-brackets/">https://plugins.jetbrains.com/plugin/10080-rainbow-brackets/</a></li></ul></li><li><p>Background Image Plus +</p><ul><li>描述：给编辑器设置背景图片</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/11247-background-image-plus-">https://plugins.jetbrains.com/plugin/11247-background-image-plus-</a></li></ul></li></ul><h4 id="代码生成类"><a href="#代码生成类" class="headerlink" title="代码生成类"></a>代码生成类</h4><ul><li><p>Codota AI Autocomplete for Java and JavaScript</p><ul><li>描述：使用 AI 去自动提示和补全代码，比 IDEA 自带的代码补全更加智能化</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7638-codota-ai-autocomplete-for-java-and-javascript">https://plugins.jetbrains.com/plugin/7638-codota-ai-autocomplete-for-java-and-javascript</a></li></ul></li><li><p>Tabnine AI Code Completion</p><ul><li>描述：使用 AI 来自动提示和补全代码，比 IDEA 自带的代码补全更加智能化</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/12798-tabnine-ai-code-completion-js-java-python-ts-rust-go-php--more">https://plugins.jetbrains.com/plugin/12798-tabnine-ai-code-completion-js-java-python-ts-rust-go-php--more</a></li></ul></li><li><p>UUID Generator</p><ul><li>描述：生成随机的 UUID</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8320-uuid-generator">https://plugins.jetbrains.com/plugin/8320-uuid-generator</a></li></ul></li><li><p>Randomness</p><ul><li>描述：生成随机值</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/9836-randomness">https://plugins.jetbrains.com/plugin/9836-randomness</a></li></ul></li><li><p>.ignore</p><ul><li>描述：生成不同语言的版本控制忽略文件</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7495--ignore">https://plugins.jetbrains.com/plugin/7495--ignore</a></li></ul></li><li><p>Auto filling Java call arguments</p><ul><li>描述：通过快捷键自动补全函数的调用参数</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8638-auto-filling-java-call-arguments/">https://plugins.jetbrains.com/plugin/8638-auto-filling-java-call-arguments/</a></li></ul></li><li><p>GenerateAllSetter</p><ul><li>描述：快速生成调用对象 setter 方法的代码</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/9360-generateallsetter">https://plugins.jetbrains.com/plugin/9360-generateallsetter</a></li></ul></li><li><p>GenerateSerialVersionUID</p><ul><li>描述：一键为实现 Serializable 接口的类生成 SerialVersionUID</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/185-generateserialversionuid/">https://plugins.jetbrains.com/plugin/185-generateserialversionuid/</a></li></ul></li><li><p>GsonFormatPlus</p><ul><li>描述：根据 json 生成对象</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/14949-gsonformatplus">https://plugins.jetbrains.com/plugin/14949-gsonformatplus</a></li></ul></li><li><p>Lombok</p><ul><li><p>描述：配合 Lombok 依赖及注解使用，能够大大减少 Java 对象的代码量。IDEA 已自带，无需安装。</p></li><li><p>官网：<a href="https://plugins.jetbrains.com/plugin/6317-lombok/">https://plugins.jetbrains.com/plugin/6317-lombok/</a></p></li></ul></li><li><p>Easy Code</p><ul><li>描述：根据数据库表生成 Java entity、dao、mapper、service、controller 等代码</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/10954-easy-code">https://plugins.jetbrains.com/plugin/10954-easy-code</a></li></ul></li><li><p>Easy Javadoc</p><ul><li>描述：快速生成 Javadoc 文档</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/12977-easy-javadoc">https://plugins.jetbrains.com/plugin/12977-easy-javadoc</a></li></ul></li><li><p>JavaDoc</p><ul><li>描述：生成 Javadoc 文档</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7157-javadoc">https://plugins.jetbrains.com/plugin/7157-javadoc</a></li></ul></li><li><p>Json2Pojo</p><ul><li>描述：根据 JSON 生成 POJO，根据 POJO 生成 JSON</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8533-json2pojo">https://plugins.jetbrains.com/plugin/8533-json2pojo</a></li></ul></li><li><p>JUnitGenerator V2.0</p><ul><li>描述：自动生成单元测试</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/3064-junitgenerator-v2-0">https://plugins.jetbrains.com/plugin/3064-junitgenerator-v2-0</a></li></ul></li><li><p>Jindent - Source Code Formatter</p><ul><li>描述：根据自定义模板来生成 javadoc 注释</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8309-jindent--source-code-formatter">https://plugins.jetbrains.com/plugin/8309-jindent--source-code-formatter</a></li></ul></li><li><p>MybatisX</p><ul><li>描述：MyBatis 增强插件，支持自动生成 entity、mapper、service 等常用操作的代码，优化体验</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/10119-mybatisx">https://plugins.jetbrains.com/plugin/10119-mybatisx</a></li></ul></li><li><p>MyBatisCodeHelperPro</p><ul><li>描述：MyBatis 增强插件，支持自动生成 entity、mapper、service 等常用操作的代码（收费）</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/9837-mybatiscodehelperpro">https://plugins.jetbrains.com/plugin/9837-mybatiscodehelperpro</a></li></ul></li></ul><h4 id="功能提效类"><a href="#功能提效类" class="headerlink" title="功能提效类"></a>功能提效类</h4><h5 id="源码阅读"><a href="#源码阅读" class="headerlink" title="源码阅读"></a>源码阅读</h5><ul><li>Call Graph<ul><li>描述：生成调用关系图，便于查看源码</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/12304-call-graph">https://plugins.jetbrains.com/plugin/12304-call-graph</a></li></ul></li><li>Jump to Line<ul><li>描述：支持跳转到任意行进行调试</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/14877-jump-to-line">https://plugins.jetbrains.com/plugin/14877-jump-to-line</a></li></ul></li><li>SequenceDiagram<ul><li>描述：自动生成方法调用时序图</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8286-sequencediagram">https://plugins.jetbrains.com/plugin/8286-sequencediagram</a></li></ul></li><li>jclasslib Bytecode Viewer<ul><li>描述：字节码查看器</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/9248-jclasslib-bytecode-viewer">https://plugins.jetbrains.com/plugin/9248-jclasslib-bytecode-viewer</a></li></ul></li><li>BrowseWordAtCaret<ul><li>描述： 快速在相同单词间进行跳转</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/201-browsewordatcaret">https://plugins.jetbrains.com/plugin/201-browsewordatcaret</a></li></ul></li><li>CodeGlance<ul><li>描述：在编辑器右侧生成代码小地图，可以拖拽小地图光标快速定位代码，阅读行数很多的代码文件时非常实用。</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7275-codeglance/">https://plugins.jetbrains.com/plugin/7275-codeglance/</a></li></ul></li></ul><h5 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h5><ul><li>CheckStyle-IDEA<ul><li>描述：自动检查 Java 代码规范</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/1065-checkstyle-idea">https://plugins.jetbrains.com/plugin/1065-checkstyle-idea</a></li></ul></li><li>Alibaba Java Coding Guidelines<ul><li>描述：代码规范检查插件</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/10046-alibaba-java-coding-guidelines">https://plugins.jetbrains.com/plugin/10046-alibaba-java-coding-guidelines</a></li></ul></li><li>SonarLint<ul><li>描述：帮助你发现和修复代码的错误和漏洞</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7973-sonarlint">https://plugins.jetbrains.com/plugin/7973-sonarlint</a></li></ul></li><li>FindBugs-IDEA<ul><li>描述：帮你找出代码中潜藏的 Bug</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/3847-findbugs-idea">https://plugins.jetbrains.com/plugin/3847-findbugs-idea</a></li></ul></li><li>MetricsReloaded<ul><li>描述：代码复杂度分析</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/93?pr=idea">https://plugins.jetbrains.com/plugin/93?pr=idea</a></li></ul></li></ul><h5 id="格式处理"><a href="#格式处理" class="headerlink" title="格式处理"></a>格式处理</h5><ul><li><p>CamelCase</p><ul><li>描述：快速字符串格式转换工具，如驼峰式</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7160-camelcase">https://plugins.jetbrains.com/plugin/7160-camelcase</a></li></ul></li><li><p>Json Parser</p><ul><li>描述：验证和格式化 Json 字符串的工具</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/10650-json-parser">https://plugins.jetbrains.com/plugin/10650-json-parser</a></li></ul></li><li><p>Properties to YAML Converter</p><ul><li>描述：把 Properties 文件的格式转为 YAML 格式</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8000-properties-to-yaml-converter">https://plugins.jetbrains.com/plugin/8000-properties-to-yaml-converter</a></li></ul></li><li><p>String Manipulation</p><ul><li>描述：字符串快捷处理</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/2162-string-manipulation">https://plugins.jetbrains.com/plugin/2162-string-manipulation</a></li></ul></li></ul><h5 id="代码统计"><a href="#代码统计" class="headerlink" title="代码统计"></a>代码统计</h5><ul><li>WakaTime<ul><li>描述：代码统计和跟踪插件</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7425-wakatime">https://plugins.jetbrains.com/plugin/7425-wakatime</a></li></ul></li><li>Statistic<ul><li>描述：代码统计</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/4509-statistic">https://plugins.jetbrains.com/plugin/4509-statistic</a></li></ul></li></ul><h5 id="代码检索"><a href="#代码检索" class="headerlink" title="代码检索"></a>代码检索</h5><ul><li>OnlineSearch<ul><li>描述：选择文本后支持不同搜索引擎进行搜索</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8298-onlinesearch/">https://plugins.jetbrains.com/plugin/8298-onlinesearch/</a></li></ul></li><li>CodeSearch<ul><li>描述：快捷地打开搜索引擎进行搜索</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/12578-codesearch">https://plugins.jetbrains.com/plugin/12578-codesearch</a></li></ul></li></ul><h5 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h5><ul><li><p>Leetcode Editor</p><ul><li>描述：在 IDEA 里刷算法题</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/12132-leetcode-editor">https://plugins.jetbrains.com/plugin/12132-leetcode-editor</a></li></ul></li><li><p>File Watchers</p><ul><li>描述：监听文件，当其发生变化时自动执行命令</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7177-file-watchers">https://plugins.jetbrains.com/plugin/7177-file-watchers</a></li></ul></li><li><p>PlantUML integration</p><ul><li>描述：UML 建模工具，只需简单的代码就能画出复杂的 UML 类图</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7017-plantuml-integration">https://plugins.jetbrains.com/plugin/7017-plantuml-integration</a></li></ul></li><li><p>Bytecode Editor</p><ul><li>描述：字节码编辑工具</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8461-bytecode-editor">https://plugins.jetbrains.com/plugin/8461-bytecode-editor</a></li></ul></li><li><p>Alibaba Cloud Toolkit</p><ul><li>描述：阿里云工具集</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/11386-alibaba-cloud-toolkit">https://plugins.jetbrains.com/plugin/11386-alibaba-cloud-toolkit</a></li></ul></li><li><p>Tencent Cloud Toolkit</p><ul><li>描述：腾讯云工具集</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/15653-tencent-cloud-toolkit">https://plugins.jetbrains.com/plugin/15653-tencent-cloud-toolkit</a></li></ul></li><li><p>EduTools</p><ul><li>描述：面向教育者，允许创建、分享和加入练习</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/10081-edutools">https://plugins.jetbrains.com/plugin/10081-edutools</a></li></ul></li><li><p>IDE Features Trainer</p><ul><li>描述：IntelliJ IDEA 官方出的学习辅助插件</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8554-ide-features-trainer">https://plugins.jetbrains.com/plugin/8554-ide-features-trainer</a></li></ul></li><li><p>JRebel Plugin</p><ul><li>描述：项目热更新，提高效率（可惜要收费）</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/4441-jrebel-and-xrebel-for-intellij">https://plugins.jetbrains.com/plugin/4441-jrebel-and-xrebel-for-intellij</a></li></ul></li><li><p>Key Promoter X</p><ul><li>描述：快捷键提示插件。当你执行鼠标操作时，如果该操作可被快捷键代替，会给出提示，帮助你自然形成使用快捷键的习惯，告别死记硬背。</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/9792-key-promoter-x/">https://plugins.jetbrains.com/plugin/9792-key-promoter-x/</a></li></ul></li><li><p>Translation</p><ul><li>描述：翻译插件，鼠标选中文本，点击右键即可自动翻译成多国语言。</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8579-translation/">https://plugins.jetbrains.com/plugin/8579-translation/</a></li></ul></li><li><p>idea_seat</p><ul><li>描述：自动提醒，防止你久坐不动</li><li>官网：<a href="https://github.com/s-unscrupulous/idea_seat">https://github.com/s-unscrupulous/idea_seat</a></li></ul></li><li><p>RestfulTool</p><ul><li>描述：辅助 web 开发的工具集</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/14280-restfultool">https://plugins.jetbrains.com/plugin/14280-restfultool</a></li></ul></li><li><p>Multirun</p><ul><li>描述：同时启动多应用</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7248-multirun">https://plugins.jetbrains.com/plugin/7248-multirun</a></li></ul></li></ul><h4 id="扩展增强类"><a href="#扩展增强类" class="headerlink" title="扩展增强类"></a>扩展增强类</h4><ul><li>Free Mybatis Plugin<ul><li>描述：MyBatis 增强插件，支持 mapper &#x3D;&gt; xml 的跳转、代码生成等功能</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8321-free-mybatis-plugin">https://plugins.jetbrains.com/plugin/8321-free-mybatis-plugin</a></li></ul></li><li>MyBatis Log Plugin<ul><li>描述：MyBatis SQL 提取和格式化输出</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/10065-mybatis-log-plugin">https://plugins.jetbrains.com/plugin/10065-mybatis-log-plugin</a></li></ul></li><li>Maven Helper<ul><li>描述：Maven 辅助插件</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7179-maven-helper">https://plugins.jetbrains.com/plugin/7179-maven-helper</a></li></ul></li><li>Gradle View<ul><li>描述：Gradle 项目管理工具的扩展</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7150-gradle-view">https://plugins.jetbrains.com/plugin/7150-gradle-view</a></li></ul></li><li>Arthas Idea<ul><li>描述： Arthas 命令生成插件。Arthas 是阿里开源的 Java 在线诊断工具，该插件可以自动生成 Arthas 在线 Java 代码诊断命令，不用再到官网翻文档拼命令啦！</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/13581-arthas-idea/">https://plugins.jetbrains.com/plugin/13581-arthas-idea/</a></li></ul></li><li>GitToolBox<ul><li>描述： Git 增强插件。在自带的 Git 功能之上，新增了查看 Git 状态、自动拉取代码、提交通知等功能。最好用的是可以查看到每一行代码的最近一次提交信息。</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7499-gittoolbox/">https://plugins.jetbrains.com/plugin/7499-gittoolbox/</a></li></ul></li><li>BashSupport<ul><li>描述：支持 Bash 脚本文件的高亮和提示等</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/4230-bashsupport">https://plugins.jetbrains.com/plugin/4230-bashsupport</a></li></ul></li><li>Git Flow Integration<ul><li>描述：Git Flow 的图形界面操作</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7315-git-flow-integration">https://plugins.jetbrains.com/plugin/7315-git-flow-integration</a></li></ul></li><li>Gitee<ul><li>描述：开源中国的码云插件</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8383-gitee">https://plugins.jetbrains.com/plugin/8383-gitee</a></li></ul></li><li>Drools<ul><li>描述：规则引擎的扩展</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/16871-drools">https://plugins.jetbrains.com/plugin/16871-drools</a></li></ul></li><li>EnvFile<ul><li>描述：对多环境配置文件的支持</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7861-envfile">https://plugins.jetbrains.com/plugin/7861-envfile</a></li></ul></li><li>Kubernetes<ul><li>描述：容器管理的扩展</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/10485-kubernetes">https://plugins.jetbrains.com/plugin/10485-kubernetes</a></li></ul></li><li>Vue.js<ul><li>描述：Vue.js 前端框架的扩展</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/9442-vue-js">https://plugins.jetbrains.com/plugin/9442-vue-js</a></li></ul></li><li>Scala<ul><li>描述：Scala 语言的扩展</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/1347-scala">https://plugins.jetbrains.com/plugin/1347-scala</a></li></ul></li><li>Zookeeper<ul><li>描述：Zookeeper 中间件的扩展</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/7364-zookeeper">https://plugins.jetbrains.com/plugin/7364-zookeeper</a></li></ul></li><li>Jms messenger<ul><li>描述：对 Java 消息服务的扩展</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/10949-jms-messenger">https://plugins.jetbrains.com/plugin/10949-jms-messenger</a></li></ul></li><li>MapStruct Support<ul><li>描述：对 MapStruct 对象转换的支持</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/10036-mapstruct-support">https://plugins.jetbrains.com/plugin/10036-mapstruct-support</a></li></ul></li><li>Big Data Tools<ul><li>描述：提供了 HDFS 等大数据框架的工具集</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/12494-big-data-tools">https://plugins.jetbrains.com/plugin/12494-big-data-tools</a></li></ul></li><li>CSV<ul><li>描述：支持 CSV 文件的高亮和提示等</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/10037-csv">https://plugins.jetbrains.com/plugin/10037-csv</a></li></ul></li><li>Ideolog<ul><li>描述：识别和格式化 log 日志文件</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/9746-ideolog">https://plugins.jetbrains.com/plugin/9746-ideolog</a></li></ul></li><li>Toml<ul><li>描述：支持 toml 文件的高亮和提示等</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/8195-toml">https://plugins.jetbrains.com/plugin/8195-toml</a></li></ul></li><li>.env files support<ul><li>描述：支持 .env 文件的高亮和提示等</li><li>官网：<a href="https://plugins.jetbrains.com/plugin/9525--env-files-support">https://plugins.jetbrains.com/plugin/9525--env-files-support</a></li></ul></li></ul><h3 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h3><p><strong>以下部分软件可在【公众号：程序员鱼皮】回复【软件】获取~</strong></p><h5 id="开发相关"><a href="#开发相关" class="headerlink" title="开发相关"></a>开发相关</h5><ul><li>JetBrains IDEA：Java 集成开发环境，凭学生邮箱可申请免费使用（<a href="https://www.jetbrains.com/idea/%EF%BC%89">https://www.jetbrains.com/idea/）</a></li><li>Reset Jetbrains：你懂的</li><li>Visual Studio Code：插件化代码编辑器（<a href="https://code.visualstudio.com/%EF%BC%89">https://code.visualstudio.com/）</a></li><li>Sublime Text：轻量代码编辑器（<a href="https://www.sublimetext.com/%EF%BC%89">https://www.sublimetext.com/）</a></li><li>Navicat：数据库管理软件（<a href="https://www.navicat.com.cn/%EF%BC%89">https://www.navicat.com.cn/）</a></li><li>JMeter：Java 性能测试工具（<a href="https://jmeter.apache.org/%EF%BC%89">https://jmeter.apache.org/）</a></li><li>JVisual VM：Java 运行状态可视化工具（<a href="https://visualvm.github.io/%EF%BC%89">https://visualvm.github.io/）</a></li><li>XShell：SSH 连接软件（<a href="https://www.netsarang.com/zh/xshell/%EF%BC%89">https://www.netsarang.com/zh/xshell/）</a></li><li>XFtp：FTP 连接软件（<a href="https://www.netsarang.com/zh/xftp/%EF%BC%89">https://www.netsarang.com/zh/xftp/）</a></li><li>Redis Desktop Manager：Redis 可视化管理工具（<a href="https://github.com/uglide/RedisDesktopManager%EF%BC%89">https://github.com/uglide/RedisDesktopManager）</a></li><li>Postman：接口测试工具（<a href="https://www.postman.com/%EF%BC%89">https://www.postman.com/）</a></li><li>VMware：虚拟机软件（<a href="https://www.vmware.com/%EF%BC%89">https://www.vmware.com/）</a></li><li>Chocolatey：Windows 软件包管理器（<a href="https://chocolatey.org/%EF%BC%89">https://chocolatey.org/）</a></li><li>Typora：写文档软件（<a href="https://typora.io/%EF%BC%89">https://typora.io/）</a></li></ul><h5 id="效率"><a href="#效率" class="headerlink" title="效率"></a>效率</h5><ul><li>Ditto：强大的剪切板（<a href="https://ditto-cp.sourceforge.io/%EF%BC%89">https://ditto-cp.sourceforge.io/）</a></li><li>uTools：插件化的效率工具（<a href="https://u.tools/%EF%BC%89">https://u.tools/）</a></li><li>XMind：思维导图软件（<a href="https://www.xmind.cn/%EF%BC%89">https://www.xmind.cn/）</a></li><li>Qdir：Windows 多窗口管理器（<a href="https://q-dir.en.softonic.com/%EF%BC%89">https://q-dir.en.softonic.com/）</a></li></ul><h3 id="项目源码（50-套）"><a href="#项目源码（50-套）" class="headerlink" title="项目源码（50 套）"></a>项目源码（50 套）</h3><h4 id="电商秒杀"><a href="#电商秒杀" class="headerlink" title="电商秒杀"></a>电商秒杀</h4><ul><li><p>天猫整站 J2EE：<a href="https://how2j.cn/module/115.htm">https://how2j.cn/module/115.htm</a></p></li><li><p>天猫整站 SSM：<a href="https://how2j.cn/module/134.html">https://how2j.cn/module/134.html</a></p></li><li><p>天猫整站 Springboot：<a href="https://how2j.cn/module/156.html">https://how2j.cn/module/156.html</a></p></li><li><p>mall-learning：<a href="https://github.com/macrozheng/mall-learningmall">https://github.com/macrozheng/mall-learningmall</a> （学习教程，架构、业务、技术要点全方位解析）</p></li><li><p>SpringBoot 电商商城系统 Mall4j：<a href="https://github.com/gz-yami/mall4j">https://github.com/gz-yami/mall4j</a></p></li><li><p>SpringBoot 完整电商系统 Mall：<a href="https://github.com/macrozheng/mall">https://github.com/macrozheng/mall</a> （包括前台商城系统及后台管理系统，基于 SpringBoot+MyBatis 实现）</p></li><li><p>newbee-mall：<a href="https://github.com/newbee-ltd/newbee-mall">https://github.com/newbee-ltd/newbee-mall</a> （一套电商系统，包括 newbee-mall 商城系统及 newbee-mall-admin 商城后台管理系统，基于 Spring Boot 2.X 及相关技术栈开发）</p></li><li><p>paascloud-master：<a href="https://github.com/paascloud/paascloud-master">https://github.com/paascloud/paascloud-master</a> （基于 spring cloud + vue + oAuth2.0，前后端分离商城系统）</p></li><li><p>mall-swarm：<a href="https://github.com/macrozheng/mall-swarm">https://github.com/macrozheng/mall-swarm</a> （一套微服务商城系统，采用了 Spring Cloud Greenwich、Spring Boot 2、MyBatis、Docker、Elasticsearch 等核心技术，同时提供了基于 Vue 的管理后台方便快速搭建系统）</p></li><li><p>onemall：<a href="https://github.com/YunaiV/onemall">https://github.com/YunaiV/onemall</a> （mall 商城，基于微服务的思想，构建在 B2C 电商场景下的项目实战。核心技术栈，是 Spring Boot + Dubbo 。未来，会重构成 Spring Cloud Alibaba）</p></li><li><p>litemall：<a href="https://github.com/linlinjava/litemall">https://github.com/linlinjava/litemall</a> （又一个小商城，litemall &#x3D; Spring Boot 后端 + Vue 管理员前端 + 微信小程序用户前端 + Vue 用户移动端）</p></li><li><p>xmall：<a href="https://github.com/Exrick/xmall">https://github.com/Exrick/xmall</a> （基于SOA架构的分布式电商购物商城 前后端分离 前台商城:Vue全家桶 后台管理系统）</p></li><li><p>miaosha：<a href="https://github.com/qiurunze123/miaosha">https://github.com/qiurunze123/miaosha</a> （秒杀系统设计与实现）</p></li><li><p>SecKill：<a href="https://github.com/hfbin/Seckill">https://github.com/hfbin/Seckill</a> （基于 SpringBoot+Mybatis+Redis+RabbitMQ 秒杀系统）</p></li></ul><h4 id="博客论坛"><a href="#博客论坛" class="headerlink" title="博客论坛"></a>博客论坛</h4><ul><li><p><a href="https://github.com/langhsu/mblog">Mblog</a>：开源 Java 博客系统</p></li><li><p><a href="https://github.com/halo-dev/halo">halo</a>：一个优秀的开源博客发布应用</p></li><li><p><a href="https://github.com/Qbian61/forum-java">forum-java</a>：一款用 Java（spring boot） 实现的现代化社区（论坛&#x2F;问答&#x2F;BBS&#x2F;社交网络&#x2F;博客）系统平台</p></li><li><p><a href="https://github.com/lenve/vhr">vhr</a>：微人事是一个前后端分离的人力资源管理系统，项目采用 SpringBoot+Vue 开发。</p></li><li><p><a href="https://github.com/cloudfavorites/favorites-web">favorites-web</a>:云收藏 Spring Boot 2.X 开源项目。云收藏是一个使用 Spring Boot 构建的开源网站，可以让用户在线随时随地收藏的一个网站，在网站上分类整理收藏的网站或者文章。</p></li><li><p><a href="https://github.com/codedrinker/community">community</a>：码问，开源论坛、问答系统，现有功能提问、回复、通知、最新、最热、消除零回复功能。技术栈 Spring、Spring Boot、MyBatis、MySQL&#x2F;H2、Bootstrap</p></li><li><p><a href="https://github.com/yourkevin/NiterForum">NiterForum</a>：尼特社区-NiterForum-一个论坛&#x2F;社区程序。后端Springboot&#x2F;MyBatis&#x2F;Maven&#x2F;MySQL，前端Thymeleaf&#x2F;Layui。可供初学者，学习、交流使用。</p></li><li><p><a href="https://github.com/lenve/VBlog">VBlog</a>：V部落，Vue+SpringBoot实现的多用户博客管理平台!</p></li><li><p><a href="https://github.com/damoqiongqiu/NiceFish">NiceFish</a>：SpringBoot&#x2F;SpringCloud 前后端分离项目</p></li><li><p><a href="https://github.com/ZHENFENG13/My-Blog">My-Blog</a>： My Blog 是由 SpringBoot + Mybatis + Thymeleaf 等技术实现的 Java 博客系统，页面美观、功能齐全、部署简单及完善的代码，一定会给使用者无与伦比的体验。</p></li><li><p><a href="https://github.com/ZHENFENG13/My-Blog-layui">My-Blog-layui</a>：layui 版本的 My-Blog : A simple &amp; beautiful blogging system implemented with spring-boot &amp; layui &amp; thymeleaf &amp; mybatis My Blog 是由  SpringBoot + Layui + Mybatis + Thymeleaf 等技术实现的 Java  博客系统，页面美观、功能齐全、部署简单及完善的代码，一定会给使用者无与伦比的体验</p></li><li><p><a href="https://github.com/88250/symphony">symphony</a>：Java 实现的现代化社区</p></li></ul><h4 id="管理系统"><a href="#管理系统" class="headerlink" title="管理系统"></a>管理系统</h4><ul><li><p><a href="https://github.com/wxiaoqi/Spring-Cloud-Admin">Spring-Cloud-Admin</a>：Cloud-Admin 是国内首个基于 Spring Cloud 微服务化开发平台，具有统一授权、认证后台管理系统，其中包含具备用户管理、资源权限管理、网关 API 管理等多个模块，支持多业务系统并行开发，可以作为后端服务的开发脚手架。代码简洁，架构清晰，适合学习和直接项目中使用。核心技术采用 Spring Boot2 以及 Spring Cloud Gateway 相关核心组件，前端采用 vue-element-admin 组件。</p></li><li><p><a href="https://github.com/tomsun28/bootshiro">bootshiro</a>：基于 springboot+shiro+jwt 的资源无状态认证权限管理系统后端</p></li><li><p><a href="https://github.com/72crm/72crm-java">悟空CRM</a>：基于jfinal+vue+ElementUI的前后端分离CRM系统</p></li><li><p><a href="https://github.com/elunez/eladmin">EL-ADMIN</a>：基于 SpringBoot 的后台管理系统</p></li><li><p><a href="https://gitee.com/log4j/pig">pig</a>：基于 Spring Boot 2.2、 Spring Cloud Hoxton &amp; Alibaba、 OAuth2 的 RBAC 权限管理系统。</p></li><li><p><a href="https://github.com/wuyouzhuguli/FEBS-Shiro">FEBS-Shiro</a>：Spring Boot 2.1.3，Shiro1.4.0 &amp; Layui 2.5.4 权限管理系统。</p></li><li><p><a href="https://github.com/Heeexy/SpringBoot-Shiro-Vue">Spring Boot-Shiro-Vue</a>：基于Spring Boot-Shiro-Vue 的权限管理</p></li><li><p><a href="https://github.com/ZeroWdd/studentmanager">studentmanager</a>：基于springboot+mybatis学生管理系统</p></li><li><p><a href="https://github.com/jishenghua/jshERP">jshERP</a>：华夏ERP基于SpringBoot框架和SaaS模式，立志为中小企业提供开源好用的ERP软件，目前专注进销存+财务功能。主要模块有零售管理、采购管理、销售管理、仓库管理、财务管理、报表查询、系统管理等。支持预付款、收入支出、仓库调拨、组装拆卸、订单等特色功能。拥有库存状况、出入库统计等报表。同时对角色和权限进行了细致全面控制，精确到每个按钮和菜单。</p></li><li><p><a href="https://github.com/misterchaos/HotelSystem">HotelSystem</a>：酒店管理系统 Java,tomcat,mysql,servlet,jsp实现，没有使用任何框架</p></li></ul><h4 id="开发平台"><a href="#开发平台" class="headerlink" title="开发平台"></a>开发平台</h4><ul><li><a href="https://github.com/2014shijina2014/open-capacity-platform">open-capacity-platform</a>：微服务能力开发平台</li><li><a href="https://github.com/zhangdaiscott/jeecg-boot">jeecg-boot</a>：JeecgBoot是一款基于BPM的低代码平台！前后端分离架构 SpringBoot 2.x，SpringCloud，Ant  Design&amp;Vue，Mybatis-plus，Shiro，JWT，支持微服务。强大的代码生成器让前后端代码一键生成，实现低代码开发！</li></ul><h4 id="其他-2"><a href="#其他-2" class="headerlink" title="其他"></a>其他</h4><ul><li><p><a href="https://github.com/mindskip/xzs">学之思在线考试系统</a>：一款 java + vue 的前后端分离的考试系统</p></li><li><p><a href="https://github.com/Jackson0714/PassJava-Platform">PassJava-Platform</a>：一款面试刷题的 Spring Cloud 开源系统</p></li><li><p><a href="https://github.com/kekingcn/kkFileView">kkFileView</a>：使用spring boot打造文件文档在线预览项目</p></li><li><p><a href="https://github.com/baomidou/dynamic-datasource-spring-boot-starter">dynamic-datasource</a>：一个基于springboot的快速集成多数据源的启动器</p></li><li><p><a href="https://github.com/373675032/moti-cloud">moti-cloud</a>：莫提网盘，基于 SpringBoot+MyBatis+ThymeLeaf+BootStrap，适合初学者</p></li><li><p><a href="https://github.com/qiurunze123/threadandjuc">threadandjuc</a>：three-high-import 高可用\高可靠\高性能，三高多线程导入系统（该项目意义为理论贯通)</p></li><li><p><a href="https://github.com/proxyee-down-org/proxyee-down">proxyee-down</a>：http下载工具，基于http代理，支持多连接分块下载</p></li><li><p><a href="https://github.com/sfturing/hosp_order">hosp_order</a>：医院预约挂号系统，基于 SSM 框架</p></li><li><p><a href="https://how2j.cn/module/170.html">趋势投资 SpringCloud</a></p></li><li><p><a href="https://how2j.cn/module/176.html">DiyTomcat</a></p></li></ul><h2 id="阶段-6：Java-高级"><a href="#阶段-6：Java-高级" class="headerlink" title="阶段 6：Java 高级"></a>阶段 6：Java 高级</h2><h3 id="目标-5"><a href="#目标-5" class="headerlink" title="目标"></a>目标</h3><p>不满足于能做，而是通过更 <strong>深入</strong> 和 <strong>广泛</strong> 的学习，实现高质量的代码和更优秀的架构，培养解决问题的能力。</p><p>已经到了这个阶段，建议除了看完成的教程外，平时多自主搜索信息去学习，积少成多。比如遇到了一个不了解的名词，可以去网上搜一下，感兴趣的话再进行下一步的学习。</p><h3 id="🌖-并发编程（21-天）"><a href="#🌖-并发编程（21-天）" class="headerlink" title="🌖 并发编程（21 天）"></a>🌖 并发编程（21 天）</h3><p>对 Java 后端开发程序员来说，懂得如何利用有限的系统资源来提高系统的性能是很重要的，也是大厂面试考察的重点，因此并发编程（尤其是 Java 并发包的使用）这块的知识很重要。</p><p>把它放到高级，是因为在学并发编程前，需要有一定的编程经验、了解一定的操作系统知识。</p><h4 id="知识-21"><a href="#知识-21" class="headerlink" title="知识"></a>知识</h4><ul><li>线程和进程</li><li>线程状态</li><li>并行和并发</li><li>同步和异步</li><li>Synchronized</li><li>Volatile 关键字</li><li>Lock 锁</li><li>死锁</li><li>可重入锁</li><li>线程安全</li><li>线程池</li><li>JUC 的使用</li><li>AQS</li><li>Fork Join</li><li>CAS</li></ul><h4 id="学习建议-23"><a href="#学习建议-23" class="headerlink" title="学习建议"></a>学习建议</h4><p>并发编程入门不难，依然是 <strong>先学会使用</strong> 基础的 Java 并发包， 再通过大量地实践和测试，了解一些原理，才能真正掌握何时使用、如何更合理地使用并发编程。而不是张口闭口多线程，上天入地高并发。</p><h4 id="经典面试题-16"><a href="#经典面试题-16" class="headerlink" title="经典面试题"></a>经典面试题</h4><ol><li>volatile 关键字的作用</li><li>使用线程池有哪些好处？</li><li>线程池参数如何设置？</li><li>什么是线程安全问题，如何解决？</li><li>介绍 synchronized 的锁升级机制</li><li>CopyOnWriteArrayList 适用于哪种场景？</li></ol><h4 id="资源-22"><a href="#资源-22" class="headerlink" title="资源"></a>资源</h4><ul><li><p>视频</p><ul><li>⭐【尚硅谷】大厂必备技术之JUC并发编程2021最新版：<a href="https://www.bilibili.com/video/BV1Kw411Z7dF">https://www.bilibili.com/video/BV1Kw411Z7dF</a> （特点是短、精、新）</li><li>黑马程序员全面深入学习Java并发编程：<a href="https://www.bilibili.com/video/BV16J411h7Rd">https://www.bilibili.com/video/BV16J411h7Rd</a> （讲的很细、全面深入）</li></ul></li><li><p>书籍</p><ul><li>⭐《Java并发编程实战》（国外的经典）</li><li>⭐《Java 并发编程艺术》（国人写的，理论思想内容较多，有时间建议反复看）</li></ul></li><li><p>项目</p><ul><li>⭐ Java 并发知识点总结：<a href="https://github.com/CL0610/Java-concurrency">https://github.com/CL0610/Java-concurrency</a></li></ul></li></ul><h3 id="🌖-JVM（30-天）"><a href="#🌖-JVM（30-天）" class="headerlink" title="🌖 JVM（30 天）"></a>🌖 JVM（30 天）</h3><p>想要深入理解 Java，探秘 Java 跨平台的奥秘，一定要了解 Java 底层的虚拟机技术。</p><p>了解虚拟机、掌握虚拟机性能调优方法，有助于你写出更高性能、资源占用更小的优质程序。</p><p>在学习 JVM 的过程中，也能学到很多精妙的设计，开拓思路。</p><h4 id="知识-22"><a href="#知识-22" class="headerlink" title="知识"></a>知识</h4><ul><li>JVM 内存结构</li><li>JVM 生命周期</li><li>主流虚拟机</li><li>Java 代码执行流程</li><li>类加载<ul><li>类加载器</li><li>类加载过程</li><li>双亲委派机制</li></ul></li><li>垃圾回收<ul><li>垃圾回收器</li><li>垃圾回收策略</li><li>垃圾回收算法</li><li>StopTheWorld</li></ul></li><li>字节码</li><li>内存分配和回收</li><li>JVM 性能调优<ul><li>性能分析方法</li><li>常用工具</li><li>参数设置</li></ul></li><li>Java 探针</li><li>线上故障分析</li></ul><h4 id="学习建议-24"><a href="#学习建议-24" class="headerlink" title="学习建议"></a>学习建议</h4><p>JVM 的知识略显枯燥，建议先看视频，有实操的地方一定要实操！自己多去分析。</p><p>第一遍不理解没有关系，可以再看书来巩固，想要真正学好，《深入理解 Java 虚拟机（第三版）》一定要读。</p><p>如果只是为了通过面试可以直接看更精简的视频，比如狂神的。</p><h4 id="经典面试题-17"><a href="#经典面试题-17" class="headerlink" title="经典面试题"></a>经典面试题</h4><ol><li>介绍 JVM 的内存模型？</li><li>JVM 内存为什么要分代？</li><li>介绍一次完整的 GC 流程</li><li>介绍双亲委派模型，为什么需要它？</li></ol><h4 id="资源-23"><a href="#资源-23" class="headerlink" title="资源"></a>资源</h4><ul><li>视频<ul><li>⭐ 尚硅谷宋红康 - JVM 全套教程详解：<a href="https://www.bilibili.com/video/BV1PJ411n7xZ">https://www.bilibili.com/video/BV1PJ411n7xZ</a> （讲得相当全面！附有实操）</li><li>【狂神说Java】JVM快速入门篇：<a href="https://www.bilibili.com/video/BV1iJ411d7jS">https://www.bilibili.com/video/BV1iJ411d7jS</a> （讲得有点浅，但都是面试重点，时间紧的小伙伴可以直接看这个）</li></ul></li><li>书籍<ul><li>⭐《深入理解 Java 虚拟机（第三版）》（有理论有实践，内容丰富，不可多得的 JVM 学习神书，就是有点废头发）</li></ul></li><li>项目<ul><li>⭐ Java 虚拟机底层原理知识总结：<a href="https://github.com/doocs/jvm">https://github.com/doocs/jvm</a></li></ul></li><li>实战<ul><li>阿里云 JVM 实战：<a href="https://developer.aliyun.com/graph/java/point/64">https://developer.aliyun.com/graph/java/point/64</a></li></ul></li><li>工具<ul><li>Arthas 开源 Java 诊断工具：<a href="https://github.com/alibaba/arthas">https://github.com/alibaba/arthas</a></li></ul></li></ul><h3 id="架构设计"><a href="#架构设计" class="headerlink" title="架构设计"></a>架构设计</h3><h4 id="🌖-分布式"><a href="#🌖-分布式" class="headerlink" title="🌖 分布式"></a>🌖 分布式</h4><ul><li>分布式理论<ul><li>CAP</li><li>BASE</li></ul></li><li>分布式缓存<ul><li>Redis</li><li>Memcached</li><li>Etcd</li></ul></li><li>一致性算法<ul><li>Raft</li><li>Paxos</li><li>一致性哈希</li></ul></li><li>分布式事务<ul><li>解决方案<ul><li>2PC</li><li>3PC</li><li>TCC</li><li>本地消息表</li><li>MQ 事务消息</li><li>最大努力通知</li></ul></li><li>LCN 分布式事务框架：<a href="https://github.com/codingapi/tx-lcn">https://github.com/codingapi/tx-lcn</a></li></ul></li><li>分布式 id 生成<ul><li>Leaf 分布式 id 生成服务：<a href="https://github.com/Meituan-Dianping/Leaf">https://github.com/Meituan-Dianping/Leaf</a></li></ul></li><li>分布式任务调度<ul><li>XXL-JOB 调度平台：<a href="https://www.xuxueli.com/xxl-job/">https://www.xuxueli.com/xxl-job/</a></li><li>elastic-job：<a href="https://gitee.com/elasticjob/elastic-job">https://gitee.com/elasticjob/elastic-job</a></li></ul></li><li>分布式服务调用<ul><li>trpc</li></ul></li><li>分布式存储<ul><li>HDFS</li><li>Ceph</li></ul></li><li>分布式数据库<ul><li>TiDB</li><li>OceanBase</li></ul></li><li>分布式文件系统<ul><li>HDFS</li></ul></li><li>分布式协调<ul><li>Zookeeper</li></ul></li><li>分布式监控<ul><li>Prometheus</li><li>Zabbix</li></ul></li><li>分布式消息队列<ul><li>RabbitMQ</li><li>Kafka</li><li>Apache Pulsar</li></ul></li><li>分布式日志收集<ul><li>Elastic Stack</li><li>Loki</li></ul></li><li>分布式搜索引擎<ul><li>Elasticsearch</li></ul></li><li>分布式链路追踪<ul><li>Apache SkyWalking</li></ul></li><li>分布式配置中心<ul><li>Apollo</li><li>Nacos</li></ul></li></ul><h4 id="🌗-高可用"><a href="#🌗-高可用" class="headerlink" title="🌗 高可用"></a>🌗 高可用</h4><ul><li>限流</li><li>降级熔断</li><li>冷备</li><li>双机热备</li><li>同城双活</li><li>异地双活</li><li>异地多活</li><li>容灾备份</li></ul><h4 id="🌗-高并发"><a href="#🌗-高并发" class="headerlink" title="🌗 高并发"></a>🌗 高并发</h4><ul><li>数据库<ul><li>分库分表<ul><li>MyCat 中间件</li><li>Apache ShardingSphere 中间件</li></ul></li><li>读写分离</li></ul></li><li>缓存<ul><li>缓存雪崩</li><li>缓存击穿</li><li>缓存穿透</li></ul></li><li>负载均衡<ul><li>负载均衡算法</li><li>软硬件负载均衡（2、3、4、7 层）</li></ul></li></ul><h4 id="🌘-服务网格"><a href="#🌘-服务网格" class="headerlink" title="🌘 服务网格"></a>🌘 服务网格</h4><p>服务网格用来描述组成应用程序的微服务网络以及它们之间的交互。服务网格的规模和复杂性不断的增长，它将会变得越来越难以理解和管理，常见的需求包括服务发现、负载均衡、故障恢复、度量和监控等。</p><h5 id="知识-23"><a href="#知识-23" class="headerlink" title="知识"></a>知识</h5><ul><li>Istio<ul><li>流量管理</li><li>安全性</li><li>可观测性</li></ul></li><li>Envoy（开源的边缘和服务代理）</li></ul><h5 id="资源-24"><a href="#资源-24" class="headerlink" title="资源"></a>资源</h5><ul><li>资料大全：<a href="https://www.servicemesher.com/awesome-servicemesh/">https://www.servicemesher.com/awesome-servicemesh/</a></li><li>istio 官方文档：<a href="https://preliminary.istio.io/latest/zh">https://preliminary.istio.io/latest/zh</a></li><li>istio 视频教程：<a href="https://www.bilibili.com/video/BV1Lf4y1x7j8">https://www.bilibili.com/video/BV1Lf4y1x7j8</a></li><li>在线体验 istio：<a href="https://katacoda.com/courses/istio/">https://katacoda.com/courses/istio/</a></li></ul><h4 id="🌘-DDD-领域驱动设计"><a href="#🌘-DDD-领域驱动设计" class="headerlink" title="🌘 DDD 领域驱动设计"></a>🌘 DDD 领域驱动设计</h4><p>将数据、业务流程抽象成容易理解的领域模型，通过用代码实现领域模型，来组成完整的业务系统。</p><h5 id="知识-24"><a href="#知识-24" class="headerlink" title="知识"></a>知识</h5><ul><li>DDD 的优势</li><li>DDD 的适用场景</li><li>DDD 核心概念<ul><li>领域模型分类：失血、贫血、充血、涨血</li><li>子域划分：核心域、通用域、支撑域</li><li>限界上下文</li><li>实体和值对象</li><li>聚合设计</li><li>领域事件</li></ul></li><li>DDD 实践</li></ul><h5 id="资源-25"><a href="#资源-25" class="headerlink" title="资源"></a>资源</h5><ul><li>DDD 入门：<a href="https://juejin.cn/post/7004002483601145863">https://juejin.cn/post/7004002483601145863</a></li><li>DDD 编码实践：<a href="https://juejin.cn/post/6844903903104860174">https://juejin.cn/post/6844903903104860174</a></li><li>DDD 实践教程：<a href="https://www.bilibili.com/video/BV1Y341167Xp">https://www.bilibili.com/video/BV1Y341167Xp</a></li></ul><h4 id="🌘-其他"><a href="#🌘-其他" class="headerlink" title="🌘 其他"></a>🌘 其他</h4><ul><li>Sidecar</li><li>Serverless</li><li>云原生</li></ul><h4 id="学习建议-25"><a href="#学习建议-25" class="headerlink" title="学习建议"></a>学习建议</h4><p>架构设计的学习没有顶点，多看文章，思考每种设计的优缺点和适用场景，有机会的话在企业中实践即可。</p><p>还在学校、或者初入这行的同学切记，千万不要一味地去背诵架构设计的八股文。你可以背，但是这一块的知识只有结合具体的项目才有意义，所以要多做项目去实践设计的合理性，而不是什么设计都咔咔往系统里去怼。比如面试问到分布式事务，能结合自己项目中用分布式事务解决问题的经验去回答最好。</p><h3 id="🌘-其他技术"><a href="#🌘-其他技术" class="headerlink" title="🌘 其他技术"></a>🌘 其他技术</h3><ul><li>热数据探测技术：京东 HotKey</li><li>数据库流水订阅：阿里 Canal</li><li>监控告警</li><li>应用安全</li><li>故障演练</li><li>流量回放</li></ul><h2 id="阶段-7：Java-求职"><a href="#阶段-7：Java-求职" class="headerlink" title="阶段 7：Java 求职"></a>阶段 7：Java 求职</h2><h3 id="目标-6"><a href="#目标-6" class="headerlink" title="目标"></a>目标</h3><p>找到好工作</p><h3 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h3><ol><li>尽早做规划，可以通过大厂招聘官网的岗位描述来了解岗位的要求</li><li>雕琢一份优秀的简历，推荐阅读：<a href="https://mp.weixin.qq.com/s/wfabzdpOPdq89faFFpZ4NA">https://mp.weixin.qq.com/s/wfabzdpOPdq89faFFpZ4NA</a></li><li>多读面经，坚持刷算法</li><li>多参与面试，持续复盘总结</li></ol><h3 id="资源-26"><a href="#资源-26" class="headerlink" title="资源"></a>资源</h3><h4 id="校招岗位"><a href="#校招岗位" class="headerlink" title="校招岗位"></a>校招岗位</h4><ul><li>⭐ 牛客求职校招版：<a href="https://www.nowcoder.com/recommend/campus">https://www.nowcoder.com/recommend/campus</a></li><li>阿里 Java 开发：<a href="https://campus.alibaba.com/position.htm?refno=12699">https://campus.alibaba.com/position.htm?refno=12699</a></li><li>腾讯后台开发：<a href="https://join.qq.com/post_detail.html?pid=1&amp;id=101&amp;tid=2">https://join.qq.com/post_detail.html?pid=1&amp;id=101&amp;tid=2</a></li><li>腾讯全栈开发：<a href="https://join.qq.com/post_detail.html?pid=1&amp;id=137&amp;tid=2">https://join.qq.com/post_detail.html?pid=1&amp;id=137&amp;tid=2</a></li><li>腾讯运营开发：<a href="https://join.qq.com/post_detail.html?pid=1&amp;id=105&amp;tid=2">https://join.qq.com/post_detail.html?pid=1&amp;id=105&amp;tid=2</a></li><li>美团后端开发：<a href="https://campus.meituan.com/jobs?jobFamily=1&amp;jobId=4005&amp;jobType=1&amp;pageNo=2">https://campus.meituan.com/jobs?jobFamily=1&amp;jobId=4005&amp;jobType=1&amp;pageNo=2</a></li><li>华为软件开发：<a href="https://career.huawei.com/reccampportal/portal5/campus-recruitment-detail.html?jobId=176044">https://career.huawei.com/reccampportal/portal5/campus-recruitment-detail.html?jobId=176044</a></li></ul><h4 id="社招岗位"><a href="#社招岗位" class="headerlink" title="社招岗位"></a>社招岗位</h4><ul><li>⭐ 牛客求职社招版：<a href="https://www.nowcoder.com/recommend/fulltime">https://www.nowcoder.com/recommend/fulltime</a></li><li>阿里社招：<a href="https://job.alibaba.com/zhaopin/positionList.htm">https://job.alibaba.com/zhaopin/positionList.htm</a></li><li>腾讯社招：<a href="https://careers.tencent.com/search.html">https://careers.tencent.com/search.html</a></li></ul><h4 id="实习"><a href="#实习" class="headerlink" title="实习"></a>实习</h4><ul><li>⭐ 牛客实习广场：<a href="https://nowpick.nowcoder.com/w/intern/center">https://nowpick.nowcoder.com/w/intern/center</a></li><li>实习僧：<a href="https://www.shixiseng.com/">https://www.shixiseng.com/</a></li></ul><h4 id="内推"><a href="#内推" class="headerlink" title="内推"></a>内推</h4><ul><li>牛客内推：<a href="https://www.nowcoder.com/discuss/referral/index">https://www.nowcoder.com/discuss/referral/index</a></li></ul><h4 id="鱼皮经历"><a href="#鱼皮经历" class="headerlink" title="鱼皮经历"></a>鱼皮经历</h4><ul><li>从 0 开始的编程学习进大厂经历<ul><li>⭐ 我学计算机的四年，共勉：<a href="https://mp.weixin.qq.com/s/Nc7Ee2UyrPg6hGseQUCzeg">https://mp.weixin.qq.com/s/Nc7Ee2UyrPg6hGseQUCzeg</a></li></ul></li><li>实习经历<ul><li><p>⭐ 我的第一份实习：<a href="https://mp.weixin.qq.com/s/SwGiRzyTkCOOCUXfXPR1Pw">https://mp.weixin.qq.com/s/SwGiRzyTkCOOCUXfXPR1Pw</a></p></li><li><p>⭐ 我的第二份实习，字节跳动：<a href="https://mp.weixin.qq.com/s/3q-YIfuZBjPjSnamNwOraw">https://mp.weixin.qq.com/s/3q-YIfuZBjPjSnamNwOraw</a></p></li></ul></li></ul><h4 id="知识总结"><a href="#知识总结" class="headerlink" title="知识总结"></a>知识总结</h4><ul><li>⭐ 牛客 Java 面试宝典：<a href="https://www.nowcoder.com/tutorial/94">https://www.nowcoder.com/tutorial/94</a></li><li>⭐ JavaGuide：<a href="https://snailclimb.gitee.io/javaguide/#/">https://snailclimb.gitee.io/javaguide/#/</a></li><li>⭐ CS-Notes：<a href="http://www.cyc2018.xyz/">http://www.cyc2018.xyz/</a></li><li>阿里 Java 技术图谱：<a href="https://developer.aliyun.com/graph/java">https://developer.aliyun.com/graph/java</a></li></ul><h4 id="面经"><a href="#面经" class="headerlink" title="面经"></a>面经</h4><ul><li><p>⭐ 牛客面经：<a href="https://www.nowcoder.com/discuss/experience?tagId=639">https://www.nowcoder.com/discuss/experience?tagId=639</a></p></li><li><p>秋招总结&amp;Java心得（双非硕士，已拿11+5家Offer）：<a href="https://www.nowcoder.com/discuss/327041">https://www.nowcoder.com/discuss/327041</a></p></li><li><p>被疫情逼得gap year的完全菜鸡的春招之路。：<a href="https://www.nowcoder.com/discuss/427812">https://www.nowcoder.com/discuss/427812</a></p></li><li><p>谨以此文纪念2019年春招：<a href="https://www.nowcoder.com/discuss/181212">https://www.nowcoder.com/discuss/181212</a></p></li><li><p>2019秋招经验谈：<a href="https://www.nowcoder.com/discuss/122463">https://www.nowcoder.com/discuss/122463</a></p></li><li><p>秋招心得：<a href="https://www.nowcoder.com/discuss/317888">https://www.nowcoder.com/discuss/317888</a></p></li><li><p>非科班本科菜鸡投的337家(Java后台)：<a href="https://www.nowcoder.com/discuss/133333">https://www.nowcoder.com/discuss/133333</a></p></li><li><p>2018 这一年：<a href="https://www.nowcoder.com/discuss/137593">https://www.nowcoder.com/discuss/137593</a></p></li><li><p>双非的秋招，感谢牛客：<a href="https://www.nowcoder.com/discuss/142181">https://www.nowcoder.com/discuss/142181</a></p></li><li><p>二本本科Java上岸(滴滴京东58)2019秋招心得+面经：<a href="https://www.nowcoder.com/discuss/333912">https://www.nowcoder.com/discuss/333912</a></p></li><li><p>碎碎念流水账特别长 of 自己的 Java 秋招：<a href="https://www.nowcoder.com/discuss/354154">https://www.nowcoder.com/discuss/354154</a></p></li><li><p>秋招之路：个人历程以及面经总结：<a href="https://www.nowcoder.com/discuss/344311">https://www.nowcoder.com/discuss/344311</a></p></li><li><p>【秋招面经总结】菜逼的坎坷之路（JAVA后台研发）：<a href="https://www.nowcoder.com/discuss/352030">https://www.nowcoder.com/discuss/352030</a></p></li><li><p>阿里11面+EMC+网易+美团面经：<a href="https://www.nowcoder.com/discuss/105302">https://www.nowcoder.com/discuss/105302</a></p></li><li><p>2018秋招阿里巴巴java笔试试题：<a href="https://www.nowcoder.com/discuss/67379">https://www.nowcoder.com/discuss/67379</a></p></li><li><p>我的秋招经验分享（已拿BAT头条网易）：<a href="https://www.nowcoder.com/discuss/117071">https://www.nowcoder.com/discuss/117071</a></p></li><li><p>20届的阿里 头条 网易  滴滴 百度 小米等Java面经：<a href="https://www.nowcoder.com/discuss/68289">https://www.nowcoder.com/discuss/68289</a></p></li><li><p>拿了5个offer，回馈牛友发一波面经（长文详细）：<a href="https://www.nowcoder.com/discuss/79051">https://www.nowcoder.com/discuss/79051</a></p></li><li><p>【总结】零基础学习一年拿到BAT三家offer：<a href="https://www.nowcoder.com/discuss/188241">https://www.nowcoder.com/discuss/188241</a></p></li><li><p>本科生秋招经验总结帖：<a href="https://www.nowcoder.com/discuss/296586">https://www.nowcoder.com/discuss/296586</a></p></li><li><p>双非渣硕校招总结+Java面经（网易阿里百度等）：<a href="https://www.nowcoder.com/discuss/134850">https://www.nowcoder.com/discuss/134850</a></p></li><li><p>2018秋招笔试科大讯飞java笔试试题：<a href="https://www.nowcoder.com/discuss/67684">https://www.nowcoder.com/discuss/67684</a></p></li><li><p>头条后台研发面经（共三面）：<a href="https://www.nowcoder.com/discuss/94233">https://www.nowcoder.com/discuss/94233</a></p></li><li><p>一点点小经验和几家Java面经：<a href="https://www.nowcoder.com/discuss/138434">https://www.nowcoder.com/discuss/138434</a></p></li><li><p>感谢牛客网！发一波面经！阿里、网易游戏、京东等offer。：<a href="https://www.nowcoder.com/discuss/101712">https://www.nowcoder.com/discuss/101712</a></p></li><li><p>非科班水硕的春招实习总结- Java 后台开发：<a href="https://www.nowcoder.com/discuss/186528">https://www.nowcoder.com/discuss/186528</a></p></li><li><p>十面阿里，七面头条，六个Offer，春招结束：<a href="https://www.nowcoder.com/discuss/80156">https://www.nowcoder.com/discuss/80156</a></p></li><li><p>成功上岸，最后一波回馈：<a href="https://www.nowcoder.com/discuss/176434">https://www.nowcoder.com/discuss/176434</a></p></li><li><p>【Java后台开发面经】阿里|网易|头条|腾讯|华为：<a href="https://www.nowcoder.com/discuss/108655">https://www.nowcoder.com/discuss/108655</a></p></li><li><p>三跨学生的面经（头条、拼多多、华为、vivo）：<a href="https://www.nowcoder.com/discuss/195640">https://www.nowcoder.com/discuss/195640</a></p></li></ul><h4 id="面试题解"><a href="#面试题解" class="headerlink" title="面试题解"></a>面试题解</h4><ul><li>⭐ 2021 最新 Java 笔试、面试题合集：<a href="https://pan.baidu.com/s/1DE4HAu-DS80n7VOaGpU_KQ">https://pan.baidu.com/s/1DE4HAu-DS80n7VOaGpU_KQ</a> （密码：lkw1）</li><li>牛客网 Java开发校招面试考点汇总（附面试题和答案）：<a href="https://www.nowcoder.com/discuss/161991">https://www.nowcoder.com/discuss/161991</a></li><li>50w字+的技术类校招面试题汇总（附答案+考点）：<a href="https://www.nowcoder.com/discuss/164726">https://www.nowcoder.com/discuss/164726</a></li><li>硬件，软件（后端开发，算法，数据分析等）历年企业笔试真题汇总：<a href="https://www.nowcoder.com/discuss/212783">https://www.nowcoder.com/discuss/212783</a></li></ul><h4 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h4><ul><li><p>⭐ 尚硅谷 2021 逆袭版 Java 面试题第三季：<a href="https://www.bilibili.com/video/BV1Hy4y1B78T">https://www.bilibili.com/video/BV1Hy4y1B78T</a></p></li><li><p>⭐ 阿里大佬透彻讲解 Java 面试 500 道必考题：<a href="https://www.bilibili.com/video/BV1yU4y1J7Bb">https://www.bilibili.com/video/BV1yU4y1J7Bb</a></p></li></ul><h2 id="阶段-8：持续学习"><a href="#阶段-8：持续学习" class="headerlink" title="阶段 8：持续学习"></a>阶段 8：持续学习</h2><h3 id="目标-7"><a href="#目标-7" class="headerlink" title="目标"></a>目标</h3><p>持续追求技术的深度和广度，培养自己的 <strong>核心竞争力</strong> 和 <strong>不可替代性</strong> ，学无止境！</p><h3 id="学习建议-26"><a href="#学习建议-26" class="headerlink" title="学习建议"></a>学习建议</h3><p>自主学习，自主搜索教程，多看书，多阅读技术博客，多实践。</p><h3 id="学习方向"><a href="#学习方向" class="headerlink" title="学习方向"></a>学习方向</h3><h4 id="框架源码"><a href="#框架源码" class="headerlink" title="框架源码"></a>框架源码</h4><ul><li>Spring</li><li>SpringBoot</li><li>SpringMVC</li><li>MyBatis</li><li>Netty</li><li>Dubbo</li><li>SpringCloud</li></ul><h4 id="计算机原理"><a href="#计算机原理" class="headerlink" title="计算机原理"></a>计算机原理</h4><ul><li>《算法导论》：<a href="https://www.bilibili.com/video/av48922404">https://www.bilibili.com/video/av48922404</a></li><li>《现代操作系统》：<a href="https://www.bilibili.com/video/av9555596">https://www.bilibili.com/video/av9555596</a></li><li>《深入理解计算机系统》：<a href="https://www.bilibili.com/video/av31289365">https://www.bilibili.com/video/av31289365</a></li><li>《编译原理》： <a href="https://www.bilibili.com/video/av17649289">https://www.bilibili.com/video/av17649289</a></li><li>《计算机网络：自顶向下方法》：<a href="https://www.bilibili.com/video/BV1JV411t7ow">https://www.bilibili.com/video/BV1JV411t7ow</a></li><li>《计算机程序的构造和解释》：<a href="https://www.bilibili.com/video/av8515129">https://www.bilibili.com/video/av8515129</a></li><li>《数据库系统概论》：<a href="https://www.bilibili.com/video/BV1G54y1d7ZK">https://www.bilibili.com/video/BV1G54y1d7ZK</a></li></ul><h4 id="数据库-x2F-中间件-x2F-分布式"><a href="#数据库-x2F-中间件-x2F-分布式" class="headerlink" title="数据库 &#x2F; 中间件 &#x2F; 分布式"></a>数据库 &#x2F; 中间件 &#x2F; 分布式</h4><ul><li>数据库<ul><li>MySQL</li><li>PostgreSQL</li></ul></li><li>缓存<ul><li>Redis</li></ul></li><li>队列<ul><li>Apache Kafka</li><li>Apache Pulsar</li></ul></li><li>搜索引擎<ul><li>Elastic Stack<ul><li>Elasticsearch</li><li>logstash</li><li>kibana</li><li>beats</li></ul></li></ul></li><li>容器<ul><li>Docker</li><li>K8S</li></ul></li></ul><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><ul><li>广告系统</li><li>电商系统</li><li>搜索系统</li><li>支付转账</li><li>游戏后台</li><li>即时通讯</li><li>社交系统</li><li>CMS 系统</li><li>ERP 系统</li><li>OA 系统</li><li>代码生成</li><li>权限管理</li><li>秒杀活动</li></ul><h4 id="架构设计-1"><a href="#架构设计-1" class="headerlink" title="架构设计"></a>架构设计</h4><p>同阶段 6 架构设计部分</p><h4 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h4><ul><li>5V 特点</li><li>Hadoop</li><li>HDFS</li><li>MapReduce</li><li>Spark</li><li>Flink</li><li>Storm</li><li>Hive</li><li>HBase</li><li>Druid</li><li>Kylin</li><li>Pig</li><li>Mahout</li></ul><h4 id="前沿技术"><a href="#前沿技术" class="headerlink" title="前沿技术"></a>前沿技术</h4><ul><li>云原生：<a href="https://www.jianshu.com/p/a37baa7c3eff">https://www.jianshu.com/p/a37baa7c3eff</a><ul><li>Quasar Framework：<a href="http://www.quasarchs.com/">http://www.quasarchs.com/</a></li></ul></li><li>服务网格：<a href="https://www.redhat.com/zh/topics/microservices/what-is-a-service-mesh">https://www.redhat.com/zh/topics/microservices/what-is-a-service-mesh</a><ul><li>istio：<a href="https://github.com/istio/istio">https://github.com/istio/istio</a></li></ul></li><li>GraalVM：<a href="https://juejin.cn/post/6850418120570437646">https://juejin.cn/post/6850418120570437646</a> （高性能的通用虚拟机）<ul><li>官网：<a href="https://www.graalvm.org/">https://www.graalvm.org/</a></li></ul></li><li>ZGC：<a href="https://juejin.cn/post/6859276583656980493">https://juejin.cn/post/6859276583656980493</a> （新一代垃圾回收器）<ul><li>官网：<a href="http://openjdk.java.net/projects/zgc/">http://openjdk.java.net/projects/zgc/</a></li></ul></li></ul><h3 id="自学-Java-专题资源"><a href="#自学-Java-专题资源" class="headerlink" title="自学 Java 专题资源"></a>自学 Java 专题资源</h3><ul><li>⭐ GitHub Java 专区：<a href="https://github.com/topics/java">https://github.com/topics/java</a></li><li>⭐ GitHub Java 合集：<a href="https://github.com/akullpp/awesome-java">https://github.com/akullpp/awesome-java</a></li><li>StackOverflow：<a href="https://stackoverflow.com/questions/tagged/java">https://stackoverflow.com/questions/tagged/java</a> （解决问题必备）</li><li>⭐ 掘金 Java 专区：<a href="https://juejin.cn/tag/Java">https://juejin.cn/tag/Java</a></li><li>美团技术团队：<a href="https://tech.meituan.com/">https://tech.meituan.com/</a></li><li>阿里技术团队：<a href="https://102.alibaba.com/tech/list/">https://102.alibaba.com/tech/list/</a></li><li>有赞技术团队：<a href="https://tech.youzan.com/tag/back-end/">https://tech.youzan.com/tag/back-end/</a></li></ul><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="程序员重要能力"><a href="#程序员重要能力" class="headerlink" title="程序员重要能力"></a>程序员重要能力</h3><p>想成为大佬，就是要通过学习和积累，提升自己的各方面能力，比较抽象，共勉！</p><ol><li><p>团队协作能力</p></li><li><p>高效沟通能力</p></li><li><p>需求分析能力</p></li><li><p>架构设计能力</p></li><li><p>抽象复用能力</p></li><li><p>独立创造能力</p></li><li><p>问题解决能力</p></li><li><p>归纳总结能力</p></li><li><p>自主学习能力</p></li><li><p>工具利用能力</p></li><li><p>高效编码能力</p></li><li><p>信息检索能力</p></li><li><p>开源建设能力</p></li><li><p>源码阅读能力</p></li><li><p>自测审查能力</p></li><li><p>文档编写能力</p></li><li><p>知识表达能力</p></li><li><p>绘图描述能力</p></li><li><p>兴趣驱动（长期学习能力）</p></li><li><p>保持好奇心</p></li><li><p>其他（狗头）</p><ul><li><p>复制粘贴能力</p></li><li><p>打架能力</p></li><li><p>PPT 制作能力</p></li></ul></li></ol><h3 id="编程误区"><a href="#编程误区" class="headerlink" title="编程误区"></a>编程误区</h3><ol><li>我不适合学编程？❌（兴趣比天赋更重要，不要怀疑自己）</li><li>忽视基础，急于求成 ❌（勿以浮沙筑高台）</li><li>数学、英语差，就学不好编程 ❌（开发工作基本不用高等数学，英语可以使用翻译软件、工作中提升）</li><li>编程时，刻意记忆代码 ❌（知道每行代码的意义，能看文档写出来就行）</li><li>每行代码都要追求完美 ❌（何为完美？每个人的定义不同）</li><li>用百度搜索、复制粘贴的都是菜鸡程序员 ❌（艹）</li><li>我做的项目太小了，就不整理了 ❌（自己的每个项目都要整理，可以记录自己的成长）</li><li>跟别人交流很麻烦，我更愿意自己写代码 ❌（1 + 1 &gt; 2，切勿闭门造车，不过也要找到合适的同学去交流）</li><li>做别人做过的项目没有意义 ❌（连别人做过的项目都做不出，还想造新轮子？）</li><li>遇到 Bug，想办法绕过而不是寻找解决方案 ❌（Bug 最能使人成长）</li><li>遇到问题，第一时间去问别人而非自己解决 ❌（建议阅读《提问的智慧》）</li><li>花了很多时间、看了很多书，就能学好编程 ❌（编程最忌讳纸上谈兵）</li><li>只向前学习，不整理学过的知识 ❌（建议每学完一个知识，都去回想、总结、写心得，这个时间的花费是值得的）</li><li>单元测试不重要 ❌（一棍打死）</li><li>写文档不重要 ❌（一棍打死）</li><li>和我无关的工作，就不需要了解 ❌（了解团队、同行是很重要的，全局视野）</li><li>收藏的资源从来不看，就不收藏了 ❌（万一以后用到了呢？）</li><li>不去考虑需求的价值，而是一味寻求解决方案 ❌（不要成为需求机器，要有自己的独立思考）</li></ol><h3 id="高效法则"><a href="#高效法则" class="headerlink" title="高效法则"></a>高效法则</h3><ol><li>不要过分追求完美，完成比完美更重要。</li><li>有现成的代码，就不要自己写，避免重复劳动（学习除外）。</li><li>学会使用软件及快捷键来提升自己的编码效率。</li><li>做项目前，要先想清楚怎么做，做好充分的预研和设计。这样不仅便于后续的程序扩展，也能避免无意义的返工。</li><li>将大的目标进行拆解，做好计划，分清主次。不要因为觉得目标遥不可及而拖延，也不要盲目乐观而松懈。</li><li>养成好的作息习惯，找到自己适合工作的黄金时间。</li><li>记性不好，就多记录、多总结、定期复习。哪怕实在记不住，也可以借助文档、收藏夹软件来当自己的第二大脑。</li><li>积累属于自己的工具库，配合搜索软件实现随用随取。</li><li>多和其他同行交流或订阅技术推送，拓宽知识渠道，从而了解更多的工具和方法。有些东西你只要听说过，要用时也许就能节省大量查找时间。</li><li>找到让自己进入专注做事的状态的方法，比如戴上耳机、嚼口香糖等。</li><li>做事高效，离不开经验的积累，因此要多写代码、多做项目。</li></ol><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li><p>按照这份路线学习，每天要学多少个小时，总共要学多久？</p><p>回答：每个人学习能力不同，当然没有固定标准。我当时平均每天可以学习 6 个小时，寒暑假能保证 8 小时以上的学习，路线中的时长是我当时学习时长 * 1.5 倍的参考值。实话说，我的学习效率真的不高，对编程感兴趣，多学就好了。与其纠结这个时长，倒不妨多抽点时间，每天多学一点。</p></li><li><p>这份路线上推荐的资源，鱼皮都看完了么？</p><p>回答：我是特么神仙啊？怎么可能都看完了！这份路线的本质是以网上现有的、死板的 Java 大学习框架为基础，结合我自己实际学习的知识、经验和感悟给它注入灵魂，从而希望给大家带来更大的帮助和价值。路线中的资源都是利用我自己的资源检索能力和渠道，通过试看、反复对比和参考评价精选出来的，不是主观臆断、空穴来风。</p></li><li><p>我学到这份路线的哪个位置，可以找工作？</p><p>回答：这和你自己的领悟能力和教育背景有关。夸张点说，有些清华大学的同学，可能之前都没学过 Java，照样能找到大厂 Java 开发工作。学到同一阶段的同学，学习过程中的认真程度、积累总结数、做项目个数、基础学习的好坏不同，找到的工作肯定也不同。但一般情况下，想要进大厂，建议至少学完阶段 4 的微服务部分，然后去做一个完整的项目，用上之前学习的技术；不想进大厂的同学，学完第 3 阶段后，学下缓存和队列，一般也能找到 Java 开发的工作。</p></li><li><p>学完这份路线就能进大厂么？</p><p>回答：你先学完，再问这个问题。没有绝对进大厂的保证，但是相信我，把这份路线上的大部分知识学了，再做做项目，哪怕进不了大厂，你拿到的薪水也绝对比松散学习的同学高！</p></li><li><p>我可以相信你么？</p><p>回答：不要相信我，应该相信你自己。想进大厂，就不要怀疑自己的能力！</p></li></ol><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>觉得看文字累的朋友，欢迎看下视频版，带大家导读一下：<a href="https://www.bilibili.com/video/BV1Qf4y1K7ff/">https://www.bilibili.com/video/BV1Qf4y1K7ff/</a></p><p>以上就是鱼皮熬了几天大夜、结合个人经验、并且参考了大量网上的文章和评论总结而成的学习路线，真的是非常不容易，如果大家觉得满意请务必 <strong>三连</strong> 支持下。</p><p>我是鱼皮，持续分享编程干货的程序员，欢迎关注，下期再见~</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux学习路线</title>
      <link href="/post/c70d0d80.html"/>
      <url>/post/c70d0d80.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-学习路线"><a href="#Linux-学习路线" class="headerlink" title="Linux 学习路线"></a>Linux 学习路线</h1><blockquote><p>文章来源于 鱼皮大佬，为了方便我个人观看因此转载来此。<br>Linux 学习路线 by 程序员鱼皮</p></blockquote><p>💂 + 💻 &#x3D; 👴🏽</p><p>建议先观看视频入门：<a href="https://www.bilibili.com/video/BV1ev411G7VE/">https://www.bilibili.com/video/BV1ev411G7VE/</a></p><h2 id="为什么学-Linux？"><a href="#为什么学-Linux？" class="headerlink" title="为什么学 Linux？"></a>为什么学 Linux？</h2><p>相比于 Windows，Linux 免费、开源、安全、灵活、稳定、便于开发，所以更受企业青睐，甚至 <strong>90% 以上</strong> 的企业应用都是用 Linux 服务器部署的。</p><p>无论是前端、后端、算法、测试、运维等计算机相关岗位的同学，都建议学习下 Linux，大有裨益。</p><h2 id="学习境界"><a href="#学习境界" class="headerlink" title="学习境界"></a>学习境界</h2><p>首先，Linux 入门很简单，但想学的透彻难上加难！</p><p>因此，在学习之前要明确目标。</p><p>可以 Linux 的学习分为几种境界：</p><ol><li>明劲，就是了解 Linux 的基本概念，会敲常用命令来应对工作。对于大多数想从事开发和运维岗位的同学，学到这就足够找到工作了。</li><li>暗劲，又分为两种境界，能理解 Linux 尤其是其内核的设计思想，为小圆满；能将其思想应用到系统的架构设计中，为大圆满。暗劲境界的高手，冲击大厂、做架构师、从事底层开发，都不成问题。</li><li>化劲，可谓出神入化，不仅熟知 Linux 的使用、思想和细节，更能推陈出新，自主创造新的系统。</li></ol><p>当然，一般情况下，会用就够了，想进大厂最好也学习一些内核的设计思想。找到工作后，是否要深入学习完全取决于你自己。</p><h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><p><img src="https://qiniuyun.code-nav.cn/img/%E9%B1%BC%E7%9A%AE%20-%20Linux%20%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.png" alt="鱼皮 - Linux 学习路线"></p><h2 id="路线"><a href="#路线" class="headerlink" title="路线"></a>路线</h2><h3 id="Linux-基础知识"><a href="#Linux-基础知识" class="headerlink" title="Linux 基础知识"></a>Linux 基础知识</h3><ul><li>发展历史</li><li>⭐ 特点和优势</li><li>应用场景</li><li>⭐ 常见 Linux 系统版本（推荐 CentOS 7+）<ul><li>⭐ CentOS</li><li>⭐ Ubuntu</li><li>Debian</li><li>Fedora</li></ul></li><li>何为开源？</li></ul><h3 id="Linux-环境"><a href="#Linux-环境" class="headerlink" title="Linux 环境"></a>Linux 环境</h3><ul><li><p>搭建方式</p><ul><li>⭐ 虚拟机</li><li>⭐ 云服务器</li><li>在线工具</li><li>WSL</li><li>Docker 容器</li></ul></li><li><p>远程连接</p><ul><li>⭐ SSH</li><li>连接工具<ul><li>⭐ XShell</li><li>⭐ MobaXterm</li><li>SecureCRT</li><li>Putty</li></ul></li></ul></li></ul><h3 id="Linux-常用命令"><a href="#Linux-常用命令" class="headerlink" title="Linux 常用命令"></a>Linux 常用命令</h3><blockquote><p>此处只列举命令名称，命令的具体用法可直接在手册中（<a href="https://www.linuxcool.com/%EF%BC%89%E6%9F%A5%E8%AF%A2">https://www.linuxcool.com/）查询</a></p></blockquote><h4 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h4><ul><li>uname 查看系统信息</li><li>hostname 查看主机名</li><li>cat &#x2F;proc&#x2F;cpuinfo 查看 CPU 信息</li><li>lsmod 查看已加载的系统模块</li><li>top 查看系统使用情况</li><li>df 查看磁盘使用情况</li><li>fdisk 查看磁盘分区</li><li>du 查看目录使用情况</li><li>iostat 查看 I &#x2F; O 使用情况</li><li>free 显示系统内存情况</li><li>env 查看环境变量</li><li>uptime 查看系统运行时间、用户数、负载</li></ul><h4 id="系统操作"><a href="#系统操作" class="headerlink" title="系统操作"></a>系统操作</h4><ul><li>shutdown 关机</li><li>reboot 重启</li><li>mount 挂载设备</li><li>umount 卸载设备</li></ul><h4 id="用户相关"><a href="#用户相关" class="headerlink" title="用户相关"></a>用户相关</h4><ul><li>su 切换用户</li><li>sudo 以管理员身份执行</li><li>who 查看当前用户名</li><li>ssh 远程连接</li><li>logout 注销</li><li>useradd 创建用户</li><li>userdel 删除用户</li><li>usermod 修改用户</li><li>groupadd 创建用户组</li><li>groupdel 删除用户组</li><li>groupmod 修改用户组</li><li>passwd 修改密码</li><li>last 显示用户或终端的登录情况</li></ul><h4 id="文件相关"><a href="#文件相关" class="headerlink" title="文件相关"></a>文件相关</h4><ul><li>cd 切换目录</li><li>ls 查看目录列表</li><li>tree 打印目录树</li><li>mkdir 创建目录</li><li>rm 删除目录</li><li>touch 新建文件</li><li>cp 复制文件</li><li>mv 移动文件</li><li>ln 创建文件链接</li><li>find 搜索文件</li><li>locate 定位文件</li><li>whereis 查看可执行文件路径</li><li>which 在 PATH 指定的路径中，搜索某系统命令的位置</li><li>chmod 设置目录权限</li><li>cat &#x2F; more &#x2F; less 查看文件</li><li>tac 倒序查看文件</li><li>head &#x2F; tail 查看文件开头 &#x2F; 结尾</li><li>paste 合并文件</li><li>zip &#x2F; tar &#x2F; gzip 压缩文件</li><li>unzip &#x2F; tar &#x2F; gunzip 解压文件</li><li>grep &#x2F; sed &#x2F; awk 文本处理</li><li>vim 文本编辑</li></ul><h4 id="程序相关"><a href="#程序相关" class="headerlink" title="程序相关"></a>程序相关</h4><ul><li>crontab 计划任务</li><li>nohup 后台运行程序</li><li>jobs 查看系统任务</li><li>ps 查看进程</li><li>kill 杀死进程</li><li>rpm &#x2F; yum &#x2F; apt &#x2F; apt-get &#x2F; dpkg 软件包管理</li><li>service &#x2F; systemctl 服务管理</li></ul><h4 id="网络相关"><a href="#网络相关" class="headerlink" title="网络相关"></a>网络相关</h4><ul><li>ifconfig 查看网络属性</li><li>netstat 查看网络状态</li><li>iptables 查看 iptables 规则</li></ul><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li><p>date 显示系统时间</p></li><li><p>cal 显示日历</p></li><li><p>history 显示与操作历史</p></li><li><p>help 帮助</p></li><li><p>alias 别名</p></li></ul><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><ul><li>用户</li><li>用户组</li><li>ACL 权限管理</li><li>用户切换</li><li>管理员</li></ul><h3 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h3><ul><li>文件操作<ul><li>创建</li><li>修改</li><li>复制</li><li>移动</li><li>删除</li></ul></li><li>文件浏览</li><li>文件搜索</li><li>文件权限</li><li>软硬链接</li><li>压缩 &#x2F; 解压</li></ul><h3 id="文本操作"><a href="#文本操作" class="headerlink" title="文本操作"></a>文本操作</h3><ul><li>正则表达式</li><li>grep</li><li>sed</li><li>awk</li></ul><h3 id="VIM-编辑器"><a href="#VIM-编辑器" class="headerlink" title="VIM 编辑器"></a>VIM 编辑器</h3><ul><li><p>基本操作</p></li><li><p>模式</p></li><li><p>快捷键</p></li><li><p>VIM 定制</p></li><li><p>插件增强</p></li></ul><p>送张 VIM 键盘图：</p><p><img src="https://qiniuyun.code-nav.cn/img/vi-vim-cheat-sheet-sch.gif"></p><h3 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h3><ul><li>使用情况查询</li><li>磁盘分区</li><li>挂载</li></ul><h3 id="驱动管理"><a href="#驱动管理" class="headerlink" title="驱动管理"></a>驱动管理</h3><ul><li>驱动加载</li><li>驱动更新</li><li>网卡</li><li>显卡</li></ul><h3 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h3><ul><li>启动进程</li><li>杀死进程</li><li>查看进程</li><li>前台 &#x2F; 后台任务</li><li>进程监控</li></ul><h3 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h3><ul><li>crond 服务</li><li>crontab 命令</li></ul><h3 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h3><ul><li>IP</li><li>端口</li><li>主机名</li><li>hosts</li><li>网络配置</li><li>网络状态</li><li>网络监控</li></ul><h3 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h3><ul><li><p>系统设置</p><ul><li>日期时间</li><li>语言</li><li>字符集</li></ul></li><li><p>系统服务</p></li><li><p>环境变量</p></li><li><p>日志</p></li><li><p>系统关机 &#x2F; 重启</p></li><li><p>数据备份与恢复</p></li></ul><h3 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h3><ul><li>服务查看</li><li>启动服务</li><li>禁用服务</li><li>删除服务</li><li>开机自启</li></ul><h3 id="软件管理"><a href="#软件管理" class="headerlink" title="软件管理"></a>软件管理</h3><ul><li><p>软件包管理器</p><ul><li>⭐ rpm</li><li>⭐ yum</li><li>apt</li><li>apt-get</li><li>dpkg</li></ul></li><li><p>软件安装</p></li><li><p>软件更新</p></li><li><p>软件卸载</p></li><li><p>源码安装</p></li></ul><h3 id="常用软件-x2F-服务搭建"><a href="#常用软件-x2F-服务搭建" class="headerlink" title="常用软件 &#x2F; 服务搭建"></a>常用软件 &#x2F; 服务搭建</h3><ul><li><p>HTTP</p></li><li><p>Mail</p></li><li><p>NFS</p></li><li><p>DNS</p></li><li><p>FTP</p></li><li><p>mysql</p></li><li><p>LVS + Keepalived</p></li><li><p>Apache</p></li><li><p>Nginx</p></li><li><p>Redis</p></li><li><p>日志服务</p></li></ul><h3 id="Shell-脚本编程"><a href="#Shell-脚本编程" class="headerlink" title="Shell 脚本编程"></a>Shell 脚本编程</h3><ul><li><p>默认变量</p></li><li><p>运算符</p></li><li><p>条件</p></li><li><p>循环</p></li><li><p>执行</p></li><li><p>函数</p><ul><li>系统函数</li><li>自定义函数</li></ul></li><li><p>规范</p></li><li><p>调试方法</p></li><li><p>管道</p></li><li><p>I&#x2F;O 重定向</p></li></ul><h3 id="Linux-启动过程"><a href="#Linux-启动过程" class="headerlink" title="Linux 启动过程"></a>Linux 启动过程</h3><ul><li>BIOS 启动引导</li><li>引导加载程序</li><li>内核加载</li><li>系统初始化（init）</li><li>运行级别</li><li>启动内核</li><li>执行初始化脚本</li><li>用户登录</li></ul><h3 id="Linux-内核"><a href="#Linux-内核" class="headerlink" title="Linux 内核"></a>Linux 内核</h3><ul><li>内核的组成</li><li>目录结构</li><li>版本</li><li>模块</li><li>编译</li><li>裁剪</li></ul><p>具体路线图参考：</p><p><img src="https://qiniuyun.code-nav.cn/img/%E5%86%85%E6%A0%B8%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB.jpg" alt="内核知识体系 by 0Voice"></p><h3 id="第三方工具"><a href="#第三方工具" class="headerlink" title="第三方工具"></a>第三方工具</h3><ul><li><p>Ansible</p></li><li><p>Webmin</p></li><li><p>宝塔 Linux</p></li></ul><h2 id="岗位"><a href="#岗位" class="headerlink" title="岗位"></a>岗位</h2><ul><li><p>后端开发（Java &#x2F; Go &#x2F; C++）</p></li><li><p>底层开发（C &#x2F; C++）</p></li><li><p>运维开发</p></li><li><p>大数据</p></li><li><p>云计算</p></li><li><p>自动化运维</p></li><li><p>嵌入式开发</p></li><li><p>网络工程师</p></li></ul><h2 id="学习建议"><a href="#学习建议" class="headerlink" title="学习建议"></a>学习建议</h2><p>多动手实践，建议自己购买一台云服务器，并且在本地搭建 Linux 虚拟机环境。</p><p>一定要自己从 0 开始手敲命令安装软件、部署服务，熟悉整个项目的上线流程。</p><p>每个命令至少要跟着敲一遍，了解它们的作用，并通过自然地练习，熟悉常用的 Linux 命令。</p><p>记不住没关系，用文档查就行了。</p><p>先会用，再理解。</p><p>时间不多的话，可以通过面试题来了解一些 Linux 设计思想，而不是直接去深入学习内核，虽说学会了的确大有裨益，但性价比不高。</p><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><ul><li><p>视频</p><ul><li>⭐ 2021 韩顺平 一周学会Linux：<a href="https://www.bilibili.com/video/BV1Sv411r7vd%EF%BC%88%E5%9F%BA%E4%BA%8E">https://www.bilibili.com/video/BV1Sv411r7vd（基于</a> CentOS 7.6 版本较新，视频长度刚刚好，也比较完整）</li><li>【千锋】Linux 云计算基础视频教程 650 集入门：<a href="https://www.bilibili.com/video/BV1pz4y1D73n%EF%BC%88%E5%BE%88%E5%85%A8%E9%9D%A2%EF%BC%8C%E9%80%82%E5%90%88%E6%97%B6%E9%97%B4%E8%B6%B3%E5%A4%9F%E3%80%81%E6%83%B3%E8%AE%A4%E7%9C%9F%E5%AD%A6%E7%9A%84%E5%90%8C%E5%AD%A6%EF%BC%89">https://www.bilibili.com/video/BV1pz4y1D73n（很全面，适合时间足够、想认真学的同学）</a></li><li>【狂神说Java】Linux 教程 - 阿里云真实环境学习：<a href="https://www.bilibili.com/video/BV187411y7hF%EF%BC%88%E7%AE%97%E6%98%AF%E4%B8%AA%E5%B0%8F%E7%9A%84%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%E5%90%A7%EF%BC%8C%E6%97%B6%E9%97%B4%E8%B6%B3%E5%A4%9F%E7%9A%84%E8%AF%9D%E8%BF%98%E6%98%AF%E6%8E%A8%E8%8D%90%E7%9C%8B%E6%9B%B4%E5%AE%8C%E6%95%B4%E7%9A%84%EF%BC%89">https://www.bilibili.com/video/BV187411y7hF（算是个小的入门教程吧，时间足够的话还是推荐看更完整的）</a></li><li>细说Linux - 从入门到精通：<a href="https://study.163.com/course/courseMain.htm?courseId=983014%EF%BC%88%E6%84%9F%E8%A7%89%E6%9C%89%E7%82%B9%E5%95%B0%E5%97%A6%EF%BC%8C%E4%BD%9C%E4%B8%BA%E5%A4%87%E7%94%A8%E5%90%A7%EF%BC%89">https://study.163.com/course/courseMain.htm?courseId=983014（感觉有点啰嗦，作为备用吧）</a></li><li>玩转Vim 从放弃到爱不释手：<a href="https://www.imooc.com/learn/1129%EF%BC%88%E5%A5%BD%E8%AF%84%E5%BE%88%E5%A4%9A%EF%BC%89">https://www.imooc.com/learn/1129（好评很多）</a></li><li>阿里云 Linux 运维学习路线：<a href="https://edu.aliyun.com/roadmap/linux">https://edu.aliyun.com/roadmap/linux</a></li></ul></li><li><p>书籍</p><ul><li>《鸟哥的 Linux 私房菜 —— 基础篇》：<a href="http://cn.linux.vbird.org/linux_basic/linux_basic.php%EF%BC%88%E7%BB%8F%E5%85%B8%EF%BC%89">http://cn.linux.vbird.org/linux_basic/linux_basic.php（经典）</a></li><li>《深入理解 LINUX 内核》：<a href="https://book.douban.com/subject/1767120/">https://book.douban.com/subject/1767120/</a></li><li>《深入Linux内核架构》：<a href="https://book.douban.com/subject/4843567/">https://book.douban.com/subject/4843567/</a></li><li>《Linux内核完全剖析》：<a href="https://book.douban.com/subject/3229243/">https://book.douban.com/subject/3229243/</a></li><li>《Linux内核设计与实现(原书第3版)》：<a href="https://book.douban.com/subject/6097773/">https://book.douban.com/subject/6097773/</a></li></ul></li><li><p>文档</p><ul><li><p>Linux  教程（菜鸟教程）：<a href="https://www.runoob.com/linux/linux-tutorial.html">https://www.runoob.com/linux/linux-tutorial.html</a></p></li><li><p>Linux 教程（W3CSchool）：<a href="https://www.w3cschool.cn/linux/">https://www.w3cschool.cn/linux/</a></p></li><li><p>Linux 工具快速教程：<a href="https://linuxtools-rst.readthedocs.io(基础、工具进阶、工具参考)/">https://linuxtools-rst.readthedocs.io（基础、工具进阶、工具参考）</a></p></li></ul></li><li><p>合集</p><ul><li>Linux内核学习资料：<a href="https://github.com/0voice/linux_kernel_wiki">https://github.com/0voice/linux_kernel_wiki</a></li><li>GitHub Linux 专区：<a href="https://github.com/topics/linux%EF%BC%88%E5%BE%88%E5%A4%9A%E5%A5%BD%E9%A1%B9%E7%9B%AE%EF%BC%89">https://github.com/topics/linux（很多好项目）</a></li><li>GitHub Linux 合集：<a href="https://github.com/inputsh/awesome-linux%EF%BC%88Linux">https://github.com/inputsh/awesome-linux（Linux</a> 系列技术）</li><li>StackOverflow：<a href="https://stackoverflow.com/questions/tagged/linux%EF%BC%88%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E5%BF%85%E5%A4%87%EF%BC%89">https://stackoverflow.com/questions/tagged/linux（解决问题必备）</a></li><li>掘金 Linux 专区：<a href="https://juejin.cn/tag/Linux%EF%BC%88%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0%EF%BC%89">https://juejin.cn/tag/Linux（技术文章）</a></li></ul></li><li><p>实战</p><ul><li>⭐ 蓝桥云课 Linux 基础入门：<a href="https://www.lanqiao.cn/courses/1%EF%BC%88%E5%BC%BA%E7%83%88%E6%8E%A8%E8%8D%90%EF%BC%89">https://www.lanqiao.cn/courses/1（强烈推荐）</a></li><li>腾讯云动手实验室：<a href="https://cloud.tencent.com/developer/labs">https://cloud.tencent.com/developer/labs</a></li><li>阿里云体验实验室：<a href="https://developer.aliyun.com/adc/labs/">https://developer.aliyun.com/adc/labs/</a></li><li>阿里云知行实验室：<a href="https://start.aliyun.com/">https://start.aliyun.com/</a></li><li>华为云沙箱实验室：<a href="https://lab.huaweicloud.com/">https://lab.huaweicloud.com/</a></li></ul></li><li><p>社区（国内倒的差不多了）</p><ul><li>Linux 中国：<a href="https://linux.cn/">https://linux.cn/</a></li><li>开源中国：<a href="https://www.oschina.net/%EF%BC%88%E7%BB%BC%E5%90%88%E7%9A%84%E5%BC%80%E6%BA%90%E7%A4%BE%E5%8C%BA%EF%BC%89">https://www.oschina.net/（综合的开源社区）</a></li><li>红帽官网：<a href="https://www.redhat.com/zh">https://www.redhat.com/zh</a></li></ul></li><li><p>工具</p><ul><li>DistroTest 在线操作系统测试：<a href="https://distrotest.net/">https://distrotest.net</a></li><li>⭐ Linux 命令搜索：<a href="https://wangchujiang.com/linux-command">https://wangchujiang.com/linux-command</a></li><li>Linux 命令大全手册：<a href="https://man.linuxde.net/">https://man.linuxde.net/</a></li><li>Linux 命令大全手册：<a href="https://www.linuxcool.com/">https://www.linuxcool.com/</a></li><li>Linux 命令示例：<a href="http://linux-commands-examples.com/">http://linux-commands-examples.com/</a></li><li>宝塔 Linux 面板：<a href="https://www.bt.cn/">https://www.bt.cn/</a></li><li>在线 Shell 脚本检查：<a href="https://www.shellcheck.net/">https://www.shellcheck.net</a></li></ul></li><li><p>面试题</p><ul><li>牛客网 Linux 专项练习：<a href="https://www.nowcoder.com/intelligentTest">https://www.nowcoder.com/intelligentTest</a></li><li>牛客网 Linux 面试题：<a href="https://www.nowcoder.com/search?query=linux%E9%9D%A2%E8%AF%95%E9%A2%98&amp;type=question">https://www.nowcoder.com/search?query=linux%E9%9D%A2%E8%AF%95%E9%A2%98&amp;type=question</a></li><li>Linux 常见面试题整理：<a href="https://zhuanlan.zhihu.com/p/376749877">https://zhuanlan.zhihu.com/p/376749877</a></li><li>Linux 常见面试题整理：<a href="https://github.com/0voice/linux_kernel_wiki#-%E9%9D%A2%E8%AF%95%E9%A2%98">https://github.com/0voice/linux_kernel_wiki#-%E9%9D%A2%E8%AF%95%E9%A2%98</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础语法</title>
      <link href="/post/b8a3dfda.html"/>
      <url>/post/b8a3dfda.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-Python简介"><a href="#1-Python简介" class="headerlink" title="1 Python简介"></a>1 Python简介</h1><p>更新至3.0版本</p><p> <strong>特点</strong></p><ol><li>跨平台语言</li><li>解释型语言  （无编译）</li><li>交互式语言</li><li>面向对象语言</li></ol><h1 id="2-Python-基础"><a href="#2-Python-基础" class="headerlink" title="2 Python 基础"></a>2 Python 基础</h1><h2 id="2-1-输出、输入函数"><a href="#2-1-输出、输入函数" class="headerlink" title="2.1 输出、输入函数"></a>2.1 输出、输入函数</h2><p>&#x3D;&#x3D;print函数&#x3D;&#x3D;  </p><p>允许的输出内容：</p><ol><li>数字</li><li>字符串 （要+单引号 &#x2F; 双引号）</li><li>表达式</li></ol><p><strong>输出到文件中</strong></p><p>open</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定所在的输出文件位置，使用 file = 变量</span></span><br><span class="line">fo = <span class="built_in">open</span>(<span class="string">&#x27;E:/pythonProject/demo-project/text.txt&#x27;</span>,<span class="string">&#x27;a+&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hellopython&#x27;</span>,file=fo)</span><br><span class="line">fo.close()  <span class="comment"># 关闭流</span></span><br></pre></td></tr></table></figure><h3 id="2-1-1-输入函数"><a href="#2-1-1-输入函数" class="headerlink" title="2.1 .1 输入函数"></a>2.1 .1 输入函数</h3><p>input () </p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="built_in">str</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入内容：&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><h2 id="2-2-转义字符"><a href="#2-2-转义字符" class="headerlink" title="2.2 转义字符"></a>2.2 转义字符</h2><table><thead><tr><th>样式</th><th>含义</th></tr></thead><tbody><tr><td>\123</td><td>1~3位八进制数据所表示的字符，如\256</td></tr><tr><td>\uF890</td><td>4位十六进制数据所表示的字符，如\u0014</td></tr><tr><td>’</td><td>单引号字符</td></tr><tr><td>\</td><td>反斜杠字符</td></tr><tr><td>\t</td><td>水平制表符 占四个制表位</td></tr><tr><td>\v</td><td>垂直制表符</td></tr><tr><td>\r</td><td>回车</td></tr><tr><td>\n</td><td>换行符</td></tr><tr><td>\b</td><td>退格</td></tr><tr><td>\f</td><td>换页</td></tr><tr><td>\a</td><td>响铃</td></tr></tbody></table><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p>高到低的顺序列出了所有的运算符，如下表：</p><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td><code>[]</code> <code>[:]</code></td><td>下标，切片</td></tr><tr><td><code>**</code></td><td>指数</td></tr><tr><td><code>~</code> <code>+</code> <code>-</code></td><td>按位取反, 正负号</td></tr><tr><td><code>*</code> <code>/</code> <code>%</code> <code>//</code></td><td>乘，除，模，整除</td></tr><tr><td><code>+</code> <code>-</code></td><td>加，减</td></tr><tr><td><code>&gt;&gt;</code> <code>&lt;&lt;</code></td><td>右移，左移</td></tr><tr><td><code>&amp;</code></td><td>按位与</td></tr><tr><td><code>^</code> <code>|</code></td><td>按位异或，按位或</td></tr><tr><td><code>&lt;=</code> <code>&lt;</code> <code>&gt;</code> <code>&gt;=</code></td><td>小于等于，小于，大于，大于等于</td></tr><tr><td><code>==</code> <code>!=</code></td><td>等于，不等于</td></tr><tr><td><code>is</code>  <code>is not</code></td><td>身份运算符</td></tr><tr><td><code>in</code> <code>not in</code></td><td>成员运算符</td></tr><tr><td><code>not</code> <code>or</code> <code>and</code></td><td>逻辑运算符</td></tr><tr><td><code>=</code> <code>+=</code> <code>-=</code> <code>*=</code> <code>/=</code> <code>%=</code> <code>//=</code> <code>**=</code> <code>&amp;=</code> &#96;</td><td>&#x3D;<code> </code>^&#x3D;<code> </code>&gt;&gt;&#x3D;<code> </code>&lt;&lt;&#x3D;&#96;</td></tr></tbody></table><p><strong>比较运算符有的地方也称为关系运算符，包括<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&gt;</code>、<code>&lt;=</code>、<code>&gt;=</code></strong></p><p><strong>逻辑运算符有三个，分别是<code>and</code>、<code>or</code>和<code>not</code></strong></p><h2 id="2-3-进制与编码"><a href="#2-3-进制与编码" class="headerlink" title="2.3 进制与编码"></a>2.3 进制与编码</h2><h3 id="1-二进制"><a href="#1-二进制" class="headerlink" title="1 二进制"></a>1 二进制</h3><h4 id="1-基本单位"><a href="#1-基本单位" class="headerlink" title="1 基本单位"></a>1 基本单位</h4><ul><li>信息存储量是度量存储器存放程序和数据的数量。</li><li>位（Bit）：计算机当中最小的信息单位<br>存放一个二进制位数，即 0 或 1</li><li>字节（Byte）：计算机中的基本信息单位常用的单位</li><li>字（Word）：有字节组成</li><li>字长：字的位数<br>字长越长，计算机性能越好</li><li>千字节（KB）</li><li>容量单位：  位（bit）-&gt; 字节 B -&gt;  千字节 KB -&gt; 兆字节 MB -&gt; 吉字节 GB -&gt;  TB -&gt;  PB -&gt;  EB、ZB、YB 、NB、DB等</li></ul><h4 id="2-单位换算"><a href="#2-单位换算" class="headerlink" title="2 单位换算"></a>2 单位换算</h4><ul><li><p>1字节(Byte) &#x3D; 8位(bit) 2^3方</p></li><li><p>1KB( K，千字节) &#x3D; 1024B  2^10方</p></li><li><p>1MB( M，兆字节) &#x3D; 1024KB</p></li><li><p>1GB( G，吉字节，千兆) &#x3D; 1024MB</p></li><li><p>1TB( T，万亿字节，太字节) &#x3D; 1024GB</p></li><li><p>1PB( P，千万亿字节，拍字节) &#x3D; 1024TB</p></li><li><p>1EB( E，百亿亿字节，艾字节) &#x3D; 1024PB</p></li></ul><h3 id="ASCII码"><a href="#ASCII码" class="headerlink" title="ASCII码"></a>ASCII码</h3><img src="http://picgo.kongshier.top/2767/ASCII.png" alt="ASCII"  /><h2 id="2-4-标识符和保留字"><a href="#2-4-标识符和保留字" class="headerlink" title="2.4 标识符和保留字"></a>2.4 标识符和保留字</h2><p>保留字：具有特殊意义，不能用来做变量或者对象</p><p>标识符：变量、函数、类、模块和其他对象起的名字</p><p>规则：</p><ol><li>字母、数字、下划线</li><li>不能以数字开头</li><li>不能是保留字</li><li>严格区分大小写</li></ol><h2 id="2-5-变量的定义和使用"><a href="#2-5-变量的定义和使用" class="headerlink" title="2.5 变量的定义和使用"></a>2.5 变量的定义和使用</h2><ul><li>标识</li><li>类型</li><li>值</li></ul><h2 id="2-6-数据类型"><a href="#2-6-数据类型" class="headerlink" title="2.6 数据类型"></a>2.6 数据类型</h2><ul><li>int  ：无小数部分</li><li>str：</li><li>float：有小数部分</li><li>bool  ： true 、 false</li></ul><h3 id="2-6-1-类行转换"><a href="#2-6-1-类行转换" class="headerlink" title="2.6.1 类行转换"></a>2.6.1 类行转换</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&#x27;张三&#x27;</span></span><br><span class="line">age = <span class="number">12</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;name : &#x27;</span> + name + <span class="string">&#x27;age:&#x27;</span> + <span class="built_in">str</span>(age))</span><br></pre></td></tr></table></figure><p>2.7 分支语句</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>  </span><br><span class="line"><span class="keyword">else</span>  <span class="keyword">if</span> (<span class="keyword">elif</span>)</span><br><span class="line"><span class="keyword">else</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        3x - 5  (x &gt; 1)</span></span><br><span class="line"><span class="string">f(x) =  x + 2   (-1 &lt;= x &lt;= 1)</span></span><br><span class="line"><span class="string">        5x + 3  (x &lt; -1)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">x = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;x = &#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> x &gt; <span class="number">1</span>:</span><br><span class="line">    y = <span class="number">3</span> * x - <span class="number">5</span></span><br><span class="line"><span class="keyword">elif</span> x &gt;= -<span class="number">1</span>:</span><br><span class="line">    y = x + <span class="number">2</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    y = <span class="number">5</span> * x + <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;f(%.2f) = %.2f&#x27;</span> % (x, y)) <span class="comment">#保留两位小数 </span></span><br></pre></td></tr></table></figure><h4 id="练习：百分制成绩转换为等级制成绩。"><a href="#练习：百分制成绩转换为等级制成绩。" class="headerlink" title="练习：百分制成绩转换为等级制成绩。"></a>练习：百分制成绩转换为等级制成绩。</h4><blockquote><p><strong>要求</strong>：如果输入的成绩在90分以上（含90分）输出A；80分-90分（不含90分）输出B；70分-80分（不含80分）输出C；60分-70分（不含70分）输出D；60分以下输出E。</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># 百分制成绩转换为等级制成绩</span></span><br><span class="line"></span><br><span class="line">score = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入成绩: &#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> score &gt;= <span class="number">90</span>:</span><br><span class="line">    grade = <span class="string">&#x27;A&#x27;</span></span><br><span class="line"><span class="keyword">elif</span> score &gt;= <span class="number">80</span>:</span><br><span class="line">    grade = <span class="string">&#x27;B&#x27;</span></span><br><span class="line"><span class="keyword">elif</span> score &gt;= <span class="number">70</span>:</span><br><span class="line">    grade = <span class="string">&#x27;C&#x27;</span></span><br><span class="line"><span class="keyword">elif</span> score &gt;= <span class="number">60</span>:</span><br><span class="line">    grade = <span class="string">&#x27;D&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    grade = <span class="string">&#x27;E&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;对应的等级是:&#x27;</span>, grade)</span><br></pre></td></tr></table></figure><p>pass语句：知识一个占位符，什么都不做</p><ul><li>搭建好代码结构之后，还不知道具体的代码怎么写</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> a == <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h2 id="2-8-循环结构"><a href="#2-8-循环结构" class="headerlink" title="2.8 循环结构"></a>2.8 循环结构</h2><h3 id="range-函数"><a href="#range-函数" class="headerlink" title="range()函数"></a>range()函数</h3><ul><li>用于生成一个整数数列</li><li>可迭代对象</li></ul><p>语法：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">range</span>(start, stop)</span><br></pre></td></tr></table></figure><ul><li>start表示这一些列数字中的第一个数字；stop-1表示这一系列数字中的最后一个数字。</li><li>[ start ,stop) ：区间范围</li></ul><p>三种方式</p><ol><li><p>range(stop)</p><p>创建一个（0,stop)之间的整数序列,步长为1</p></li><li><p>range(start,stop)</p><p>创建一个（start,stop)之间的整数序列，步长为1</p></li><li><p>range(start,stop,step)</p><p>创建一个[start,stop)之间的整数序列,步长为step</p></li></ol><blockquote><p><code>range(101)</code>：可以用来产生0到100范围的整数，需要注意的是取不到101。</p><p><code>range(1, 101)</code>：可以用来产生1到100范围的整数，相当于&#x3D;&#x3D;前面是闭区间&#x3D;&#x3D;后面是开区间。</p><p><code>range(1, 101, 2)</code>：可以用来产生1到100的奇数，其中2是步长，即每次数值递增的值。</p><p><code>range(100, 0, -2)</code>：可以用来产生100到1的偶数，其中-2是步长，即每次数字递减的值。</p></blockquote><h3 id="1-for-in"><a href="#1-for-in" class="headerlink" title="1  for -in"></a>1  for -in</h3><ul><li>明确知道了循环的次数</li></ul><p>1~100 求和</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">101</span>):  <span class="comment"># range(1,101)</span></span><br><span class="line">    <span class="built_in">sum</span> += x</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&#x27;python&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="comment"># 将字符串的每个字母遍历输出    </span></span><br></pre></td></tr></table></figure><p>不需要使用到变量，则使用下划线代替</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;人生苦短，我一直在学习&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="2-while"><a href="#2-while" class="headerlink" title="2 while"></a>2 while</h3><ul><li>不知道循环次数</li></ul><p>猜数字游戏：猜数字游戏的规则是：计算机出一个1到100之间的随机数，玩家输入自己猜的数字，计算机给出对应的提示信息（大一点、小一点或猜对了），如果玩家猜中了数字，计算机提示用户一共猜了多少次，游戏结束，否则游戏继续。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># AUTHOR: Kcs</span></span><br><span class="line"><span class="comment"># TIME  : 2022/7/8 18:54</span></span><br><span class="line"><span class="keyword">import</span> random  <span class="comment"># 导入随机数的</span></span><br><span class="line">answer = random.randint(<span class="number">1</span>, <span class="number">101</span>)  <span class="comment"># 随机数范围</span></span><br><span class="line"></span><br><span class="line">counter = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    counter += <span class="number">1</span></span><br><span class="line">    number = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入100以内的数字：&#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> number &lt;answer:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;数字小了&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> number &gt;answer:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;数字大了&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;恭喜你猜对了，奖励你一个欧里给&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你总共猜了%d次&#x27;</span>% counter)</span><br><span class="line"><span class="keyword">if</span> counter &gt; <span class="number">5</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;智商底下，请先补充智商&#x27;</span>)</span><br></pre></td></tr></table></figure><p>九九乘法表：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># AUTHOR: Kcs</span></span><br><span class="line"><span class="comment"># TIME  : 2022/7/8 19:04</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, i + <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%d*%d = %d&#x27;</span> % (i, j, i * j), end=<span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：输入一个正整数判断是不是素数。"><a href="#练习1：输入一个正整数判断是不是素数。" class="headerlink" title="练习1：输入一个正整数判断是不是素数。"></a>练习1：输入一个正整数判断是不是素数。</h4><blockquote><p><strong>提示</strong>：素数指的是只能被1和自身整除的大于1的整数。</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># AUTHOR: Kcs</span></span><br><span class="line"><span class="comment"># TIME  : 2022/7/8 19:36</span></span><br><span class="line"><span class="comment"># 判断素数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"></span><br><span class="line">num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入一个正整数：&#x27;</span>))</span><br><span class="line">end = <span class="built_in">int</span>(sqrt(num))</span><br><span class="line">flag = <span class="literal">True</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, end + <span class="number">1</span>):  <span class="comment"># 判断是否有其他的因数</span></span><br><span class="line">    <span class="keyword">if</span> num % x == <span class="number">0</span>:</span><br><span class="line">        flag = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> flag <span class="keyword">and</span> num != <span class="number">1</span>:   <span class="comment">#没有其他的因数并且不是1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%d是素数&#x27;</span> % num)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%d不是素数&#x27;</span> % num)</span><br></pre></td></tr></table></figure><h4 id="练习2：输入两个正整数，计算它们的最大公约数和最小公倍数。"><a href="#练习2：输入两个正整数，计算它们的最大公约数和最小公倍数。" class="headerlink" title="练习2：输入两个正整数，计算它们的最大公约数和最小公倍数。"></a>练习2：输入两个正整数，计算它们的最大公约数和最小公倍数。</h4><blockquote><p><strong>提示</strong>：两个数的最大公约数是两个数的公共因子中最大的那个数；两个数的最小公倍数则是能够同时被两个数整除的最小的那个数。</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># AUTHOR: Kcs</span></span><br><span class="line"><span class="comment"># TIME  : 2022/7/8 19:45</span></span><br><span class="line">x = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;x=&#x27;</span>))</span><br><span class="line">y = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;y=&#x27;</span>))</span><br><span class="line"><span class="comment"># 如果x大于y就交换x和y的值</span></span><br><span class="line"><span class="keyword">if</span> x &gt; y:</span><br><span class="line">    <span class="comment"># 交换数值</span></span><br><span class="line">    x, y = y, x</span><br><span class="line"><span class="comment"># 两个数中较小的数开始递减的循环</span></span><br><span class="line"><span class="keyword">for</span> fac <span class="keyword">in</span> <span class="built_in">range</span>(x, <span class="number">0</span>, -<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span> x % fac == <span class="number">0</span> <span class="keyword">and</span> y % fac == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%d和%d的最大公约数是%d&#x27;</span> % (x, y, fac))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%d和%d的最小公倍数是%d&#x27;</span> % (x, y, x * y // fac))</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="构造程序逻辑"><a href="#构造程序逻辑" class="headerlink" title="构造程序逻辑"></a>构造程序逻辑</h2><ol><li><p>水仙花数：</p><p>水仙花数也被称为超完全数字不变数、自恋数、自幂数、阿姆斯特朗数，它是一个3位数，该数字每个位上数字的立方之和正好等于它本身，例如：$1^3 + 5^3+ 3^3&#x3D;153$。</p></li></ol><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>, <span class="number">1000</span>):</span><br><span class="line">    low = num % <span class="number">10</span></span><br><span class="line">    mid = num // <span class="number">10</span> % <span class="number">10</span></span><br><span class="line">    high = num // <span class="number">100</span></span><br><span class="line">    <span class="keyword">if</span> num == low ** <span class="number">3</span> + mid ** <span class="number">3</span> + high ** <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">print</span>(num)</span><br></pre></td></tr></table></figure><ol start="2"><li><p>反转正整数</p><p>将12345变成54321</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;num = &#x27;</span>))</span><br><span class="line">reversed_num = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> num &gt; <span class="number">0</span>:</span><br><span class="line">    reversed_num = reversed_num * <span class="number">10</span> + num % <span class="number">10</span></span><br><span class="line">    num //= <span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(reversed_num)</span><br></pre></td></tr></table></figure></li><li><p>生成<strong>斐波那契数列</strong>的前20个数。</p><p>斐波那契数列的特点是数列的前两个数都是1，从第三个数开始，每个数都是它前面两个数的和，形如：1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, …</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">0</span></span><br><span class="line">b = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    a, b = b, a + b</span><br><span class="line">    <span class="built_in">print</span>(a, end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>百钱百鸡</strong>问题。</p><p>公鸡5元一只，母鸡3元一只，小鸡1元三只，用100块钱买一百只鸡，问公鸡、母鸡、小鸡各有多少只？</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">1只公鸡5元 1只母鸡3元 3只小鸡1元 用100元买100只鸡</span></span><br><span class="line"><span class="string">问公鸡 母鸡 小鸡各有多少只</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">20</span>): <span class="comment"># 5元的张数</span></span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">33</span>): <span class="comment"># 3元的张数</span></span><br><span class="line">        z = <span class="number">100</span> - x - y  <span class="comment"># 1元的张数</span></span><br><span class="line">        <span class="keyword">if</span> <span class="number">5</span> * x + <span class="number">3</span> * y + z / <span class="number">3</span> == <span class="number">100</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;公鸡: %d只, 母鸡: %d只, 小鸡: %d只&#x27;</span> % (x, y, z))</span><br></pre></td></tr></table></figure></li><li><p>找出10000以内的<strong>完美数</strong>。</p><p>完美数又称为完全数或完备数，它的所有的真因子（即除了自身以外的因子）的和（即因子函数）恰好等于它本身。例如：6（$6&#x3D;1+2+3$）和28（$28&#x3D;1+2+4+7+14$）就是完美数。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">10000</span>):</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> factor <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">int</span>(math.sqrt(num)) + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> num % factor == <span class="number">0</span>:</span><br><span class="line">            result += factor</span><br><span class="line">            <span class="keyword">if</span> factor &gt; <span class="number">1</span> <span class="keyword">and</span> num // factor != factor:</span><br><span class="line">                result += num // factor</span><br><span class="line">    <span class="keyword">if</span> result == num:</span><br><span class="line">        <span class="built_in">print</span>(num)</span><br></pre></td></tr></table></figure></li><li><p>输出<strong>100以内所有的素数</strong>。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">100</span>):</span><br><span class="line">    is_prime = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> factor <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">int</span>(math.sqrt(num)) + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> num % factor == <span class="number">0</span>:</span><br><span class="line">            is_prime = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> is_prime:</span><br><span class="line">        <span class="built_in">print</span>(num, end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-9-函数和模块"><a href="#2-9-函数和模块" class="headerlink" title="2.9 函数和模块"></a>2.9 函数和模块</h2><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>函数创建：</p><ul><li><p>使用 def  关键字</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">函数名</span>(<span class="params">参数</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">n</span>):</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">*s</span>):<span class="comment">#*表示s为可变参数    </span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在参数名前面的*表示args是一个可变参数  将传入的参数相加</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">*args</span>):</span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> val <span class="keyword">in</span> args:</span><br><span class="line">        total += val</span><br><span class="line">    <span class="keyword">return</span> total</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在调用add函数时可以传入0个或多个参数  </span></span><br><span class="line"><span class="built_in">print</span>(add())</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">1</span>, <span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>))</span><br></pre></td></tr></table></figure></li></ul><h4 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h4><ul><li>递归调用与终止条件</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 递归求阶乘</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fac</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> n * fac(n - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;阶乘是%d&quot;</span> %  fac(<span class="number">4</span>))</span><br></pre></td></tr></table></figure><p>斐波那契数列</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#斐波那契数列</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fac</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">1</span> <span class="keyword">or</span> n==<span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> fac(n-<span class="number">1</span>) + fac(n-<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(fac(<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出前20个数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">21</span>):</span><br><span class="line">    <span class="built_in">print</span>(fac(i),end=<span class="string">&quot; &quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3><blockquote><p>每一个python文件就是一个模块，通过<strong>import</strong> 导入指定的模块到python文件来 ，避免了函数名称冲突，也清晰知道了调用的函数来自哪里。</p></blockquote><h4 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h4><p>1 <strong>import</strong> 语句</p><ul><li><p>调用模块中的函数格式：</p><blockquote><p>模块名. 函数名</p></blockquote></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> module1[, module2[,... moduleN]]</span><br></pre></td></tr></table></figure><p>例如调用math</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="comment"># 调用math中的函数</span></span><br><span class="line">math.<span class="built_in">abs</span>()</span><br></pre></td></tr></table></figure><p>2 <strong>from</strong>…<strong>import</strong> 语句</p><p>语法格式：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> modname <span class="keyword">import</span> name1[, name2[, ... nameN]]</span><br></pre></td></tr></table></figure><ul><li>modname：模块名</li><li>name1：函数名</li></ul><p>eg：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 要导入模块 fib 的 fibonacci 函数</span></span><br><span class="line"><span class="keyword">from</span> fib <span class="keyword">import</span> fibonacci</span><br></pre></td></tr></table></figure><h4 id="from…import-语句-（少使用）"><a href="#from…import-语句-（少使用）" class="headerlink" title="from…import* 语句 （少使用）"></a>from…import* 语句 （少使用）</h4><blockquote><p>把一个模块的所有内容全都导入到当前的命名空间</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># from modname import *</span></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><p><code>module1.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello, world!&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>module2.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;goodbye, world!&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>test.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> module1 <span class="keyword">import</span> foo</span><br><span class="line">foo()</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> module2 <span class="keyword">import</span> foo</span><br><span class="line">foo()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;=========二==========&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> module1 <span class="keyword">as</span> m1</span><br><span class="line"><span class="keyword">import</span> module2 <span class="keyword">as</span> m2</span><br><span class="line"></span><br><span class="line">m1.fc()</span><br><span class="line">m2.fc()</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> module3</span><br></pre></td></tr></table></figure><p><code>module3.py</code> </p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bar</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># __name__是Python中一个隐含的变量它代表了模块的名字</span></span><br><span class="line"><span class="comment"># 只有被Python解释器直接执行的模块的名字才是__main__</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;call foo()&#x27;</span>)</span><br><span class="line">    foo()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;call bar()&#x27;</span>)</span><br><span class="line">    bar()</span><br></pre></td></tr></table></figure><h4 id="内置模块"><a href="#内置模块" class="headerlink" title="内置模块"></a>内置模块</h4><img src="http://picgo.kongshier.top/2767/image-20220711151506986.png" alt="image-20220711151506986" style="zoom: 80%;" /><h4 id="第三方的模块"><a href="#第三方的模块" class="headerlink" title="第三方的模块"></a>第三方的模块</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install 模块名  <span class="comment">#安装第三方模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> 模块名 <span class="comment"># 引用第三方模块名</span></span><br></pre></td></tr></table></figure><h3 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h3><p>减少对全局变量的使用，则会减少对cpu的占用时间，降低耦合度</p><ul><li>局部变量：定义在函数内 </li><li>全局变量：不定义在任何一个函数内  <strong>globa</strong> 声明全局变量</li><li>嵌套作用域：<strong>nonlocal</strong>声明变量</li></ul><h4 id="主程序运行"><a href="#主程序运行" class="headerlink" title="主程序运行"></a>主程序运行</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ =<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(add(a,b))</span><br></pre></td></tr></table></figure><p>主程序：</p><p>add1.py</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">a,b</span>):</span><br><span class="line">    <span class="keyword">return</span> a+b</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ =<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(add(<span class="number">1</span>,<span class="number">2</span>))</span><br></pre></td></tr></table></figure><p>test.py</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> add1</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">10</span>,<span class="number">20</span>))</span><br><span class="line"><span class="comment"># 这样才不会把主程序中的print给显示到控制台上</span></span><br></pre></td></tr></table></figure><h3 id="python-的-包"><a href="#python-的-包" class="headerlink" title="python 的 包"></a>python 的 包</h3><ul><li>分层次的目录结构，功能相似的模块放在一个包下</li><li>规范代码</li><li>避免模块代码冲突</li></ul><blockquote><p>包含 有 <code>__init__.py</code> 的为：包</p></blockquote><p>导包：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> 包名.模块名</span><br></pre></td></tr></table></figure><h2 id="2-10-字符串"><a href="#2-10-字符串" class="headerlink" title="2.10 字符串"></a>2.10 字符串</h2><blockquote><p>在字符串前面使用一个 r 就会显示出字符串的原本内容 \ 不会出现转义</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">r&#x27;\&#x27;hello, world!\&#x27;&#x27;</span></span><br><span class="line">s2 = <span class="string">r&#x27;\n\\hello, world!\\\n&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(s1, s2, end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="对字符串的操作"><a href="#对字符串的操作" class="headerlink" title="对字符串的操作"></a>对字符串的操作</h3><ol><li><p><code>+</code>：拼接字符</p></li><li><p><code>*</code> ：重复字符串内容</p></li><li><p>in \ not in ：是否包含字符串（成员运算）</p></li><li><p><input disabled="" type="checkbox"> \ [ n: m] [n开始：m结束）：切片运算，截取字符串 </p></li><li><p>&#x3D;&#x3D;用单引号、双引号、三个单引号创建字符串都只有一个地址，id 都一样&#x3D;&#x3D; ：字符串驻留机制</p><ul><li>&#x3D;&#x3D; ：比较内容</li><li>is：比较地址</li><li>字符串的长度为0或1时</li><li>符合标识符的字符串</li><li>字符串只在编译时进行驻留，而非运行时</li><li>[-5.256]之间的整数数字</li></ul><p>查询方法</p><img src="http://picgo.kongshier.top/2767/image-20220710102600564.png" alt="image-20220710102600564" style="zoom:80%;" /><p>大小写转换</p><p>!(Python基础.assets&#x2F;image-20220710104156865.png)</p><p><img src="http://picgo.kongshier.top/2767/image-20220710104256045.png" alt="image-20220710104256045"></p><p>字符串内容对齐</p><p><img src="http://picgo.kongshier.top/2767/image-20220710105916871.png" alt="image-20220710105916871"></p><p>切割字符串</p><p><img src="http://picgo.kongshier.top/2767/image-20220710114301787.png" alt="image-20220710114301787"></p></li></ol><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">&#x27;hello, world!&#x27;</span></span><br><span class="line"><span class="comment"># 通过内置函数len计算字符串的长度</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(str1)) <span class="comment"># 13</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获得字符串首字母大写</span></span><br><span class="line"><span class="built_in">print</span>(str1.capitalize()) <span class="comment"># Hello, world!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获得字符串每个单词首字母大写</span></span><br><span class="line"><span class="built_in">print</span>(str1.title()) <span class="comment"># Hello, World!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获得字符串变大写后</span></span><br><span class="line"><span class="built_in">print</span>(str1.upper()) <span class="comment"># HELLO, WORLD!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从字符串中查找子串所在位置</span></span><br><span class="line"><span class="built_in">print</span>(str1.find(<span class="string">&#x27;or&#x27;</span>)) <span class="comment"># 8</span></span><br><span class="line"><span class="built_in">print</span>(str1.find(<span class="string">&#x27;shit&#x27;</span>)) <span class="comment"># -1</span></span><br><span class="line"><span class="comment"># 与find类似但找不到子串时会引发异常</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(str1.index(&#x27;or&#x27;))</span></span><br><span class="line"><span class="comment"># print(str1.index(&#x27;shit&#x27;))</span></span><br><span class="line"><span class="comment"># 检查字符串是否以指定的字符串开头</span></span><br><span class="line"><span class="built_in">print</span>(str1.startswith(<span class="string">&#x27;He&#x27;</span>)) <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(str1.startswith(<span class="string">&#x27;hel&#x27;</span>)) <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查字符串是否以指定的字符串结尾</span></span><br><span class="line"><span class="built_in">print</span>(str1.endswith(<span class="string">&#x27;!&#x27;</span>)) <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将字符串以指定的宽度 居中 并在两侧填充指定的字符</span></span><br><span class="line"><span class="built_in">print</span>(str1.center(<span class="number">50</span>, <span class="string">&#x27;*&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将字符串以指定的宽度 左对齐 并在两侧填充指定的字符</span></span><br><span class="line"><span class="built_in">print</span>(str1.ljust(<span class="number">50</span>, <span class="string">&#x27;*&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将字符串以指定的宽度 靠右放置 左侧填充指定的字符</span></span><br><span class="line"><span class="built_in">print</span>(str1.rjust(<span class="number">50</span>, <span class="string">&#x27; &#x27;</span>))</span><br><span class="line">str2 = <span class="string">&#x27;abc123456&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查字符串是否由数字构成</span></span><br><span class="line"><span class="built_in">print</span>(str2.isdigit())  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查字符串是否以字母构成</span></span><br><span class="line"><span class="built_in">print</span>(str2.isalpha())  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查字符串是否以数字和字母构成</span></span><br><span class="line"><span class="built_in">print</span>(str2.isalnum())  <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">str3 = <span class="string">&#x27;  jackfrued@126.com &#x27;</span></span><br><span class="line"><span class="built_in">print</span>(str3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获得字符串修剪左右两侧空格之后的拷贝</span></span><br><span class="line"><span class="built_in">print</span>(str3.strip())</span><br></pre></td></tr></table></figure><h3 id="格式化字符串"><a href="#格式化字符串" class="headerlink" title="格式化字符串"></a>格式化字符串</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式化字符串</span></span><br><span class="line">a, b = <span class="number">10</span>, <span class="number">45</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;a&#125;</span>*<span class="subst">&#123;b&#125;</span> = <span class="subst">&#123;a * b&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="列表-list"><a href="#列表-list" class="headerlink" title="列表  list[ ]"></a>列表  list[ ]</h2><ul><li>结构化的、非标量类型、有序序列</li><li>类似数组</li></ul><p>创建列表：</p><ol><li><p>使用[ ]</p></li><li><p>使用<strong>list</strong>()</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="string">&#x27;nihao&#x27;</span>,<span class="string">&#x27;buhoa&#x27;</span>,<span class="number">123</span>]</span><br><span class="line">lst2 = <span class="built_in">list</span>([<span class="string">&#x27;nihao&#x27;</span>,<span class="string">&#x27;buhoa&#x27;</span>,<span class="number">123</span>])</span><br></pre></td></tr></table></figure></li></ol><p>特点：</p><ul><li>有序排序</li><li>具有索引映射</li><li>可以存储重复数据</li><li>元素数据类型混存</li><li>根据需求动态分配和回收内存</li></ul><p>列表的一些列操作</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="string">&#x27;nihao&#x27;</span>,<span class="string">&#x27;buhoa&#x27;</span>,<span class="number">123</span>]</span><br><span class="line">lst2 = <span class="built_in">list</span>([<span class="string">&#x27;nihao&#x27;</span>,<span class="string">&#x27;buhoa&#x27;</span>,<span class="number">123</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#索引地址</span></span><br><span class="line"><span class="built_in">print</span>(lst.index(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">list1 = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">100</span>]</span><br><span class="line"><span class="built_in">print</span>(list1) <span class="comment"># [1, 3, 5, 7, 100]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 乘号表示列表元素的重复</span></span><br><span class="line">list2 = [<span class="string">&#x27;hello&#x27;</span>] * <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(list2) <span class="comment"># [&#x27;hello&#x27;, &#x27;hello&#x27;, &#x27;hello&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算列表长度(元素个数)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(list1)) <span class="comment"># 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下标(索引)运算</span></span><br><span class="line"><span class="built_in">print</span>(list1[<span class="number">0</span>]) <span class="comment"># 1</span></span><br><span class="line"><span class="built_in">print</span>(list1[<span class="number">4</span>]) <span class="comment"># 100</span></span><br><span class="line"><span class="comment"># print(list1[5])  # IndexError: list index out of range</span></span><br><span class="line"><span class="built_in">print</span>(list1[-<span class="number">1</span>]) <span class="comment"># 100</span></span><br><span class="line"><span class="built_in">print</span>(list1[-<span class="number">3</span>]) <span class="comment"># 5</span></span><br><span class="line">list1[<span class="number">2</span>] = <span class="number">300</span></span><br><span class="line"><span class="built_in">print</span>(list1) <span class="comment"># [1, 3, 300, 7, 100]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切片运算</span></span><br><span class="line"><span class="built_in">print</span>(list1[<span class="number">1</span>:<span class="number">4</span>:<span class="number">1</span>])<span class="comment">#从索引1开始，4结束(不包括4)，步长为1，步长不写默认为1</span></span><br><span class="line"><span class="built_in">print</span>(list1[:<span class="number">2</span>:<span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(list1[<span class="number">1</span>:<span class="number">4</span>:])</span><br><span class="line"><span class="built_in">print</span>(list1[<span class="number">1</span>:<span class="number">4</span>:<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># in \ not in</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">10</span> <span class="keyword">in</span> list1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;ks&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> list1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过循环用下标遍历列表元素</span></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(list1)):</span><br><span class="line">    <span class="built_in">print</span>(list1[index])</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 通过for循环遍历列表元素</span></span><br><span class="line"><span class="keyword">for</span> elem <span class="keyword">in</span> list1:</span><br><span class="line">    <span class="built_in">print</span>(elem)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 通过enumerate函数处理列表之后再遍历可以同时获得元素索引和值</span></span><br><span class="line"><span class="keyword">for</span> index, elem <span class="keyword">in</span> <span class="built_in">enumerate</span>(list1):</span><br><span class="line">    <span class="built_in">print</span>(index, elem)</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h4 id="列表的增删改操作"><a href="#列表的增删改操作" class="headerlink" title="列表的增删改操作"></a>列表的增删改操作</h4><ol><li><p>增：</p><ul><li><p>append：在末尾追加元素</p></li><li><p>extend：在末尾添加至少一个元素</p></li><li><p>insert：在列表任意位置插入一个元素</p></li><li><p>切片</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">100</span>]</span><br><span class="line">lst.append(<span class="number">50</span>)</span><br><span class="line">lst2 = [<span class="number">45</span>,<span class="number">51</span>,<span class="number">65</span>]</span><br><span class="line">lst.extend(lst2) [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">100</span>,<span class="number">45</span>,<span class="number">51</span>,<span class="number">65</span>]</span><br><span class="line">lst.append(lst2) <span class="comment">#  [1, 3, 5, 7, 100,[45,51,65]]</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>删</p><ul><li>remove()：删除一个元素，重复删除第一个元素</li><li>pop()：根据索引移除元素，不指定索引，则删除最后一个元素</li><li>clear() :清空列表的元素</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">100</span>]</span><br><span class="line"><span class="comment"># 先通过成员运算判断元素是否在列表中，如果存在就删除该元素</span></span><br><span class="line"><span class="keyword">if</span> <span class="number">3</span> <span class="keyword">in</span> list1:</span><br><span class="line">list1.remove(<span class="number">3</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="number">1234</span> <span class="keyword">in</span> list1:</span><br><span class="line">    list1.remove(<span class="number">1234</span>)</span><br><span class="line"><span class="built_in">print</span>(list1) <span class="comment"># [1, 400, 5, 7, 100, 200, 1000, 2000]</span></span><br><span class="line"><span class="comment"># 从指定的位置删除元素</span></span><br><span class="line">list1.pop(<span class="number">0</span>)</span><br><span class="line">list1.pop(<span class="built_in">len</span>(list1) - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(list1) <span class="comment"># [400, 5, 7, 100, 200, 1000]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#切片 不产生新对象</span></span><br><span class="line">list1[<span class="number">1</span>:<span class="number">3</span>] = []</span><br><span class="line"><span class="built_in">print</span>(list1)</span><br><span class="line"><span class="comment"># 清空列表元素</span></span><br><span class="line">list1.clear()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除列表</span></span><br><span class="line"><span class="keyword">del</span> list1</span><br></pre></td></tr></table></figure></li><li><p>改</p><ul><li>指定索引修改元素</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">100</span>]</span><br><span class="line">list1[<span class="number">1</span>] = <span class="number">55</span></span><br><span class="line"><span class="built_in">print</span>(list1)</span><br></pre></td></tr></table></figure></li><li><p>排序</p><ul><li><p>调用sort(),降序reverse  &#x3D; True  ，升序则是False</p></li><li><p>调用内置函数sorted()函数，会产生一个新的列表对象</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>, <span class="number">7</span>,<span class="number">3</span>, <span class="number">100</span>,<span class="number">5</span>,<span class="number">45</span>]</span><br><span class="line">desc_lst = <span class="built_in">sorted</span>(list1,reverse = <span class="literal">True</span>) <span class="comment"># 降序</span></span><br><span class="line"><span class="built_in">print</span>(list1)</span><br><span class="line"></span><br><span class="line">list1 = [<span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;zoo&#x27;</span>, <span class="string">&#x27;internationalization&#x27;</span>, <span class="string">&#x27;blueberry&#x27;</span>]</span><br><span class="line">list2 = <span class="built_in">sorted</span>(list1)</span><br><span class="line"><span class="comment"># sorted函数返回列表排序后的拷贝不会修改传入的列表</span></span><br><span class="line"><span class="comment"># 函数的设计就应该像sorted函数一样尽可能不产生副作用</span></span><br><span class="line">list3 = <span class="built_in">sorted</span>(list1, reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 通过key关键字参数指定根据字符串长度进行排序而不是默认的字母表顺序</span></span><br><span class="line">list4 = <span class="built_in">sorted</span>(list1, key=<span class="built_in">len</span>)</span><br><span class="line"><span class="built_in">print</span>(list1)</span><br><span class="line"><span class="built_in">print</span>(list2)</span><br><span class="line"><span class="built_in">print</span>(list3)</span><br><span class="line"><span class="built_in">print</span>(list4)</span><br><span class="line"><span class="comment"># 给列表对象发出排序消息直接在列表对象上进行排序</span></span><br><span class="line">list1.sort(reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(list1)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h4 id="列表生成式"><a href="#列表生成式" class="headerlink" title="列表生成式"></a>列表生成式</h4><ul><li>必须具有一定的规则</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">lst = [ i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>)]</span><br><span class="line"><span class="built_in">print</span>(lst)  <span class="comment">#[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span></span><br><span class="line"></span><br><span class="line">lst1 = [ i*i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>)]</span><br><span class="line"><span class="built_in">print</span>(lst1) <span class="comment"># [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</span></span><br><span class="line"></span><br><span class="line">lst12= [ i*<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">6</span>)]</span><br><span class="line"><span class="built_in">print</span>(lst12) <span class="comment">#[2, 4, 6, 8, 10]</span></span><br></pre></td></tr></table></figure><ul><li>for 前面的 i * i 是：列表元素的表达式</li></ul><h2 id="元组-tuple"><a href="#元组-tuple" class="headerlink" title="元组 tuple ( )"></a>元组 tuple ( )</h2><ul><li>元素不可以修改</li><li>没有对元素的添加、删除、修改操作，当然如果一个方法要返回多个值，使用元组也是不错的选择。</li><li>元组在创建时间和占用的空间上面都优于列表</li></ul><h4 id="创建元组"><a href="#创建元组" class="headerlink" title="创建元组"></a>创建元组</h4><ul><li>直接小括号</li><li>使用内置函数tuple()</li><li>一个元组的元素要使用逗号隔开</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义元组</span></span><br><span class="line">t = (<span class="string">&#x27;小明&#x27;</span>, <span class="number">48</span>, <span class="literal">True</span>, <span class="string">&#x27;广西&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(t)</span><br><span class="line"><span class="comment">#内置函数创建元组</span></span><br><span class="line">t = <span class="built_in">tuple</span>((<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(t)</span><br><span class="line"></span><br><span class="line">t1 = <span class="built_in">tuple</span>(<span class="string">&quot;pity&quot;</span>,) <span class="comment"># 必须加上逗号和小括号</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取元组中的元素</span></span><br><span class="line"><span class="built_in">print</span>(t[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(t[<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历元组中的值</span></span><br><span class="line"><span class="keyword">for</span> member <span class="keyword">in</span> t:</span><br><span class="line">    <span class="built_in">print</span>(member)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 重新给元组赋值</span></span><br><span class="line"><span class="comment"># t[0] = &#x27;王大锤&#x27;  # TypeError</span></span><br><span class="line"><span class="comment"># 变量t重新引用了新的元组原来的元组将被垃圾回收</span></span><br><span class="line"></span><br><span class="line">t = (<span class="string">&#x27;王大锤&#x27;</span>, <span class="number">20</span>, <span class="literal">True</span>, <span class="string">&#x27;云南昆明&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(t)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将元组转换成列表</span></span><br><span class="line">person = <span class="built_in">list</span>(t)</span><br><span class="line"><span class="built_in">print</span>(person)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表是可以修改它的元素的</span></span><br><span class="line">person[<span class="number">0</span>] = <span class="string">&#x27;李小龙&#x27;</span></span><br><span class="line">person[<span class="number">1</span>] = <span class="number">25</span></span><br><span class="line"><span class="built_in">print</span>(person)</span><br></pre></td></tr></table></figure><h2 id="集合-set"><a href="#集合-set" class="headerlink" title="集合 { } set( )"></a>集合 { } set( )</h2><ul><li>可变序列</li><li>不存在重复元素</li><li>无序的</li></ul><p>创建集合</p><ol><li>使用{}</li><li>使用内置函数 set()</li></ol><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建集合的字面量语法</span></span><br><span class="line">set1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(set1)  <span class="comment">#&#123;1, 2, 3&#125;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Length =&#x27;</span>, <span class="built_in">len</span>(set1))  <span class="comment">#Length = 3</span></span><br><span class="line"><span class="comment"># 创建集合的构造器语法</span></span><br><span class="line">set2 = <span class="built_in">set</span>(<span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>))   <span class="comment"># 1~9 的数</span></span><br><span class="line">set3 = <span class="built_in">set</span>((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>)) </span><br><span class="line"><span class="built_in">print</span>(set2, set3) <span class="comment">#&#123;1, 2, 3, 4, 5, 6, 7, 8, 9&#125; &#123;1, 2, 3&#125;</span></span><br><span class="line"><span class="comment"># 创建集合的推导式语法(推导式也可以用于推导集合)</span></span><br><span class="line">set4 = &#123;num <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>) <span class="keyword">if</span> num % <span class="number">3</span> == <span class="number">0</span> <span class="keyword">or</span> num % <span class="number">5</span> == <span class="number">0</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(set4) </span><br><span class="line"><span class="comment">#空集合</span></span><br><span class="line">s = <span class="built_in">set</span>()</span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure><p>集合的操作</p><ol><li>in \ not in：判断集合操作</li><li>新增操作<ul><li>add()：添加一个元素</li><li>update()：至少添加一个元素</li></ul></li><li>删除<ul><li>remove()：删除一个指定元素，不存在抛出异常</li><li>discard()：删除指定元素</li><li>pop()：删除任意一个元素</li><li>clrear()：清空集合</li></ul></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">set1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">10</span> <span class="keyword">in</span> set1)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">10</span> <span class="keyword">not</span> <span class="keyword">in</span> set1)</span><br><span class="line"><span class="comment">#新增</span></span><br><span class="line">set1.add(<span class="number">4</span>)</span><br><span class="line">set1.add(<span class="number">50</span>)</span><br><span class="line">set2.update([<span class="number">11</span>, <span class="number">12</span>])</span><br><span class="line">set2.update((<span class="number">12</span>,<span class="number">45</span>,<span class="number">55</span>))</span><br><span class="line"><span class="comment">#删除</span></span><br><span class="line">set2.discard(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="number">4</span> <span class="keyword">in</span> set2:</span><br><span class="line">    set2.remove(<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(set1, set2)</span><br><span class="line"><span class="built_in">print</span>(set3.pop()) <span class="comment"># pop 没有参数的，每次删除最后一个元素</span></span><br><span class="line"><span class="built_in">print</span>(set3)</span><br></pre></td></tr></table></figure><p>集合的运算</p><ul><li>成员</li><li>交集</li><li>并集</li><li>差集</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">set1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>&#125;</span><br><span class="line">set2 = <span class="built_in">set</span>(<span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>))  </span><br><span class="line">set3 = <span class="built_in">set</span>((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>)) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 交集</span></span><br><span class="line"><span class="built_in">print</span>(set1 &amp; set2)</span><br><span class="line"><span class="comment"># print(set1.intersection(set2))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#并集</span></span><br><span class="line"><span class="built_in">print</span>(set1 | set2)</span><br><span class="line"><span class="comment"># print(set1.union(set2))</span></span><br><span class="line"><span class="comment">#差集</span></span><br><span class="line"><span class="built_in">print</span>(set1 - set2)</span><br><span class="line"><span class="comment"># print(set1.difference(set2))</span></span><br><span class="line"><span class="comment">#对称差运</span></span><br><span class="line"><span class="built_in">print</span>(set1 ^ set2)</span><br><span class="line"><span class="comment"># print(set1.symmetric_difference(set2))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 子集</span></span><br><span class="line"><span class="built_in">print</span>(set2 &lt;= set1)</span><br><span class="line"><span class="comment"># print(set2.issubset(set1))</span></span><br><span class="line"><span class="built_in">print</span>(set3 &lt;= set1)</span><br><span class="line"><span class="comment"># print(set3.issubset(set1))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 超集</span></span><br><span class="line"><span class="built_in">print</span>(set1 &gt;= set2)</span><br><span class="line"><span class="comment"># print(set1.issuperset(set2))</span></span><br><span class="line"><span class="built_in">print</span>(set1 &gt;= set3)</span><br><span class="line"><span class="comment"># print(set1.issuperset(set3))</span></span><br></pre></td></tr></table></figure><h4 id="集合生成式"><a href="#集合生成式" class="headerlink" title="集合生成式"></a>集合生成式</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s1 = &#123; i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>)&#125;</span><br><span class="line"></span><br><span class="line">s2 = &#123; i*i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>)&#125;</span><br><span class="line"></span><br><span class="line">s3 = &#123; i *<span class="number">2</span> fro <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)&#125;  <span class="comment"># 生成1~4的平方</span></span><br><span class="line"><span class="built_in">print</span>(s3)</span><br></pre></td></tr></table></figure><h2 id="字典-dict"><a href="#字典-dict" class="headerlink" title="字典 { } dict( )"></a>字典 { } dict( )</h2><p>特点：</p><ul><li><p>键不可以重复，值可以重复</p></li><li><p>无序</p></li><li><p>key必须是不可变对象</p></li><li><p>可变容器模型</p></li><li><p>字典的每个元素都是由一个键和一个值组成的“&#x3D;&#x3D;键值对&#x3D;&#x3D;”，键和值通过冒号分开</p></li><li><p>使用内置函数dict()</p></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建字典的字面量语法</span></span><br><span class="line">scores = &#123;<span class="string">&#x27;小明&#x27;</span>: <span class="number">15</span>, <span class="string">&#x27;小张&#x27;</span>: <span class="number">17</span>, <span class="string">&#x27;小李&#x27;</span>: <span class="number">12</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(scores)</span><br><span class="line">d = <span class="built_in">dict</span>(name = <span class="string">&#x27;jack&#x27;</span>,age = <span class="number">18</span>)</span><br><span class="line"><span class="built_in">print</span>(d)</span><br><span class="line"><span class="comment"># 创建字典的构造器语法</span></span><br><span class="line">items1 = <span class="built_in">dict</span>(one=<span class="number">1</span>, two=<span class="number">2</span>, three=<span class="number">3</span>, four=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过zip函数将两个序列压成字典</span></span><br><span class="line">items2 = <span class="built_in">dict</span>(<span class="built_in">zip</span>([<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>], <span class="string">&#x27;123&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建字典的推导式语法</span></span><br><span class="line">items3 = &#123;num: num ** <span class="number">2</span> <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>)&#125;<span class="comment">#前一个num表示增量 后一个则是增量的平方</span></span><br><span class="line"><span class="built_in">print</span>(items1, items2, items3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过键可以获取字典中对应的值</span></span><br><span class="line"><span class="built_in">print</span>(scores[<span class="string">&#x27;小明&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(scores[<span class="string">&#x27;小李&#x27;</span>])  </span><br><span class="line"><span class="built_in">print</span>(scores[<span class="string">&#x27;小三&#x27;</span>])  <span class="comment">#KeyError  找不到报错</span></span><br><span class="line"><span class="comment"># get方法也是通过键获取对应的值但是可以设置默认值</span></span><br><span class="line"><span class="built_in">print</span>(scores.get(<span class="string">&#x27;小明&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(scores.get(<span class="string">&#x27;小三&#x27;</span>)) <span class="comment"># None 找不到显示none</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对字典中所有键值对进行遍历</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> scores:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;key&#125;</span>: <span class="subst">&#123;scores[key]&#125;</span>&#x27;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> scores:</span><br><span class="line">    <span class="built_in">print</span>(itmes.scores)    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 添加字典中的元素</span></span><br><span class="line">scores[<span class="string">&#x27;诸葛王朗&#x27;</span>] = <span class="number">71</span></span><br><span class="line"><span class="comment">#修改</span></span><br><span class="line">scores[<span class="string">&#x27;小张&#x27;</span>] = <span class="number">65</span></span><br><span class="line">scores.update(<span class="string">&#x27;冷面&#x27;</span>=<span class="number">67</span>, <span class="string">&#x27;方启鹤&#x27;</span>=<span class="number">85</span>)</span><br><span class="line"><span class="built_in">print</span>(scores)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用in \ not in 判断键是否在字典当中</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;小张&#x27;</span> <span class="keyword">in</span> scores:</span><br><span class="line">    <span class="built_in">print</span>(scores[<span class="string">&#x27;小张&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(scores.get(<span class="string">&#x27;小张&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除字典中的元素  从最后一个开始删除</span></span><br><span class="line"><span class="built_in">print</span>(scores.popitem())</span><br><span class="line"><span class="built_in">print</span>(scores.popitem())</span><br><span class="line"><span class="built_in">print</span>(scores.pop(<span class="string">&#x27;小明&#x27;</span>, <span class="number">100</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清空字典</span></span><br><span class="line">scores.clear()</span><br><span class="line"><span class="built_in">print</span>(scores)</span><br></pre></td></tr></table></figure><h4 id="获取字典视图"><a href="#获取字典视图" class="headerlink" title="获取字典视图"></a>获取字典视图</h4><ul><li>keys() ：获取字典中所有的key</li><li>values()：获取字典中所有的value</li><li>items()：获取字典中的所有键值对</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">scores = &#123;<span class="string">&#x27;小明&#x27;</span>: <span class="number">15</span>, <span class="string">&#x27;小张&#x27;</span>: <span class="number">17</span>, <span class="string">&#x27;小李&#x27;</span>: <span class="number">12</span>&#125;</span><br><span class="line"><span class="comment">#获取键</span></span><br><span class="line">keys=scores.keys()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(keys))</span><br><span class="line"><span class="comment">#获取值</span></span><br><span class="line">values=scores.values()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(values))</span><br><span class="line"><span class="comment">#获取键值对</span></span><br><span class="line">items=scores.items()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(items))</span><br></pre></td></tr></table></figure><h4 id="字典生成式"><a href="#字典生成式" class="headerlink" title="字典生成式"></a>字典生成式</h4><ul><li><p>内置函数zip()</p><p>可迭代的对象作为参数，将对象中对应的元素打包成一个元组，然后返回有这些元组组成的lie’b</p></li></ul><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><img src="http://picgo.kongshier.top/2767/image-20220710100955074.png" alt="image-20220710100955074" style="zoom:80%;" /><h2 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h2><h4 id="练习1：在屏幕上显示跑马灯文字"><a href="#练习1：在屏幕上显示跑马灯文字" class="headerlink" title="练习1：在屏幕上显示跑马灯文字"></a>练习1：在屏幕上显示跑马灯文字</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    content = <span class="string">&#x27;北京欢迎你为你开天辟地…………&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 清理屏幕上的输出</span></span><br><span class="line">        os.system(<span class="string">&#x27;cls&#x27;</span>)  <span class="comment"># os.system(&#x27;clear&#x27;)</span></span><br><span class="line">        <span class="built_in">print</span>(content)</span><br><span class="line">        <span class="comment"># 休眠200毫秒</span></span><br><span class="line">        time.sleep(<span class="number">0.2</span>)</span><br><span class="line">        content = content[<span class="number">1</span>:] + content[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h4 id="练习2：设计一个函数产生指定长度的验证码，验证码由大小写字母和数字构成。"><a href="#练习2：设计一个函数产生指定长度的验证码，验证码由大小写字母和数字构成。" class="headerlink" title="练习2：设计一个函数产生指定长度的验证码，验证码由大小写字母和数字构成。"></a>练习2：设计一个函数产生指定长度的验证码，验证码由大小写字母和数字构成。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_code</span>(<span class="params">code_len=<span class="number">4</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    生成指定长度的验证码</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param code_len: 验证码的长度(默认4个字符)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :return: 由大小写英文字母和数字构成的随机验证码</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    all_chars = <span class="string">&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class="line">    last_pos = <span class="built_in">len</span>(all_chars) - <span class="number">1</span></span><br><span class="line">    code = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(code_len):</span><br><span class="line">        index = random.randint(<span class="number">0</span>, last_pos)</span><br><span class="line">        code += all_chars[index]</span><br><span class="line">    <span class="keyword">return</span> code</span><br></pre></td></tr></table></figure><h4 id="练习3：设计一个函数返回给定文件名的后缀名。"><a href="#练习3：设计一个函数返回给定文件名的后缀名。" class="headerlink" title="练习3：设计一个函数返回给定文件名的后缀名。"></a>练习3：设计一个函数返回给定文件名的后缀名。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_suffix</span>(<span class="params">filename, has_dot=<span class="literal">False</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    获取文件名的后缀名</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param filename: 文件名</span></span><br><span class="line"><span class="string">    :param has_dot: 返回的后缀名是否需要带点</span></span><br><span class="line"><span class="string">    :return: 文件的后缀名</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    pos = filename.rfind(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt; pos &lt; <span class="built_in">len</span>(filename) - <span class="number">1</span>:</span><br><span class="line">        index = pos <span class="keyword">if</span> has_dot <span class="keyword">else</span> pos + <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> filename[index:]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="练习4：设计一个函数返回传入的列表中最大和第二大的元素的值。"><a href="#练习4：设计一个函数返回传入的列表中最大和第二大的元素的值。" class="headerlink" title="练习4：设计一个函数返回传入的列表中最大和第二大的元素的值。"></a>练习4：设计一个函数返回传入的列表中最大和第二大的元素的值。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">max2</span>(<span class="params">x</span>):</span><br><span class="line">    m1, m2 = (x[<span class="number">0</span>], x[<span class="number">1</span>]) <span class="keyword">if</span> x[<span class="number">0</span>] &gt; x[<span class="number">1</span>] <span class="keyword">else</span> (x[<span class="number">1</span>], x[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">len</span>(x)):</span><br><span class="line">        <span class="keyword">if</span> x[index] &gt; m1:</span><br><span class="line">            m2 = m1</span><br><span class="line">            m1 = x[index]</span><br><span class="line">        <span class="keyword">elif</span> x[index] &gt; m2:</span><br><span class="line">            m2 = x[index]</span><br><span class="line">    <span class="keyword">return</span> m1, m2</span><br></pre></td></tr></table></figure><h4 id="练习5：计算指定的年月日是这一年的第几天。"><a href="#练习5：计算指定的年月日是这一年的第几天。" class="headerlink" title="练习5：计算指定的年月日是这一年的第几天。"></a>练习5：计算指定的年月日是这一年的第几天。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">is_leap_year</span>(<span class="params">year</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    判断指定的年份是不是闰年</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param year: 年份</span></span><br><span class="line"><span class="string">    :return: 闰年返回True平年返回False</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> year % <span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> year % <span class="number">100</span> != <span class="number">0</span> <span class="keyword">or</span> year % <span class="number">400</span> == <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">which_day</span>(<span class="params">year, month, date</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    计算传入的日期是这一年的第几天</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param year: 年</span></span><br><span class="line"><span class="string">    :param month: 月</span></span><br><span class="line"><span class="string">    :param date: 日</span></span><br><span class="line"><span class="string">    :return: 第几天</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    days_of_month = [</span><br><span class="line">        [<span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>],</span><br><span class="line">        [<span class="number">31</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>]</span><br><span class="line">    ][is_leap_year(year)]</span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(month - <span class="number">1</span>):</span><br><span class="line">        total += days_of_month[index]</span><br><span class="line">    <span class="keyword">return</span> total + date</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="built_in">print</span>(which_day(<span class="number">1980</span>, <span class="number">11</span>, <span class="number">28</span>))</span><br><span class="line">    <span class="built_in">print</span>(which_day(<span class="number">1981</span>, <span class="number">12</span>, <span class="number">31</span>))</span><br><span class="line">    <span class="built_in">print</span>(which_day(<span class="number">2018</span>, <span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    <span class="built_in">print</span>(which_day(<span class="number">2016</span>, <span class="number">3</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h4 id="练习6：打印杨辉三角。"><a href="#练习6：打印杨辉三角。" class="headerlink" title="练习6：打印杨辉三角。"></a>练习6：打印<a href="https://zh.wikipedia.org/wiki/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E5%BD%A2">杨辉三角</a>。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;Number of rows: &#x27;</span>))</span><br><span class="line">    yh = [[]] * num</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(yh)):</span><br><span class="line">        yh[row] = [<span class="literal">None</span>] * (row + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> col <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(yh[row])):</span><br><span class="line">            <span class="keyword">if</span> col == <span class="number">0</span> <span class="keyword">or</span> col == row:</span><br><span class="line">                yh[row][col] = <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                yh[row][col] = yh[row - <span class="number">1</span>][col] + yh[row - <span class="number">1</span>][col - <span class="number">1</span>]</span><br><span class="line">            <span class="built_in">print</span>(yh[row][col], end=<span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><h4 id="案例1：双色球选号。"><a href="#案例1：双色球选号。" class="headerlink" title="案例1：双色球选号。"></a>案例1：双色球选号。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randrange, randint, sample</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">display</span>(<span class="params">balls</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    输出列表中的双色球号码</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> index, ball <span class="keyword">in</span> <span class="built_in">enumerate</span>(balls):</span><br><span class="line">        <span class="keyword">if</span> index == <span class="built_in">len</span>(balls) - <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;|&#x27;</span>, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%02d&#x27;</span> % ball, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">random_select</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    随机选择一组号码</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    red_balls = [x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">34</span>)]</span><br><span class="line">    selected_balls = []</span><br><span class="line">    selected_balls = sample(red_balls, <span class="number">6</span>)</span><br><span class="line">    selected_balls.sort()</span><br><span class="line">    selected_balls.append(randint(<span class="number">1</span>, <span class="number">16</span>))</span><br><span class="line">    <span class="keyword">return</span> selected_balls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    n = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;机选几注: &#x27;</span>))</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        display(random_select())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明：</strong> 上面使用random模块的sample函数来实现从列表中选择不重复的n个元素。</p></blockquote><h4 id="综合案例2：约瑟夫环问题。"><a href="#综合案例2：约瑟夫环问题。" class="headerlink" title="综合案例2：约瑟夫环问题。"></a>综合案例2：<a href="https://zh.wikipedia.org/wiki/%E7%BA%A6%E7%91%9F%E5%A4%AB%E6%96%AF%E9%97%AE%E9%A2%98">约瑟夫环问题</a>。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">《幸运的基督徒》</span></span><br><span class="line"><span class="string">有15个基督徒和15个非基督徒在海上遇险，为了能让一部分人活下来不得不将其中15个人扔到海里面去，有个人想了个办法就是大家围成一个圈，由某个人开始从1报数，报到9的人就扔到海里面，他后面的人接着从1开始报数，报到9的人继续扔到海里面，直到扔掉15个人。由于上帝的保佑，15个基督徒都幸免于难，问这些人最开始是怎么站的，哪些位置是基督徒哪些位置是非基督徒。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    persons = [<span class="literal">True</span>] * <span class="number">30</span></span><br><span class="line">    counter, index, number = <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> counter &lt; <span class="number">15</span>:</span><br><span class="line">        <span class="keyword">if</span> persons[index]:</span><br><span class="line">            number += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> number == <span class="number">9</span>:</span><br><span class="line">                persons[index] = <span class="literal">False</span></span><br><span class="line">                counter += <span class="number">1</span></span><br><span class="line">                number = <span class="number">0</span></span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line">        index %= <span class="number">30</span></span><br><span class="line">    <span class="keyword">for</span> person <span class="keyword">in</span> persons:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;基&#x27;</span> <span class="keyword">if</span> person <span class="keyword">else</span> <span class="string">&#x27;非&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="综合案例3：井字棋游戏。"><a href="#综合案例3：井字棋游戏。" class="headerlink" title="综合案例3：井字棋游戏。"></a>综合案例3：<a href="https://zh.wikipedia.org/wiki/%E4%BA%95%E5%AD%97%E6%A3%8B">井字棋</a>游戏。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">print_board</span>(<span class="params">board</span>):</span><br><span class="line">    <span class="built_in">print</span>(board[<span class="string">&#x27;TL&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;TM&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;TR&#x27;</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-+-+-&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(board[<span class="string">&#x27;ML&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;MM&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;MR&#x27;</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-+-+-&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(board[<span class="string">&#x27;BL&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;BM&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;BR&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    init_board = &#123;</span><br><span class="line">        <span class="string">&#x27;TL&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;TM&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;TR&#x27;</span>: <span class="string">&#x27; &#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;ML&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;MM&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;MR&#x27;</span>: <span class="string">&#x27; &#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;BL&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;BM&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;BR&#x27;</span>: <span class="string">&#x27; &#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    begin = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">while</span> begin:</span><br><span class="line">        curr_board = init_board.copy()</span><br><span class="line">        begin = <span class="literal">False</span></span><br><span class="line">        turn = <span class="string">&#x27;x&#x27;</span></span><br><span class="line">        counter = <span class="number">0</span></span><br><span class="line">        os.system(<span class="string">&#x27;clear&#x27;</span>)</span><br><span class="line">        print_board(curr_board)</span><br><span class="line">        <span class="keyword">while</span> counter &lt; <span class="number">9</span>:</span><br><span class="line">            move = <span class="built_in">input</span>(<span class="string">&#x27;轮到%s走棋, 请输入位置: &#x27;</span> % turn)</span><br><span class="line">            <span class="keyword">if</span> curr_board[move] == <span class="string">&#x27; &#x27;</span>:</span><br><span class="line">                counter += <span class="number">1</span></span><br><span class="line">                curr_board[move] = turn</span><br><span class="line">                <span class="keyword">if</span> turn == <span class="string">&#x27;x&#x27;</span>:</span><br><span class="line">                    turn = <span class="string">&#x27;o&#x27;</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    turn = <span class="string">&#x27;x&#x27;</span></span><br><span class="line">            os.system(<span class="string">&#x27;clear&#x27;</span>)</span><br><span class="line">            print_board(curr_board)</span><br><span class="line">        choice = <span class="built_in">input</span>(<span class="string">&#x27;再玩一局?(yes|no)&#x27;</span>)</span><br><span class="line">        begin = choice == <span class="string">&#x27;yes&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="2-11异常"><a href="#2-11异常" class="headerlink" title="2.11异常"></a>2.11异常</h2><h3 id="1-try-except"><a href="#1-try-except" class="headerlink" title="1 try except"></a>1 try except</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>: </span><br><span class="line">····(可能会出现异常的代码)</span><br><span class="line"><span class="keyword">except</span>: </span><br><span class="line">    ·····(异常处理)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入被除数：&quot;</span>))</span><br><span class="line">    b = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入除数：&quot;</span>))</span><br><span class="line">    c = a / b</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;结果:%0.2d&#x27;</span> %c)</span><br><span class="line"><span class="keyword">except</span> Exception:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;除数不可以为0&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;程序结束&#x27;</span>)   </span><br></pre></td></tr></table></figure><h4 id="多个except结构"><a href="#多个except结构" class="headerlink" title="多个except结构"></a>多个except结构</h4><ul><li>捕获异常顺序按照先子类后父类的顺序  BaseException是最大的异常处理</li></ul><h3 id="2-try-except-else结构"><a href="#2-try-except-else结构" class="headerlink" title="2 try except else结构"></a>2 try except else结构</h3><blockquote><p>如果try 中没有抛出异常，则执行else块，try抛出异常则执行except块</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入被除数：&quot;</span>))</span><br><span class="line">    b = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入除数：&quot;</span>))</span><br><span class="line">    c = a / b</span><br><span class="line"><span class="keyword">except</span> BaseException <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;除数不可以为&quot;</span>,e)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;结果:%0.2d&#x27;</span> % c)</span><br></pre></td></tr></table></figure><h3 id="3-try-except-else-finally结构"><a href="#3-try-except-else-finally结构" class="headerlink" title="3 try except else finally结构"></a>3 try except else finally结构</h3><blockquote><p>finally 无论是否发生异常都会执行，用作释放try申请的资源</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入被除数：&quot;</span>))</span><br><span class="line">    b = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入除数：&quot;</span>))</span><br><span class="line">    c = a / b</span><br><span class="line"><span class="keyword">except</span> BaseException <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;除数不可以为&quot;</span>,e)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;结果:%0.2d&#x27;</span> % c)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;照样执行finally！！&#x27;</span>)</span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/image-20220710123240197.png" alt="image-20220710123240197" style="zoom:80%;" /><h3 id="异常处理模块"><a href="#异常处理模块" class="headerlink" title="异常处理模块"></a>异常处理模块</h3><p>Traceback ：打印异常信息</p><h1 id="3-面向对象"><a href="#3-面向对象" class="headerlink" title="3 面向对象"></a>3 面向对象</h1><h2 id="3-1-类和对象"><a href="#3-1-类和对象" class="headerlink" title="3.1 类和对象"></a>3.1 类和对象</h2><ul><li>类是抽象的概念，而对象是具体的东西</li><li>对象都有属性和行为</li></ul><h3 id="3-1-1-类"><a href="#3-1-1-类" class="headerlink" title="3.1.1 类"></a>3.1.1 类</h3><ul><li><p>class 定义类</p></li><li><p>类属性 ：类里面的变量</p></li><li><p>实例方法：类里面的方法</p></li><li><p>静态方法：@staticmethod 注释的   &#x3D;&#x3D;使用类名直接访问&#x3D;&#x3D;</p></li><li><p>类方法：@classmethod 注释的  &#x3D;&#x3D;使用类名直接访问&#x3D;&#x3D;</p></li><li><p>内置方法：</p><ul><li>初始化方法  <code>__init__ </code> 方法，是对象的内置方法。</li><li><code>__del__</code> : 对象被从内存中销毁前，会被自动调用</li><li><code>__str__</code> : 返回对象的描述信息，print函数输出使用  ，&#x3D;&#x3D;必须返回一个字符串&#x3D;&#x3D;</li></ul></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    native = 广西</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):</span><br><span class="line">        self.name = name   <span class="comment"># 实体属性</span></span><br><span class="line">        self.age = age</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">study</span>(<span class="params">self,course_name</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s正在学习%s&#x27;</span>%(self.name,course_name))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">watch_movie</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.age &lt;<span class="number">5</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;只能看电影&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;随便看&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="3-1-2-对象"><a href="#3-1-2-对象" class="headerlink" title="3.1.2 对象"></a>3.1.2 对象</h3><ul><li>创建实例对象：实例名 &#x3D; 类名（）</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 创建学生对象并指定姓名和年龄</span></span><br><span class="line">    stu1 = Student(<span class="string">&#x27;小米&#x27;</span>, <span class="number">18</span>)</span><br><span class="line">    <span class="comment"># 给对象发study消息</span></span><br><span class="line">    stu1.study(<span class="string">&#x27;Python程序设计&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 给对象发watch_av消息</span></span><br><span class="line">    stu1.watch_movie()</span><br><span class="line">    </span><br><span class="line">    stu2 = Student(<span class="string">&#x27;小张&#x27;</span>, <span class="number">15</span>)</span><br><span class="line">    stu2.study(<span class="string">&#x27;思想品德&#x27;</span>)</span><br><span class="line">    stu2.watch_movie()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="3-1-3-访问可见性"><a href="#3-1-3-访问可见性" class="headerlink" title="3.1.3 访问可见性"></a>3.1.3 访问可见性</h3><blockquote><p>在Python中，属性和方法的访问权限只有两种，也就是&#x3D;&#x3D;公开的和私有的&#x3D;&#x3D;，如果希望属性是&#x3D;&#x3D;私有的&#x3D;&#x3D;，在给属性命名时可以用两个&#x3D;&#x3D;下划线作为开头&#x3D;&#x3D;</p></blockquote><ul><li>以单下划线来限制访问。单下划线开头的属性和方法外界仍然是可以访问的，所以更多的时候它是一种暗示或隐喻</li></ul><h3 id="3-1-4-面向对象的支柱"><a href="#3-1-4-面向对象的支柱" class="headerlink" title="3.1.4  面向对象的支柱"></a>3.1.4  面向对象的支柱</h3><ol><li><p>封装 ：提高程序的安全性</p><ul><li><p>将&#x3D;&#x3D;属性和方法封装到一个抽象类&#x3D;&#x3D;中</p></li><li><p>创建类对象，对象调用封装里面的方法</p></li><li><p>对象的方法都封装在类的内部</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># AUTHOR: Kcs</span></span><br><span class="line"><span class="comment"># TIME  : 2022/7/10 18:26</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        self.__age = age  <span class="comment"># 双下滑线 表示：不希望在类外部被访问到</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(self.name, self.__age)</span><br><span class="line"></span><br><span class="line">stu = Student(<span class="string">&#x27;张三&#x27;</span>, <span class="number">45</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(stu.name,stu.__age)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dir</span>(stu))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 若是想要被访问到双下滑线的信息</span></span><br><span class="line"><span class="built_in">print</span>(stu._Student__age)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p>继承：提高代码的复用性</p><ul><li><p>Python支持多继承</p></li><li><p>定义子类时，必须在其构造方法中调用父类的构造函数</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(A, B):</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># AUTHOR: Kcs</span></span><br><span class="line"><span class="comment"># TIME  : 2022/7/10 18:43</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(self.name, self.age)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Person</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age, sno</span>):</span><br><span class="line">        <span class="built_in">super</span>(Student, self).__init__(name, age)</span><br><span class="line">        self.sno = sno</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span>(<span class="title class_ inherited__">Person</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age, prof</span>):</span><br><span class="line">        <span class="built_in">super</span>(Teacher, self).__init__(name, age)</span><br><span class="line">        self.prof = prof</span><br></pre></td></tr></table></figure></li><li><p>重写方法</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">object</span>):  <span class="comment"># 不写括号 就默认是继承object类</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(self.name, self.age)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Person</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age, sno</span>):</span><br><span class="line">        <span class="built_in">super</span>(Student, self).__init__(name, age)</span><br><span class="line">        self.sno = sno</span><br><span class="line"><span class="comment">#重写方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我是学生,我叫：&#x27;</span>, self.name, <span class="string">&#x27;我的学号是：&#x27;</span>, self.sno)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span>(<span class="title class_ inherited__">Person</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age, prof</span>):</span><br><span class="line">        <span class="built_in">super</span>(Teacher, self).__init__(name, age)</span><br><span class="line">        self.prof = prof</span><br><span class="line"><span class="comment">#重写方法 </span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我是老师,我叫：&#x27;</span>, self.name, <span class="string">&#x27;我的职位是：&#x27;</span>, self.prof)</span><br></pre></td></tr></table></figure><p>object中的方法：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;__class__&#x27;</span>, <span class="string">&#x27;__delattr__&#x27;</span>, <span class="string">&#x27;__dict__&#x27;</span>, <span class="string">&#x27;__dir__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>, <span class="string">&#x27;__eq__&#x27;</span>, <span class="string">&#x27;__format__&#x27;</span>, <span class="string">&#x27;__ge__&#x27;</span>, <span class="string">&#x27;__getattribute__&#x27;</span>, <span class="string">&#x27;__gt__&#x27;</span>, <span class="string">&#x27;__hash__&#x27;</span>, <span class="string">&#x27;__init__&#x27;</span>, <span class="string">&#x27;__init_subclass__&#x27;</span>, <span class="string">&#x27;__le__&#x27;</span>, <span class="string">&#x27;__lt__&#x27;</span>, <span class="string">&#x27;__module__&#x27;</span>, <span class="string">&#x27;__ne__&#x27;</span>, <span class="string">&#x27;__new__&#x27;</span>, <span class="string">&#x27;__reduce__&#x27;</span>, <span class="string">&#x27;__reduce_ex__&#x27;</span>, <span class="string">&#x27;__repr__&#x27;</span>, <span class="string">&#x27;__setattr__&#x27;</span>, <span class="string">&#x27;__sizeof__&#x27;</span>, <span class="string">&#x27;__str__&#x27;</span>, <span class="string">&#x27;__subclasshook__&#x27;</span>, <span class="string">&#x27;__weakref__&#x27;</span>]</span><br></pre></td></tr></table></figure></li></ul></li><li><p>多态：提高程序的可扩展性和可维护性</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># AUTHOR: Kcs</span></span><br><span class="line"><span class="comment"># TIME  : 2022/7/10 19:40</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 多态</span></span><br><span class="line"><span class="comment"># 以动物来描述多态</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;动物吃东西。。。&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;狗吃骨头。。。&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;猫吃鱼。。。&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;人吃五谷杂粮。。。&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">obj</span>):</span><br><span class="line">    obj.eat()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func(Animal())</span><br><span class="line">func(Cat())</span><br><span class="line">func(Dog())</span><br><span class="line"></span><br><span class="line">func(Person())</span><br></pre></td></tr></table></figure></li></ol><h3 id="练习-2"><a href="#练习-2" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：定义一个类描述数字时钟。"><a href="#练习1：定义一个类描述数字时钟。" class="headerlink" title="练习1：定义一个类描述数字时钟。"></a>练习1：定义一个类描述数字时钟。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Clock</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Python中的函数是没有重载的概念的</span></span><br><span class="line">    <span class="comment"># 因为Python中函数的参数没有类型而且支持缺省参数和可变参数</span></span><br><span class="line">    <span class="comment"># 用关键字参数让构造器可以传入任意多个参数来实现其他语言中的构造器重载</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, **kw</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;hour&#x27;</span> <span class="keyword">in</span> kw <span class="keyword">and</span> <span class="string">&#x27;minute&#x27;</span> <span class="keyword">in</span> kw <span class="keyword">and</span> <span class="string">&#x27;second&#x27;</span> <span class="keyword">in</span> kw:</span><br><span class="line">            self._hour = kw[<span class="string">&#x27;hour&#x27;</span>]</span><br><span class="line">            self._minute = kw[<span class="string">&#x27;minute&#x27;</span>]</span><br><span class="line">            self._second = kw[<span class="string">&#x27;second&#x27;</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tm = time.localtime(time.time())</span><br><span class="line">            self._hour = tm.tm_hour</span><br><span class="line">            self._minute = tm.tm_min</span><br><span class="line">            self._second = tm.tm_sec</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        self._second += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> self._second == <span class="number">60</span>:</span><br><span class="line">            self._second = <span class="number">0</span></span><br><span class="line">            self._minute += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> self._minute == <span class="number">60</span>:</span><br><span class="line">                self._minute = <span class="number">0</span></span><br><span class="line">                self._hour += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> self._hour == <span class="number">24</span>:</span><br><span class="line">                    self._hour = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;%02d:%02d:%02d&#x27;</span> % (self._hour, self._minute, self._second)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># clock = Clock(hour=10, minute=5, second=58)</span></span><br><span class="line">    clock = Clock()</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        os.system(<span class="string">&#x27;clear&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(clock.show())</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        clock.run()</span><br></pre></td></tr></table></figure><h4 id="练习2：定义一个类描述平面上的点并提供移动点和计算到另一个点距离的方法。"><a href="#练习2：定义一个类描述平面上的点并提供移动点和计算到另一个点距离的方法。" class="headerlink" title="练习2：定义一个类描述平面上的点并提供移动点和计算到另一个点距离的方法。"></a>练习2：定义一个类描述平面上的点并提供移动点和计算到另一个点距离的方法。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, x=<span class="number">0</span>, y=<span class="number">0</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化方法</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        :param x: 横坐标</span></span><br><span class="line"><span class="string">        :param y: 纵坐标</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move_to</span>(<span class="params">self, x, y</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;移动到指定位置</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        :param x: 新的横坐标</span></span><br><span class="line"><span class="string">        &quot;param y: 新的纵坐标</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move_by</span>(<span class="params">self, dx, dy</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;移动指定的增量</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        :param dx: 横坐标的增量</span></span><br><span class="line"><span class="string">        &quot;param dy: 纵坐标的增量</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.x += dx</span><br><span class="line">        self.y += dy</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">distance_to</span>(<span class="params">self, other</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;计算与另一个点的距离</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        :param other: 另一个点</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        dx = self.x - other.x</span><br><span class="line">        dy = self.y - other.y</span><br><span class="line">        <span class="keyword">return</span> sqrt(dx ** <span class="number">2</span> + dy ** <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;(%s, %s)&#x27;</span> % (<span class="built_in">str</span>(self.x), <span class="built_in">str</span>(self.y))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    p1 = Point(<span class="number">3</span>, <span class="number">5</span>)  <span class="comment"># 目标的坐标</span></span><br><span class="line">    p2 = Point()</span><br><span class="line">    <span class="built_in">print</span>(p1)</span><br><span class="line">    <span class="built_in">print</span>(p2)</span><br><span class="line">    p2.move_by(-<span class="number">1</span>, <span class="number">2</span>)  </span><br><span class="line">    <span class="built_in">print</span>(p2)</span><br><span class="line">    <span class="built_in">print</span>(p1.distance_to(p2))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="特殊方法和特殊属性"><a href="#特殊方法和特殊属性" class="headerlink" title="特殊方法和特殊属性"></a>特殊方法和特殊属性</h3> <img src="http://picgo.kongshier.top/2767/image-20220710195402287.png" alt="image-20220710195402287" style="zoom:80%;" /><p><code>__new__</code>  <code>__init__</code></p><p><img src="http://picgo.kongshier.top/2767/image-20220710201027344.png" alt="image-20220710201027344"></p><h3 id="3-1-5-类的拷贝"><a href="#3-1-5-类的拷贝" class="headerlink" title="3.1.5 类的拷贝"></a>3.1.5 类的拷贝</h3><p>变量的赋值操作：</p><ul><li>两个变量指向同一个对象</li></ul><h4 id="1-类的先拷贝"><a href="#1-类的先拷贝" class="headerlink" title="1 类的先拷贝"></a>1 类的先拷贝</h4><ul><li>一般是浅拷贝</li><li>拷贝时，对象包含的子对象内容不拷贝，so，源对象与拷贝对象会引用同一个子对象</li></ul><h4 id="2-类的深拷贝"><a href="#2-类的深拷贝" class="headerlink" title="2 类的深拷贝"></a>2 类的深拷贝</h4><ul><li>使用copy模块的deepcopy函数，递归拷贝对象中包含的子对象，源对象和拷贝对象所有的子对象也不相同</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># AUTHOR: Kcs</span></span><br><span class="line"><span class="comment"># TIME  : 2022/7/10 20:14</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cpu</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Disk</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, cpu, disk</span>):</span><br><span class="line">        self.cpu = cpu</span><br><span class="line">        self.disk = disk</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># (1) 变量的赋值</span></span><br><span class="line">cpu1 = Cpu()</span><br><span class="line"></span><br><span class="line">cpu2 = cpu1</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(cpu1 is cpu2)  # True</span></span><br><span class="line"><span class="built_in">print</span>(cpu1, <span class="built_in">id</span>(cpu1))</span><br><span class="line"><span class="built_in">print</span>(cpu2, <span class="built_in">id</span>(cpu2))</span><br><span class="line"></span><br><span class="line"><span class="comment"># (2)类的浅拷贝</span></span><br><span class="line">disk = Disk()</span><br><span class="line"></span><br><span class="line">computer = Computer(cpu1, disk)</span><br><span class="line"><span class="comment"># 浅拷贝</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"></span><br><span class="line">computer2 = copy.copy(computer)</span><br><span class="line"><span class="built_in">print</span>(computer, computer.cpu, computer.disk)</span><br><span class="line"><span class="built_in">print</span>(computer2, computer2.cpu, computer2.disk)</span><br><span class="line"><span class="comment">#  &lt;__main__.Computer object at 0x0000022F2738FE80&gt; &lt;__main__.Cpu object at 0x0000022F2738FFD0&gt; &lt;__main__.Disk object at 0x0000022F2738FEB0&gt;</span></span><br><span class="line"><span class="comment">#  &lt;__main__.Computer object at 0x0000022F2738FDC0&gt; &lt;__main__.Cpu object at 0x0000022F2738FFD0&gt; &lt;__main__.Disk object at 0x0000022F2738FEB0&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># (3)类的深拷贝</span></span><br><span class="line">computer3 = copy.deepcopy(computer)</span><br><span class="line"><span class="built_in">print</span>(computer, computer.cpu, computer.disk)</span><br><span class="line"><span class="built_in">print</span>(computer3, computer3.cpu, computer3.disk)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &lt;__main__.Computer object at 0x000001E49664FE80&gt; &lt;__main__.Cpu object at 0x000001E49664FFD0&gt; &lt;__main__.Disk object at 0x000001E49664FEB0&gt;</span></span><br><span class="line"><span class="comment"># &lt;__main__.Computer object at 0x000001E49664F9D0&gt; &lt;__main__.Cpu object at 0x000001E49664DC90&gt; &lt;__main__.Disk object at 0x000001E49664DBD0&gt;</span></span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/image-20220710205204695.png" alt="image-20220710205204695" style="zoom: 80%;" /><img src="http://picgo.kongshier.top/2767/image-20220710205239420.png" alt="image-20220710205239420" style="zoom: 80%;" /><h2 id="3-2-面向对象进阶"><a href="#3-2-面向对象进阶" class="headerlink" title="3.2  面向对象进阶"></a>3.2  面向对象进阶</h2><h3 id="3-2-1-property装饰器"><a href="#3-2-1-property装饰器" class="headerlink" title="3.2.1 @property装饰器"></a>3.2.1 @property装饰器</h3><blockquote><p>访问属性可以通过属性的getter（访问器）和setter（修改器）方法进行对应的操作</p><p>对属性的访问既安全又方便</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        self._name = name</span><br><span class="line">        self._age = age</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 访问器 - getter方法</span></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">name</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._name</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 访问器 - getter方法</span></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">age</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._age</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 修改器 - setter方法</span></span><br><span class="line"><span class="meta">    @age.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">age</span>(<span class="params">self, age</span>):</span><br><span class="line">        self._age = age</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">play</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self._age &lt;= <span class="number">16</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s正在玩飞行棋.&#x27;</span> % self._name)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s正在玩斗地主.&#x27;</span> % self._name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    person = Person(<span class="string">&#x27;王大锤&#x27;</span>, <span class="number">12</span>)</span><br><span class="line">    person.play()</span><br><span class="line">    person.age = <span class="number">22</span></span><br><span class="line">    person.play()</span><br><span class="line">    <span class="comment"># person.name = &#x27;白元芳&#x27;  # AttributeError: can&#x27;t set attribute</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="slots-魔法"><a href="#slots-魔法" class="headerlink" title="__slots__魔法"></a>__slots__魔法</h3><ul><li>限定自定义类型的对象只能绑定某些属性</li><li>只对当前类的对象生效，对子类并不起任何作用</li></ul><p>class Person(object):</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="comment"># 限定Person对象只能绑定_name, _age和_gender属性</span></span><br><span class="line">    __slots__ = (<span class="string">&#x27;_name&#x27;</span>, <span class="string">&#x27;_age&#x27;</span>, <span class="string">&#x27;_gender&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        self._name = name</span><br><span class="line">        self._age = age</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">name</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._name</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">age</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._age</span><br><span class="line"></span><br><span class="line"><span class="meta">    @age.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">age</span>(<span class="params">self, age</span>):</span><br><span class="line">        self._age = age</span><br></pre></td></tr></table></figure><h1 id="4-文件"><a href="#4-文件" class="headerlink" title="4 文件"></a>4 文件</h1><h2 id="4-1-编码格式"><a href="#4-1-编码格式" class="headerlink" title="4.1 编码格式"></a>4.1 编码格式</h2><ul><li>Python的解释器使用Unicode</li><li>py文件使用UTF-8存储</li></ul><img src="http://picgo.kongshier.top/2767/image-20220711153447502.png" alt="image-20220711153447502" style="zoom:80%;" /><p>在文件的开头修改编码格式</p><p>#encoding &#x3D; 编码格式 </p><h2 id="4-2-文件读写原理-（IO操作）"><a href="#4-2-文件读写原理-（IO操作）" class="headerlink" title="4.2 文件读写原理 （IO操作）"></a>4.2 文件读写原理 （IO操作）</h2><p>原理：</p><img src="http://picgo.kongshier.top/2767/image-20220711165728749.png" alt="image-20220711165728749" style="zoom:80%;" /><h3 id="4-2-1-读写操作"><a href="#4-2-1-读写操作" class="headerlink" title="4.2.1 读写操作"></a>4.2.1 读写操作</h3><p>内置函数open() 创建文件对象</p><img src="http://picgo.kongshier.top/2767/image-20220711170007749.png" alt="image-20220711170007749" style="zoom:80%;" /><p>语法规则：</p><img src="http://picgo.kongshier.top/2767/image-20220711170026806.png" alt="image-20220711170026806" style="zoom:80%;" /><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建文件对象</span></span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;text1.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>)</span><br><span class="line"><span class="comment"># 输出文件内容</span></span><br><span class="line"><span class="built_in">print</span>(file.readline())</span><br><span class="line"><span class="comment"># 关闭文件流</span></span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><p>打开文件模式</p><table><thead><tr><th align="center">模式</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">t</td><td align="left">文本模式 (默认)。</td></tr><tr><td align="center">x</td><td align="left">写模式，新建一个文件，如果该文件已存在则会报错。</td></tr><tr><td align="center">b</td><td align="left">二进制模式。</td></tr><tr><td align="center">+</td><td align="left">打开一个文件进行更新(可读可写)。</td></tr><tr><td align="center">U</td><td align="left">通用换行模式（不推荐）。</td></tr><tr><td align="center">r</td><td align="left">以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td></tr><tr><td align="center">rb</td><td align="left">以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。一般用于非文本文件如图片等。</td></tr><tr><td align="center">r+</td><td align="left">打开一个文件用于读写。文件指针将会放在文件的开头。</td></tr><tr><td align="center">rb+</td><td align="left">以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。一般用于非文本文件如图片等。</td></tr><tr><td align="center">w</td><td align="left">打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr><tr><td align="center">wb</td><td align="left">以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。</td></tr><tr><td align="center">w+</td><td align="left">打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr><tr><td align="center">wb+</td><td align="left">以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。</td></tr><tr><td align="center">a</td><td align="left">打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td></tr><tr><td align="center">ab</td><td align="left">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td></tr><tr><td align="center">a+</td><td align="left">打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</td></tr><tr><td align="center">ab+</td><td align="left">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</td></tr></tbody></table><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建文件对象</span></span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;text2.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>)</span><br><span class="line"><span class="comment"># 输出文件内容</span></span><br><span class="line">file.write(<span class="string">&#x27;加入字符串\n&#x27;</span>)</span><br><span class="line"><span class="comment"># 关闭文件流</span></span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><p>复制文件：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建文件对象</span></span><br><span class="line">source_file = <span class="built_in">open</span>(<span class="string">&#x27;text2.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line"><span class="comment"># 输出文件内容</span></span><br><span class="line">target_file= <span class="built_in">open</span>(<span class="string">&#x27;copy1.txt&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line"><span class="comment"># 关闭文件流</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一边读一边写</span></span><br><span class="line">target_file.write(source_file.read())</span><br><span class="line"></span><br><span class="line">source_file.close()</span><br><span class="line"></span><br><span class="line">target_file.close()</span><br></pre></td></tr></table></figure><p>文件当中的常用方法：</p><img src="http://picgo.kongshier.top/2767/image-20220711171935950.png" alt="image-20220711171935950" style="zoom:80%;" /><table><thead><tr><th align="center">序号</th><th align="left">方法及描述</th></tr></thead><tbody><tr><td align="center">1</td><td align="left"><a href="https://www.runoob.com/python/file-close.html">file.close()</a><br />关闭文件。关闭后文件不能再进行读写操作。</td></tr><tr><td align="center">2</td><td align="left"><a href="https://www.runoob.com/python/file-flush.html">file.flush()</a><br />刷新文件内部缓冲，直接把内部缓冲区的数据立刻写入文件, 而不是被动的等待输出缓冲区写入。</td></tr><tr><td align="center">3</td><td align="left"><a href="https://www.runoob.com/python/file-fileno.html">file.fileno()</a><br />返回一个整型的文件描述符(file descriptor FD 整型), 可以用在如os模块的read方法等一些底层操作上。</td></tr><tr><td align="center">4</td><td align="left"><a href="https://www.runoob.com/python/file-isatty.html">file.isatty()</a><br />如果文件连接到一个终端设备返回 True，否则返回 False。</td></tr><tr><td align="center">5</td><td align="left"><a href="https://www.runoob.com/python/file-next.html">file.next()</a>返回文件下一行。</td></tr><tr><td align="center">6</td><td align="left">[file.read(<a href="https://www.runoob.com/python/python-file-read.html">size])</a><br />从文件读取指定的字节数，如果未给定或为负则读取所有。</td></tr><tr><td align="center">7</td><td align="left">[file.readline(<a href="https://www.runoob.com/python/file-readline.html">size])</a><br />读取整行，包括 “\n” 字符。</td></tr><tr><td align="center">8</td><td align="left">[file.readlines(<a href="https://www.runoob.com/python/file-readlines.html">sizeint])</a><br />读取所有行并返回列表，若给定sizeint&gt;0，则是设置一次读多少字节，这是为了减轻读取压力。</td></tr><tr><td align="center">9</td><td align="left">[file.seek(offset<a href="https://www.runoob.com/python/file-seek.html">, whence])</a><br />设置文件当前位置</td></tr><tr><td align="center">10</td><td align="left"><a href="https://www.runoob.com/python/file-tell.html">file.tell()</a><br />返回文件当前位置。</td></tr><tr><td align="center">11</td><td align="left">[file.truncate(<a href="https://www.runoob.com/python/file-truncate.html">size])</a><br />截取文件，截取的字节通过size指定，默认为当前文件位置。</td></tr><tr><td align="center">12</td><td align="left"><a href="https://www.runoob.com/python/python-file-write.html">file.write(str)</a><br />将字符串写入文件，返回的是写入的字符长度。</td></tr><tr><td align="center">13</td><td align="left"><a href="https://www.runoob.com/python/file-writelines.html">file.writelines(sequence)</a><br />向文件写入一个序列字符串列表，如果需要换行则要自己加入每行的换行符。****</td></tr></tbody></table><h4 id="with-语句-（上下文管理器）"><a href="#with-语句-（上下文管理器）" class="headerlink" title="with 语句 （上下文管理器）"></a>with 语句 （上下文管理器）</h4><ul><li>会自动关闭文件流对象</li></ul><blockquote><p>with可以自动管理上下文资源，不论什么原因跳出with块，都能确保问价能正确的关闭，以此来达到释放资源的目的</p></blockquote><p><strong>语法</strong>：</p><p><img src="http://picgo.kongshier.top/2767/image-20220711173638666.png" alt="image-20220711173638666"></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># AUTHOR: Kcs</span></span><br><span class="line"><span class="comment"># TIME  : 2022/7/11 17:34</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">MyContentMar 实现了__enter__ ，__exit__该类对象遵守了上下文管理器协议</span></span><br><span class="line"><span class="string">该类的实例对象，就是上下文管理对象</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyContentMar</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="comment"># 进入时调用</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__enter__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;__enter__被调用了&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 退出时调用</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__exit__</span>(<span class="params">self, exc_type, exc_val, exc_tb</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;__exit()__方法被调用了&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 实例对象调用的方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;show方法被调用了&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建上下文管理利器实例对象</span></span><br><span class="line"><span class="keyword">with</span> MyContentMar() <span class="keyword">as</span> mc:</span><br><span class="line">    <span class="built_in">print</span>(mc.show())</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">with copy file</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;text1.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> source_file:</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;copywith.txt&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> target_file:</span><br><span class="line">        target_file.write(source_file.read())</span><br></pre></td></tr></table></figure><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><ul><li>mkdir()方法：创建目录，参数为：目录名称</li><li>chdir()方法：改变目录，参数：设定的目录结构</li><li>rmdir()方法：删除目录，删除目录之前会先删除内容</li></ul><h3 id="OS文件-x2F-目录方法"><a href="#OS文件-x2F-目录方法" class="headerlink" title="OS文件&#x2F; 目录方法"></a>OS文件&#x2F; 目录方法</h3><table><thead><tr><th align="center">序号</th><th align="left">方法及描述</th></tr></thead><tbody><tr><td align="center">1</td><td align="left"><a href="https://www.runoob.com/python/os-access.html">os.access(path, mode)</a> 检验权限模式</td></tr><tr><td align="center">2</td><td align="left"><a href="https://www.runoob.com/python/os-chdir.html">os.chdir(path)</a> 改变当前工作目录</td></tr><tr><td align="center">3</td><td align="left"><a href="https://www.runoob.com/python/os-chflags.html">os.chflags(path, flags)</a> 设置路径的标记为数字标记。</td></tr><tr><td align="center">4</td><td align="left"><a href="https://www.runoob.com/python/os-chmod.html">os.chmod(path, mode)</a> 更改权限</td></tr><tr><td align="center">5</td><td align="left"><a href="https://www.runoob.com/python/os-chown.html">os.chown(path, uid, gid)</a> 更改文件所有者</td></tr><tr><td align="center">6</td><td align="left"><a href="https://www.runoob.com/python/os-chroot.html">os.chroot(path)</a> 改变当前进程的根目录</td></tr><tr><td align="center">7</td><td align="left"><a href="https://www.runoob.com/python/os-close.html">os.close(fd)</a> 关闭文件描述符 fd</td></tr><tr><td align="center">8</td><td align="left"><a href="https://www.runoob.com/python/os-closerange.html">os.closerange(fd_low, fd_high)</a> 关闭所有文件描述符，从 fd_low (包含) 到 fd_high (不包含), 错误会忽略</td></tr><tr><td align="center">9</td><td align="left"><a href="https://www.runoob.com/python/os-dup.html">os.dup(fd)</a> 复制文件描述符 fd</td></tr><tr><td align="center">10</td><td align="left"><a href="https://www.runoob.com/python/os-dup2.html">os.dup2(fd, fd2)</a> 将一个文件描述符 fd 复制到另一个 fd2</td></tr><tr><td align="center">11</td><td align="left"><a href="https://www.runoob.com/python/os-fchdir.html">os.fchdir(fd)</a> 通过文件描述符改变当前工作目录</td></tr><tr><td align="center">12</td><td align="left"><a href="https://www.runoob.com/python/os-fchmod.html">os.fchmod(fd, mode)</a> 改变一个文件的访问权限，该文件由参数fd指定，参数mode是Unix下的文件访问权限。</td></tr><tr><td align="center">13</td><td align="left"><a href="https://www.runoob.com/python/os-fchown.html">os.fchown(fd, uid, gid)</a> 修改一个文件的所有权，这个函数修改一个文件的用户ID和用户组ID，该文件由文件描述符fd指定。</td></tr><tr><td align="center">14</td><td align="left"><a href="https://www.runoob.com/python/os-fdatasync.html">os.fdatasync(fd)</a> 强制将文件写入磁盘，该文件由文件描述符fd指定，但是不强制更新文件的状态信息。</td></tr><tr><td align="center">15</td><td align="left">[os.fdopen(fd<a href="https://www.runoob.com/python/os-fdopen.html">, mode[, bufsize]])</a> 通过文件描述符 fd 创建一个文件对象，并返回这个文件对象</td></tr><tr><td align="center">16</td><td align="left"><a href="https://www.runoob.com/python/os-fpathconf.html">os.fpathconf(fd, name)</a> 返回一个打开的文件的系统配置信息。name为检索的系统配置的值，它也许是一个定义系统值的字符串，这些名字在很多标准中指定（POSIX.1, Unix 95, Unix 98, 和其它）。</td></tr><tr><td align="center">17</td><td align="left"><a href="https://www.runoob.com/python/os-fstat.html">os.fstat(fd)</a> 返回文件描述符fd的状态，像stat()。</td></tr><tr><td align="center">18</td><td align="left"><a href="https://www.runoob.com/python/os-fstatvfs.html">os.fstatvfs(fd)</a> 返回包含文件描述符fd的文件的文件系统的信息，像 statvfs()</td></tr><tr><td align="center">19</td><td align="left"><a href="https://www.runoob.com/python/os-fsync.html">os.fsync(fd)</a> 强制将文件描述符为fd的文件写入硬盘。</td></tr><tr><td align="center">20</td><td align="left"><a href="https://www.runoob.com/python/os-ftruncate.html">os.ftruncate(fd, length)</a> 裁剪文件描述符fd对应的文件, 所以它最大不能超过文件大小。</td></tr><tr><td align="center">21</td><td align="left"><a href="https://www.runoob.com/python/os-getcwd.html">os.getcwd()</a> <strong>返回当前工作目录</strong></td></tr><tr><td align="center">22</td><td align="left"><a href="https://www.runoob.com/python/os-getcwdu.html">os.getcwdu()</a> 返回一个当前工作目录的Unicode对象</td></tr><tr><td align="center">23</td><td align="left"><a href="https://www.runoob.com/python/os-isatty.html">os.isatty(fd)</a> 如果文件描述符fd是打开的，同时与tty(-like)设备相连，则返回true, 否则False。</td></tr><tr><td align="center">24</td><td align="left"><a href="https://www.runoob.com/python/os-lchflags.html">os.lchflags(path, flags)</a> 设置路径的标记为数字标记，类似 chflags()，但是没有软链接</td></tr><tr><td align="center">25</td><td align="left"><a href="https://www.runoob.com/python/os-lchmod.html">os.lchmod(path, mode)</a> 修改连接文件权限</td></tr><tr><td align="center">26</td><td align="left"><a href="https://www.runoob.com/python/os-lchown.html">os.lchown(path, uid, gid)</a> 更改文件所有者，类似 chown，但是不追踪链接。</td></tr><tr><td align="center">27</td><td align="left"><a href="https://www.runoob.com/python/os-link.html">os.link(src, dst)</a> 创建硬链接，名为参数 dst，指向参数 src</td></tr><tr><td align="center">28</td><td align="left"><a href="https://www.runoob.com/python/os-listdir.html">os.listdir(path)</a> 返回path指定的文件夹包含的文件或文件夹的名字的列表。</td></tr><tr><td align="center">29</td><td align="left"><a href="https://www.runoob.com/python/os-lseek.html">os.lseek(fd, pos, how)</a> 设置文件描述符 fd当前位置为pos, how方式修改: SEEK_SET 或者 0 设置从文件开始的计算的pos; SEEK_CUR或者 1 则从当前位置计算; os.SEEK_END或者2则从文件尾部开始. 在unix，Windows中有效</td></tr><tr><td align="center">30</td><td align="left"><a href="https://www.runoob.com/python/os-lstat.html">os.lstat(path)</a> 像stat(),但是没有软链接</td></tr><tr><td align="center">31</td><td align="left"><a href="https://www.runoob.com/python/os-major.html">os.major(device)</a> 从原始的设备号中提取设备major号码 (使用stat中的st_dev或者st_rdev field)。</td></tr><tr><td align="center">32</td><td align="left"><a href="https://www.runoob.com/python/os-makedev.html">os.makedev(major, minor)</a> 以major和minor设备号组成一个原始设备号</td></tr><tr><td align="center">33</td><td align="left">[os.makedirs(path<a href="https://www.runoob.com/python/os-makedirs.html">, mode])</a> 递归文件夹创建函数。像mkdir(), 但创建的所有intermediate-level文件夹需要包含子文件夹。</td></tr><tr><td align="center">34</td><td align="left"><a href="https://www.runoob.com/python/os-minor.html">os.minor(device)</a> 从原始的设备号中提取设备minor号码 (使用stat中的st_dev或者st_rdev field )。</td></tr><tr><td align="center">35</td><td align="left">[os.mkdir(path<a href="https://www.runoob.com/python/os-mkdir.html">, mode])</a> 以数字mode的mode创建一个名为path的文件夹.默认的 mode 是 0777 (八进制)。</td></tr><tr><td align="center">36</td><td align="left">[os.mkfifo(path<a href="https://www.runoob.com/python/os-mkfifo.html">, mode])</a> 创建命名管道，mode 为数字，默认为 0666 (八进制)</td></tr><tr><td align="center">37</td><td align="left">[os.mknod(filename<a href="https://www.runoob.com/python/os-mknod.html">, mode&#x3D;0600, device])</a> 创建一个名为filename文件系统节点（文件，设备特别文件或者命名pipe）。</td></tr><tr><td align="center">38</td><td align="left">[os.open(file, flags<a href="https://www.runoob.com/python/os-open.html">, mode])</a> 打开一个文件，并且设置需要的打开选项，mode参数是可选的</td></tr><tr><td align="center">39</td><td align="left"><a href="https://www.runoob.com/python/os-openpty.html">os.openpty()</a> 打开一个新的伪终端对。返回 pty 和 tty的文件描述符。</td></tr><tr><td align="center">40</td><td align="left"><a href="https://www.runoob.com/python/os-pathconf.html">os.pathconf(path, name)</a> 返回相关文件的系统配置信息。</td></tr><tr><td align="center">41</td><td align="left"><a href="https://www.runoob.com/python/os-pipe.html">os.pipe()</a> 创建一个管道. 返回一对文件描述符(r, w) 分别为读和写</td></tr><tr><td align="center">42</td><td align="left">[os.popen(command<a href="https://www.runoob.com/python/os-popen.html">, mode[, bufsize]])</a> 从一个 command 打开一个管道</td></tr><tr><td align="center">43</td><td align="left"><a href="https://www.runoob.com/python/os-read.html">os.read(fd, n)</a> 从文件描述符 fd 中读取最多 n 个字节，返回包含读取字节的字符串，文件描述符 fd对应文件已达到结尾, 返回一个空字符串。</td></tr><tr><td align="center">44</td><td align="left"><a href="https://www.runoob.com/python/os-readlink.html">os.readlink(path)</a> 返回软链接所指向的文件</td></tr><tr><td align="center">45</td><td align="left"><a href="https://www.runoob.com/python/os-remove.html">os.remove(path)</a> 删除路径为path的文件。如果path 是一个文件夹，将抛出OSError; 查看下面的rmdir()删除一个 directory。</td></tr><tr><td align="center">46</td><td align="left"><a href="https://www.runoob.com/python/os-removedirs.html">os.removedirs(path)</a> 递归删除目录。</td></tr><tr><td align="center">47</td><td align="left"><a href="https://www.runoob.com/python/os-rename.html">os.rename(src, dst)</a> 重命名文件或目录，从 src 到 dst</td></tr><tr><td align="center">48</td><td align="left"><a href="https://www.runoob.com/python/os-renames.html">os.renames(old, new)</a> 递归地对目录进行更名，也可以对文件进行更名。</td></tr><tr><td align="center">49</td><td align="left"><a href="https://www.runoob.com/python/os-rmdir.html">os.rmdir(path)</a> 删除path指定的空目录，如果目录非空，则抛出一个OSError异常。</td></tr><tr><td align="center">50</td><td align="left"><a href="https://www.runoob.com/python/os-stat.html">os.stat(path)</a> 获取path指定的路径的信息，功能等同于C API中的stat()系统调用。</td></tr><tr><td align="center">51</td><td align="left">[os.stat_float_times(<a href="https://www.runoob.com/python/os-stat_float_times.html">newvalue])</a> 决定stat_result是否以float对象显示时间戳</td></tr><tr><td align="center">52</td><td align="left"><a href="https://www.runoob.com/python/os-statvfs.html">os.statvfs(path)</a> 获取指定路径的文件系统统计信息</td></tr><tr><td align="center">53</td><td align="left"><a href="https://www.runoob.com/python/os-symlink.html">os.symlink(src, dst)</a> 创建一个软链接</td></tr><tr><td align="center">54</td><td align="left"><a href="https://www.runoob.com/python/os-tcgetpgrp.html">os.tcgetpgrp(fd)</a> 返回与终端fd（一个由os.open()返回的打开的文件描述符）关联的进程组</td></tr><tr><td align="center">55</td><td align="left"><a href="https://www.runoob.com/python/os-tcsetpgrp.html">os.tcsetpgrp(fd, pg)</a> 设置与终端fd（一个由os.open()返回的打开的文件描述符）关联的进程组为pg。</td></tr><tr><td align="center">56</td><td align="left">[os.tempnam(<a href="https://www.runoob.com/python/os-tempnam.html">dir[, prefix]])</a> 返回唯一的路径名用于创建临时文件。</td></tr><tr><td align="center">57</td><td align="left"><a href="https://www.runoob.com/python/os-tmpfile.html">os.tmpfile()</a> 返回一个打开的模式为(w+b)的文件对象 .这文件对象没有文件夹入口，没有文件描述符，将会自动删除。</td></tr><tr><td align="center">58</td><td align="left"><a href="https://www.runoob.com/python/os-tmpnam.html">os.tmpnam()</a> 为创建一个临时文件返回一个唯一的路径</td></tr><tr><td align="center">59</td><td align="left"><a href="https://www.runoob.com/python/os-ttyname.html">os.ttyname(fd)</a> 返回一个字符串，它表示与文件描述符fd 关联的终端设备。如果fd 没有与终端设备关联，则引发一个异常。</td></tr><tr><td align="center">60</td><td align="left"><a href="https://www.runoob.com/python/os-unlink.html">os.unlink(path)</a> 删除文件路径</td></tr><tr><td align="center">61</td><td align="left"><a href="https://www.runoob.com/python/os-utime.html">os.utime(path, times)</a> 返回指定的path文件的访问和修改的时间。</td></tr><tr><td align="center">62</td><td align="left">[os.walk(top[, topdown&#x3D;True[, onerror&#x3D;None[, followlinks&#x3D;False]]])](<a href="https://www.runoob.com/python/os-walk.html">https://www.runoob.com/python/os-walk.html</a>) 输出在文件夹中的文件名通过在树中游走，向上或者向下。</td></tr><tr><td align="center">63</td><td align="left"><a href="https://www.runoob.com/python/os-write.html">os.write(fd, str)</a> 写入字符串到文件描述符 fd中. 返回实际写入的字符串长度</td></tr><tr><td align="center">64</td><td align="left"><a href="https://www.runoob.com/python/python-os-path.html">os.path 模块</a> 获取文件的属性信息。</td></tr></tbody></table><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开记事本</span></span><br><span class="line">os.system(<span class="string">&#x27;notepad.exe&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开计算器</span></span><br><span class="line">os.system(<span class="string">&#x27;calc.exe&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接打开可执行文件</span></span><br><span class="line">os.startfile(<span class="string">&#x27;D:\\Other Download\\Typora\\Typora.exe&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="os-path模块操作目录"><a href="#os-path模块操作目录" class="headerlink" title="os.path模块操作目录"></a>os.path模块操作目录</h4><img src="http://picgo.kongshier.top/2767/image-20220711210235930.png" alt="image-20220711210235930" style="zoom:80%;" /><p>案例：列入指定目录下的所有py文件</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">path = os.getcwd()</span><br><span class="line">lst = os.listdir(path)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> lst:</span><br><span class="line">    <span class="keyword">if</span> filename.endswith(<span class="string">&#x27;.py&#x27;</span>):</span><br><span class="line">        <span class="built_in">print</span>(filename)</span><br></pre></td></tr></table></figure><p>案例：遍历指定目录下的所有文件</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">path = os.getcwd()</span><br><span class="line"></span><br><span class="line">lst_file = os.walk(path)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> dirpath, dirname, filename <span class="keyword">in</span> lst_file:</span><br><span class="line">    <span class="built_in">print</span>(dirpath)</span><br><span class="line">    <span class="built_in">print</span>(dirname)</span><br><span class="line">    <span class="built_in">print</span>(filename)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;========================&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">path = os.getcwd()</span><br><span class="line"></span><br><span class="line">lst_file = os.walk(path)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> dirpath, dirname, filename <span class="keyword">in</span> lst_file:</span><br><span class="line">    <span class="string">&quot;&quot;&quot; print(dirpath)</span></span><br><span class="line"><span class="string">     print(dirname)</span></span><br><span class="line"><span class="string">     print(filename)</span></span><br><span class="line"><span class="string">    print(&#x27;========================&#x27;)&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">dir</span> <span class="keyword">in</span> dirpath:</span><br><span class="line">        <span class="built_in">print</span>(os.path.join(dirpath, <span class="built_in">dir</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> filename:</span><br><span class="line">        <span class="built_in">print</span>(os.path.join(dirpath, file))</span><br></pre></td></tr></table></figure><h2 id="4-3-file对象"><a href="#4-3-file对象" class="headerlink" title="4.3 file对象"></a>4.3 file对象</h2><h3 id="4-3-1-file对象的属性"><a href="#4-3-1-file对象的属性" class="headerlink" title="4.3.1 file对象的属性"></a>4.3.1 file对象的属性</h3><table><thead><tr><th align="left">属性</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">file.closed</td><td align="left">返回true如果文件已被关闭，否则返回false。</td></tr><tr><td align="left">file.mode</td><td align="left">返回被打开文件的访问模式。</td></tr><tr><td align="left">file.name</td><td align="left">返回文件的名称。</td></tr><tr><td align="left">file.softspace</td><td align="left">如果用print输出后，必须跟一个空格符，则返回false。否则返回true。</td></tr></tbody></table><h1 id="学生信息管理系统"><a href="#学生信息管理系统" class="headerlink" title="学生信息管理系统"></a>学生信息管理系统</h1><h2 id="需求分析："><a href="#需求分析：" class="headerlink" title="需求分析："></a>需求分析：</h2><h3 id="功能："><a href="#功能：" class="headerlink" title="功能："></a>功能：</h3><ul><li>添加学生及成绩信息</li><li>将学生信息保存到文件中</li><li>修改和删除学生信息</li><li>查询学生信息</li><li>根据学生成绩进行排序</li><li>统计学生的总分</li></ul><h2 id="系统设计："><a href="#系统设计：" class="headerlink" title="系统设计："></a>系统设计：</h2><h3 id="系统功能结构："><a href="#系统功能结构：" class="headerlink" title="系统功能结构："></a>系统功能结构：</h3><ul><li>录入学生信息模块</li><li>查找学生信息模块</li><li>删除学生信息模块</li><li>修改学生信息模块</li><li>学生成绩排名模块</li><li>统计学生总人数模块</li><li>显示全部学生信息模块</li></ul><img src="http://picgo.kongshier.top/2767/image-20220712105031352.png" alt="image-20220712105031352" style="zoom:80%;" /><h3 id="系统业务流程："><a href="#系统业务流程：" class="headerlink" title="系统业务流程："></a>系统业务流程：</h3><img src="http://picgo.kongshier.top/2767/image-20220712105905502.png" alt="image-20220712105905502" style="zoom:80%;" /><h2 id="系统开发必备："><a href="#系统开发必备：" class="headerlink" title="系统开发必备："></a>系统开发必备：</h2><p>python解释器：python 3.10</p><p>开发工具：Pycharm</p><p>python内置模块：os，re</p><h2 id="主函数设计："><a href="#主函数设计：" class="headerlink" title="主函数设计："></a>主函数设计：</h2><p>效果图：</p><p><strong><img src="http://picgo.kongshier.top/2767/image-20220712114304942.png" alt="image-20220712114304942"></strong></p><h3 id="主函数业务流程图："><a href="#主函数业务流程图：" class="headerlink" title="主函数业务流程图："></a>主函数业务流程图：</h3><p><img src="http://picgo.kongshier.top/2767/image-20220712110331043.png" alt="image-20220712110331043"></p><h3 id="实现主函数："><a href="#实现主函数：" class="headerlink" title="实现主函数："></a>实现主函数：</h3><table><thead><tr><th>编号</th><th>功能</th></tr></thead><tbody><tr><td>0</td><td>退出系统</td></tr><tr><td>1</td><td>录入学生信息,调用insert()函数</td></tr><tr><td>2</td><td>查找学生信息,调用search()函数</td></tr><tr><td>3</td><td>删除学生信息,调用delete()函数</td></tr><tr><td>4</td><td>修改学生信息,调用modifv()函数</td></tr><tr><td>5</td><td>对学生成绩排序,调用sort()函数</td></tr><tr><td>6</td><td>统计学生总人数,调用total()函数</td></tr><tr><td>7</td><td>显示所有的学生信息，调用show()函数</td></tr></tbody></table><h2 id="学生信息维护模块设计"><a href="#学生信息维护模块设计" class="headerlink" title="学生信息维护模块设计"></a>学生信息维护模块设计</h2><h3 id="录入学生信息功能"><a href="#录入学生信息功能" class="headerlink" title="录入学生信息功能"></a><strong>录入学生信息功能</strong></h3><ul><li>从控制台录入学生信息，并且把信息保存到磁盘文件中</li></ul><h4 id="业务流程："><a href="#业务流程：" class="headerlink" title="业务流程："></a>业务流程：</h4><p><img src="http://picgo.kongshier.top/2767/image-20220712120119100.png" alt="image-20220712120119100"></p><h4 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h4><ul><li>save(student)函数,用于将学生信息保存到文件</li><li>insert()函数,用于录入学生信息</li></ul><h3 id="删除学生信息功能"><a href="#删除学生信息功能" class="headerlink" title="删除学生信息功能"></a>删除学生信息功能</h3><ul><li>从控制台录入学生id，到磁盘文件中找到对应的学生信息，并将其删除</li></ul><h4 id="业务流程"><a href="#业务流程" class="headerlink" title="业务流程"></a>业务流程</h4><p><img src="http://picgo.kongshier.top/2767/image-20220712132758567.png" alt="image-20220712132758567"></p><h4 id="具体实现-1"><a href="#具体实现-1" class="headerlink" title="具体实现"></a>具体实现</h4><ul><li>delete ()函数</li><li>调用show()函数显示学生信息，</li></ul><h3 id="修改学生信息功能"><a href="#修改学生信息功能" class="headerlink" title="修改学生信息功能"></a>修改学生信息功能</h3><ul><li>从控制台录入学生ID，到磁盘文件中找到对应的学生信息，将其进行修改</li></ul><h4 id="业务流程-1"><a href="#业务流程-1" class="headerlink" title="业务流程"></a>业务流程</h4><p><img src="http://picgo.kongshier.top/2767/image-20220712140628421.png" alt="image-20220712140628421"></p><h4 id="具体实现-2"><a href="#具体实现-2" class="headerlink" title="具体实现"></a>具体实现</h4><h2 id="查询-x2F-统计模块设计"><a href="#查询-x2F-统计模块设计" class="headerlink" title="查询&#x2F;统计模块设计"></a>查询&#x2F;统计模块设计</h2><h3 id="查询学生信息功能"><a href="#查询学生信息功能" class="headerlink" title="查询学生信息功能"></a>查询学生信息功能</h3><ul><li>从控制台录入学生id或姓名，到磁盘文件中找到对应的学生信息</li></ul><h4 id="业务流程-2"><a href="#业务流程-2" class="headerlink" title="业务流程"></a>业务流程</h4><p><img src="http://picgo.kongshier.top/2767/image-20220712154357209.png" alt="image-20220712154357209"></p><p>具体实现</p><ul><li>编写主函数中调用的查找学生信息的函数search()</li><li>定义显示查询结果的函数show_student(query_student)</li></ul><h3 id="统计学生人数功能"><a href="#统计学生人数功能" class="headerlink" title="统计学生人数功能"></a>统计学生人数功能</h3><h4 id="业务流程-3"><a href="#业务流程-3" class="headerlink" title="业务流程"></a>业务流程</h4><p><img src="http://picgo.kongshier.top/2767/image-20220712165255675.png" alt="image-20220712165255675"></p><h3 id="显示所有学生信息功能"><a href="#显示所有学生信息功能" class="headerlink" title="显示所有学生信息功能"></a>显示所有学生信息功能</h3><h4 id="业务"><a href="#业务" class="headerlink" title="业务"></a>业务</h4><p><img src="http://picgo.kongshier.top/2767/image-20220712165639478.png" alt="image-20220712165639478"></p><h2 id="排序模块设计"><a href="#排序模块设计" class="headerlink" title="排序模块设计"></a>排序模块设计</h2><h2 id="项目打包"><a href="#项目打包" class="headerlink" title="项目打包"></a>项目打包</h2>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器</title>
      <link href="/post/a16492e3.html"/>
      <url>/post/a16492e3.html</url>
      
        <content type="html"><![CDATA[<h1 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h1><h2 id="什么是服务器"><a href="#什么是服务器" class="headerlink" title="什么是服务器"></a>什么是服务器</h2><p>​</p><p>​服务器指一个管理资源并为用户提供服务的计算机，通常分为文件服务器、数据库服务器和应用程序服务器。服务器也称伺服器，是一种高性能计算机，提供计算服务的设备。运行以上软件的计算机或计算机系统也被称为服务器。相对于普通PC来说，服务器在稳定性、安全性、性能等方面都要求更高，因此CPU、芯片组、内存、磁盘系统、网络等硬件和普通PC有所不同。<br>​        服务器，也称伺服器，是提供计算服务的设备。由于服务器需要响应服务请求，并进行处理，因此一般来说服务器应具备承担服务并且保障服务的能力。<br>​        服务器的构成包括处理器、硬盘、内存、系统总线等，和通用的计算机架构类似，但是由于需要提供高可靠的服务，因此在处理能力、稳定性、可靠性、安全性、可扩展性、可管理性等方面要求较高。在网络环境下，根据服务器提供的服务类型不同，分为文件服务器，数据库服务器，应用程序服务器，WEB服务器等。</p><h3 id="1、服务器的构成"><a href="#1、服务器的构成" class="headerlink" title="1、服务器的构成"></a>1、服务器的构成</h3><ul><li>服务器：由处理器（CPU）、硬盘、内存、系统总线等组成，和通用的计算机架构类似。</li><li>由于服务器需要提供高可靠的服务，所以在处理能力、稳定性、可靠性、安全性、可扩展性、可管理性等方面要求较高。</li></ul><h3 id="2、服务器的功能"><a href="#2、服务器的功能" class="headerlink" title="2、服务器的功能"></a>2、服务器的功能</h3><ul><li>服务器和电脑功能都是一样的，也可以将服务器称之为【电脑】，只是服务器对稳定性与安全性以及处理器数据能力有更高要求。</li></ul><h3 id="3、服务器类型"><a href="#3、服务器类型" class="headerlink" title="3、服务器类型"></a>3、服务器类型</h3><p>1、按应用层次划分为四类：</p><ul><li><p>入门级服务器</p></li><li><p>工作组级服务器</p></li><li><p>部门级服务器</p></li><li><p>企业级服务器</p></li></ul><p>2、按用途划分为两类：</p><ul><li>通用型服务器</li><li>专用型服务器</li></ul><p>3、按机箱结构划分为四类：</p><ul><li>塔式服务器</li><li>刀片式服务器</li><li>机架式服务器（1U、 2U、 4U） 1U&#x3D;1.75英寸&#x3D;4.445厘米(cm)</li><li>机柜式服务器</li></ul><p><a href="https://blog.csdn.net/weixin_46081038/article/details/116003419?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166113161416782391879779%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=166113161416782391879779&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-116003419-null-null.142%5Ev42%5Epc_rank_34,185%5Ev2%5Econtrol&utm_term=%E4%BB%80%E4%B9%88%E6%98%AF%E6%9C%8D%E5%8A%A1%E5%99%A8&spm=1018.2226.3001.4187">服务器详细介绍</a></p><h2 id="软件层面服务器"><a href="#软件层面服务器" class="headerlink" title="软件层面服务器"></a>软件层面服务器</h2><p>静态服务：主要提供静态资源，不同用户访问到的资源相同<br>动态服务：提供动态服务，不同用户访问到的资源不同</p><p>服务器的几个叫法：</p><ul><li>​web服务器：广义上来说，就是响应用户的需求，提供服务，当下所有的服务器软件都可以称之为web服务器软件</li><li>​HTTP服务器(静态服务)：使用HTTP协议传输资源，提供服务</li><li>​应用服务器(动态服务)：一个特定应用的承载容器</li></ul><p>常见的轻量级服务器软件：</p><ol><li>Nginx：典型的静态服务器，可做反向代理、负载均衡，一般放在最前面直面用户，和后端Tomcat打配合；纯C写的，性能贼高、内存消耗极少、稳定性也相当好，互联网公司重度使用</li><li>Tengine：阿里出品，基于Nginx服务器做的改造(加强和封装)，对大流量场景做了很多高级功能，性能、稳定性优秀</li><li>Apache http server：也是静态服务器，但是不如Nginx</li><li>IIS：微软开发，只能用在Windows下，具有应用服务器能力的http服务器</li><li>Tomcat：Apache出品，典型的应用服务器软件，符合Servlet标准的应用容器，也可以提供http服务，但一般不会作为http服务器；是Spring Boot框架默认的内置服务器</li><li>Jetty：跟Tomcat是一个性质的东西，符合Servlet标准的应用容器，也是Spring Boot框架支持的服务器，但不是默认的</li><li>Undertow：红帽子出品，跟Tomcat、Jetty一样也是Spring Boot框架支持的服务器，但不是默认的；高并发时性能优于Tomcat、Jetty</li></ol><p>几款商用 <strong>重量级</strong> 的服务器软件：</p><ol><li>JBoss(从8版开始更名为WildFly)：不仅是Servlet应用容器，更是EJB的应用容器，整套JavaEE框架部署的解决方案</li><li>WebLogic：Oracle公司出品，用于部署企业级JavaEE应用，全能型，几乎支持JavaEE所有的应用规范</li><li>WebSphere：IBM公司出品，支持更多JavaEE的应用规范的综合应用服务器</li></ol>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb 重要知识点</title>
      <link href="/post/b3bab92e.html"/>
      <url>/post/b3bab92e.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-MyBatis"><a href="#1-MyBatis" class="headerlink" title="1.MyBatis"></a>1.MyBatis</h1><p>官网： <a href="https://mybatis.org/mybatis-3/">Mybatis </a>  <a href="https://mybatis.org/mybatis-3/">https://mybatis.org/mybatis-3/</a></p><h2 id="1-1概念"><a href="#1-1概念" class="headerlink" title="1.1概念"></a>1.1概念</h2><ol><li>MyBatis是一款优秀的<strong>持久层框架</strong>，用于简化JDBC开发<ul><li>负责将数据保存到数据库的那一层代码</li><li>JavaEE三层架构：表现层、业务层、持久层</li></ul></li><li>框架<ul><li>框架就是一个半成品软件，是一套可重用的、通用的、软件基础代码模型</li><li>在框架的基础之上构建软件编写更加高效、规范、通用、可扩展。</li></ul></li><li>JDBC缺点<ul><li>硬编码   配置文件<ul><li>注册驱动、获取链接    写了一堆链接字符串  </li><li>SQL语句   也写了一堆代码字符串</li></ul></li><li>操作繁琐  自动完成<ul><li>手动设置参数</li><li>手动封装结果集</li></ul></li></ul></li></ol><h2 id="1-2MyBatis-快速入门"><a href="#1-2MyBatis-快速入门" class="headerlink" title="1.2MyBatis 快速入门"></a>1.2MyBatis 快速入门</h2><p>步骤</p><ol><li>创建user表，添加数据</li><li>创建模块，导入坐标</li><li>编写MyBatis核心配置文件 –&gt; 替换链接信息，解决硬编码问题</li><li>编写SQL映射文件 –&gt;统一管理Sql语句，解决硬编码问题</li><li>编码<ol><li>定义POJO类</li><li>加载核心配置文件，获取SqlSessionFactory对象</li><li>获取SqlSession对象，执行SQL语句</li><li>释放资源</li></ol></li></ol><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>pom.xml配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--mysql 驱动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--junit 单元测试--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 添加slf4j日志api --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 添加logback-classic依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 添加logback-core依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>mybatis-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    目标对象的包</span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.itheima.pojo&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">environments：配置数据库连接环境信息。可以配置多个environment，通过default属性切换不同的environment</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据库连接信息--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql:///mybatis?useSSL=false&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据库连接信息--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql:///mybatis?useSSL=false&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--加载sql映射文件--&gt;</span></span><br><span class="line">    类路径</span><br><span class="line">   <span class="comment">&lt;!-- &lt;mapper resource=&quot;com/itheima/mapper/UserMapper.xml&quot;/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Mapper代理方式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.itheima.mapper&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Demo.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Mybatis 快速入门代码</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> 2、3两点就把之前的jdbc给替换了</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisDemo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1. 加载mybatis的核心配置文件，获取 SqlSessionFactory</span></span><br><span class="line">        <span class="comment">//从官网复制过来</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(resource);</span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 获取SqlSession对象，用它来执行sql</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//3. 执行sql 参数是命名空间的名称 test是上一级的名称 selectAll才是想要的查询名称，一级级通过，方便查询</span></span><br><span class="line">        List&lt;User&gt; users = sqlSession.selectList(<span class="string">&quot;test.selectAll&quot;</span>);</span><br><span class="line">        System.out.println(users);</span><br><span class="line">        <span class="comment">//4. 释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-3Mapper"><a href="#1-3Mapper" class="headerlink" title="1.3Mapper"></a>1.3Mapper</h2><p>目的</p><ul><li>解决原生方式中硬编码</li><li>简化后期执行SQL</li></ul><h3 id="1-3-1Mapper代理开发规则"><a href="#1-3-1Mapper代理开发规则" class="headerlink" title="1.3.1Mapper代理开发规则"></a>1.3.1Mapper代理开发规则</h3><ol><li>定义与SQL映射文件同名的Mapper接口，并且将Mapper接口和SQL映射文件放置在同一目录下<ul><li>在资源文件夹中新建包时，把   .  用 &#x2F;  代替  这样在文件中才会体现分层结构</li></ul></li><li>设置SQL映射文件的namespace属性为Mapper接口全限定名</li><li>在Mapper|接口中定义方法，方法名就是SQL映射文件中sql语句的id，并保持参数类型和返回值类型一致</li><li>编码<ol><li>通过SqlSession的getMapper方法获取Mapper接口的代理对象</li><li>调用对应方法完成sql的执行</li></ol></li></ol><p>&#x3D;&#x3D;细节:如果Mapper接口名称和SQL映射文件名称相同，并在同一目录下，则可以使用包扫描的方式简化SQL映射文件的加载&#x3D;&#x3D;</p><p>在核心的配置文件xml中</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--加载sql映射文件--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- &lt;mapper resource=&quot;com/itheima/mapper/UserMapper.xml&quot;/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Mapper代理方式  包扫描方式 指定包的路径 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.itheima.mapper&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-4Mybatis-xml核心配置为文件"><a href="#1-4Mybatis-xml核心配置为文件" class="headerlink" title="1.4Mybatis.xml核心配置为文件"></a>1.4Mybatis.xml核心配置为文件</h2><p>要安装官方文件的顺序 进行配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">environments：配置数据库连接环境信息。可以配置多个environment，通过default属性切换不同的environment</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据库连接信息--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql:///mybatis?useSSL=false&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据库连接信息--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql:///mybatis?useSSL=false&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="2-JavaSpring"><a href="#2-JavaSpring" class="headerlink" title="2.JavaSpring"></a>2.JavaSpring</h1><h2 id="2-1js简介"><a href="#2-1js简介" class="headerlink" title="2.1js简介"></a>2.1js简介</h2><p>JavaScript是一门跨平台、&#x3D;&#x3D;面向对象的脚本语言&#x3D;&#x3D;，来控制网页行为的，它能使网页可交互</p><p>W3C标准:网页主要由三部分组成</p><ul><li>结构:HTML</li><li>表现: CSS</li><li>行为: JavaScript</li></ul><p>JavaScript和Java是完全不同的语言，不论是概念还是设计。但是基础语法类似。</p><hr><h2 id="2-2JavaScript-引入方式"><a href="#2-2JavaScript-引入方式" class="headerlink" title="2.2JavaScript 引入方式"></a>2.2JavaScript 引入方式</h2><p>&#x3D;&#x3D;引入方式&#x3D;&#x3D;</p><ol><li><p>内部脚本  ：将JS代码定义在HTML页面中</p><ul><li>在HTML文档中可以在任意地方，放置任意数量的<script> </li><li>一般把脚本置于<body>元素的底部，可改善显示速度，因为脚本执行会拖慢显示</li></ul></li><li><p>外部脚本：将JS代码定义在外部JS文件中，然后引入到HTML页面中</p></li></ol><h2 id="2-3JavaScript基础语法"><a href="#2-3JavaScript基础语法" class="headerlink" title="2.3JavaScript基础语法"></a>2.3JavaScript基础语法</h2><h3 id="2-3-1书写语法"><a href="#2-3-1书写语法" class="headerlink" title="2.3.1书写语法"></a>2.3.1书写语法</h3><ul><li><p>区分大小写: 与Java一样，变量名、函数名以及其他一切东西都是区分大小写的</p></li><li><p>==每行结尾的分号可有可无==</p></li><li><p>注释:</p><ul><li><p>单行注释: //注释内容</p></li><li><p>多行注释:/* 注释内容 */</p></li></ul></li><li><p>大括号表示代码块</p></li></ul><h3 id="2-3-2输出语句"><a href="#2-3-2输出语句" class="headerlink" title="2.3.2输出语句"></a>2.3.2输出语句</h3><ul><li>使用==windqw.alert()== ：写入警告框</li><li>使用==document.write()==   ：写入HTML输出</li><li>使用==console.log()==   ：写入浏览器控制台</li></ul><h3 id="2-3-1变量"><a href="#2-3-1变量" class="headerlink" title="2.3.1变量"></a>2.3.1变量</h3><ol><li>使用 var 关键字 （variable的缩写） 声明变量 <ul><li>可以存放不同类型的值</li></ul></li><li>其他的规则和Java一样</li></ol><p>var：</p><ol><li>==作用域：全局变量==</li><li>变量可以重复控制：后面的变量值会把前面同变量名的值给覆盖</li></ol><p>let：</p><ol><li>作用域：当前的大括号</li><li>变量不允许重复定义</li></ol><p>==const 关键字  用于声明只读的常量== 常量值不能再次改变</p><h3 id="2-3-1数据类型"><a href="#2-3-1数据类型" class="headerlink" title="2.3.1数据类型"></a>2.3.1数据类型</h3><ol><li>原始类型<ol><li>number  ：数字 （整数、小数、NaN）</li><li>string  ：字符、字符串、单双引号皆可</li><li>boolean  ：布尔</li><li>null  ：对象为空</li><li>undefined ：==声明当前变量未初始化==  默认值是underfined</li></ol></li><li><h2 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h2></li></ol><h3 id="2-3-1运算符"><a href="#2-3-1运算符" class="headerlink" title="2.3.1运算符"></a>2.3.1运算符</h3><p>==typeof  运算符== 判断当前的值是什么类型的数据类型</p><p><img src="http://picgo.kongshier.top/2767/image-20220317224643306.png" alt="image-20220317224643306"></p><p>==全等于==  ：判断类型是否一样，如果不一样，直接返回false，再去比较其值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">类型转换：</span><br><span class="line">    * 其他类型转为number：</span><br><span class="line">        <span class="number">1.</span> <span class="attr">string</span>: 按照字符串的字面值，转为数字.如果字面值不是数字，则转为<span class="title class_">NaN</span>。一般使用<span class="built_in">parseInt</span></span><br><span class="line">        <span class="number">2.</span> <span class="attr">boolean</span>: <span class="literal">true</span> 转为<span class="number">1</span>，<span class="literal">false</span>转为<span class="number">0</span></span><br><span class="line"></span><br><span class="line">    * 其他类型转为boolean：</span><br><span class="line">        <span class="number">1.</span> <span class="attr">number</span>:<span class="number">0</span>和<span class="title class_">NaN</span>转为<span class="literal">false</span>，其他的数字转为<span class="literal">true</span></span><br><span class="line">        <span class="number">2.</span> <span class="attr">string</span>:空字符串转为<span class="literal">false</span>，其他的字符串转为<span class="literal">true</span></span><br><span class="line">        <span class="number">3.</span> <span class="attr">null</span>:<span class="literal">false</span></span><br><span class="line">        <span class="number">4.</span> <span class="attr">undefined</span>:<span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="2-3-1流程控制语句"><a href="#2-3-1流程控制语句" class="headerlink" title="2.3.1流程控制语句"></a>2.3.1流程控制语句</h3><ul><li>fi</li><li>Switch</li><li>for   使用let 定义  防止全局都是  i  的值</li><li>while </li><li>do…while</li></ul><h3 id="2-3-1函数"><a href="#2-3-1函数" class="headerlink" title="2.3.1函数"></a>2.3.1函数</h3><ul><li>是被设计为执行指定任务的代码块</li></ul><p>==定义方式一==</p><ul><li><p>JavaScript 函数通过function关键字进行定义</p><blockquote><p>function functionName（参数1，参数2 。。。）{</p><p>要执行的代码</p><p>}</p></blockquote></li></ul><p>注意 ：</p><ul><li>==形式参数不需要类型==。因为JavaScript是弱类型语言</li><li>==返回值也不需要定义类型==。可以在函数内部直接使用return返回即可</li></ul><p>==定义方式二==</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> functionName = <span class="keyword">function</span>(<span class="params">参数列表</span>)&#123;</span><br><span class="line">    执行代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>==函数调用可以传递任意个数参数==  只和参数的名称有关</p><h2 id="2-4JavaScript常用对象"><a href="#2-4JavaScript常用对象" class="headerlink" title="2.4JavaScript常用对象"></a>2.4JavaScript常用对象</h2><p>文档：<a href="https://www.w3school.com.cn/js/js_objects.asp">https://www.w3school.com.cn/js/js_objects.asp</a></p><ol><li><h3 id="Array-定义数据"><a href="#Array-定义数据" class="headerlink" title="Array  定义数据"></a>Array  定义数据</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">方式一：</span><br><span class="line"><span class="keyword">var</span> 变量名 = <span class="keyword">new</span>  <span class="title class_">Array</span> (元素列表) ;</span><br><span class="line"><span class="attr">fe</span>:</span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">方式二：</span><br><span class="line"><span class="keyword">var</span> 变量名  = [元素列表] ;</span><br><span class="line"><span class="keyword">var</span> arr2 = [<span class="number">132</span>];</span><br></pre></td></tr></table></figure></li></ol><p>==JavaScript数组相当于Java中的集合 ，变长变类型==   不会出现数组下标超出</p><h4 id="属性："><a href="#属性：" class="headerlink" title="属性："></a>属性：</h4><ol><li>length :长度</li></ol><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><ol><li>push:添加方法 往数组中添加元素</li><li>splice：删除元素  <ul><li>有两个参数 1（起始位置索引）， 2（结束位置索引）</li></ul></li></ol><h3 id="2-String"><a href="#2-String" class="headerlink" title="2.String"></a>2.String</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式一</span></span><br><span class="line"><span class="keyword">var</span> str1 = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line"><span class="comment">//方式二</span></span><br><span class="line"><span class="keyword">var</span> str2 = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> str3 = <span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//length</span></span><br><span class="line"><span class="comment">// alert(str3.length);</span></span><br><span class="line"><span class="comment">// trim():去除字符串前后两端的空白字符</span></span><br><span class="line"><span class="keyword">var</span> str4 = <span class="string">&#x27;  abc   &#x27;</span>;</span><br><span class="line"><span class="title function_">alert</span>(<span class="number">1</span> + str4.<span class="title function_">trim</span>() + <span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="3-自定义对象"><a href="#3-自定义对象" class="headerlink" title="3.自定义对象"></a>3.自定义对象</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 对象名称 = &#123;</span><br><span class="line">    属性名称<span class="number">1</span> : 属性值<span class="number">1</span>,</span><br><span class="line">    属性名称<span class="number">2</span> : 属性值<span class="number">2</span>,</span><br><span class="line">    函数名称: <span class="keyword">function</span> (<span class="params">形参列表</span>)&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    name : <span class="string">&quot;zhangsan&quot;</span>,</span><br><span class="line">    age : <span class="number">23</span>,</span><br><span class="line">    <span class="attr">eat</span>: <span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;干饭~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//调用函数</span></span><br><span class="line">    <span class="title function_">alert</span>(person.<span class="property">name</span>);</span><br><span class="line">    <span class="title function_">alert</span>(person.<span class="property">age</span>);</span><br><span class="line"></span><br><span class="line">    person.<span class="title function_">eat</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-5BOM"><a href="#2-5BOM" class="headerlink" title="2.5BOM"></a>2.5BOM</h2><h3 id="4-Window对象"><a href="#4-Window对象" class="headerlink" title="4.Window对象"></a>4.Window对象</h3><ul><li>浏览器窗口对象</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">alter</span>(<span class="number">0</span>);   <span class="variable language_">window</span>.可以省略</span><br></pre></td></tr></table></figure><h4 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> alert</span><br><span class="line"> <span class="variable language_">window</span>.<span class="title function_">alert</span>(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line"> <span class="title function_">alert</span>(<span class="string">&quot;bbb&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// confirm，点击确定按钮，返回true，点击取消按钮，返回false</span></span><br><span class="line"><span class="keyword">var</span> flag = <span class="title function_">confirm</span>(<span class="string">&quot;确认删除？&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//alert(flag);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(flag)&#123;</span><br><span class="line">    <span class="comment">//删除逻辑</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定时器</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    setTimeout(function,毫秒值): 在一定的时间间隔后执行一个function，只执行一次</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    setInterval(function,毫秒值):在一定的时间间隔后执行一个function，循环执行</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//zhi&#x27;hui</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;hehe&quot;</span>);</span><br><span class="line">&#125;,<span class="number">3000</span>);</span><br><span class="line"><span class="comment">//每隔两秒就弹一次弹窗</span></span><br><span class="line"><span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;hehe&quot;</span>);</span><br><span class="line">&#125;,<span class="number">2000</span>);</span><br></pre></td></tr></table></figure><p>​==弹窗==</p><ol><li><p>alter ：弹出警告框 有一段消息，和确定按钮</p></li><li><p>comfirm：显示带有一段消息以及确认和取消的对话框</p><p>==定时器：==</p></li><li><p>setInterval() ：安装指定的周期来调用函数或计算表达式</p></li><li><p>setTimeout ：指定毫秒数后调用的函数或计算表达式</p></li></ol><p>开灯案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript演示<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;on()&quot;</span> <span class="attr">value</span>=<span class="string">&quot;开灯&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;myImage&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../imgs/off.gif&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;off()&quot;</span> <span class="attr">value</span>=<span class="string">&quot;关灯&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">on</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;myImage&#x27;</span>).<span class="property">src</span>=<span class="string">&#x27;../imgs/on.gif&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">off</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;myImage&#x27;</span>).<span class="property">src</span>=<span class="string">&#x27;../imgs/off.gif&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//设置一个变量控制灯的开关</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> x = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 根据一个变化的数字，产生固定个数的值； 两种可能 : x % 2    三种可能：  3   x % 3</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//定时器</span></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span>(x % <span class="number">2</span> == <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">on</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">off</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        x ++;</span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-History历史记录对象"><a href="#5-History历史记录对象" class="headerlink" title="5.History历史记录对象"></a>5.History历史记录对象</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">windows.<span class="property">history</span>.方法();</span><br><span class="line">history.方法()</span><br></pre></td></tr></table></figure><h3 id="6-Location-地址栏对象"><a href="#6-Location-地址栏对象" class="headerlink" title="6.Location 地址栏对象"></a>6.Location 地址栏对象</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">windows.<span class="property">location</span>.方法();</span><br><span class="line">location.方法()</span><br></pre></td></tr></table></figure><ul><li>href属性 获取当前地址栏的url</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//3秒跳转到首页</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;3秒跳转到首页...&quot;</span>);</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">    location.<span class="property">href</span> = <span class="string">&quot;https://www.baidu.com&quot;</span></span><br><span class="line">&#125;,<span class="number">3000</span>);</span><br></pre></td></tr></table></figure><h2 id="2-6DOM-文档对象模型"><a href="#2-6DOM-文档对象模型" class="headerlink" title="2.6DOM  文档对象模型"></a>2.6DOM  文档对象模型</h2><ul><li>Document：整个文档对象</li><li>Element：元素对象</li><li>AttributeL：属性对象</li><li>Text：文本对象</li><li>Comment：注释对象</li></ul><p><img src="http://picgo.kongshier.top/2767/image-20220319213115964.png" alt="image-20220319213115964"></p><p>js通过DOM，就能够对HTML进行操作</p><ul><li>改变HTML元素的内容</li><li>改变HTML的元素样式</li><li>对DOM事件作出响应</li><li>添加和删除HTML元素</li></ul><h3 id="1-获取Element对象"><a href="#1-获取Element对象" class="headerlink" title="1.获取Element对象"></a>1.获取Element对象</h3><ol><li>获取:使用Document对象的方法来获取<ol><li>getElement==Byld==:根据id属性值获取，返回一个Element对象</li><li>getElements==ByTagName==:根据标签名称获取，返回Element对象数组</li><li>getElements==ByName:==根据name属性值获取，返回Element对象数组</li><li>getElements==ByClassName==:根据class属性值获取，返回Element对象数组</li></ol></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;light&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../imgs/off.gif&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cls&quot;</span>&gt;</span>传智教育<span class="tag">&lt;/<span class="name">div</span>&gt;</span>   <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cls&quot;</span>&gt;</span>黑马程序员<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span>&gt;</span> 电影</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span>&gt;</span> 旅游</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span>&gt;</span> 游戏</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//1. getElementById：根据id属性值获取，返回一个Element对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> img = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;light&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">     <span class="title function_">alert</span>(img);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//2. getElementsByTagName：根据标签名称获取，返回Element对象数组</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> divs = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">     <span class="title function_">alert</span>(divs.<span class="property">length</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        style:设置元素css样式</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        innerHTML：设置元素内容</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; divs.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//divs[i].style.color = &#x27;red&#x27;;</span></span></span><br><span class="line"><span class="language-javascript">       <span class="comment">//把div里面的文本内容全部改成以下的文本</span></span></span><br><span class="line"><span class="language-javascript">        divs[i].<span class="property">innerHTML</span> = <span class="string">&quot;呵呵&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//3. getElementsByName：根据name属性值获取，返回Element对象数组</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> hobbys = <span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&quot;hobby&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; hobbys.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(hobbys[i]);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//复选框处于选中的状态</span></span></span><br><span class="line"><span class="language-javascript">        hobbys[i].<span class="property">checked</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//4. getElementsByClassName：根据class属性值获取，返回Element对象数组</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> clss = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;cls&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; clss.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(clss[i]);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-7事件监听"><a href="#2-7事件监听" class="headerlink" title="2.7事件监听"></a>2.7事件监听</h2><ul><li>JavaScript可以在事件被侦听时执行</li></ul><h3 id="2-7-1-事件绑定"><a href="#2-7-1-事件绑定" class="headerlink" title="2.7.1.事件绑定"></a>2.7.1.事件绑定</h3><p>事件绑定的方式</p><h4 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h4><ul><li>通过HTML标签中的事件属性进行绑定</li><li>会和html代码耦合在一起</li></ul><h4 id="方式二（推荐）"><a href="#方式二（推荐）" class="headerlink" title="方式二（推荐）"></a>方式二（推荐）</h4><ul><li>通过DOM元素属性绑定</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;on()&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;再点我&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//方式一</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">on</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&quot;我被点了&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//方式二</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;btn&quot;</span>).<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&quot;我被点了&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-7-2-常见事件"><a href="#2-7-2-常见事件" class="headerlink" title="2.7.2.常见事件"></a>2.7.2.常见事件</h3><ol><li>onblur ：失去焦点 ，文本输入框</li><li>onfocus：获得焦点</li><li>onchange：文本内容改变</li><li>onclinck：点击事件</li><li>onkeydown：键盘被按下</li><li>onmouseout：鼠标移开</li><li>onmouseover：鼠标移到元素上</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;register&quot;</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;register&quot;</span>).<span class="property">onsubmit</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//onsubmit 返回true，则表单会被提交，返回false，则表单不提交</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表单验证（案例）"><a href="#表单验证（案例）" class="headerlink" title="表单验证（案例）"></a>表单验证（案例）</h3><ol><li>当输入框失去焦点时：验证输入内容是否符合要求</li><li>当点击注册按钮时，判断所有输入框的内容是否都符合要求，如果不符合则阻止表单提交</li></ol><p><img src="http://picgo.kongshier.top/2767/image-20220319225140827.png" alt="image-20220319225140827"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>欢迎注册<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;../css/register.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-div&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;reg-content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>欢迎注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>已有帐号？<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;reg-form&quot;</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;inputs&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;username_err&quot;</span> <span class="attr">class</span>=<span class="string">&quot;err_msg&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: none&quot;</span>&gt;</span>请输入正确的用户名！<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;inputs&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;password_err&quot;</span> <span class="attr">class</span>=<span class="string">&quot;err_msg&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: none&quot;</span>&gt;</span>密码格式有误<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>手机号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;inputs&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;tel&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;tel&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;tel_err&quot;</span> <span class="attr">class</span>=<span class="string">&quot;err_msg&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: none&quot;</span>&gt;</span>手机号格式有误<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;buttons&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">value</span>=<span class="string">&quot;注 册&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">id</span>=<span class="string">&quot;reg_btn&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> <span class="attr">class</span>=<span class="string">&quot;clear&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//1. 验证用户名是否符合规则</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//1.1 获取用户名的输入框</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> usernameInput = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;username&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//1.2 绑定onblur事件 失去焦点</span></span></span><br><span class="line"><span class="language-javascript">    usernameInput.<span class="property">onblur</span> = checkUsername;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">checkUsername</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1.3 获取用户输入的用户名</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> username = usernameInput.<span class="property">value</span>.<span class="title function_">trim</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1.4 判断用户名是否符合规则：长度 6~12,单词字符组成</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> reg = <span class="regexp">/^\w&#123;6,12&#125;$/</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> flag = reg.<span class="title function_">test</span>(username);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//var flag = username.length &gt;= 6 &amp;&amp; username.length &lt;= 12;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (flag) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//符合规则</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;username_err&quot;</span>).<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//不合符规则</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;username_err&quot;</span>).<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> flag;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//2. 验证密码是否符合规则</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//2.1 获取密码的输入框</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> passwordInput = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;password&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//2.2 绑定onblur事件 失去焦点</span></span></span><br><span class="line"><span class="language-javascript">    passwordInput.<span class="property">onblur</span> = checkPassword;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">checkPassword</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2.3 获取用户输入的密码</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> password = passwordInput.<span class="property">value</span>.<span class="title function_">trim</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2.4 判断密码是否符合规则：长度 6~12</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> reg = <span class="regexp">/^\w&#123;6,12&#125;$/</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> flag = reg.<span class="title function_">test</span>(password);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//var flag = password.length &gt;= 6 &amp;&amp; password.length &lt;= 12;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (flag) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//符合规则</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;password_err&quot;</span>).<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//不合符规则</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;password_err&quot;</span>).<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> flag;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//3. 验证手机号是否符合规则</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//3.1 获取手机号的输入框</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> telInput = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;tel&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//3.2 绑定onblur事件 失去焦点</span></span></span><br><span class="line"><span class="language-javascript">    telInput.<span class="property">onblur</span> = checkTel;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">checkTel</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//3.3 获取用户输入的手机号</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> tel = telInput.<span class="property">value</span>.<span class="title function_">trim</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//3.4 判断手机号是否符合规则：长度 11，数字组成，第一位是1</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//var flag = tel.length == 11;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//以1开头的0-9的数字并且至少有10数字</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> reg = <span class="regexp">/^[1]\d&#123;10&#125;$/</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> flag = reg.<span class="title function_">test</span>(tel);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (flag) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//符合规则</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;tel_err&quot;</span>).<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//不合符规则</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;tel_err&quot;</span>).<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> flag;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//1. 获取表单对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> regForm = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;reg-form&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//2. 绑定onsubmit 事件</span></span></span><br><span class="line"><span class="language-javascript">    regForm.<span class="property">onsubmit</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//挨个判断每一个表单项是否都符合要求，如果有一个不合符，则返回false</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> flag = <span class="title function_">checkUsername</span>() &amp;&amp; <span class="title function_">checkPassword</span>() &amp;&amp; <span class="title function_">checkTel</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> flag;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="3-正则表达式"><a href="#3-正则表达式" class="headerlink" title="3.正则表达式"></a>3.正则表达式</h1><p>语法：</p><img src="http://picgo.kongshier.top/2767/image-20220319233509496.png" alt="image-20220319233509496" style="zoom:80%;" /><img src="http://picgo.kongshier.top/2767/image-20220319234202696.png" alt="image-20220319234202696" style="zoom:80%;" /><h2 id="1-元字符"><a href="#1-元字符" class="headerlink" title="1.元字符"></a>1.元字符</h2><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>.</td><td>匹配除换行符意外的任意字节</td></tr><tr><td>\w</td><td>匹配字母或者下划线或者汉字</td></tr><tr><td><a href="jsref-regexp-wordchar-non.html">\W</a></td><td>查找非单词字符。</td></tr><tr><td>\s</td><td>匹配任意的空白符</td></tr><tr><td><a href="jsref-regexp-whitespace-non.html">\S</a></td><td>查找非空白字符。</td></tr><tr><td>\d</td><td>匹配数字</td></tr><tr><td><a href="jsref-regexp-digit-non.html">\D</a></td><td>查找非数字字符。</td></tr><tr><td>\b</td><td>匹配的单词的开始或结束</td></tr><tr><td><a href="jsref-regexp-begin-not.html">\B</a></td><td>匹配非单词边界。</td></tr><tr><td>^</td><td>匹配字符串的开始(在集合字符里面[^a]表示非的意思)</td></tr><tr><td>$</td><td>匹配字符串的结束</td></tr></tbody></table><h2 id="2-放义字符"><a href="#2-放义字符" class="headerlink" title="2.放义字符"></a>2.放义字符</h2><table><thead><tr><th>代码/语法</th><th>说明</th></tr></thead><tbody><tr><td>\W</td><td>匹配任意不是字母，数字，下划线，汉字的字符</td></tr><tr><td>\S</td><td>匹配任意不是空白符的字符</td></tr><tr><td>\D</td><td>匹配任意非数字的字符</td></tr><tr><td>\B</td><td>匹配不是单词开头或结束的位置</td></tr><tr><td>[^x]</td><td>匹配除了x以外的任意字符</td></tr><tr><td>[^aeiou]</td><td>匹配除了aeiou这几个字母以外的任意字符</td></tr></tbody></table><h2 id="3-限定字符（量词）"><a href="#3-限定字符（量词）" class="headerlink" title="3.限定字符（量词）"></a>3.限定字符（量词）</h2><table><thead><tr><th>代码/语法</th><th align="left">说明</th></tr></thead><tbody><tr><td>*</td><td align="left">重复零次或更多次</td></tr><tr><td>+</td><td align="left">重复一次或更多次</td></tr><tr><td>?</td><td align="left">重复零次或一次</td></tr><tr><td>{n}</td><td align="left">重复n次</td></tr><tr><td>{n,}</td><td align="left">重复n次或更多次</td></tr><tr><td>{n,m}</td><td align="left">重复n到m次</td></tr><tr><td><a href="jsref-regexp-onemore.html">n+</a></td><td align="left">匹配任何包含至少一个 n 的字符串。</td></tr><tr><td><a href="jsref-regexp-zeromore.html">n*</a></td><td align="left">匹配任何包含零个或多个 n 的字符串。</td></tr><tr><td><a href="jsref-regexp-zeroone.html">n?</a></td><td align="left">匹配任何包含零个或一个 n 的字符串。</td></tr><tr><td><a href="jsref-regexp-nx.html">n{X}</a></td><td align="left">匹配包含 X 个 n 的序列的字符串。</td></tr><tr><td><a href="jsref-regexp-nxy.html">n{X,Y}</a></td><td align="left">匹配包含 X 或 Y 个 n 的序列的字符串。</td></tr><tr><td><a href="jsref-regexp-nxcomma.html">n{X,}</a></td><td align="left">匹配包含至少 X 个 n 的序列的字符串。</td></tr><tr><td><a href="jsref-regexp-ndollar.html">n$</a></td><td align="left">匹配任何结尾为 n 的字符串。</td></tr><tr><td><a href="jsref-regexp-ncaret.html">^n</a></td><td align="left">匹配任何开头为 n 的字符串。</td></tr><tr><td><a href="jsref-regexp-nfollow.html">?=n</a></td><td align="left">匹配任何其后紧接指定字符串 n 的字符串。</td></tr><tr><td><a href="jsref-regexp-nfollow-not.html">?!n</a></td><td align="left">匹配任何其后没有紧接指定字符串 n 的字符串</td></tr></tbody></table><h2 id="4-转义字符"><a href="#4-转义字符" class="headerlink" title="4.转义字符"></a>4.转义字符</h2><p>如元字符 . * \ 需要转换为.  *  \</p><h2 id="5-字符分歧"><a href="#5-字符分歧" class="headerlink" title="5.字符分歧"></a>5.字符分歧</h2><p>字符分枝多用于满足不同情况的选择，<strong>用“|”将不同的条件分割开来</strong>，比如有些固定电话区号有三位，有些有四位，这个时候可以采用字符分枝</p><p>例如：\d{3}-\d{8}|\d{4}-\d{8} 可以匹配两种不同长度区号的固定电话</p><h2 id="6-其他字符"><a href="#6-其他字符" class="headerlink" title="6.其他字符"></a>6.其他字符</h2><table><thead><tr><th>代码/语法</th><th>说明</th></tr></thead><tbody><tr><td>\a</td><td>报警字符(打印它的效果是电脑嘀一声)</td></tr><tr><td>\b</td><td>通常是单词分界位置，但如果在字符类里使用代表退格</td></tr><tr><td>\t</td><td>制表符，Tab</td></tr><tr><td>\r</td><td>回车</td></tr><tr><td>\v</td><td>竖向制表符</td></tr><tr><td>\f</td><td>换页符</td></tr><tr><td>\n</td><td>换行符</td></tr><tr><td>\e</td><td>Escape</td></tr><tr><td>\0nn</td><td>ASCII代码中八进制代码为nn的字符</td></tr><tr><td>\xnn</td><td>ASCII代码中十六进制代码为nn的字符</td></tr><tr><td>\unnnn</td><td>Unicode代码中十六进制代码为nnnn的字符</td></tr><tr><td>\cN</td><td>ASCII控制字符。比如\cC代表Ctrl+C</td></tr><tr><td>\A</td><td>字符串开头(类似^，但不受处理多行选项的影响)</td></tr><tr><td>\Z</td><td>字符串结尾或行尾(不受处理多行选项的影响)</td></tr><tr><td>\z</td><td>字符串结尾(类似$，但不受处理多行选项的影响)</td></tr><tr><td>\G</td><td>当前搜索的开头</td></tr><tr><td>\p{name}</td><td>Unicode中命名为name的字符类，例如\p{IsGreek}</td></tr><tr><td>(?>exp)</td><td>贪婪子表达式</td></tr><tr><td>(?<x>-<y>exp)</td><td>平衡组</td></tr><tr><td>(?im-nsx:exp)</td><td>在子表达式exp中改变处理选项</td></tr><tr><td>(?im-nsx)</td><td>为表达式后面的部分改变处理选项</td></tr><tr><td>(?(exp)yes|no)</td><td>把exp当作零宽正向先行断言，如果在这个位置能匹配，使用yes作为此组的表达式；否则使用no</td></tr><tr><td>(?(exp)yes)</td><td>同上，只是使用空表达式作为no</td></tr><tr><td>(?(name)yes|no)</td><td>如果命名为name的组捕获到了内容，使用yes作为表达式；否则使用no</td></tr><tr><td>(?(name)yes)</td><td>同上，只是使用空表达式作为no</td></tr></tbody></table><h1 id="Web核心"><a href="#Web核心" class="headerlink" title="Web核心"></a>Web核心</h1><h2 id="JavaWeb技术栈"><a href="#JavaWeb技术栈" class="headerlink" title="JavaWeb技术栈"></a>JavaWeb技术栈</h2><ul><li>==B/S架构:== Browser/Server，浏览器/服务器架构模式，它的特点是，客户端只需要浏览器，应用程序的逻辑和数据都存储在服务器端。浏览器只需要请求服务器，获取Web资源，服务器把Web资源发送给浏览器即可<ul><li>好处：易于维护升级，服务器端升级后，客户端无需任何 部署就可以使用到新版本</li></ul></li><li>静态资源：HTML，CSS ，JavaSpring 图片等</li><li>动态资源：Servlet、JSP等</li><li>数据库：存储数据</li></ul><h1 id="4-HTTP"><a href="#4-HTTP" class="headerlink" title="4.HTTP"></a>4.HTTP</h1><ul><li>概念：Hyper Text  Transfer Protocol ，超文本传输协议，规定了浏览器和服务器之间 数据传输的规则</li></ul><p>HTTP协议特点：</p><ol><li>基于TCP协议：面向链接，安全</li><li>基于请求-响应模型的：一次请求对应一次响应</li><li>HTTP协议是无状态的协议：对于事务处理没有记忆能力。每次请求-响应都是==独立的==  :后一次不能请求前一次数据<ul><li>优点：速度快</li><li>缺点：多次请求间不能共享数据  。Java中使用会话技术（Cookie、Seesion）解决这个问题</li></ul></li></ol><h2 id="4-1HTTP-请求数据格式"><a href="#4-1HTTP-请求数据格式" class="headerlink" title="4.1HTTP-请求数据格式"></a>4.1HTTP-请求数据格式</h2><p>请求数据分为3部分：</p><ol><li>请求行：<ul><li>请求数据的第一行。其中GET表示请求方式，/  表示请求资源路径，HTTP/1.1表示协议版本</li></ul></li><li>请求头：第二行开始，格式为key：value形式</li><li>请求体：POST请求的最后一部分，存放请求参数</li></ol><p>常见的请求头：</p><ul><li>Host:表示请求的主机名</li><li>User-Agent:浏览器版本，例如Chrome浏览器的标识类似Mozilla/5.0 ...Chrome/79，IE浏览器的标识类似Mozilla/5.o (Windows NT ...) like Gecko;</li><li>Accept:表示浏览器能接收的资源类型，如text/*，image/<em>或者</em>/*表示所有;</li><li>Accept-Language:表示浏览器偏好的语言，服务器可以据此返回不同语言的网页;</li><li>Accept-Encoding:表示浏览器可以支持的压缩类型，例如gzip, deflate等。</li></ul><p>GET和POST的区别：</p><ol><li>==GET==请求==请求参数==在==请求行==中，没有请求体。==POST==请求的==请求参数==在==请求体==中</li><li>GET请求请求参数大小有限制，POST没有。</li></ol><h2 id="4-2HTTP-响应数据格"><a href="#4-2HTTP-响应数据格" class="headerlink" title="4.2HTTP-响应数据格"></a>4.2HTTP-响应数据格</h2><p>响应数据分为3部分：</p><ol><li>响应行：<ul><li>响应数据的第一行。其中HTTP/1.1表示协议版本，200表示响应状态码，OK表示状态码描述</li></ul></li><li>响应头：第二行开始，格式为key：value形式</li><li>响应体：最后一部分，存放响应数据</li></ol><img src="http://picgo.kongshier.top/2767/image-20220321210657394.png" alt="image-20220321210657394" style="zoom:80%;" /><p>[响应状态码]</p><h1 id="5-JSP"><a href="#5-JSP" class="headerlink" title="5.JSP"></a>5.JSP</h1><ul><li><p>概念： Java Service Pages： Java服务端页面 </p></li><li><p>一种动态网页技术，其中既可以定义HTML，JS，CSS等静态内容，还可以定义Java代码的动态内容</p></li><li><p>JSP= HTMl + java</p></li><li><p>JSP的作用：简化开发，避免了在Servlet中直接输出HTML标签</p></li></ul><h2 id="5-1JSP的快速入门"><a href="#5-1JSP的快速入门" class="headerlink" title="5.1JSP的快速入门"></a>5.1JSP的快速入门</h2><p>步骤：</p><ol><li>带入JSP做标配</li><li>创建JSP 文件</li><li>编写HTML标签和Java代码</li></ol><h2 id="5-2JSP原理"><a href="#5-2JSP原理" class="headerlink" title="5.2JSP原理"></a>5.2JSP原理</h2><ul><li>==Java本质上就是一个Servlet==</li><li>JSP在被访问时，由JSP容器(Tomcat)将其转换为Java文件(Servlet)，在由JSP容器(Tomcat)将其编译，最终对外提供服务的其实就是这个字节码文件</li></ul><h2 id="5-3脚本"><a href="#5-3脚本" class="headerlink" title="5.3脚本"></a>5.3脚本</h2><ul><li>jsp脚本用于在JSP页面内定义Java代码</li><li>Java脚本分类<ol><li>==<%...%>==:内容会直接放到==_jspService()方法====之中==</li><li><em>==<%=..%>:==内容会放到 out.print()中，作为==out.print()的参数==</em></li><li>==<%!...%>==:内容会放到 ==jspService()方法之外==，被类直接包含</li></ol></li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;com.itheima.pojo.Brand&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.List&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.ArrayList&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    <span class="comment">// 查询数据库</span></span><br><span class="line">    List&lt;Brand&gt; brands = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Brand&gt;();</span><br><span class="line">    brands.add(<span class="keyword">new</span> <span class="title class_">Brand</span>(<span class="number">1</span>,<span class="string">&quot;三只松鼠&quot;</span>,<span class="string">&quot;三只松鼠&quot;</span>,<span class="number">100</span>,<span class="string">&quot;三只松鼠，好吃不上火&quot;</span>,<span class="number">1</span>));</span><br><span class="line">    brands.add(<span class="keyword">new</span> <span class="title class_">Brand</span>(<span class="number">2</span>,<span class="string">&quot;优衣库&quot;</span>,<span class="string">&quot;优衣库&quot;</span>,<span class="number">200</span>,<span class="string">&quot;优衣库，服适人生&quot;</span>,<span class="number">0</span>));</span><br><span class="line">    brands.add(<span class="keyword">new</span> <span class="title class_">Brand</span>(<span class="number">3</span>,<span class="string">&quot;小米&quot;</span>,<span class="string">&quot;小米科技有限公司&quot;</span>,<span class="number">1000</span>,<span class="string">&quot;为发烧而生&quot;</span>,<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;新增&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;table border=<span class="string">&quot;1&quot;</span> cellspacing=<span class="string">&quot;0&quot;</span> width=<span class="string">&quot;800&quot;</span>&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;序号&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;品牌名称&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;企业名称&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;排序&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;品牌介绍&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;状态&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;%</span><br><span class="line">    <span class="comment">//需要注意是&lt;% %&gt;  可以阶段进行写这里在中间就能写进去html代码</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; brands.size(); i++) &#123;</span><br><span class="line">            <span class="type">Brand</span> <span class="variable">brand</span> <span class="operator">=</span> brands.get(i);</span><br><span class="line">    %&gt;</span><br><span class="line"></span><br><span class="line">    &lt;tr align=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line">        &lt;td&gt;&lt;%=brand.getId()%&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;%=brand.getBrandName()%&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;%=brand.getCompanyName()%&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;%=brand.getOrdered()%&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;%=brand.getDescription()%&gt;&lt;/td&gt;</span><br><span class="line"></span><br><span class="line">        &lt;%--状态逻辑判断 里面进行了代码的截断--%&gt;</span><br><span class="line">        &lt;%</span><br><span class="line">            <span class="keyword">if</span>(brand.getStatus() == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="comment">//显示启用</span></span><br><span class="line">        %&gt;</span><br><span class="line">            &lt;td&gt;&lt;%=<span class="string">&quot;启用&quot;</span>%&gt;&lt;/td&gt;</span><br><span class="line">        &lt;%</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 显示禁用</span></span><br><span class="line">        %&gt;</span><br><span class="line">            &lt;td&gt;&lt;%=<span class="string">&quot;禁用&quot;</span>%&gt;&lt;/td&gt;</span><br><span class="line">        &lt;%</span><br><span class="line">            &#125;</span><br><span class="line">        %&gt;</span><br><span class="line"></span><br><span class="line">        &lt;td&gt;&lt;a href=<span class="string">&quot;#&quot;</span>&gt;修改&lt;/a&gt; &lt;a href=<span class="string">&quot;#&quot;</span>&gt;删除&lt;/a&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">   </span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="5-4JSP缺点："><a href="#5-4JSP缺点：" class="headerlink" title="5.4JSP缺点："></a>5.4JSP缺点：</h2><ul><li><p>由于JSP页面内，既可以定义HTML 标签，又可以定义Java代码，造成了以下问题:</p><p>1.书写麻烦:特别是复杂的页面<br>2.阅读麻烦<br>3.复杂度高:运行需要依赖于各种环境，JRE，JSP容器，JavaEE...</p><p>4.占内存和磁盘:JSP会自动生成.java和.class文件占磁盘，运行的是.class文件占内存</p><p>5.调试困难:出错后，需要找到自动生成的.java文件进行调试</p><p>6.不利于团队协作:前端人员不会Java，后端人员不精HTML</p></li></ul><p>==JSP逐渐退出历史舞台。。。==</p><p>JSP 简化了Servlet代码，但是还是不便于编写代码</p><p> <img src="http://picgo.kongshier.top/2767/image-20220321224135735.png" alt="image-20220321224135735"></p><p>不要在JSP里面==直接==写Java代码  ：</p><img src="http://picgo.kongshier.top/2767/image-20220321224428790.png" alt="image-20220321224428790" style="zoom:80%;" /><p>使用EL表达式和JSTL标签替换JSP中的Java代码</p><p>==EL表达式是用来获取替换数据的代码==</p><p>==JSTL标签是用来替换循环遍历的代码==</p><h1 id="6-EL表达式"><a href="#6-EL表达式" class="headerlink" title="6.EL表达式"></a>6.EL表达式</h1><ul><li><p>用于简化JSP页面内的代码</p></li><li><p>主要功能：获取数据</p></li><li><p>语法 ：${expression}</p></li><li><p>~~~xml<br>${brand}  //获取域中存储的key为brands的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1. 准备数据</span><br><span class="line">2. 存储到request域中</span><br><span class="line">3. 转发到jsp文件中</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">@WebServlet(&quot;/demo1&quot;)</span><br><span class="line">public class ServletDemo1 extends HttpServlet &#123;</span><br><span class="line">    @Override</span><br><span class="line">    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">        //1. 准备数据</span><br><span class="line">        List&lt;Brand&gt; brands = new ArrayList&lt;Brand&gt;();</span><br><span class="line">        brands.add(new Brand(1,&quot;三只松鼠&quot;,&quot;三只松鼠&quot;,100,&quot;三只松鼠，好吃不上火&quot;,1));</span><br><span class="line">        brands.add(new Brand(2,&quot;优衣库&quot;,&quot;优衣库&quot;,200,&quot;优衣库，服适人生&quot;,0));</span><br><span class="line">        brands.add(new Brand(3,&quot;小米&quot;,&quot;小米科技有限公司&quot;,1000,&quot;为发烧而生&quot;,1));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        //2. 存储到request域中</span><br><span class="line">        request.setAttribute(&quot;brands&quot;,brands);</span><br><span class="line"></span><br><span class="line">        //3. 转发到 el-demo.jsp</span><br><span class="line">        request.getRequestDispatcher(&quot;/el-demo.jsp&quot;).forward(request,response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">        this.doGet(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">JavaWeb中的四大域对象：</span><br><span class="line"></span><br><span class="line">1. page：当前页面有效</span><br><span class="line">2. request：当前请求有效</span><br><span class="line">3. session：当前会话有效</span><br><span class="line">4. application：当前应用有效</span><br><span class="line"></span><br><span class="line">==el表达式获取数据：会依次从这四个域中寻找，直到找到为止==</span><br><span class="line"></span><br><span class="line"># 7.JSTL-if&amp;foreach</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 7.1JSTL 标签</span><br><span class="line"></span><br><span class="line">- JSP标准标签库（Jsp Standarded Tag Library）, 使用标签取代JSP页面上的Java代码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 7.2 快速入门&lt; c:if &gt;</span><br><span class="line"></span><br><span class="line">1. 导入坐标</span><br><span class="line"></span><br><span class="line">   ```xml</span><br><span class="line">   &lt;!--jstl--&gt;</span><br><span class="line">   &lt;dependency&gt;</span><br><span class="line">       &lt;groupId&gt;jstl&lt;/groupId&gt;</span><br><span class="line">       &lt;artifactId&gt;jstl&lt;/artifactId&gt;</span><br><span class="line">       &lt;version&gt;1.2&lt;/version&gt;</span><br><span class="line">   &lt;/dependency&gt;</span><br><span class="line">   </span><br><span class="line">   &lt;dependency&gt;</span><br><span class="line">       &lt;groupId&gt;taglibs&lt;/groupId&gt;</span><br><span class="line">       &lt;artifactId&gt;standard&lt;/artifactId&gt;</span><br><span class="line">       &lt;version&gt;1.1.2&lt;/version&gt;</span><br><span class="line">   &lt;/dependency&gt;</span><br><span class="line">   ```</span><br><span class="line"></span><br><span class="line">2. 在JSP页面上引入JSTL标签库</span><br><span class="line"></span><br><span class="line">   ~~~jsp</span><br><span class="line">   &lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li>使用< c:if ></li></ol><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%--</span><br><span class="line">        c:<span class="keyword">if</span>：来完成逻辑判断，替换java  <span class="keyword">if</span> <span class="keyword">else</span></span><br><span class="line">    --%&gt;</span><br><span class="line">&lt;%--    &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line">        &lt;h1&gt; <span class="literal">true</span>&lt;/h1&gt;</span><br><span class="line">    &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;false&quot;</span>&gt;</span><br><span class="line">        &lt;h1&gt; <span class="literal">false</span>&lt;/h1&gt;</span><br><span class="line">    &lt;/c:<span class="keyword">if</span>&gt;--%&gt;</span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;status ==1&#125;&quot;</span>&gt;</span><br><span class="line">        启用</span><br><span class="line">    &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;status ==0&#125;&quot;</span>&gt;</span><br><span class="line">        禁用</span><br><span class="line">    &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="7-3快速入门-c-foreach"><a href="#7-3快速入门-c-foreach" class="headerlink" title="7.3快速入门< c:foreach >"></a>7.3快速入门< c:foreach ></h2><ul><li>items:被遍历的容器</li><li>var ：遍历产生的临时变量</li><li>varStatus:遍历状态对象</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;新增&quot;</span>&gt;&lt;br&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;table border=<span class="string">&quot;1&quot;</span> cellspacing=<span class="string">&quot;0&quot;</span> width=<span class="string">&quot;800&quot;</span>&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;序号&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;品牌名称&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;企业名称&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;排序&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;品牌介绍&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;状态&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;c:forEach items=<span class="string">&quot;$&#123;brands&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;brand&quot;</span> varStatus=<span class="string">&quot;status&quot;</span>&gt;</span><br><span class="line">        &lt;tr align=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line">            &lt;%--&lt;td&gt;$&#123;brand.id&#125;&lt;/td&gt;--%&gt;</span><br><span class="line">            &lt;%--&lt;td&gt;$&#123;status.index&#125;&lt;/td&gt;--%&gt;</span><br><span class="line">                &lt;%--status 中有两个属性：index是从<span class="number">0</span>开始 count是从<span class="number">1</span>开始--%&gt;</span><br><span class="line">            &lt;td&gt;$&#123;status.count&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;brand.brandName&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;brand.companyName&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;brand.ordered&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;brand.description&#125;&lt;/td&gt;</span><br><span class="line">            &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;brand.status == 1&#125;&quot;</span>&gt;</span><br><span class="line">                &lt;td&gt;启用&lt;/td&gt;</span><br><span class="line">            &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">            &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;brand.status != 1&#125;&quot;</span>&gt;</span><br><span class="line">                &lt;td&gt;禁用&lt;/td&gt;</span><br><span class="line">            &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">            &lt;td&gt;&lt;a href=<span class="string">&quot;#&quot;</span>&gt;修改&lt;/a&gt; &lt;a href=<span class="string">&quot;#&quot;</span>&gt;删除&lt;/a&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--普通<span class="keyword">for</span>循环</span><br><span class="line">    begin：开始值</span><br><span class="line">    end：结束值</span><br><span class="line">    step：步长，增长的量</span><br><span class="line">    <span class="keyword">var</span>:循环变量</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;c:forEach begin=<span class="string">&quot;1&quot;</span> end=<span class="string">&quot;10&quot;</span> step=<span class="string">&quot;1&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;i&quot;</span>&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;#&quot;</span>&gt;$&#123;i&#125;&lt;/a&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>Servlet服务端</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.pojo.Brand;</span><br><span class="line"><span class="meta">@WebServlet(&quot;/demo1&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo1</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//1. 准备数据</span></span><br><span class="line">        List&lt;Brand&gt; brands = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Brand&gt;();</span><br><span class="line">        brands.add(<span class="keyword">new</span> <span class="title class_">Brand</span>(<span class="number">1</span>,<span class="string">&quot;三只松鼠&quot;</span>,<span class="string">&quot;三只松鼠&quot;</span>,<span class="number">100</span>,<span class="string">&quot;三只松鼠，好吃不上火&quot;</span>,<span class="number">1</span>));</span><br><span class="line">        brands.add(<span class="keyword">new</span> <span class="title class_">Brand</span>(<span class="number">2</span>,<span class="string">&quot;优衣库&quot;</span>,<span class="string">&quot;优衣库&quot;</span>,<span class="number">200</span>,<span class="string">&quot;优衣库，服适人生&quot;</span>,<span class="number">0</span>));</span><br><span class="line">        brands.add(<span class="keyword">new</span> <span class="title class_">Brand</span>(<span class="number">3</span>,<span class="string">&quot;小米&quot;</span>,<span class="string">&quot;小米科技有限公司&quot;</span>,<span class="number">1000</span>,<span class="string">&quot;为发烧而生&quot;</span>,<span class="number">1</span>));</span><br><span class="line">        <span class="comment">//2. 存储到request域中</span></span><br><span class="line">        request.setAttribute(<span class="string">&quot;brands&quot;</span>,brands);</span><br><span class="line">        request.setAttribute(<span class="string">&quot;status&quot;</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3. 转发到 jstl-foreach.jsp</span></span><br><span class="line">        request.getRequestDispatcher(<span class="string">&quot;/jstl-foreach.jsp&quot;</span>).forward(request,response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="built_in">this</span>.doGet(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="MVC模式"><a href="#MVC模式" class="headerlink" title="MVC模式"></a>MVC模式</h1><p>MVC：分层开发模式</p><ul><li>M：Model</li><li>V：view</li><li>C：controller</li></ul><h2 id="MVC好处"><a href="#MVC好处" class="headerlink" title="MVC好处"></a>MVC好处</h2><ul><li>职责单一，互不影响</li><li>有利于分工协作</li><li>有利于组件重用</li></ul><img src="http://picgo.kongshier.top/2767/image-20220323155420576.png" alt="image-20220323155420576" style="zoom:80%;" /><h2 id="三层架构"><a href="#三层架构" class="headerlink" title="三层架构"></a>三层架构</h2><ol><li>表现层<ul><li>接受请求。封装数据，==调用业务逻辑层==，响应数据</li></ul></li><li>业务逻辑层<ul><li>对业务逻辑进行封装，==组合数据访问层层中==基本功能，形成复杂的业务逻辑功能</li></ul></li><li>数据访问层<ul><li>对数据的CRUD基本操作</li></ul></li></ol><p><img src="http://picgo.kongshier.top/2767/image-20220323160037472.png" alt="image-20220323160037472"></p><h2 id="MVC和三层结构的联系"><a href="#MVC和三层结构的联系" class="headerlink" title="MVC和三层结构的联系"></a>MVC和三层结构的联系</h2><p><img src="http://picgo.kongshier.top/2767/image-20220328162516485.png" alt="image-20220328162516485"></p><h1 id="会话跟踪技术"><a href="#会话跟踪技术" class="headerlink" title="会话跟踪技术"></a>会话跟踪技术</h1><ul><li>会话：用户第一次打开浏览器，访问web服务器的资源，则会话建立，直到有一方断开连接，会话就会结束。在一次会话中可以包含==多次请求和响应。==</li><li>会话跟踪：一种维护浏览器状态的方法，==服务器需要识别多次请求是否来自于同一浏览器==，以便在==同一次会话的多次请求间共享数据==</li><li>HTTP协议是==无状态==的，每次浏览器向服务器请求时，服务器都会将该请求，视为新的请求，因此我们需要会话跟踪技术来实现会话内数据共享</li></ul><h2 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式:"></a>实现方式:</h2><ol><li>==客户端==会话跟踪技术：==Cookie==</li><li>==服务端==会话跟踪技术：==Session==</li></ol><h1 id="8-cookie（客户端）"><a href="#8-cookie（客户端）" class="headerlink" title="8.cookie（客户端）"></a>8.cookie（客户端）</h1><ul><li>客户端会话技术，将数据保存到客户端，以后每次请求都携带Cookie数据进行访问</li></ul><h2 id="8-1Cookie的基本使用"><a href="#8-1Cookie的基本使用" class="headerlink" title="8.1Cookie的基本使用"></a>8.1Cookie的基本使用</h2><p>发送为一个页面</p><p>接受为另一个页面</p><p>就能实现两个不同的</p><ol><li><p>发送Cookie</p><ol><li><p>创建Cookie对象，设置数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 创建Cookie对象</span></span><br><span class="line"><span class="type">Cookie</span> <span class="variable">cookie</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;zs&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>发送Cookie到客户端：使用response对象  response.addCookie()方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2. 发送Cookie，response</span></span><br><span class="line">response.addCookie(cookie);</span><br></pre></td></tr></table></figure></li></ol></li><li><p>获取Cookie</p><ol><li><p>获取客户端携带的所有Cookie，使用response对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 获取Cookie数组</span></span><br><span class="line">Cookie[] cookies = request.getCookies();</span><br></pre></td></tr></table></figure></li><li><p>遍历数组，获取每一个Cookie对象：for</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2. 遍历数组</span></span><br><span class="line"><span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">    <span class="comment">//3. 获取数据</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> cookie.getName();</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">&quot;username&quot;</span>.equals(name))&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> cookie.getValue();</span><br><span class="line">        System.out.println(name+<span class="string">&quot;:&quot;</span>+value);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用Cookie对象方法获取数据</p><ul><li>cookie.getName()</li><li>cookie.getValue()</li></ul></li></ol></li></ol><h2 id="8-2Cookie的原理"><a href="#8-2Cookie的原理" class="headerlink" title="8.2Cookie的原理"></a>8.2Cookie的原理</h2><ol><li>Cookie的实现是基于HTTP协议<ul><li>响应头：set-cookie</li><li>请求头：cookie</li></ul></li></ol><p><img src="http://picgo.kongshier.top/2767/image-20220323164721317.png" alt="image-20220323164721317"></p><p>浏览器会讲所有的cookie对象获取到</p><h2 id="8-3Cookie的使用细节"><a href="#8-3Cookie的使用细节" class="headerlink" title="8.3Cookie的使用细节"></a>8.3Cookie的使用细节</h2><ol><li><p>Cookie存活时间</p><ul><li>默认情况下：Cookie存储在浏览器内存中，当浏览器关闭，内存释放，则Cookie被销毁</li><li>setMaxAge(int seconds )：设置Cookie存活时间<ol><li>正数：将Cookie写入浏览器所在电脑的硬盘，==持久化存储==。到时间自动删除</li><li>负数：默认值，Cookie在当前浏览器内存中，当浏览器关闭，则Cookie被销毁</li><li>零：删除对应Cookie</li></ol></li></ul></li><li><p>Cookie中文设置</p><p>==tomcat8后的版本，支持存入中文，但是有一些特殊字符还是会不支持==</p><ul><li><p>Cookie不能直接存储中文</p></li><li><p>如需要存储，则需要转编码：URL编码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> <span class="string">&quot;张三&quot;</span>;</span><br><span class="line"><span class="comment">//URL编码  </span></span><br><span class="line">value = URLEncoder.encode(value, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;存储数据：&quot;</span>+value);</span><br><span class="line"><span class="type">Cookie</span> <span class="variable">cookie</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;username&quot;</span>,value);</span><br></pre></td></tr></table></figure><p>URL解码：因为前面存储的中文输出是URL的编码，要进行解码才会显示出中文</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//URL解码</span></span><br><span class="line">value = URLDecoder.decode(value,<span class="string">&quot;UTF-8&quot;</span>);</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="9-session"><a href="#9-session" class="headerlink" title="9.session"></a>9.session</h1><ul><li>==服务端== 会话跟踪技术：将数据保存到服务端</li><li>Java提供==HttpServlet接口==，来实现一次会话的==多次请求间数据共享数据==  要继承HttpServlet</li></ul><h2 id="9-1session基本使用"><a href="#9-1session基本使用" class="headerlink" title="9.1session基本使用"></a>9.1session基本使用</h2><ol><li>获取Session对象</li><li>Session对象功能<ol><li>void setsetAttribute(String name, Object o)：存储数据到Session域中</li><li>Object getsetAttribute(String name)：根据key，获取值</li><li>void removesetAttribute(String name)：根据key，删除该键值对</li></ol></li></ol><p><img src="http://picgo.kongshier.top/2767/image-20220323172657527.png" alt="image-20220323172657527"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//存储到Session中</span></span><br><span class="line"><span class="comment">//1. 获取Session对象</span></span><br><span class="line"><span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line">System.out.println(session);</span><br><span class="line"><span class="comment">//2. 存储数据</span></span><br><span class="line">session.setAttribute(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;zs&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取数据，从session中</span></span><br><span class="line"><span class="comment">//1. 获取Session对象</span></span><br><span class="line"><span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line"><span class="comment">//2. 获取数据</span></span><br><span class="line"><span class="type">Object</span> <span class="variable">username</span> <span class="operator">=</span> session.getAttribute(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">System.out.println(username);</span><br></pre></td></tr></table></figure><h2 id="9-2session原理"><a href="#9-2session原理" class="headerlink" title="9.2session原理"></a>9.2session原理</h2><ul><li>Session的基于Cookie实现的</li><li>==一次会话的多次请求之间都是获取同一个会话对象==</li></ul><p><img src="http://picgo.kongshier.top/2767/image-20220323174210614.png" alt="image-20220323174210614"></p><h2 id="9-3Session使用细节"><a href="#9-3Session使用细节" class="headerlink" title="9.3Session使用细节"></a>9.3Session使用细节</h2><ol><li><p>Session钝化、活化</p><ul><li>服务器重启之后，Session中的数据还是保留，并不会丢失  ，当再次获取时，id会改变</li><li>钝化：在服务器正常关闭后，Tomcat会自动将Session数据写入硬盘的文件中  。钝化是关闭服务器，把数据存在服务器的硬盘上</li><li>活化：再次启动服务器后，从文件中加载数据到Session中</li></ul></li><li><p>Session销毁</p><ol><li><p>默认情况下，无操作，30分钟自动销毁  在web.xml配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>30<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>调用Session对象的invalidate方法</p><p>session.invalidate();</p></li></ol></li></ol><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li>Cookie和Session都是用来完成一次会话多次请求间数据共享的</li><li>区别<ul><li>存储位置：Cookie是将数据存储在客户端，Session将数据存储在服务端</li><li>安全性：Cookie不安全，Session安全</li><li>数据大小：Cookie最大3km，Session无大小限制</li><li>存储时间：Cookie可以长时期存储，Session默认30分钟,到时间就会重新登录</li><li>服务器性能：Cookie不占服务器资源，Session占用服务器资源</li></ul></li></ul><p>cookie是保存未登录用户的数据</p><p>session是保存登录用户的数据</p><h1 id="10-FIlter"><a href="#10-FIlter" class="headerlink" title="10.FIlter"></a>10.FIlter</h1><ul><li>概念:Filter表示过滤器，是JavaWeb==三大组件(Servlet、Filter、Listener)==之一</li><li>过滤器可以把对==资源的请求拦截==下来，从而实现一些特殊的功能。</li><li>过滤器一般完成一些==通用的操作==。比如:权限控制、统一编码处理、敏感字符处理等等</li></ul><h2 id="10-1Filter快速入门"><a href="#10-1Filter快速入门" class="headerlink" title="10.1Filter快速入门"></a>10.1Filter快速入门</h2><p>步骤：</p><ol><li>定义类，实现FIlter接口，并重写其所有方法</li><li>配置Filter==拦截资源==的路径：在类上定义@WebFilter注解</li><li>在doFilter方法中输出一句话，并放行</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter(&quot;/*&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FilterDemo</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="comment">//1. 放行前，对 request数据进行处理</span></span><br><span class="line">        System.out.println(<span class="string">&quot;1.FilterDemo...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//放行 若是不放行 就会被拦截下来，控制台会有打印输出</span></span><br><span class="line">        chain.doFilter(request,response);     </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-2Filter执行流程"><a href="#10-2Filter执行流程" class="headerlink" title="10.2Filter执行流程"></a>10.2Filter执行流程</h2><ol><li>放行后访问对应资源，资源访问完成后，还会回到filter中</li><li>回到了Filter中之后，是执行放行后的逻辑</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR </span><br><span class="line">a(执行放行前逻辑)--&gt;b(放行)--&gt;c(访问资源)--&gt;d(执行后的逻辑)</span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/image-20220323190227826.png" alt="image-20220323190227826"></p><h2 id="10-3Filter使用细节"><a href="#10-3Filter使用细节" class="headerlink" title="10.3Filter使用细节"></a>10.3Filter使用细节</h2><ol><li>Filter拦截路径配置  （根据需求，配置不同的拦截资源路径）<ul><li>拦截具体的资源：/index.jsp ：只有访问index.jsp 时才会被拦截</li><li>目录拦截：/user/* ：访问/user下的所有资源，都会被拦截</li><li>后缀名拦截：. jsp ：访问后缀名为jsp的资源，都会被拦截</li><li>拦截所有：/*：访问所有资源，都会被拦截</li></ul></li><li>过滤器链<ul><li>一个Web应用中，可以配置多个过滤器，这些过滤器就称为过滤器</li></ul></li></ol><p>==先拦截的后执行，后拦截的先执行==   </p><p><img src="http://picgo.kongshier.top/2767/image-20220323192259796.png" alt="image-20220323192259796"></p><p>==注解配置的Filter，优先级按照过滤器类名（字符串）的自然顺序==</p><h1 id="Listener"><a href="#Listener" class="headerlink" title="Listener"></a>Listener</h1><p>概念：Listener表示监听器，是JavaWeb三大组件(Servlet、Filter、Listener)之一。</p><p>监听器可以监听就是在application,session,request三个对象==创建、销毁==或者往其中添加、修改、删除属性时==自动执行代码==的功能组件</p><h2 id="Listener分类：JavaWeb中提供8个监听器"><a href="#Listener分类：JavaWeb中提供8个监听器" class="headerlink" title="Listener分类：JavaWeb中提供8个监听器"></a>Listener分类：JavaWeb中提供8个监听器</h2><p>Servlet监听器的作用是监听Web容器的有效期事件，可以监听由于==Web应用中状态改变而引起的Servlet容器产生的相应事件==，然后接受并处理这些事件。</p><h3 id="一-ServletContext监听器"><a href="#一-ServletContext监听器" class="headerlink" title="一.ServletContext监听器"></a>一.ServletContext监听器</h3><p>1.<strong>ServletContextListener</strong>   ✔</p><p>Servlet的上下文监听，它主要实现监听ServletContext的==创建和删除 （销毁）==。提供了==2种方法==</p><ol><li>contextInitialized(ServletContextEvent event);   通知正在收听的对象，应用程序已经被加载和初始化。</li><li>contextDestroyed(ServletCotextEvent event);   通知正在收听的对象，应用程序已经被载出，即关闭。</li></ol><p>2 . <strong>ServletContextAttributeListener</strong>   </p><p>主要实现监听ServletContext属性的==增加==，删除和修改。提供了==3个方法==</p><ol><li>attributeAdded(ServletContextAttributeEvent event);   当有对象加入Application的范围时，通知正在收听的对象</li><li>attributeReplaced(ServletContextAttributeEvent event);当在application的范围有对象取代另一个对象的时，通知正在收听的对象</li><li>attributeRemoved(ServletContextAttributeEvent event);  当有对象从application的范围移除时，通知正在收听的对象</li></ol><h3 id="二-Session监听"><a href="#二-Session监听" class="headerlink" title="二.Session监听"></a>二.Session监听</h3><p><strong>3.HttpSessionListener</strong>    </p><p> HTTP会话监听，该接口实现监听HTTP会话创建、销毁。提供了2种方法</p><ul><li>sessionCreated(HttpSessionEvent event) ；通知正在收听的对象，session已经被加载及初始化</li><li>sessionDestoryed(HttpSessionEvent event)  ；通知正在收听的对象，session已经被载出（HttpSessionEvent类的主要方法是getSession(),可以使用该方法回传一个session对象）</li></ul><p><strong>4.HttpSessionActivationListener</strong>   </p><p>  该接口实现监听HTTP会话active和passivate。 提供了3个方法 </p><ol><li>attributeAdded（HttpSessionBindingEvent event）;当有对象加入session的范围时，通知正在收听的对象</li><li>attributeReplaced（HttpSessionBindingEvent event);当在session的范围有对象取代另一个对象时，通知正在收听的对象。</li><li>attributeRemoved(HttpSessionBindingEvent event);  当有对象从session的范围有对象取代另一个对象时，通知正在收听的对象 其中HttpSessionBindingEvent类主要有三个方法：getName()、getSession()和getValue()</li></ol><p><strong>5.HttpBindingListener</strong></p><p>接口实现监听HTTP会话中对象的绑定信息。它是唯一不需要在web.xml中设定Listener的。提供了2个方法</p><ol><li>valueBound(HttpSessionBindingEvent event);   当有对象加入session的范围时会被自动调用</li><li>valueUnBound(HttpSessionBindingEvent event);   当有对象从session的范围内移除时会被自动调用</li></ol><p><strong>6.HttpSessionAttributeListener</strong>          </p><p>该接口实现监听HTTP会话中属性的设置请求。提供了2个方法。</p><ol><li>sessionDidActivate（HttpSessionEvent event);    通知正在收听的对象，它的session已经变为有效状态。</li><li>sessionWillPassivate(HttpSessionEvent event);    通知正在收听的对象，它的session已经变为无效状态</li></ol><h3 id="三-Request监听"><a href="#三-Request监听" class="headerlink" title="三 Request监听"></a>三 Request监听</h3><p><strong>7.ServletRequestListener</strong>                 </p><p>对Request对象进行监听（创建、销毁） 提供了2个方法</p><ol><li>requestInitalized(ServletRequestEvent event)     通知正在收听的对象，ServletRequest已经被加载及初始化</li><li>requestDestroyed(ServletRequestEvent event)   通知正在收听的对象，ServletRequest已经被载出，即关闭</li></ol><p><strong>8.ServletRequestAttributeListener</strong>           </p><p> 对Request对象进行监听（增加改属性）  提供了3个方法</p><ol><li>attributeAdded（ServletRequestAttributeEvent event）；  当有对象加入request的范围时，通知正在收听的对象</li><li>attributeReplaced(ServletRequestAttributeEvent event);        当在request的范围内有对象取代两一个对象时，通知正在收听的对象</li><li>attributeRemoved（ServletRequestAttributeEvent event）;     当有对象从request的范围移除时，通知正在收听的对象</li></ol><p>ServletContextListener使用</p><ol><li>定义类，实现ServletContextListener接口</li><li>在类上添加@WebListener</li></ol><h1 id="11-AJAX"><a href="#11-AJAX" class="headerlink" title="11.AJAX"></a>11.AJAX</h1><ul><li>概念：AJAX（Asynchronous Java JavaScript And Xml ）：异步的JavaScript和Xml</li></ul><p>AJAX作用：</p><ol><li>与服务器进行数据交换：通过AJAX可以给服务器发送请求，并获取服务器响应的数据。<ul><li>使用AJAX和服务器进行通信，就可以使用HTML + AJAX来替换JSP页面</li></ul></li><li>异步交互：可以在==不重新加载整个页面的情况下==，与服务器==交换数据并更新部分网页==的技术       比如==:搜索联想、用户名是否可用校验==等..</li></ol><h2 id="11-2AJAX快速入门"><a href="#11-2AJAX快速入门" class="headerlink" title="11.2AJAX快速入门"></a>11.2AJAX快速入门</h2><ol><li><p>编写AjaxServlet，并使用response输出字符串  服务端代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/ajaxServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AjaxServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//1. 响应数据</span></span><br><span class="line">        response.getWriter().write(<span class="string">&quot;hello ajax~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="built_in">this</span>.doGet(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建XmlHttpRequest对象：用于和服务器交换数据   （不用自己写，在官网复制 <a href="https://www.w3school.com.cn/js/js_ajax_http.asp">https://www.w3school.com.cn/js/js_ajax_http.asp</a> ）</p></li><li><p>向服务器发送请求</p></li><li><p>获取服务器响应数据</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//以下 的代码都是w3school中复制来的</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//1. 创建核心对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> xhttp;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">XMLHttpRequest</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        xhttp = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// code for IE6, IE5</span></span></span><br><span class="line"><span class="language-javascript">        xhttp = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&quot;Microsoft.XMLHTTP&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//2. 发送请求 路劲写全路径</span></span></span><br><span class="line"><span class="language-javascript">    xhttp.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;http://localhost:8080/ajax-demo/ajaxServlet&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    xhttp.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//3. 获取响应</span></span></span><br><span class="line"><span class="language-javascript">    xhttp.<span class="property">onreadystatechange</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">readyState</span> == <span class="number">4</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">status</span> == <span class="number">200</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">               <span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">responseText</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="11-3Axios-基本使用-请求方式别名"><a href="#11-3Axios-基本使用-请求方式别名" class="headerlink" title="11.3Axios-基本使用&请求方式别名"></a>11.3Axios-基本使用&请求方式别名</h2><ul><li>对原生的Ajax进行封装 ，简化书写</li></ul><h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><ol><li><p>引入axios的js文件</p></li><li><p>使用axios发送请求，应获取响应结果</p></li><li><p>```html</p><script src="js/axios-0.18.0.js"></script><script>    //1. get   /* axios({        method:"get",        url:"http://localhost:8080/ajax-demo/axiosServlet?username=zhangsan"    }).then(function (resp) {        alert(resp.data);    })*/    //2. post    axios({        method:"post",        url:"http://localhost:8080/ajax-demo/axiosServlet",        data:"username=zhangsan" /*设置请求参数data*/    }).then(function (resp) {        alert(resp.data);    })</script></body></html><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">后台代码：</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">@WebServlet(&quot;/axiosServlet&quot;)</span><br><span class="line">public class AxiosServlet extends HttpServlet &#123;</span><br><span class="line">    @Override</span><br><span class="line">    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">        System.out.println(&quot;get...&quot;);</span><br><span class="line"></span><br><span class="line">        //1. 接收请求参数</span><br><span class="line">        String username = request.getParameter(&quot;username&quot;);</span><br><span class="line">        System.out.println(username);</span><br><span class="line"></span><br><span class="line">        //2. 响应数据</span><br><span class="line">        response.getWriter().write(&quot;hello Axios~&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">        System.out.println(&quot;post...&quot;);</span><br><span class="line">        this.doGet(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="Axios请求方式别名"><a href="#Axios请求方式别名" class="headerlink" title="Axios请求方式别名"></a>Axios请求方式别名</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/axios-0.18.0.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//1. get</span></span></span><br><span class="line"><span class="language-javascript">    axios.<span class="title function_">get</span>(<span class="string">&quot;http://localhost:8080/ajax-demo/axiosServlet?username=zhangsan&quot;</span>).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">resp</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(resp.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//2. post  方便书写 ，但是不清楚哪一个参数对应的意思</span></span></span><br><span class="line"><span class="language-javascript">axios.<span class="title function_">post</span>(<span class="string">&quot;http://localhost:8080/ajax-demo/axiosServlet&quot;</span>,<span class="string">&quot;username=zhangsan&quot;</span>).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">resp</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(resp.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h1><ul><li>概念：JavaScript Object Notation。JavaScript对象表示法</li><li>由于其语法简单，层次结构鲜明，易于阅读， 多用于作为数据载体，在网络中进行数据传输</li><li>存储和交换数据的语法。轻量级的数据交换格式</li></ul><h2 id="JSON基础语法"><a href="#JSON基础语法" class="headerlink" title="JSON基础语法"></a>JSON基础语法</h2><p>在 JSON 中，值必须是以下数据类型之一：</p><ul><li>字符串</li><li>数字</li><li>对象（JSON 对象）</li><li>数组 （在方括号中）</li><li>布尔（true或false）</li><li>null</li></ul><ol><li><p>定义格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var 变量名 = <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;key1&quot;</span><span class="punctuation">:</span> value1<span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;key2&quot;</span><span class="punctuation">:</span> value2<span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;key3&quot;</span><span class="punctuation">:</span> value3<span class="punctuation">,</span></span><br><span class="line">    ...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var jsonStr = &#x27;<span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;zhangsan&quot;</span><span class="punctuation">,</span><span class="attr">&quot;age&quot;</span><span class="punctuation">:</span><span class="number">23</span><span class="punctuation">,</span><span class="attr">&quot;addr&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;北京&quot;</span><span class="punctuation">,</span><span class="string">&quot;上海&quot;</span><span class="punctuation">,</span><span class="string">&quot;西安&quot;</span><span class="punctuation">]</span><span class="punctuation">&#125;</span>&#x27;;</span><br></pre></td></tr></table></figure></li><li><p>获取数据</p></li><li><p>变量名 . key</p><p>json . name</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> json = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;zhangsan&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">23</span>, <span class="string">&quot;addr&quot;</span>: [<span class="string">&quot;北京&quot;</span>, <span class="string">&quot;上海&quot;</span>, <span class="string">&quot;西安&quot;</span>]&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>(json.<span class="property">name</span>);</span><br></pre></td></tr></table></figure><h2 id="JSON数据和Java对象转换-重点"><a href="#JSON数据和Java对象转换-重点" class="headerlink" title="JSON数据和Java对象转换  ==重点=="></a>JSON数据和Java对象转换  ==重点==</h2><ul><li><p>JSON 的常规用途是同 web 服务器进行数据传输。</p><p>在从 web 服务器接收数据时，数据永远是字符串。</p><p>通过 JSON.parse() 解析数据，这些数据会成为 JavaScript 对象。</p></li><li><p>请求数据：JSON字符串转为Java对象</p></li><li><p>响应数据：Java对象转换为JSON对象</p></li><li><p>Fastjson是阿里巴巴提供的一个Java语言编写的==高性能功能完善==的JSON库，是目前Java语言中最快的JSON库，可以实现Java对象和JSON字符串的相互转换。</p></li></ul><p>使用：</p><ol><li>导入坐标</li><li>Java转换JSON对象</li><li>JSON转换Java对象</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FastJsonDemo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1. 将Java对象转为JSON字符串</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setId(<span class="number">1</span>);</span><br><span class="line">        user.setUsername(<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">        user.setPassword(<span class="string">&quot;123&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">jsonString</span> <span class="operator">=</span> JSON.toJSONString(user);</span><br><span class="line">        System.out.println(jsonString);<span class="comment">//&#123;&quot;id&quot;:1,&quot;password&quot;:&quot;123&quot;,&quot;username&quot;:&quot;zhangsan&quot;&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 将JSON字符串转为Java对象</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">u</span> <span class="operator">=</span> JSON.parseObject(<span class="string">&quot;&#123;\&quot;id\&quot;:1,\&quot;password\&quot;:\&quot;123\&quot;,\&quot;username\&quot;:\&quot;zhangsan\&quot;&#125;&quot;</span>, User.class);</span><br><span class="line">        System.out.println(u);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><p>{"id":1,"password":"123","username":"zhangsan"}<br>User{id=1, username='zhangsan', password='123'}</p><h1 id="12-Vue"><a href="#12-Vue" class="headerlink" title="12.Vue"></a>12.Vue</h1><h2 id="12-1-概述："><a href="#12-1-概述：" class="headerlink" title="12.1 概述："></a>12.1 概述：</h2><ul><li>Vue是一套前端框架，免除原生JavaScript中的DOM操作，简化书写</li><li>基于MVVM思想，实现数据的双向绑定，将编程的关注点放在数据上</li></ul><p><img src="http://picgo.kongshier.top/2767/image-20220324220035827.png" alt="image-20220324220035827"></p><h2 id="12-2Vue快速入门"><a href="#12-2Vue快速入门" class="headerlink" title="12.2Vue快速入门"></a>12.2Vue快速入门</h2><ol><li><p>引入Vue.js文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在js代码区域，创建vue核心对象，进行数据绑定</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">username</span>:<span class="string">&quot;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>创建 Vue 对象时，需要传递一个 js 对象，而该对象中需要如下属性：</p><ul><li><code>el</code> ： 用来指定哪儿些标签受 Vue 管理。 该属性取值 <code>#app</code> 中的 <code>app</code> 需要是受管理的标签的id属性值</li><li><code>data</code> ：用来定义数据模型</li><li><code>methods</code> ：用来定义函数。这个我们在后面就会用到</li></ul></li><li><p>编写视图    下面的id 的值需要和上面的 el 的值 相同，才能进行联动</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--插值表达式--&gt;</span></span><br><span class="line">    &#123;&#123;username&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="12-3Vue常用指令"><a href="#12-3Vue常用指令" class="headerlink" title="12.3Vue常用指令"></a>12.3Vue常用指令</h2><ul><li><strong>指令：</strong>HTML 标签上带有 v- 前缀的特殊属性，不同指令具有不同含义。</li></ul><table><thead><tr><th><strong>指令</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>v-bind</td><td>为HTML标签绑定属性值，如设置  href , css样式等</td></tr><tr><td>v-model</td><td>在表单元素上创建双向数据绑定</td></tr><tr><td>v-on</td><td>为HTML标签绑定事件</td></tr><tr><td>v-if</td><td>条件性的渲染某元素，判定为true时渲染,否则不渲染</td></tr><tr><td>v-else</td><td></td></tr><tr><td>v-else-if</td><td></td></tr><tr><td>v-show</td><td>根据条件展示某元素，区别在于切换的是display属性的值</td></tr><tr><td>v-for</td><td>列表渲染，遍历容器的元素或者对象的属性</td></tr></tbody></table><ol><li><p>v-bind </p><p>< a v-bind:href="url">百度一下</a></p></li><li><p>v-model     ==该指令可以给表单项标签绑定模型数据。这样就能实现双向绑定效果== </p><input name="username" v-model="username"></li><li><p>v-on</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;input type=&quot;button&quot; value=&quot;一个按钮&quot; v-on:click=&quot;show()&quot;&gt;&lt;br&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;一个按钮&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;show()&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//1. 创建Vue核心对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">username</span>:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">url</span>:<span class="string">&quot;https://www.baidu.com&quot;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">show</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&quot;我被点了...&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>v-if、v- if -else  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--当下面js中的count值等于v-if的count值时就会把对应的div显示出来，因为只用使用了v-model才会把对应的div显示出来--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;count == 3&quot;</span>&gt;</span>div1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;count == 4&quot;</span>&gt;</span>div2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span>div3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">&quot;count == 3&quot;</span>&gt;</span>div v-show<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;count&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//1. 创建Vue核心对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">count</span>:<span class="number">3</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">show</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&quot;我被点了...&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>v -for</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;addr in addrs&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;addr&#125;&#125; <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--添加索引值 i ,i是从0开始的。里面的addrs是下面的数组名  addr则是相当于变量名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(addr,i) in addrs&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;i+1&#125;&#125;--&#123;&#123;addr&#125;&#125; <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//1. 创建Vue核心对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">addrs</span>:[<span class="string">&quot;北京&quot;</span>,<span class="string">&quot;上海&quot;</span>,<span class="string">&quot;西安&quot;</span>]</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="12-4Vue生命周期"><a href="#12-4Vue生命周期" class="headerlink" title="12.4Vue生命周期"></a>12.4Vue生命周期</h2><ul><li>生命周期的八个阶段：每触发一个生命周期事件，会自动执行一个生命周期方法，这些生命周期方法也被称为钩子方法。</li></ul><img src="http://picgo.kongshier.top/2767/image-20220324223825341.png" alt="image-20220324223825341" style="zoom:80%;" /><ul><li><p>==mounted：==挂载完成，Vue初始化成功，HTML页面渲染成功。而以后我们会在该方法中==发送异步请求，加载数据。==</p></li><li></li><li><p>```js<br>new Vue({<br>el:"#app",<br>//在开发中这里是创建异步请求的代码<br>mounted(){<br>    alert("加载完成...")<br>}<br>});</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># Element</span><br><span class="line"></span><br><span class="line">- 是一套基于Vue的网站组件库，用于快速构建网页</span><br><span class="line">- 组件：组成网页的部件，如：超链接、按钮、图片、表格等等</span><br><span class="line"></span><br><span class="line">## 快速入门</span><br><span class="line"></span><br><span class="line">1. 映入Element的css、js文件和Vue.js </span><br><span class="line"></span><br><span class="line">   ```html</span><br><span class="line">   &lt;script src=&quot;js/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">   &lt;script src=&quot;element-ui/lib/index.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">   &lt;link rel=&quot;stylesheet&quot; href=&quot;element-ui/lib/theme-chalk/index.css&quot;&gt;</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li><p>创建Vue核心对象</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="Element布局"><a href="#Element布局" class="headerlink" title="Element布局"></a>Element布局</h2><p>在官网上查看 复制粘贴。</p><ol><li>Layout布局：通过基础的24分栏，迅速简便的创建布局。一行分为24栏</li><li>Container布局容器：用于布局的容器组件，方便快速搭建页面的基本结构。如下图就是布局容器效果。</li></ol><h2 id="Element常用组件"><a href="#Element常用组件" class="headerlink" title="Element常用组件"></a>Element常用组件</h2><p>官网查看   <a href="https://element.eleme.cn/#/zh-CN/component/installation">https://element.eleme.cn/#/zh-CN/component/installation</a></p><h1 id="13-代理模式"><a href="#13-代理模式" class="headerlink" title="13.代理模式"></a>13.代理模式</h1><ul><li>设计模式<ol><li>装饰模式</li><li>代理模式<ul><li>动态代理</li></ul></li></ol></li></ul><h2 id="13-1概念"><a href="#13-1概念" class="headerlink" title="13.1概念"></a>13.1概念</h2><ol><li>真实对象：被代理的对象</li><li>代理对象：</li><li>代理模式：代理对象代理真实对象，达到增强真实对象功能的目的</li></ol><h2 id="13-2实现方式"><a href="#13-2实现方式" class="headerlink" title="13.2实现方式"></a>13.2实现方式</h2><ol><li>静态代理：有一个类文件描述代理模式</li><li>动态代理：在内存中形成代理类<ul><li>实现步骤：<ol><li>代理对象和真实对象实现相同的接口     代理类和目标类必须实现 同一个接口或者继承相同的父类</li><li>代理对象=Proxy.newProxyInstance();</li><li>使用代理对象调用方法</li><li>增强方法</li></ol></li><li>增强方式<ol><li>增强参数列表</li><li>增强返回值类型</li><li>增强方法体执行逻辑</li></ol></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux</title>
      <link href="/post/53d0684b.html"/>
      <url>/post/53d0684b.html</url>
      
        <content type="html"><![CDATA[<h1 id="一-、基础篇"><a href="#一-、基础篇" class="headerlink" title="一 、基础篇"></a>一 、基础篇</h1><h2 id="1-1-Linux-入门"><a href="#1-1-Linux-入门" class="headerlink" title="1.1 Linux 入门"></a>1.1 Linux 入门</h2><p>Linux和Unix的联系：</p><img src="http://picgo.kongshier.top/2767/image-20220713172104310.png" alt="image-20220713172104310" style="zoom:80%;" /><h2 id="1-2-vm和Linux安装"><a href="#1-2-vm和Linux安装" class="headerlink" title="1.2 vm和Linux安装"></a>1.2 vm和Linux安装</h2><p>安装VMware 破解版：</p><p>在VMware上安装Linux</p><p>分区： </p><ul><li>&#x2F;：根分区</li><li>swap分区</li><li>&#x2F;boot：boot分区</li></ul><p><img src="http://picgo.kongshier.top/2767/image-20220713182209068.png" alt="image-20220713182209068"></p><p><img src="http://picgo.kongshier.top/2767/image-20220713182232596.png" alt="image-20220713182232596"></p><p><img src="http://picgo.kongshier.top/2767/image-20220713182301764.png" alt="image-20220713182301764"></p><h3 id="网络链接的三种模式"><a href="#网络链接的三种模式" class="headerlink" title="网络链接的三种模式"></a>网络链接的三种模式</h3><p><img src="http://picgo.kongshier.top/2767/image-20220713204751659.png" alt="image-20220713204751659"></p><h2 id="1-3-虚拟机的操作"><a href="#1-3-虚拟机的操作" class="headerlink" title="1.3 虚拟机的操作"></a>1.3 虚拟机的操作</h2><h4 id="虚拟机克隆："><a href="#虚拟机克隆：" class="headerlink" title="虚拟机克隆："></a>虚拟机克隆：</h4><ul><li>（先关闭虚拟机）复制粘贴虚拟机文件夹</li></ul><h4 id="虚拟机快照"><a href="#虚拟机快照" class="headerlink" title="虚拟机快照"></a>虚拟机快照</h4><ul><li>避免操作失误造成系统异常，还原到正常状态。</li></ul><h4 id="虚拟机迁移和删除"><a href="#虚拟机迁移和删除" class="headerlink" title="虚拟机迁移和删除"></a>虚拟机迁移和删除</h4><ul><li>直接copy</li><li>直接移除，没有删除文件内容</li></ul><h4 id="安装VMtools"><a href="#安装VMtools" class="headerlink" title="安装VMtools"></a>安装VMtools</h4><ul><li>更好管理vm虚拟机</li><li>windows和centos共享文件夹</li></ul><p><img src="http://picgo.kongshier.top/2767/image-20220714104144369.png" alt="image-20220714104144369"></p><h2 id="1-4-Linux目录结构"><a href="#1-4-Linux目录结构" class="headerlink" title="1.4 Linux目录结构"></a>1.4 Linux目录结构</h2><ul><li>根目录：&#x2F;</li><li>Linux的树状目录</li><li><strong>一切皆文件</strong></li></ul><img src="http://picgo.kongshier.top/2767/image-20220714163026910.png" alt="image-20220714163026910" style="zoom:80%;" /><img src="http://picgo.kongshier.top/2767/image-20220714164742555.png" alt="image-20220714164742555" style="zoom:80%;" /><img src="http://picgo.kongshier.top/2767/image-20220714165154352.png" alt="image-20220714165154352" style="zoom:80%;" /><img src="http://picgo.kongshier.top/2767/image-20220714165407526.png" alt="image-20220714165407526" style="zoom:80%;" /><h1 id="二、实际操作篇"><a href="#二、实际操作篇" class="headerlink" title="二、实际操作篇"></a>二、实际操作篇</h1><h2 id="2-1-远程登陆（XShell、-XFtp）"><a href="#2-1-远程登陆（XShell、-XFtp）" class="headerlink" title="2.1 远程登陆（XShell、 XFtp）"></a>2.1 远程登陆（XShell、 XFtp）</h2><h3 id="Linux应用场景"><a href="#Linux应用场景" class="headerlink" title="Linux应用场景"></a>Linux应用场景</h3><ul><li><p>Linux服务器是共享的</p></li><li><p>通过Linux进行项目的管理或开发</p></li></ul><h3 id="登录客户："><a href="#登录客户：" class="headerlink" title="登录客户："></a>登录客户：</h3><ul><li>XShell：安全终端模拟软件，通过XShell控制Linux里面文件，使用命令进行操作文件</li><li>XFtp：上传下载，在Linux和Windows之间进行传输文件</li></ul><h4 id="查看IP地址："><a href="#查看IP地址：" class="headerlink" title="查看IP地址："></a>查看IP地址：</h4><ul><li>指令：ifconfig</li></ul><h2 id="2-2-vi-和vim-编译器"><a href="#2-2-vi-和vim-编译器" class="headerlink" title="2.2 vi 和vim 编译器"></a>2.2 vi 和vim 编译器</h2><h3 id="vim-编译器"><a href="#vim-编译器" class="headerlink" title="vim 编译器"></a>vim 编译器</h3><p>语法：</p><blockquote><p>vim 指定的文件  ：打开指定的文件</p></blockquote><h4 id="插入模式："><a href="#插入模式：" class="headerlink" title="插入模式："></a>插入模式：</h4><ul><li>i ：输入</li><li>I ：插入行首</li><li>a：插入光标后一个</li><li>A:插入行末</li><li>o：向下新开一行</li><li>O：向上新开一行</li></ul><h4 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h4><ul><li>移动光标</li><li>h：左移</li><li>l：右移</li><li>k：上</li><li>j：下</li><li>wq：先按ESC，再输入wq，保存并退出</li><li>q!：强制退出不保存</li><li>q：退出</li></ul><h4 id="模式切换"><a href="#模式切换" class="headerlink" title="模式切换"></a>模式切换</h4><ul><li>按ESC：把当前的模式改成另外的一个模式.</li></ul><img src="http://picgo.kongshier.top/2767/image-20220714211504027.png" alt="image-20220714211504027" style="zoom:80%;" /><h4 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h4><ul><li>拷贝(复制)：yy，5yy：拷贝当前行向下的5行，并粘贴（输入p）</li><li>删除：dd，5dd：删除当前行向下的5行</li><li>查找：先按Esc切换到命令模式下，再输入’ &#x2F; ‘， 命令行下 &#x2F; 关键字，回车进行查找，输入n（next）查找下一个，要查找其他的内容，再次输入 ‘&#x2F;’，清空当前的内容</li><li>设置文件行数 ：(命令模式输入)：set nu ，（取消行号）：:set nonu</li><li>光标跳至最后一行：(一般模式）G</li><li>光标跳至首行：(一般模式）gg</li><li>撤销动作：（一般模式）u</li><li>光标移动到20行：（一般模式下）20 shift + g</li></ul><p><img src="http://picgo.kongshier.top/2767/image-20220714215336837.png" alt="image-20220714215336837"></p><h2 id="2-3-开机、重启和用户登录注销"><a href="#2-3-开机、重启和用户登录注销" class="headerlink" title="2.3 开机、重启和用户登录注销"></a>2.3 开机、重启和用户登录注销</h2><h3 id="关机、重启命令"><a href="#关机、重启命令" class="headerlink" title="关机、重启命令"></a>关机、重启命令</h3><ul><li>shutdown -h now ：立即关机</li><li>shutdown -h 1 ：1分钟后关机</li><li>shutdown -r now ：立即重启计算机</li><li>halt：关机</li><li>reboot：重启计算机</li><li>sync：把内存的数据同步到磁盘</li></ul><p>&#x3D;&#x3D;关机 &#x2F; 重启之前运行sync&#x3D;&#x3D;</p><h3 id="用户登录、注销"><a href="#用户登录、注销" class="headerlink" title="用户登录、注销"></a>用户登录、注销</h3><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><ul><li>Linux是多用户多任务的OS</li></ul><h4 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h4><p><strong>基本语法</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd 用户名</span><br></pre></td></tr></table></figure><p>默认该用户目录在&#x2F;home&#x2F;用户名</p><p>指定新用户的位置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -d 指定位置 用户名</span><br></pre></td></tr></table></figure><h4 id="指定-x2F-修改密码"><a href="#指定-x2F-修改密码" class="headerlink" title="指定 &#x2F; 修改密码"></a>指定 &#x2F; 修改密码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd 用户名</span><br></pre></td></tr></table></figure><h4 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">userdel 用户名</span><br><span class="line">userdel - r 用户名   : 删除用户以及该用户目录下的所有文件</span><br></pre></td></tr></table></figure><h4 id="查看用户信息"><a href="#查看用户信息" class="headerlink" title="查看用户信息"></a>查看用户信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id root :查看root的信息</span><br><span class="line"></span><br><span class="line">id 用户名</span><br></pre></td></tr></table></figure><h4 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h4><p>切换管理员身份：su -用户名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">su root  切换到管理员</span><br><span class="line"></span><br><span class="line">logout：从管理员退回到客户用户（权限低一级的用户）</span><br><span class="line"></span><br><span class="line">su 用户名 :切换到其他的普通用户下</span><br></pre></td></tr></table></figure><ul><li>高级用户到低级用户，不要输入密码</li><li>低级 &#x3D;&#x3D;》 高级，需输入密码</li></ul><h4 id="查看当前用户"><a href="#查看当前用户" class="headerlink" title="查看当前用户"></a>查看当前用户</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">who am I</span><br><span class="line">whoami</span><br></pre></td></tr></table></figure><ul><li>显示第一登录的用户</li></ul><h3 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h3><blockquote><p>对有共性 &#x2F; 权限的多个用户进行统一的管理</p></blockquote><h4 id="新增组"><a href="#新增组" class="headerlink" title="新增组"></a>新增组</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd 组名</span><br></pre></td></tr></table></figure><h4 id="删除组"><a href="#删除组" class="headerlink" title="删除组"></a>删除组</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupdel 组名</span><br></pre></td></tr></table></figure><h4 id="增加用户时直接加上组"><a href="#增加用户时直接加上组" class="headerlink" title="增加用户时直接加上组"></a>增加用户时直接加上组</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -g 用户组 用户名</span><br></pre></td></tr></table></figure><p>添加zwj，到wudang组中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd  -g wudang zwj</span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/image-20220715134144236.png" alt="image-20220715134144236"></p><h4 id="修改用户的组"><a href="#修改用户的组" class="headerlink" title="修改用户的组"></a>修改用户的组</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -g 用户组 用户名</span><br></pre></td></tr></table></figure><ul><li>把用户修改到其他的用户组下</li></ul><img src="http://picgo.kongshier.top/2767/image-20220715135047074.png" alt="image-20220715135047074" style="zoom:80%;" /><h2 id="2-4-实际指令"><a href="#2-4-实际指令" class="headerlink" title="2.4 实际指令"></a>2.4 实际指令</h2><h3 id="2-4-1-运行级别"><a href="#2-4-1-运行级别" class="headerlink" title="2.4.1 运行级别"></a>2.4.1 运行级别</h3><ul><li>0：关机</li><li>1：单用户（可以找回密码）</li><li>2：多用户没有网络服务</li><li><strong>3：多用户有网络服务</strong>  {工作用得最多的}</li><li>4：系统未使用保留给用户</li><li><strong>5：图像界面</strong></li><li>6：系统重启</li></ul><p>init[0,1,2,3,4,5,6]</p><p>查看当前的运行级别：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl  get-default</span><br></pre></td></tr></table></figure><p>查看指定目标的运行级别</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl  set-default TARGET.target</span><br><span class="line">systemctl  set-default mutl.target  :3</span><br><span class="line">systemctl  set-default graph.target :5</span><br></pre></td></tr></table></figure><h3 id="2-4-2-找回root密码"><a href="#2-4-2-找回root密码" class="headerlink" title="2.4.2 找回root密码"></a>2.4.2 找回root密码</h3><p>[跟着文档来操作](E:\Linux\take notes\linux找回root密码.pdf)</p><h3 id="2-4-3-帮组指令"><a href="#2-4-3-帮组指令" class="headerlink" title="2.4.3 帮组指令"></a>2.4.3 帮组指令</h3><ol><li><p>man：获得帮助信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man[命令或配置文件] </span><br></pre></td></tr></table></figure></li><li><p>help：获得shell内置命令的帮助信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">help </span><br></pre></td></tr></table></figure></li></ol><h3 id="2-4-4-文件目录指令"><a href="#2-4-4-文件目录指令" class="headerlink" title="2.4.4 文件目录指令"></a>2.4.4 文件目录指令</h3><p>&#x3D;&#x3D;查看另一个文档&#x3D;&#x3D;</p><ul><li>pwd：显示当前所在的目录</li></ul><h2 id="2-5-用户管理、组管理和权限管理"><a href="#2-5-用户管理、组管理和权限管理" class="headerlink" title="2.5  用户管理、组管理和权限管理"></a>2.5  用户管理、组管理和权限管理</h2><h3 id="2-5-1-文件-x2F-目录的所有者"><a href="#2-5-1-文件-x2F-目录的所有者" class="headerlink" title="2.5.1 文件 &#x2F; 目录的所有者"></a>2.5.1 文件 &#x2F; 目录的所有者</h3><p><strong>创建文件的用户，就是该文件的所有者</strong></p><p>查看文件的所有者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -ahl</span><br></pre></td></tr></table></figure><p>修改文件的所有者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown 用户名  文件名</span><br></pre></td></tr></table></figure><ul><li>修改的用户一定要存在</li></ul><h3 id="所在组"><a href="#所在组" class="headerlink" title="所在组"></a>所在组</h3><p>查看文件 &#x2F; 目录所在组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -ahl</span><br></pre></td></tr></table></figure><ul><li>每一个用户属于一个组</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd 组名</span><br></pre></td></tr></table></figure><p>案例：</p><ol><li>创建一个组master</li><li>创建一个用户for 放入到master组中</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">groupadd master</span><br><span class="line"></span><br><span class="line">useradd -g maser for</span><br></pre></td></tr></table></figure><h4 id="修改文件所在组"><a href="#修改文件所在组" class="headerlink" title="修改文件所在组"></a>修改文件所在组</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chgrp 组名 文件名</span><br></pre></td></tr></table></figure><h3 id="其他组"><a href="#其他组" class="headerlink" title="其他组"></a>其他组</h3><blockquote><p>除文件的所有者和所在组的用户外，系统的其他用户都是文件的其他组</p></blockquote><h4 id="改变用户的组"><a href="#改变用户的组" class="headerlink" title="改变用户的组"></a>改变用户的组</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">usermod -g 新组名  用户名</span><br><span class="line"></span><br><span class="line">usermod -d 目录名 用户名 改变该用户登录的初始目录。具有进入到新目录的权限</span><br></pre></td></tr></table></figure><h3 id="2-5-2-rwx权限"><a href="#2-5-2-rwx权限" class="headerlink" title="2.5.2 rwx权限"></a>2.5.2 rwx权限</h3><ul><li>d rwx rwx r-x：d 代表文件夹– 代表文件</li><li>rwx rwx r-x    ：r 可读     w 可写     x 可执行</li><li>第一组指文件的&#x3D;&#x3D;所有者（1 ~ 3 位）的权限&#x3D;&#x3D;，第二组代表文&#x3D;&#x3D;所有组的权限（4 ~ 6）&#x3D;&#x3D;，第三组代表&#x3D;&#x3D;其他用户权限（7 ~ 9）&#x3D;&#x3D;</li></ul><p><img src="http://picgo.kongshier.top/2767/image-20220716170426945.png" alt="image-20220716170426945"></p><h4 id="rwx-：目录"><a href="#rwx-：目录" class="headerlink" title="rwx ：目录"></a>rwx ：目录</h4><p><img src="http://picgo.kongshier.top/2767/image-20220716171510588.png" alt="image-20220716171510588"></p><h4 id="rwx：文件"><a href="#rwx：文件" class="headerlink" title="rwx：文件"></a>rwx：文件</h4><p><img src="http://picgo.kongshier.top/2767/image-20220716171521128.png" alt="image-20220716171521128"></p><p>数字表示权限：r &#x3D;4 , w &#x3D; 2 , x &#x3D; 1</p><h3 id="修改权限-chmod"><a href="#修改权限-chmod" class="headerlink" title="修改权限- chmod"></a>修改权限- chmod</h3><h4 id="1-字母法-、-、-x3D-三种赋予权限"><a href="#1-字母法-、-、-x3D-三种赋予权限" class="headerlink" title="1. 字母法  + 、-、&#x3D; 三种赋予权限"></a>1. 字母法  + 、-、&#x3D; 三种赋予权限</h4><blockquote><p>u ：所有者   g：所有组  o：其他人，a：所有人(u、g、a的总和)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">chmod  u+r/w/x 指定的文件  添加权限</span><br><span class="line"></span><br><span class="line">chmod  u-r/w/x 指定的文件  去除权限</span><br><span class="line"></span><br><span class="line">chmod  u=r/w/x 指定的文件  复制权限</span><br><span class="line"></span><br><span class="line">chmod  u+r，g-r ,o+w  指定文件    三部分人的权限 </span><br><span class="line"></span><br><span class="line">chmod u=rwx,g=rx,o=rx 文件</span><br></pre></td></tr></table></figure><h4 id="2-数字加法法"><a href="#2-数字加法法" class="headerlink" title="2. 数字加法法"></a>2. 数字加法法</h4><ul><li>0 ：- ；</li><li>1：x (可执行) ；</li><li>2：w (可写); </li><li>4：r  (可读)；</li><li>chmod 000 指定的文件   权限没有 </li><li>chmod  666 指定的文件   所有的都是  rw  4+2&#x3D;6</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod u=rwx,g=rx,o=rx 文件</span><br><span class="line"></span><br><span class="line">chmod 755 文件</span><br></pre></td></tr></table></figure><h3 id="修改文件所有者-chown"><a href="#修改文件所有者-chown" class="headerlink" title="修改文件所有者 - chown"></a>修改文件所有者 - chown</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">chown newowner 文件/目录 改变所有者</span><br><span class="line"></span><br><span class="line">chown nerowner:newgroup 文件/目录 改变所有者和所在组</span><br><span class="line"></span><br><span class="line">-R 向下递归子文件</span><br><span class="line"></span><br><span class="line">chown -R tom /home/test</span><br></pre></td></tr></table></figure><h3 id="修改文件-x2F-目录所在组-chgrp"><a href="#修改文件-x2F-目录所在组-chgrp" class="headerlink" title="修改文件&#x2F;目录所在组 - chgrp"></a>修改文件&#x2F;目录所在组 - chgrp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chgrp newowner 文件/目录</span><br><span class="line"></span><br><span class="line">chgrp tom 文件/目录</span><br><span class="line">chgrp -R tom 文件/目录  :递归向下修改</span><br></pre></td></tr></table></figure><h3 id="实践案例"><a href="#实践案例" class="headerlink" title="实践案例"></a>实践案例</h3><p>用户：</p><ul><li>police , bandit ：分组</li><li>jack、jerry：警察</li><li>xh, xq：土匪</li></ul><ol><li><p>创建组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">groupadd police </span><br><span class="line"></span><br><span class="line">groupadd brandit</span><br></pre></td></tr></table></figure></li><li><p>创建用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">useradd -g police jack</span><br><span class="line"></span><br><span class="line">useradd -g police jerry</span><br><span class="line"></span><br><span class="line">useradd -g bandit xh</span><br><span class="line"></span><br><span class="line">useradd -g bandit xq</span><br></pre></td></tr></table></figure></li><li><p>jack 创建一个文件，自己可以读r写w，本组人可以读r，其它组没人任何权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jack登录</span><br><span class="line"></span><br><span class="line">touch jack.txt</span><br><span class="line"></span><br><span class="line">chmod 640 jack.txt</span><br></pre></td></tr></table></figure></li><li><p>jack 修改该文件，让其它组人可以读,本组人可以读写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod o=r,g=r jack.txt</span><br></pre></td></tr></table></figure></li><li><p>xh投靠警察，看看是否可以读写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -g police xh</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-6-定时任务调度"><a href="#2-6-定时任务调度" class="headerlink" title="2.6 定时任务调度"></a>2.6 定时任务调度</h2><h3 id="2-6-1-crontab-定时任务的设置"><a href="#2-6-1-crontab-定时任务的设置" class="headerlink" title="2.6.1 crontab 定时任务的设置"></a>2.6.1 crontab 定时任务的设置</h3><ul><li>任务调度：系统在某个时间执行的特定的命令或程序</li><li>完成重复的调度</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab [选项]</span><br></pre></td></tr></table></figure><p>选项：</p><p><img src="http://picgo.kongshier.top/2767/image-20220717102808092.png" alt="image-20220717102808092"></p><ul><li>crontab -l ：列出当前所有的任务</li><li>contab -r：终止任务</li><li>service crond restart ：重启任务调度</li></ul><p><strong>每一分钟执行一次</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * ls -l /etc/ &gt; /tmp/to.txt</span><br></pre></td></tr></table></figure><p><strong>五个占位符的说明</strong>：</p><p><img src="http://picgo.kongshier.top/2767/image-20220717103159282.png" alt="image-20220717103159282"></p><p><strong>特殊符号意思：</strong></p><p><img src="http://picgo.kongshier.top/2767/image-20220717103751946.png" alt="image-20220717103751946"></p><p><strong>特定时间执行任务</strong></p><p><img src="http://picgo.kongshier.top/2767/image-20220717104117927.png" alt="image-20220717104117927"></p><p><strong>案例</strong>：</p><ul><li><p>每隔一分钟，将当前的日期信息，追加到&#x2F;tmp&#x2F;mydate 文件中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * date &gt;&gt; /tmp/mydate</span><br></pre></td></tr></table></figure></li><li><p>每隔一分钟，将当前的日期和日历追加到&#x2F;home&#x2F;mycal 文件中 (使用脚本来执行)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(1) 编写脚本文件</span><br><span class="line">vim /home/my.sh  代码：date &gt;&gt; /home/mycal 、cal &gt;&gt; /home/mycal</span><br><span class="line">(2) 给my.sh增加执行权限，</span><br><span class="line">chmod u+x my.sh</span><br><span class="line">(3) 设置定时</span><br><span class="line">crontab -e  添加内容：*/1 * * * * /home/my.sh</span><br></pre></td></tr></table></figure></li><li><p>每天凌晨 2：00 将mysql 数据库testdb ，备份到文件中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(1)设置定时</span><br><span class="line">crontab -e</span><br><span class="line">添加代码内容</span><br><span class="line">0 2 * * * mysqldump -u root -proot testdb &gt; /home/db.bak</span><br></pre></td></tr></table></figure></li></ul><p><img src="http://picgo.kongshier.top/2767/image-20220717111828677.png" alt="image-20220717111828677"></p><h3 id="2-6-2-at-定时任务"><a href="#2-6-2-at-定时任务" class="headerlink" title="2.6.2 at 定时任务"></a>2.6.2 at 定时任务</h3><ul><li><p>一次性定时计划任务，执行完就不再执行</p></li><li><p>使用at命令的时候，一定要保证atd进程的启动</p><p>查看进程atd是否正在运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep atd</span><br></pre></td></tr></table></figure></li><li><p><img src="http://picgo.kongshier.top/2767/image-20220717112822357.png" alt="image-20220717112822357"></p></li></ul><p>at <strong>命令格式</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">at [选项] [时间]</span><br><span class="line"></span><br><span class="line">Ctrl + D 结束at命令的输入</span><br></pre></td></tr></table></figure><p>选项</p><p><img src="http://picgo.kongshier.top/2767/image-20220717113006772.png" alt="image-20220717113006772"></p><h4 id="at-指定时间定义"><a href="#at-指定时间定义" class="headerlink" title="at 指定时间定义"></a>at 指定时间定义</h4><p><img src="http://picgo.kongshier.top/2767/image-20220717113224341.png" alt="image-20220717113224341"></p><p>案例：</p><ul><li><p>2天后的下午5点执行&#x2F;bin&#x2F;ls&#x2F;home </p><p><img src="http://picgo.kongshier.top/2767/image-20220717113544151.png" alt="image-20220717113544151"></p></li><li><p>atq命令来查看系统中没有执行的工作任务</p><p><img src="http://picgo.kongshier.top/2767/image-20220717115026668.png" alt="image-20220717115026668"></p></li><li><p>明天17点钟，输出时间到指定文件内 比如&#x2F;root&#x2F;date100.log</p><p><img src="http://picgo.kongshier.top/2767/image-20220717115109159.png" alt="image-20220717115109159"></p></li><li><p>2分钟后，输出时间到指定文件内 比如&#x2F;root&#x2F;date200.log</p><p><img src="http://picgo.kongshier.top/2767/image-20220717115236502.png" alt="image-20220717115236502"></p></li></ul><h2 id="2-7-磁盘分区、挂载"><a href="#2-7-磁盘分区、挂载" class="headerlink" title="2.7 磁盘分区、挂载"></a>2.7 磁盘分区、挂载</h2><h3 id="2-7-1-Linux分区"><a href="#2-7-1-Linux分区" class="headerlink" title="2.7.1 Linux分区"></a>2.7.1 Linux分区</h3><ul><li>只有一个根目录，独立且唯一的文件结构</li></ul><p>Linux 的硬盘主要有</p><ol><li><p>IDE硬盘</p><p>标识符：hdx~</p><ul><li>hd：分区所在设备类型</li><li>x：盘号</li></ul></li><li><p>SCSI硬盘</p><p>标识符：sdx~</p><ul><li>sd：分区所在的设备类型</li></ul></li></ol><p>查看设备挂载情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsblk</span><br><span class="line">lsblk -f</span><br></pre></td></tr></table></figure><h4 id="Linux-添加硬盘"><a href="#Linux-添加硬盘" class="headerlink" title="Linux 添加硬盘"></a>Linux 添加硬盘</h4><ol><li><p>虚拟机添加硬盘</p></li><li><p>分区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/sdb</span><br></pre></td></tr></table></figure><p>开始对&#x2F;sdb分区：依次输入以下</p><p>m：显示命令列表<br>p：显示磁盘分区 同 fdisk -l</p><p>n：新增分区<br>d：删除分区</p><p>w：写入并退出</p><p>说明:开始分区后输入n，新增分区，然后选择p，分区类型为主分区。两次回车默认剩余全部空间。最后输入w写入分区并退出，若不保存退出输入q。</p></li><li><p>格式化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs -t ext4 /dev/sdb1</span><br></pre></td></tr></table></figure></li><li><p>挂载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mount 设备名称 挂载目录</span><br><span class="line">mount /dev/sdb  /newdisk</span><br><span class="line"></span><br><span class="line">umount 设备名称/挂载目录</span><br><span class="line">umount /dev/sdb1 </span><br><span class="line">umount /nwedisk</span><br></pre></td></tr></table></figure><p>umount ：卸载挂载</p></li><li><p>设置自动挂载</p></li></ol><ul><li><p>永久挂载:通过修改&#x2F;etc&#x2F;fstab实现挂载 </p><p>vim &#x2F;etc&#x2F;fstab</p></li><li><p>添加完成后执行mount -a即刻生效</p></li></ul><h3 id="磁盘查询情况"><a href="#磁盘查询情况" class="headerlink" title="磁盘查询情况"></a>磁盘查询情况</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><h4 id="查询指定目录的占用情况"><a href="#查询指定目录的占用情况" class="headerlink" title="查询指定目录的占用情况"></a>查询指定目录的占用情况</h4><ul><li>不指定目录，默认为当前目录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -h</span><br></pre></td></tr></table></figure><ul><li>-s 指定目录占用大小汇总</li><li>-h 带计量单位</li><li>-a 含文件</li><li>–max-depth &#x3D; 1 子目录深度</li><li>-c 列出明细的同时，增加汇总值</li></ul><p>查看opt目录深度为1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -hac --max-depth=1 /opt</span><br></pre></td></tr></table></figure><h4 id="实用指令"><a href="#实用指令" class="headerlink" title="实用指令"></a>实用指令</h4><p><img src="http://picgo.kongshier.top/2767/image-20220717142826357.png" alt="image-20220717142826357"></p><h2 id="2-8-进程管理"><a href="#2-8-进程管理" class="headerlink" title="2.8 进程管理"></a>2.8 进程管理</h2><ul><li>执行的程序称为一个进程，每一个都分配有一个ID号（pid,进程号）</li><li>进程的两种存在形式：前台（后台运行，表面看不到）与后台（占用屏幕）</li></ul><h3 id="2-8-1-ps指令"><a href="#2-8-1-ps指令" class="headerlink" title="2.8.1 ps指令"></a>2.8.1 ps指令</h3><ul><li><p>ps 用来查看系统中执行的程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps</span><br><span class="line">ps -aux</span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/image-20220718093430189.png" alt="image-20220718093430189"></p></li><li><p>查看指定的进行。（grep 过滤）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -aux | grep sshd</span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/image-20220718094212458.png" alt="image-20220718094212458" style="zoom:67%;" /></li></ul><h3 id="2-8-2-子、父进程"><a href="#2-8-2-子、父进程" class="headerlink" title="2.8.2 子、父进程"></a>2.8.2 子、父进程</h3><p>全格式显示当前所有的进程，查看进程的父进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef :全格式显示当前所有的进程</span><br></pre></td></tr></table></figure><ul><li>-e：所有等进行。-f ：全格式</li></ul><img src="http://picgo.kongshier.top/2767/image-20220718094448340.png" alt="image-20220718094448340" style="zoom:80%;" /><h3 id="2-8-3-终止进程-kill-、killall"><a href="#2-8-3-终止进程-kill-、killall" class="headerlink" title="2.8.3 终止进程 kill 、killall"></a>2.8.3 终止进程 kill 、killall</h3><p>基本语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kill [选项] 进程号  ：通过进程号杀死进程</span><br><span class="line">killall 进程名称 填过进程名称杀死进程，也支持通配符</span><br></pre></td></tr></table></figure><p>选项：</p><p>-9：强制杀死进程</p><p>杀死sshd之后，再次重启sshd服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/systemctl start sshd.service</span><br></pre></td></tr></table></figure><p>终止多个gedit</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall gedit</span><br></pre></td></tr></table></figure><h3 id="2-8-4-查看进程树"><a href="#2-8-4-查看进程树" class="headerlink" title="2.8.4 查看进程树"></a>2.8.4 查看进程树</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pstree [选项] </span><br></pre></td></tr></table></figure><ul><li>-p：显示进程 的PID</li><li>-u：显示进程的所属用户</li></ul><h3 id="2-8-5-服务管理"><a href="#2-8-5-服务管理" class="headerlink" title="2.8.5 服务管理"></a>2.8.5 服务管理</h3><ul><li>服务  &#x3D;&#x3D; 进程，运行在后台，监听端口，等待其他程序的请求（守护进程）</li></ul><h4 id="service管理指令"><a href="#service管理指令" class="headerlink" title="service管理指令"></a>service管理指令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service 服务名 [start | stop |restrat |reload |status]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">关闭端口监听;service network stop</span><br><span class="line">打开端口监听：service network start</span><br></pre></td></tr></table></figure><p>查看服务名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setup</span><br></pre></td></tr></table></figure><h4 id="服务运行级别"><a href="#服务运行级别" class="headerlink" title="服务运行级别"></a>服务运行级别</h4><p>7中运行级别</p><img src="http://picgo.kongshier.top/2767/image-20220718102344827.png" alt="image-20220718102344827" style="zoom:67%;" /><p>开机流程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">1(开机)--&gt;2(BIOS)--&gt;4(/boot)--&gt;5(systemd进程1)--&gt;6(运行级别)--&gt;7(运行级别对应的服务)</span><br></pre></td></tr></table></figure><h3 id="2-8-6-chkcomfig-指令"><a href="#2-8-6-chkcomfig-指令" class="headerlink" title="2.8.6 chkcomfig 指令"></a>2.8.6 chkcomfig 指令</h3><p>给服务的运行级别设置自 启动&#x2F;关闭</p><p>查看服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --list [|grep xxx]</span><br><span class="line"></span><br><span class="line">chkconfig 服务名 --list</span><br><span class="line"></span><br><span class="line">chkconfig --level 0/1/2/3/4/5 服务名 on/off  :将服务在指定的级别关闭或启动</span><br></pre></td></tr></table></figure><ul><li>需要重启，才会生效</li></ul><h3 id="2-8-7-systemctl-管理"><a href="#2-8-7-systemctl-管理" class="headerlink" title="2.8.7 systemctl 管理"></a>2.8.7 systemctl 管理</h3><p>服务在 &#x3D;&#x3D;&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x3D;&#x3D;查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl 服务名 [start | stop |restrat |reload |status]</span><br></pre></td></tr></table></figure><p>systemctl设置服务的自启动状态</p><ol><li>systemctl list-unit-files  [ l grep 务名 ] (管看服务开机后动状态, grep 可以进行过话)</li><li>systemctl enable 服务名 (设置服务开机启动)</li><li>systemctl disable 服务名 (关闭服务开机启动)</li><li>systemctl is-enabled 服务名 (查询某个服务是否是自启动的)</li></ol><h3 id="2-8-8-f-irewall"><a href="#2-8-8-f-irewall" class="headerlink" title="2.8.8 f irewall"></a>2.8.8 f irewall</h3><p>&#x3D;&#x3D;打开或关闭指定的端口&#x3D;&#x3D;</p><ul><li>打开端口：firewali-cmd –permanent –add-port&#x3D;端口号&#x2F;协议</li><li>关闭端口：firewall-cmd –permanent –remove-port&#x3D;端口号&#x2F;协议</li><li>都需重新载入,才能生效：firewall-cmd –reload</li><li>查询端口是否开放：firewall-cmd –query-port&#x3D;端口&#x2F;协议</li></ul><h3 id="2-8-9-动态监控"><a href="#2-8-9-动态监控" class="headerlink" title="2.8.9 动态监控"></a>2.8.9 动态监控</h3><p>top 和 ps </p><ul><li>top 执行一段时间会更新正运行的进程</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top [选项]</span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/image-20220718111314674.png" alt="image-20220718111314674" style="zoom:80%;" /><h4 id="交互操作"><a href="#交互操作" class="headerlink" title="交互操作"></a>交互操作</h4><p>在进入top 下：输入</p><img src="http://picgo.kongshier.top/2767/image-20220718114355400.png" alt="image-20220718114355400" style="zoom: 80%;" /><ul><li>监控指定用户：top 回车，在输入u ，输入用户的名称</li><li>终止进程：top 回车，在输入k ，在输入PID</li><li>指定系统状态更新时间</li></ul><h4 id="查看网络系统状况-netstat"><a href="#查看网络系统状况-netstat" class="headerlink" title="查看网络系统状况 netstat"></a>查看网络系统状况 netstat</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat [选项]</span><br></pre></td></tr></table></figure><ul><li>-an ：按一定顺序排序</li><li>-p ：显示哪个进程在调用</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anp | more</span><br></pre></td></tr></table></figure><p>查看sshd 的服务信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anp | grep sshd</span><br></pre></td></tr></table></figure><p>检测主机链接命令ping </p><ul><li>检测远程网络链接是否正常</li></ul><h2 id="2-9-RPM-和YUM"><a href="#2-9-RPM-和YUM" class="headerlink" title="2.9 RPM 和YUM"></a>2.9 RPM 和YUM</h2><ul><li>rpm 用于下载包和安装包</li></ul><h3 id="2-9-1-rpm查询"><a href="#2-9-1-rpm查询" class="headerlink" title="2.9.1 rpm查询"></a>2.9.1 rpm查询</h3><p>简单查询：rpm -qa | grep xx </p><ul><li>rpm -qa 查询安装的rpm软件包</li><li>rpm -qi 软件包名 ：查询软件包信息</li><li>rpm -ql 软件包名：查询软件包中的文件</li><li>rpm -qf 文件全路径名 查询文件所属的软件包</li></ul><h3 id="2-9-2-rpm-卸载"><a href="#2-9-2-rpm-卸载" class="headerlink" title="2.9.2 rpm 卸载"></a>2.9.2 rpm 卸载</h3><p>语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e RPM包名称</span><br></pre></td></tr></table></figure><h3 id="2-9-3-安装-rpm包"><a href="#2-9-3-安装-rpm包" class="headerlink" title="2.9.3 安装 rpm包"></a>2.9.3 安装 rpm包</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh RPM包全路径名称</span><br></pre></td></tr></table></figure><ul><li>i &#x3D; install：安装</li><li>v&#x3D;verbose  ：提示</li><li>h&#x3D;hash ：进度条</li></ul><h3 id="2-9-4-yum"><a href="#2-9-4-yum" class="headerlink" title="2.9.4 yum"></a>2.9.4 yum</h3><ul><li>Shell 前端软件包管理器，自动下载RPM包，一次性安装所有依赖的软件包</li></ul><p>基本指令</p><ol><li><p>yum查询服务器是否需要的软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list | grep  XXX</span><br></pre></td></tr></table></figure></li><li><p>安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install xxx 下载安装</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-10-网络配置"><a href="#2-10-网络配置" class="headerlink" title="2.10 网络配置"></a>2.10 网络配置</h2><p>虚拟机链接网络</p> <img src="http://picgo.kongshier.top/2767/image-20220717210111476.png" alt="image-20220717210111476" style="zoom:80%;" /><h3 id="查看IP地址指令"><a href="#查看IP地址指令" class="headerlink" title="查看IP地址指令"></a>查看IP地址指令</h3><ol><li><p>Windows下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig</span><br></pre></td></tr></table></figure></li><li><p>Linux 下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure></li></ol><p>IP在同一个网关才可以ping通</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping ip地址</span><br></pre></td></tr></table></figure><h3 id="Linux网络环境配置"><a href="#Linux网络环境配置" class="headerlink" title="Linux网络环境配置"></a>Linux网络环境配置</h3><ol><li><p>自动获取</p><ul><li>Linux启动后会自动获取IP，但是每次获取的IP可能不一样</li></ul></li><li><p>指定ip</p><ul><li>直接修改IP文件来指定IP，并链接到外网</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scriipts/ifcfg-ens33</span><br></pre></td></tr></table></figure><p>（1）在里面修改成如下</p><p><img src="http://picgo.kongshier.top/2767/image-20220717212424940.png" alt="image-20220717212424940"></p><p>添加的内容：</p><blockquote><p>#IP<br>IPADDR&#x3D;192.168.20.132<br>#网关<br>GATEWAY&#x3D;192.168.20.2<br>#域名服务器<br>DNS1&#x3D;192.168.20.2</p></blockquote><p>（2）：修改虚拟机的子网网关，要与Linux一致</p></li></ol><p><img src="http://picgo.kongshier.top/2767/image-20220717212612747.png" alt="image-20220717212612747"></p><p>​网关就上面设置的网关</p><p><img src="http://picgo.kongshier.top/2767/image-20220717212838357.png" alt="image-20220717212838357"></p><p>（3） 重启网络服务或者重启系统生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart 、reboot</span><br></pre></td></tr></table></figure><p><strong>从Linux链接Windows时需要关闭网络防火墙</strong></p><h3 id="设置主机名"><a href="#设置主机名" class="headerlink" title="设置主机名"></a>设置主机名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname :查看主机名</span><br></pre></td></tr></table></figure><ul><li>修改文件在 &#x2F;etc&#x2F;hostname 指定</li><li>重启生效</li></ul><h3 id="设置hosts映射"><a href="#设置hosts映射" class="headerlink" title="设置hosts映射"></a>设置hosts映射</h3><ol><li><p>windows</p><img src="http://picgo.kongshier.top/2767/image-20220717214345842.png" alt="image-20220717214345842" style="zoom:67%;" /></li><li><p>linux</p><img src="http://picgo.kongshier.top/2767/image-20220717214359459.png" alt="image-20220717214359459" style="zoom:67%;" /></li></ol><ul><li>这样设置之后就可以通过 ping 主机名就可以ping通</li></ul><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><ul><li>Hosts：文本文件，记录IP和Hostname 的映射关系</li><li>DNS：域名系统</li></ul><h1 id="三、2021高级篇"><a href="#三、2021高级篇" class="headerlink" title="三、2021高级篇"></a>三、2021高级篇</h1><h2 id="3-1-日志管理"><a href="#3-1-日志管理" class="headerlink" title="3.1 日志管理"></a>3.1 日志管理</h2><ul><li>检测发生错误的原因，或者被攻击留下的痕迹</li></ul><h3 id="3-1-1-常用的日志"><a href="#3-1-1-常用的日志" class="headerlink" title="3.1.1 常用的日志"></a>3.1.1 常用的日志</h3><p>保存位置</p><ul><li><p>&#x2F;var&#x2F;log&#x2F; 该目录就是系统常用的日志文件</p></li><li><p>红色的为重点掌握</p> <img src="http://picgo.kongshier.top/2767/image-20220720130608416.png" alt="image-20220720130608416" style="zoom:80%;" /></li></ul><h3 id="3-1-2-日志管理服务-rsyslogd"><a href="#3-1-2-日志管理服务-rsyslogd" class="headerlink" title="3.1.2 日志管理服务  rsyslogd"></a>3.1.2 日志管理服务  rsyslogd</h3><p>CentOS7.6日志服务是rsyslogd，CentOS6.x日志服务是syslogd。rsyslogd功能更强大。rsyslogd的使用、日志文件的格式，和syslogd服务兼容的。原理示意图</p><ul><li><p>查询Linux 中的rsyslogd 服务是否启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep &quot;rsyslog&quot; | grep -v &quot;grep&quot;</span><br></pre></td></tr></table></figure><p>grep -v ：改变匹配的意义，只选择不匹配的行</p></li><li><p>查询 rsyslogd 服务的&#x3D;&#x3D;自启动状态&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-unit-files | grep rsyslog</span><br></pre></td></tr></table></figure></li></ul><h4 id="配置文件：-x2F-etc-x2F-rsyslog-conf"><a href="#配置文件：-x2F-etc-x2F-rsyslog-conf" class="headerlink" title="配置文件：&#x2F;etc&#x2F;rsyslog.conf"></a>配置文件：&#x2F;etc&#x2F;rsyslog.conf</h4><ul><li><p>编辑文件时的格式：<code>*.*</code>  存放日志文件</p><ul><li>第一个星表示 日志类型，第二个星表示 日志级别</li></ul></li><li><p>日志类型</p><img src="http://picgo.kongshier.top/2767/image-20220720135430855.png" alt="image-20220720135430855" style="zoom:80%;" /></li><li><p>日志级别</p><img src="http://picgo.kongshier.top/2767/image-20220720135527728.png" alt="image-20220720135527728" style="zoom:80%;" /></li></ul><img src="http://picgo.kongshier.top/2767/image-20220720140258172.png" alt="image-20220720140258172" style="zoom:80%;" /><h4 id="日志服务-rsyslog-记录日志文件"><a href="#日志服务-rsyslog-记录日志文件" class="headerlink" title="日志服务 rsyslog 记录日志文件"></a>日志服务 rsyslog 记录日志文件</h4><ul><li>事件产生的时间</li><li>产生事件的服务器的主机名</li><li>产生事件的服务名或程序名</li><li>事件的具体信息</li></ul><p>查看日志secure</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/log/secure </span><br></pre></td></tr></table></figure><img src="http://picgo.kongshier.top/2767/image-20220720141345571.png" alt="image-20220720141345571" style="zoom:80%;" /><h3 id="3-1-4-自定义日志服务"><a href="#3-1-4-自定义日志服务" class="headerlink" title="3.1.4 自定义日志服务"></a>3.1.4 自定义日志服务</h3><p>在 &#x2F;etc&#x2F;log&#x2F;的rsyslog.log 编写自己想要的日志服务信息 </p><p><img src="http://picgo.kongshier.top/2767/image-20220720142317025.png" alt="image-20220720142317025"></p><h3 id="3-1-5-日志轮替"><a href="#3-1-5-日志轮替" class="headerlink" title="3.1.5 日志轮替"></a>3.1.5 日志轮替</h3><ul><li><p>日志轮替就是把旧的日志文件移动并改名，同时建立新的空日志文件，当旧日志文件超出保存的范围之后，就会进行删除</p><p><strong><img src="http://picgo.kongshier.top/2767/image-20220720143816491.png" alt="image-20220720143816491"  /></strong></p></li></ul><p>配置文件参数：</p><img src="http://picgo.kongshier.top/2767/image-20220720144048639.png" alt="image-20220720144048639" style="zoom:80%;" /><h4 id="把日志文件写入日志轮替"><a href="#把日志文件写入日志轮替" class="headerlink" title="把日志文件写入日志轮替"></a>把日志文件写入日志轮替</h4><ul><li>第一种方法是直接在&#x2F;etc&#x2F;logrotate.conf 配置文件中写入该日志的轮替策略</li><li>【&#x3D;&#x3D;推荐&#x3D;&#x3D;】第二种方法是在&#x2F;etc&#x2F;logrotate.d&#x2F;目录中新建立该日志的轮替文件，在该轮替文件中写入正确的轮替策略，因为该目录中的文件都会被“include”到主配置文件中，所以也可以把日志加入轮替。</li></ul><h4 id="日志轮替机制原理"><a href="#日志轮替机制原理" class="headerlink" title="日志轮替机制原理"></a>日志轮替机制原理</h4><ul><li>依赖系统定时任务，&#x2F;etc&#x2F;cron.daily 目录下的logrotate可执行文件</li></ul><h3 id="3-1-6-查看内存日志"><a href="#3-1-6-查看内存日志" class="headerlink" title="3.1.6 查看内存日志"></a>3.1.6 查看内存日志</h3><p>journalctl可以查看内存日志</p><ul><li><p>journalctl ：查看全部</p></li><li><p>journalctl -n 3 ：查看最新3条</p></li><li><p>journalctl –since 19:00 –until 19:10:10 ：查看起始时间到结束时间的日志可加日期</p></li><li><p>journalctl -p err ：报错日志</p></li><li><p>journalctl -o verbose ：日志详细内容</p></li><li><p>journalctl _PID&#x3D;1245 _COMM&#x3D;sshd ：查看包含这些参数的日志（在详细日志查看)</p></li><li><p>~~~<br>journalctl l grep sshd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  注意: journalctl查看的是内存日志,重启清空</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 3.2 定制Linux</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;http://picgo.kongshier.top/2767/image-20220720193756789.png&quot; alt=&quot;image-20220720193756789&quot; style=&quot;zoom:80%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">在Linux的启动流程中,加载内核文件时关键文件：</span><br><span class="line"></span><br><span class="line">- kernel文件：vmlinuz-3.10.0-957.el7.x86_64</span><br><span class="line">- initrd文件: initramfs-3.10.0-957.el7.x86_64.img</span><br><span class="line"></span><br><span class="line"> 【[看文档操作](E:\Linux\take notes\制作自己 mini linux.pdf)】</span><br><span class="line"></span><br><span class="line">## 3.3 Linux内核源码&amp; 内核升级</span><br><span class="line"></span><br><span class="line">![image-20220720202327800](http://picgo.kongshier.top/2767/image-20220720202327800.png)</span><br><span class="line"></span><br><span class="line">### 内核升级</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;http://picgo.kongshier.top/2767/image-20220720204300714.png&quot; alt=&quot;image-20220720204300714&quot; style=&quot;zoom:80%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 3.4 Linux备份与恢复</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1. 将需要的文件用tar打包，恢复时解压并覆盖就可以</span><br><span class="line"></span><br><span class="line">2. 使用dump 和restore </span><br><span class="line"></span><br><span class="line">   - 需先安装好这两个</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>   yum -y install dump<br>   yum -y install resrore</p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 3.4.1 dump备份</span><br><span class="line"></span><br><span class="line">- dump支持分卷和增量备份（所谓的增量备份就是上次备份后 修改/增加过的文件 ,也是差异备份）</span><br><span class="line"></span><br><span class="line">  &lt;img src=&quot;http://picgo.kongshier.top/2767/image-20220721093920960.png&quot; alt=&quot;image-20220721093920960&quot; style=&quot;zoom:80%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">案例：</span><br><span class="line"></span><br><span class="line">- dump应用案例1</span><br><span class="line"></span><br><span class="line">将/boot分区所有内容备份到/opt/boot.bak0.bz2文件中，备份层级为“0&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>dump -0uj -f &#x2F;opt&#x2F;boot.bak0.bz2 &#x2F;boot</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- dump应用案例2</span><br><span class="line"></span><br><span class="line">在/boot目录下增加一个文件，备份层级为“1”(只备份上次使用层次“O”备份后发生过改变的数据),注意比较看看这次生成的备份文件boot1.bak有多大</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>dump -1uj -f &#x2F;opt&#x2F;boot.bak1.bz2 &#x2F;boot</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">==通过dump命令在配合crontab可以实现无人值守备份==</span><br><span class="line"></span><br><span class="line">### 3.4.2 dump 其他选项</span><br><span class="line"></span><br><span class="line">- dump -W  ：查看备份的文件，以及最后一次备份的层级</span><br><span class="line"></span><br><span class="line">-  查看备份时间文件</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>cat&#x2F;etc&#x2F;dumpdates</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">dump 备份目录或者文件，是不支持增量备份的，只能使用0级别进行备份，将文件上次到其他服务器</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 3.4.3 恢复restore</span><br><span class="line"></span><br><span class="line">基本语法</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>restore [模式选项] [选项]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;img src=&quot;http://picgo.kongshier.top/2767/image-20220721095315543.png&quot; alt=&quot;image-20220721095315543&quot; style=&quot;zoom: 67%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">~~~~</span><br><span class="line">restore -C -f /opt/boot.bak1.bz2   进行恢复比较，和现在当前的文件进行比较</span><br><span class="line"></span><br><span class="line">restore -r -f  /opt/boot.bak0.bz2  进行还原恢复</span><br><span class="line"></span><br><span class="line">restore -r -f  备份的文件 还原备份的文件/目录</span><br><span class="line">~~~~</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 3.5 Linux可视化管理</span><br><span class="line"></span><br><span class="line">### 3.5.1 webmin 工具</span><br><span class="line"></span><br><span class="line">下载地址</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>wget <a href="http://prdownloads.sourceforge.net/webadmin/webmin-1.997-1.noarch.rpm">http://prdownloads.sourceforge.net/webadmin/webmin-1.997-1.noarch.rpm</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;img src=&quot;http://picgo.kongshier.top/2767/image-20220721103534765.png&quot; alt=&quot;image-20220721103534765&quot; style=&quot;zoom:80%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;http://picgo.kongshier.top/2767/image-20220721103708687.png&quot; alt=&quot;image-20220721103708687&quot; style=&quot;zoom:80%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">### 3.5.2 bt工具</span><br><span class="line"></span><br><span class="line">- 提升运维效率服务器管理软件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">安装指令</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>yum install -y wget &amp;&amp; wget -O install.sh <a href="http://download.bt.cn/install/install_6.0.sh">http://download.bt.cn/install/install_6.0.sh</a> &amp;&amp; sh install.sh </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">安装完成</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><h1 id="Congratulations-Installed-successfully"><a href="#Congratulations-Installed-successfully" class="headerlink" title="Congratulations! Installed successfully!"></a>Congratulations! Installed successfully!</h1><p>外网面板地址: <a href="http://113.16.28.154:8888/c6d9af34">http://113.16.28.154:8888/c6d9af34</a><br>内网面板地址: <a href="http://192.168.20.132:8888/c6d9af34">http://192.168.20.132:8888/c6d9af34</a><br>username: jo4h5ky9<br>password: 1fd9ba16<br>If you cannot access the panel,<br>release the following panel port [8888] in the security group</p><h1 id="若无法访问面板，请检查防火墙-x2F-安全组是否有放行面板-8888-端口"><a href="#若无法访问面板，请检查防火墙-x2F-安全组是否有放行面板-8888-端口" class="headerlink" title="若无法访问面板，请检查防火墙&#x2F;安全组是否有放行面板[8888]端口"></a>若无法访问面板，请检查防火墙&#x2F;安全组是否有放行面板[8888]端口</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> Linux入侵检测&amp; 权限划分&amp;系统优化 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 审计指令</span><br><span class="line"></span><br><span class="line">  - last：这个命令可用于查看我们系统的成功登录、关机、重启等情况；这个命令就是将/var/log/wtmp文件[格式化输出](https://so.csdn.net/so/search?q=格式化输出&amp;spm=1001.2101.3001.7020)。</span><br><span class="line"></span><br><span class="line">  - lastb：这个命令用于查看登录失败的情况；这个命令就是将/var/log/btmp文件格式化输出。</span><br><span class="line">  - lastlog：这个命令用于查看用户上一次的登录情况；这个命令就是将/var/log/lastlog文件格式化输出。</span><br><span class="line">  - who：这个命令用户查看当前登录系统的情况；这个命令就是将/var/log/utmp文件格式化输出。</span><br><span class="line">  - w：与who命令一致。</span><br><span class="line"></span><br><span class="line">- 日志查看</span><br><span class="line"></span><br><span class="line">- 用户查看</span><br><span class="line"></span><br><span class="line">- 进程查看</span><br><span class="line"></span><br><span class="line">- 其他</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">权限划分</span><br><span class="line"></span><br><span class="line">- r</span><br><span class="line">- w</span><br><span class="line">- x</span><br><span class="line">- u g o 三种用户对文件的操作的权限</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">系统优化</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 3.6 Linux面试题</span><br><span class="line"></span><br><span class="line">### 1 </span><br><span class="line"></span><br><span class="line">分析日志t.log(访问量)，将各个ip地址截取，并统计出现次数,并按从大到小排序</span><br><span class="line"></span><br><span class="line">http://192.168.200.10/index1.html</span><br><span class="line"></span><br><span class="line">http://192.168.200.10/index2.html</span><br><span class="line"></span><br><span class="line">http://192.168.200.20/index1.html</span><br><span class="line"></span><br><span class="line">http://192.168.200.30/index1.html</span><br><span class="line"></span><br><span class="line">http://192.168.200.40/index1.html</span><br><span class="line"></span><br><span class="line">http://192.168.200.30/order.html</span><br><span class="line"></span><br><span class="line">http://192.168.200.10/order.html</span><br><span class="line"></span><br><span class="line">首先把这些网站放入一个文件当中</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>vim interview.txt</p></li></ul><p>cat interview.txt | cut -d ‘&#x2F;‘ -f 3 |sort | uniq -c | sort -nr</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 2</span><br><span class="line"></span><br><span class="line">统计连接到服务器的各个ip情况，并按连接数从大到小排序</span><br><span class="line"></span><br><span class="line">~~~~</span><br><span class="line">netstat -an | grep ESTABLISHED | awk -F &quot; &quot; &#x27;&#123;print $5&#125;&#x27; | cut -d &quot;:&quot; -f 1 | sort | uniq -cl sort -nr</span><br><span class="line">~~~~</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 四、定制篇</span><br><span class="line"></span><br><span class="line">## 4.1 Linux之JavaEE</span><br><span class="line"></span><br><span class="line">### JDK安装</span><br><span class="line"></span><br><span class="line">步骤：</span><br><span class="line"></span><br><span class="line">1. mdir /opt/jdk</span><br><span class="line"></span><br><span class="line">2. 实用xftp7上传到/opt/jdk</span><br><span class="line"></span><br><span class="line">3. 解压tar -zxvf jdk1.8.0_333-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line">4. mkdir /usr/local/java</span><br><span class="line"></span><br><span class="line">5. mv /opt/jdk/jdk1.8.0_333 /usr/local/java</span><br><span class="line"></span><br><span class="line">6. 配置环境变量的配置文件 vim /etc/profile </span><br><span class="line"></span><br><span class="line">   ​进入了profile 之后，在文件的最后添加以下两句</span><br><span class="line"></span><br><span class="line">   - export JAVA_HOME=/usr/local/java/jdk1.8.0_333</span><br><span class="line">   - export PATH=`$JAVA_HOME/bin:  $`PATH</span><br><span class="line"></span><br><span class="line">7. source  /etc/profile [让文件生效] (刷新环境变量)</span><br><span class="line">   测试是否安装成功</span><br><span class="line"></span><br><span class="line">### idea安装</span><br><span class="line"></span><br><span class="line">步骤：</span><br><span class="line"></span><br><span class="line">1. 下载地址:https://www.jetbrains.com/idea/download/#section=windows</span><br><span class="line">2. 解压缩到/opt/idea</span><br><span class="line">3. 启动idea bin目录下./idea.sh，配置jdk</span><br><span class="line">4. 编写Hello world程序并测试成功!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### Tomcat安装</span><br><span class="line"></span><br><span class="line">步骤：</span><br><span class="line"></span><br><span class="line">1. 上传安装文件，并解压缩到/opt/tomcat</span><br><span class="line">2. 进入解压目录/bin,启动tomcat ./startup.sh</span><br><span class="line">3. 开放端口8080（打开端口）</span><br><span class="line"></span><br><span class="line">测试：http://linuxip:8080</span><br><span class="line"></span><br><span class="line">### MySQL安装</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 4.2 Linux之大数据 shell</span><br><span class="line"></span><br><span class="line">- shell 是一种命令行解释器，</span><br><span class="line">- 用户可以用Shell来编程、挂起、停止、编写程序</span><br><span class="line"></span><br><span class="line">### 4.2.1 Shell脚本执行方式</span><br><span class="line"></span><br><span class="line"> 格式要求 ：</span><br><span class="line"></span><br><span class="line">- 以#!/bin/bash开头</span><br><span class="line">- 具有可执行权限</span><br><span class="line"></span><br><span class="line">执行方式</span><br><span class="line"></span><br><span class="line">1. 赋予权限 +x 执行权限</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>   chmod u+x(u用户执行权限、g、o) 文件名<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2. sh+脚本</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>   sh hello.sh<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 4.2.2 Shell变量</span><br><span class="line"></span><br><span class="line">1. 系统变量</span><br><span class="line"></span><br><span class="line">   `$ HOME`、 `$PWD` 、`$SHELL` 等</span><br><span class="line"></span><br><span class="line">   显示当前shell中所有变量：set</span><br><span class="line"></span><br><span class="line">2. 用户自定义变量</span><br><span class="line"></span><br><span class="line">   定义变量语法：</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>   变量 &#x3D; 值<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">撤销变量</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>   unset 变量<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">声明静态变量</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>   readonly 变量<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   - 不能unset</span><br><span class="line"></span><br><span class="line">#### 规则</span><br><span class="line"></span><br><span class="line">- 变量名称可以由字母、数字和下划线组成，但是不能以数字开头。</span><br><span class="line">- 等号两侧不能有空格</span><br><span class="line">- ==变量名称一般大写== </span><br><span class="line"></span><br><span class="line">讲命令的结果返回赋值变量</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>C&#x3D;<code>date</code><br>D&#x3D;$(cal)<br>echo “C&#x3D;$C”<br>echo “D&#x3D;$D”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 4.2.3 设置环境变量</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>export 变量名&#x3D;变量值   ：讲shell变量输出为环境变量&#x2F;全局变量<br>source 文件名  ：让修改后的配置信息生效<br>echo $变量名 ：查询环境变量的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 在/etc/profile文件中设置环境变量</span><br><span class="line"></span><br><span class="line">shell多行注释语句</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>:&lt;&lt;!</p><p>代码块</p><p>!</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 4.2.4 位置参数</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>.&#x2F;myshell 100 200</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">基本语法</span><br><span class="line"></span><br><span class="line">- $n ：n为数字，`$`0代表命令本身，`$1-$9`代表第一到第九个参数，十以上的参数，十以上的参数需要用大括号包含：如`$&#123;10&#125;` </span><br><span class="line"></span><br><span class="line">- $*：命令行中的所有参数，`$*` 把所有的参数看错一个整体</span><br><span class="line"></span><br><span class="line">- $@：命令行中所有的参数，`$@` 把每一个参数区分对待</span><br><span class="line"></span><br><span class="line">- $#：代表命令行中所有参数的个数</span><br><span class="line"></span><br><span class="line">  ![image-20220718214425907](http://picgo.kongshier.top/2767/image-20220718214425907.png)</span><br><span class="line"></span><br><span class="line">![image-20220718214336348](http://picgo.kongshier.top/2767/image-20220718214336348.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 4.2.5 预定义变量</span><br><span class="line"></span><br><span class="line">基本语法</span><br><span class="line"></span><br><span class="line">- $$：当前进程的进程号(PID)</span><br><span class="line">- $!：后台运行的最后一个进程的进程号(PID)</span><br><span class="line">- $?：最后一次执行的命令的返回状态。如果这个变量的值为0，证明上一个命令正确执行;如果这个变量的值为非(具体是哪个数，由命令自己来决定），则证明上一个命令执行不正确了。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 4.2.6 运算符</span><br><span class="line"></span><br><span class="line">基本语法</span><br><span class="line"></span><br><span class="line">1. $((运算式))  或 `$[运算式]` 或 expr m + n //expression 表达式</span><br><span class="line"></span><br><span class="line">   - expr 运算符之间有空格</span><br><span class="line">   - expr m - n</span><br><span class="line">   - expr \* / % 乘 除 取余</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code># 计算（2+4）*4#方式一RES=$(((2+4)*4))echo &quot;RES1=$RES&quot;#方式二RES=$[(2+4)*4]echo &quot;RES2=$RES&quot;#方式三TEMP=`expr 2 + 3`RES=`expr $TEMP \* 4`echo &quot;TEMP1=$RES&quot;# 计算两个参数求和SUM=$[$1+$2]echo &quot;sum=$SUM&quot;./myshell.sh 20 30(传参数)</code></pre>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 4.2.7 条件控制</span><br><span class="line"></span><br><span class="line">基本语法</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>[ condition ]  #前后有空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 非空返回true，$?验证（0为true ，&gt;1 为false）</span><br><span class="line">- 以 if 开始， 以 fi 结束</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;http://picgo.kongshier.top/2767/image-20220719111419182.png&quot; alt=&quot;image-20220719111419182&quot; style=&quot;zoom:80%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">判断 &quot;kkk&quot;是否等于&quot;kkk&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>if [ “KKK” &#x3D; “KKK” ]<br>then<br>        echo “equal”<br>fi</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">判断 12是否大于等于15</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>if [ 12 -ge 15 ]<br>then<br>        echo “大于了”<br>fi</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">判断文件是否存在指定路径</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>if [ -f &#x2F;usr&#x2F;a.txt ]<br>then<br>        echo “存在该文件”<br>fi</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 4.2.8 流程控制</span><br><span class="line"></span><br><span class="line">1. if 判断</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>   if [ 条件判断式 ]<br>   then<br>       代码块<br>   fi<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><br>   if [ 条件判断式 ]<br>   then<br>       代码块<br>   elif [ 条件 ]<br>   then<br>       代码块<br>   fi<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">例子</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>   #!&#x2F;bin&#x2F;bash<br>   if [ $1 -ge 60 ]<br>   then<br>       echo “及格了”<br>   elif [ $1 -lt 60 ]<br>   then<br>       echo “不及格”<br>   fi<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2. case语句</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>   case $变量名 in<br>     “值1”)<br>     如果变量的值等于值1，则执行程序1<br>     ;;<br>     “值2”)<br>     如果变量的值等于值2，则执行程序2<br>     ;;<br>     …省略其他分支.…<br>     *)<br>     如果变量的值都不是以上的值，则执行此程序<br>     ;;<br>   esac<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">实例：</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>   #!&#x2F;bin&#x2F;bash<br>   case $1 in<br>   “1”)<br>   echo “周一”<br>   ;;<br>   “2”)<br>   echo “周二”<br>   ;;<br>   <em>)<br>   echo “other day …”<br>   ;;<br>   esac<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3. for循环</span><br><span class="line"></span><br><span class="line">   基本语法1</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>   for 变量 in 值1 值2 值n…<br>   do<br>       程序&#x2F;代码<br>   done<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">基本语法2</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>   for ((初始值;循环控制条件;变量变化))<br>   do<br>       程序&#x2F;代码<br>   done<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">案例</span><br><span class="line"></span><br><span class="line">1. 打印命令行输入的参数 （区分`$*` 、`$@`）</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>   #!&#x2F;bin&#x2F;bash<br>   for i in “$</em>“<br>   do<br>       echo “num is $i”<br>   done</p><p>   #!&#x2F;bin&#x2F;bash<br>   for j in “$@”<br>   do<br>       echo “num is $j”<br>   done<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- `$*`  是把所有参数看作一个整体</span><br><span class="line">- `$@` 把每一个参数分开</span><br><span class="line"></span><br><span class="line">2. 100的累加</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>      #!&#x2F;bin&#x2F;bash<br>      SUM&#x3D;0<br>      for (( i&#x3D;1;i&lt;&#x3D;100;i++))<br>      do<br>          SUM&#x3D;$[$SUM+$i]<br>      done<br>      echo “sum&#x3D; $SUM”</p><pre><code>  # 指定数字的累加求和  for (( i=1;i&lt;=$1;i++))  do      SUM=$[$SUM+$i]  done  echo &quot;sum= $SUM&quot;  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">4. while 循环</span><br><span class="line"></span><br><span class="line">   基本语法</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre><p>   while [ 条件判断 ]  # []里面左右两侧有空格<br>   do<br>   代码<br>   done<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><br>   #!&#x2F;bin&#x2F;bash<br>   SUM&#x3D;0<br>   i&#x3D;0<br>   while [ $i -le $1 ]<br>   do<br>       SUM&#x3D;$[$SUM+$i]<br>       i&#x3D;$[$i+1]<br>   done<br>   echo “sum&#x3D;$SUM”<br>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### read 读取控制台输入</span><br><span class="line"></span><br><span class="line">基本语法</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>read (选项)(参数)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- -p：指定读取时的提示符</span><br><span class="line">- -t：指定读取时的等待时间，不指定就没有等待时间</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>#!&#x2F;bin&#x2F;bash</p><h1 id="读取控制台的输入的一个num1值"><a href="#读取控制台的输入的一个num1值" class="headerlink" title="读取控制台的输入的一个num1值"></a>读取控制台的输入的一个num1值</h1><p>read -p “请输入一个数num1&#x3D;” NUM1<br>echo “您输入 NUM1 &#x3D;$NUM1”</p><h1 id="读取控制台的输入的一个num1值-在10秒内输入"><a href="#读取控制台的输入的一个num1值-在10秒内输入" class="headerlink" title="读取控制台的输入的一个num1值,在10秒内输入"></a>读取控制台的输入的一个num1值,在10秒内输入</h1><p>read -t 10 -p “请输入一个数num2&#x3D;” NUM2<br>echo “您输入的NUM2&#x3D;$NUM2”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 4.2.9 函数</span><br><span class="line"></span><br><span class="line">#### 系统函数</span><br><span class="line"></span><br><span class="line">basename基本语法</span><br><span class="line"></span><br><span class="line">功能返回完整路径最后 / 的部分，常用于获取文件名</span><br><span class="line"></span><br><span class="line">- basename [pathname] [suffix]</span><br><span class="line"></span><br><span class="line">  basename [string] [suffix]</span><br><span class="line"></span><br><span class="line">  (功能描述:basename命令会删掉所有的前缀包括最后一个(‘T)字符，然后将字符串显示出来。</span><br><span class="line"></span><br><span class="line">- 选项:</span><br><span class="line"></span><br><span class="line">  suffix为后缀，如果suffix被指定了,basename会将pathname或string中的suffix去掉。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dirname </span><br><span class="line"></span><br><span class="line">- 返回完整路径最后 / 的前面的部分，常用于==返回部分路径==</span><br><span class="line">- dirname 文件绝对路径 </span><br><span class="line"></span><br><span class="line">==不包括文件名字的，只有目录==</span><br><span class="line"></span><br><span class="line">#### 自定义函数</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>[ function ] funname[()]<br>{<br>    Action;<br>    [retuen int;]<br>}</p><h1 id="调用函数名"><a href="#调用函数名" class="headerlink" title="调用函数名"></a>调用函数名</h1><p>funname [值]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">案例：计算输入两个参数的和</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>function getSum(){</p><pre><code>SUM=$[$n1+$n2]echo &quot;和为：$SUM&quot;</code></pre><p>}</p><h1 id="输入两个数"><a href="#输入两个数" class="headerlink" title="输入两个数"></a>输入两个数</h1><p>read -p “请输入一个数n1&#x3D;” n1<br>read -p “请输入一个数n2&#x3D;” n2</p><p>#调用自定义函数<br>getSum $n1 $n2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 定时维护MySQL数据库</span><br><span class="line"></span><br><span class="line">#### 需求分析</span><br><span class="line"></span><br><span class="line">- 每天凌晨2:30备份数据库demo 到/data/backup/db</span><br><span class="line">- 备份开始和备份结束能够给出相应的提示信息</span><br><span class="line">- 备份后的文件要求以备份时间为文件名，并打包成.tar.gz的形式，比如:2021-03-12_230201.tar.gz</span><br><span class="line">- 在备份的同时,检查是否有10天前备份的数据库文件，如果有就将其删除。</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;http://picgo.kongshier.top/2767/image-20220719203239003.png&quot; alt=&quot;image-20220719203239003&quot; style=&quot;zoom:80%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">mysql_db_backup.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>#!&#x2F;bin&#x2F;bash<br>#备份的目录<br>BACKUP&#x3D;&#x2F;date&#x2F;backup&#x2F;db<br>#当前时间<br>DATETIME&#x3D;$(date +%Y-%m-%d_%H:%M:%S)<br>echo “$DATETIME”<br>#数据库地址<br>HOST&#x3D;localhost<br>#数据库用户名<br>DB_USER&#x3D;root<br>#数据库密码<br>DB_PW&#x3D;123456<br>#备份的数据库名<br>DATABASE&#x3D;studydemo</p><p>#创建备份目录，如果不存在就创建<br>[ ! -d “${BACKUP}&#x2F;${DATETIME}” ] &amp;&amp; mkdir -p “${BACKUP}&#x2F;${DATETIME}”</p><p>#备份数据库<br>mysqldump -u${DB_USER} -p${DB_PW} –host&#x3D;${HOST} -q -R –datebases ${DATABASE} | gzip &gt; “${BACKUP}&#x2F;${DATETIME}&#x2F;$DATETIME.tar.gz”</p><p>#将文件处理成tar.gz<br>cd ${BACKUP}<br>tar -zcvf $DATETIME.tar.gz ${DATETIME}</p><p>#删除对应的备份目录<br>rm -rf ${BACKUP}&#x2F;${DATETIME}<br>#删除十天以前的备份文件<br>find ${BACKUP} -atime +10 -name “*.tar.gz” -exec rm {} ;<br>echo “成功备份数据库 ${DATABASE}!!”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">每天2：30执行文件</span><br><span class="line"></span><br><span class="line">crondtab -e </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>30 2 * * * &#x2F;usr&#x2F;sbin&#x2F;mysql_db_backup.sh</p><pre><code>## Linux之Python（不走这个方向，没有看视频）Python专业开发平台 -UbuntuUbuntu下开发Python开发环境APT软件管理和远程登录</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDBC</title>
      <link href="/post/8fe47ff4.html"/>
      <url>/post/8fe47ff4.html</url>
      
        <content type="html"><![CDATA[<h2 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h2><p><strong>今日目标</strong></p><blockquote><ol><li>掌握JDBC的的CRUD</li><li>理解JDBC中各个对象的作用</li><li>掌握Druid的使用</li></ol></blockquote><h2 id="1，JDBC概述"><a href="#1，JDBC概述" class="headerlink" title="1，JDBC概述"></a>1，JDBC概述</h2><p>在开发中我们使用的是java语言，那么势必要通过java语言操作数据库中的数据。这就是接下来要学习的JDBC。 </p><h3 id="1-1-JDBC概念"><a href="#1-1-JDBC概念" class="headerlink" title="1.1  JDBC概念"></a>1.1  JDBC概念</h3><blockquote><p>JDBC   就是使用Java语言操作关系型数据库的一套API</p><p>全称：( Java DataBase Connectivity ) Java 数据库连接</p></blockquote><p>我们开发的同一套Java代码是<strong>无法操作不同的关系型数据库</strong>，因为每一个关系型数据库的底层实现细节都不一样。如果这样，问题就很大了，在公司中可以在开发阶段使用的是MySQL数据库，而上线时公司最终选用oracle数据库，我们就需要对代码进行大批量修改，这显然并不是我们想看到的。我们要做到的是同一套Java代码操作不同的关系型数据库，而此时sun公司就指定了一套标准接口（JDBC），&#x3D;&#x3D;JDBC中定义了所有操作关系型数据库的规则&#x3D;&#x3D;。众所周知接口是无法直接使用的，我们需要使用接口的实现类，而这套实现类（称之为：驱动）就由各自的数据库厂商给出。</p><h3 id="1-2-JDBC本质"><a href="#1-2-JDBC本质" class="headerlink" title="1.2  JDBC本质"></a>1.2  JDBC本质</h3><ul><li>官方（sun公司）定义的一套操作所有关系型数据库的规则，即接口</li><li>各个数据库厂商去实现这套接口，提供数据库驱动jar包</li><li>我们可以使用这套接口（JDBC）编程，真正执行的代码是驱动jar包中的实现类</li></ul><h3 id="1-3-JDBC好处"><a href="#1-3-JDBC好处" class="headerlink" title="1.3  JDBC好处"></a>1.3  JDBC好处</h3><ul><li>各数据库厂商使用相同的接口，Java代码不需要针对不同数据库分别开发</li><li>可随时替换底层数据库，访问数据库的Java代码基本不变</li></ul><p>以后编写操作数据库的代码只需要面向JDBC（接口），操作哪儿个关系型数据库就需要导入该数据库的驱动包，如需要操作MySQL数据库，就需要再项目中导入MySQL数据库的驱动包。如下图就是MySQL驱动包</p><h2 id="2，JDBC快速入门"><a href="#2，JDBC快速入门" class="headerlink" title="2，JDBC快速入门"></a>2，JDBC快速入门</h2><p>先来看看通过Java操作数据库的流程</p><p>第一步：编写Java代码</p><p>第二步：Java代码将SQL发送到MySQL服务端</p><p>第三步：MySQL服务端接收到SQL语句并执行该SQL语句</p><p>第四步：将SQL语句执行的结果返回给Java代码</p><h3 id="2-1-编写代码步骤"><a href="#2-1-编写代码步骤" class="headerlink" title="2.1  编写代码步骤"></a>2.1  编写代码步骤</h3><ul><li><p>创建工程，导入驱动jar包</p></li><li><p>注册驱动</p></li></ul>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br></pre></td></tr></table></figure><ul><li><p>获取连接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Connection conn <span class="operator">=</span> DriverManager.getConnection(url, username, password);</span><br></pre></td></tr></table></figure><p>Java代码需要发送SQL给MySQL服务端，就需要先建立连接</p></li><li><p>定义SQL语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String <span class="keyword">sql</span> <span class="operator">=</span>  “<span class="keyword">update</span>…” ;</span><br></pre></td></tr></table></figure></li><li><p>获取执行SQL对象</p><p>执行SQL语句需要SQL执行对象，而这个执行对象就是Statement对象</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Statement stmt <span class="operator">=</span> conn.createStatement();</span><br></pre></td></tr></table></figure></li><li><p>执行SQL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stmt.executeUpdate(<span class="keyword">sql</span>);  </span><br></pre></td></tr></table></figure></li><li><p>处理返回结果</p></li><li><p>释放资源</p></li></ul><h3 id="2-2-具体操作"><a href="#2-2-具体操作" class="headerlink" title="2.2  具体操作"></a>2.2  具体操作</h3><ul><li><p>创建新的空的项目</p></li><li><p>定义项目的名称，并指定位置</p></li><li><p>对项目进行设置，JDK版本、编译版本</p></li><li><p>创建模块，指定模块的名称及位置</p></li><li><p>导入驱动包</p><p>将mysql的驱动包放在模块下的lib目录（随意命名）下，并将该jar包添加为库文件</p></li><li><p>在添加为库文件的时候，有如下三个选项</p><ul><li>Global Library  ： 全局有效</li><li>Project Library :   项目有效</li><li>Module Library ： 模块有效</li></ul></li></ul><ul><li>在src下创建类</li></ul><ul><li>编写代码如下</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JDBC快速入门</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JDBCDemo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//1. 注册驱动</span></span><br><span class="line">        <span class="comment">//Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span></span><br><span class="line">        <span class="comment">//2. 获取连接</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://127.0.0.1:3306/db1&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;1234&quot;</span>;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url, username, password);</span><br><span class="line">        <span class="comment">//3. 定义sql</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update account set money = 2000 where id = 1&quot;</span>;</span><br><span class="line">        <span class="comment">//4. 获取执行sql的对象 Statement</span></span><br><span class="line">        <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line">        <span class="comment">//5. 执行sql</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> stmt.executeUpdate(sql);<span class="comment">//受影响的行数</span></span><br><span class="line">        <span class="comment">//6. 处理结果</span></span><br><span class="line">        System.out.println(count);</span><br><span class="line">        <span class="comment">//7. 释放资源</span></span><br><span class="line">        stmt.close();</span><br><span class="line">        conn.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3，JDBC-API详解"><a href="#3，JDBC-API详解" class="headerlink" title="3，JDBC API详解"></a>3，JDBC API详解</h2><h3 id="3-1-DriverManager"><a href="#3-1-DriverManager" class="headerlink" title="3.1  DriverManager"></a>3.1  DriverManager</h3><p>DriverManager（驱动管理类）作用：</p><ul><li><p>注册驱动</p><p>registerDriver方法是用于注册驱动的，但是我们之前做的入门案例并不是这样写的。而是如下实现</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br></pre></td></tr></table></figure><p>我们查询MySQL提供的Driver类，看它是如何实现的，源码如下：</p><p>在该类中的静态代码块中已经执行了 <code>DriverManager</code> 对象的 <code>registerDriver()</code> 方法进行驱动的注册了，那么我们只需要加载 <code>Driver</code> 类，该静态代码块就会执行。而 <code>Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</code> 就可以加载 <code>Driver</code> 类。</p><blockquote><p>&#x3D;&#x3D;提示：&#x3D;&#x3D;</p><ul><li>MySQL 5之后的驱动包，可以省略注册驱动的步骤</li><li>自动加载jar包中META-INF&#x2F;services&#x2F;java.sql.Driver文件中的驱动类</li></ul></blockquote></li><li><p>获取数据库连接</p><p>参数说明：</p><ul><li><p>url ： 连接路径</p><blockquote><p>语法：jdbc:mysql:&#x2F;&#x2F;ip地址(域名):端口号&#x2F;数据库名称?参数键值对1&amp;参数键值对2…</p></blockquote></li></ul><blockquote><p>示例：jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;db1</p><p>&#x3D;&#x3D;细节：&#x3D;&#x3D;</p><ul><li><p>如果连接的是本机mysql服务器，并且mysql服务默认端口是3306，则url可以简写为：jdbc:mysql:&#x2F;&#x2F;&#x2F;数据库名称?参数键值对</p></li><li><p>配置 useSSL&#x3D;false 参数，禁用安全连接方式，解决警告提示</p></li></ul></blockquote><ul><li>user ：用户名</li></ul></li><li><p>poassword ：密码</p></li></ul><h3 id="3-2-Connection"><a href="#3-2-Connection" class="headerlink" title="3.2  Connection"></a>3.2  Connection</h3><p>Connection（数据库连接对象）作用：</p><ul><li>获取执行 SQL 的对象</li><li>管理事务</li></ul><h4 id="3-2-1-获取执行对象"><a href="#3-2-1-获取执行对象" class="headerlink" title="3.2.1  获取执行对象"></a>3.2.1  获取执行对象</h4><ul><li><p>普通执行SQL对象</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Statement createStatement()</span><br></pre></td></tr></table></figure><p>入门案例中就是通过该方法获取的执行对象。</p></li><li><p>预编译SQL的执行SQL对象：防止SQL注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PreparedStatement  prepareStatement(<span class="keyword">sql</span>)</span><br></pre></td></tr></table></figure><p>通过这种方式获取的 <code>PreparedStatement</code> SQL语句执行对象是我们一会重点要进行讲解的，它可以防止SQL注入。</p></li><li><p>执行存储过程的对象</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CallableStatement prepareCall(<span class="keyword">sql</span>)</span><br></pre></td></tr></table></figure><p>通过这种方式获取的 <code>CallableStatement</code> 执行对象是用来执行存储过程的，而存储过程在MySQL中不常用，所以这个我们将不</p></li></ul><h4 id="3-2-2-事务管理"><a href="#3-2-2-事务管理" class="headerlink" title="3.2.2  事务管理"></a>3.2.2  事务管理</h4><p>先回顾一下MySQL事务管理的操作：</p><ul><li>开启事务 ： BEGIN; 或者 START TRANSACTION；</li><li>提交事务 ： COMMIT；</li><li>回滚事务 ： ROLLBACK；</li></ul><blockquote><p>MySQL默认是自动提交事务</p></blockquote><p>接下来学习JDBC事务管理的方法。  </p><p>Connection几口中定义了3个对应的方法：</p><ul><li><p>开启事务</p><p>参与autoCommit 表示是否自动提交事务，true表示自动提交事务，false表示手动提交事务。而开启事务需要将该参数设为为false。</p></li><li><p>提交事务</p></li><li><p>回滚事务  用异常回滚事务</p></li></ul><p>具体代码实现如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JDBC API 详解：Connection</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public class JDBCDemo3_Connection &#123;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">static</span> void main(String[] args) throws Exception &#123;</span><br><span class="line">        <span class="operator">/</span><span class="operator">/</span><span class="number">1.</span> 注册驱动</span><br><span class="line">        <span class="operator">/</span><span class="operator">/</span>Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">        <span class="operator">/</span><span class="operator">/</span><span class="number">2.</span> 获取连接：如果连接的是本机mysql并且端口是默认的 <span class="number">3306</span> 可以简化书写</span><br><span class="line">        String url <span class="operator">=</span> &quot;jdbc:mysql:///db1?useSSL=false&quot;;</span><br><span class="line">        String username <span class="operator">=</span> &quot;root&quot;;</span><br><span class="line">        String password <span class="operator">=</span> &quot;1234&quot;;</span><br><span class="line">        Connection conn <span class="operator">=</span> DriverManager.getConnection(url, username, password);</span><br><span class="line">        <span class="operator">/</span><span class="operator">/</span><span class="number">3.</span> 定义<span class="keyword">sql</span></span><br><span class="line">        String sql1 <span class="operator">=</span> &quot;update account set money = 3000 where id = 1&quot;;</span><br><span class="line">        String sql2 <span class="operator">=</span> &quot;update account set money = 3000 where id = 2&quot;;</span><br><span class="line">        <span class="operator">/</span><span class="operator">/</span><span class="number">4.</span> 获取执行<span class="keyword">sql</span>的对象 Statement</span><br><span class="line">        Statement stmt <span class="operator">=</span> conn.createStatement();</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span> <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span>开启事务<span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line">            conn.setAutoCommit(<span class="literal">false</span>);</span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span><span class="number">5.</span> 执行<span class="keyword">sql</span></span><br><span class="line">            <span class="type">int</span> count1 <span class="operator">=</span> stmt.executeUpdate(sql1);<span class="operator">/</span><span class="operator">/</span>受影响的行数</span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span><span class="number">6.</span> 处理结果</span><br><span class="line">            System.out.println(count1);</span><br><span class="line">            <span class="type">int</span> i <span class="operator">=</span> <span class="number">3</span><span class="operator">/</span><span class="number">0</span>;</span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span><span class="number">5.</span> 执行<span class="keyword">sql</span></span><br><span class="line">            <span class="type">int</span> count2 <span class="operator">=</span> stmt.executeUpdate(sql2);<span class="operator">/</span><span class="operator">/</span>受影响的行数</span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span><span class="number">6.</span> 处理结果</span><br><span class="line">            System.out.println(count2);</span><br><span class="line"></span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span> <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span>提交事务<span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span>程序运行到此处，说明没有出现任何问题，则需求提交事务</span><br><span class="line">            conn.commit();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span> <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span>回滚事务<span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line">            <span class="operator">/</span><span class="operator">/</span>程序在出现异常时会执行到这个地方，此时就需要回滚事务</span><br><span class="line">            conn.rollback();</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="operator">/</span><span class="operator">/</span><span class="number">7.</span> 释放资源</span><br><span class="line">        stmt.close();</span><br><span class="line">        conn.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-Statement"><a href="#3-3-Statement" class="headerlink" title="3.3  Statement"></a>3.3  Statement</h3><h4 id="3-3-1-概述"><a href="#3-3-1-概述" class="headerlink" title="3.3.1  概述"></a>3.3.1  概述</h4><p>Statement对象的作用就是用来执行SQL语句。而针对不同类型的SQL语句使用的方法也不一样。</p><ul><li><p>执行DDL、DML语句</p></li><li><p>执行DQL语句</p><p>该方法涉及到了 <code>ResultSet</code> 对象，而这个对象我们还没有学习，一会再重点讲解。</p></li></ul><h4 id="3-3-2-代码实现"><a href="#3-3-2-代码实现" class="headerlink" title="3.3.2  代码实现"></a>3.3.2  代码实现</h4><ul><li><p>执行DML语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 执行DML语句</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDML</span><span class="params">()</span> <span class="keyword">throws</span>  Exception &#123;</span><br><span class="line">    <span class="comment">//1. 注册驱动</span></span><br><span class="line">    <span class="comment">//Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span></span><br><span class="line">    <span class="comment">//2. 获取连接：如果连接的是本机mysql并且端口是默认的 3306 可以简化书写</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql:///db1?useSSL=false&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;1234&quot;</span>;</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url, username, password);</span><br><span class="line">    <span class="comment">//3. 定义sql</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update account set money = 3000 where id = 1&quot;</span>;</span><br><span class="line">    <span class="comment">//4. 获取执行sql的对象 Statement</span></span><br><span class="line">    <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line">    <span class="comment">//5. 执行sql</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> stmt.executeUpdate(sql);<span class="comment">//执行完DML语句，受影响的行数</span></span><br><span class="line">    <span class="comment">//6. 处理结果</span></span><br><span class="line">    <span class="comment">//System.out.println(count);</span></span><br><span class="line">    <span class="keyword">if</span>(count &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;修改成功~&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;修改失败~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//7. 释放资源</span></span><br><span class="line">    stmt.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>执行DDL语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 执行DDL语句</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDDL</span><span class="params">()</span> <span class="keyword">throws</span>  Exception &#123;</span><br><span class="line">    <span class="comment">//1. 注册驱动</span></span><br><span class="line">    <span class="comment">//Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span></span><br><span class="line">    <span class="comment">//2. 获取连接：如果连接的是本机mysql并且端口是默认的 3306 可以简化书写</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql:///db1?useSSL=false&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;1234&quot;</span>;</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url, username, password);</span><br><span class="line">    <span class="comment">//3. 定义sql</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;drop database db2&quot;</span>;</span><br><span class="line">    <span class="comment">//4. 获取执行sql的对象 Statement</span></span><br><span class="line">    <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line">    <span class="comment">//5. 执行sql</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> stmt.executeUpdate(sql);<span class="comment">//执行完DDL语句，可能是0</span></span><br><span class="line">    <span class="comment">//6. 处理结果</span></span><br><span class="line">    System.out.println(count);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//7. 释放资源</span></span><br><span class="line">    stmt.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><ul><li>以后开发很少使用java代码操作DDL语句</li></ul></blockquote></li></ul><h3 id="3-4-ResultSet"><a href="#3-4-ResultSet" class="headerlink" title="3.4  ResultSet"></a>3.4  ResultSet</h3><h4 id="3-4-1-概述"><a href="#3-4-1-概述" class="headerlink" title="3.4.1  概述"></a>3.4.1  概述</h4><p>ResultSet（结果集对象）作用：</p><ul><li>&#x3D;&#x3D;封装了SQL查询语句的结果。&#x3D;&#x3D;</li></ul><p>而执行了DQL语句后就会返回该对象，对应执行DQL语句的方法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ResultSet  executeQuery(<span class="keyword">sql</span>)：执行DQL 语句，返回 ResultSet 对象</span><br></pre></td></tr></table></figure><p>那么我们就需要从 <code>ResultSet</code> 对象中获取我们想要的数据。<code>ResultSet</code> 对象提供了操作查询结果数据的方法，如下：</p><blockquote><p>boolean  next()</p><ul><li>将光标从当前位置向前移动一行 </li><li>判断当前行是否为有效行</li></ul><p>方法返回值说明：</p><ul><li>true  ： 有效航，当前行有数据</li><li>false ： 无效行，当前行没有数据</li></ul></blockquote><blockquote><p>xxx  getXxx(参数)：获取数据</p><ul><li>xxx : 数据类型；如： int getInt(参数) ；String getString(参数)</li><li>参数<ul><li>int类型的参数：列的编号，从1开始</li><li>String类型的参数： 列的名称</li></ul></li></ul></blockquote><p>如下图为执行SQL语句后的结果</p><p>一开始光标指定于第一行前，如图所示红色箭头指向于表头行。当我们调用了 <code>next()</code> 方法后，光标就下移到第一行数据，并且方法返回true，此时就可以通过 <code>getInt(&quot;id&quot;)</code> 获取当前行id字段的值，也可以通过 <code>getString(&quot;name&quot;)</code> 获取当前行name字段的值。如果想获取下一行的数据，继续调用 <code>next()</code>  方法，以此类推。</p><h4 id="3-4-2-代码实现"><a href="#3-4-2-代码实现" class="headerlink" title="3.4.2  代码实现"></a>3.4.2  代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 执行DQL</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testResultSet</span><span class="params">()</span> <span class="keyword">throws</span>  Exception &#123;</span><br><span class="line">    <span class="comment">//1. 注册驱动</span></span><br><span class="line">    <span class="comment">//Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span></span><br><span class="line">    <span class="comment">//2. 获取连接：如果连接的是本机mysql并且端口是默认的 3306 可以简化书写</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql:///db1?useSSL=false&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;1234&quot;</span>;</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url, username, password);</span><br><span class="line">    <span class="comment">//3. 定义sql</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from account&quot;</span>;</span><br><span class="line">    <span class="comment">//4. 获取statement对象</span></span><br><span class="line">    <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line">    <span class="comment">//5. 执行sql</span></span><br><span class="line">    <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> stmt.executeQuery(sql);</span><br><span class="line">    <span class="comment">//6. 处理结果， 遍历rs中的所有数据</span></span><br><span class="line">    <span class="comment">/* // 6.1 光标向下移动一行，并且判断当前行是否有数据</span></span><br><span class="line"><span class="comment">        while (rs.next())&#123;</span></span><br><span class="line"><span class="comment">            //6.2 获取数据  getXxx()</span></span><br><span class="line"><span class="comment">            int id = rs.getInt(1);</span></span><br><span class="line"><span class="comment">            String name = rs.getString(2);</span></span><br><span class="line"><span class="comment">            double money = rs.getDouble(3);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            System.out.println(id);</span></span><br><span class="line"><span class="comment">            System.out.println(name);</span></span><br><span class="line"><span class="comment">            System.out.println(money);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            System.out.println(&quot;--------------&quot;);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">    <span class="comment">// 6.1 光标向下移动一行，并且判断当前行是否有数据</span></span><br><span class="line">    <span class="keyword">while</span> (rs.next())&#123;</span><br><span class="line">        <span class="comment">//6.2 获取数据  getXxx()</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> rs.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="type">double</span> <span class="variable">money</span> <span class="operator">=</span> rs.getDouble(<span class="string">&quot;money&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(id);</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        System.out.println(money);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;--------------&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//7. 释放资源</span></span><br><span class="line">    rs.close();</span><br><span class="line">    stmt.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-5-案例"><a href="#3-5-案例" class="headerlink" title="3.5  案例"></a>3.5  案例</h3><ul><li><p>需求：查询account账户表数据，封装为Account对象中，并且存储到ArrayList集合中</p></li><li><p>代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 查询account账户表数据，封装为Account对象中，并且存储到ArrayList集合中</span></span><br><span class="line"><span class="comment">  * 1. 定义实体类Account</span></span><br><span class="line"><span class="comment">  * 2. 查询数据，封装到Account对象中</span></span><br><span class="line"><span class="comment">  * 3. 将Account对象存入ArrayList集合中</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testResultSet2</span><span class="params">()</span> <span class="keyword">throws</span>  Exception &#123;</span><br><span class="line">    <span class="comment">//1. 注册驱动</span></span><br><span class="line">    <span class="comment">//Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span></span><br><span class="line">    <span class="comment">//2. 获取连接：如果连接的是本机mysql并且端口是默认的 3306 可以简化书写</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql:///db1?useSSL=false&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;1234&quot;</span>;</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url, username, password);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3. 定义sql</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from account&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4. 获取statement对象</span></span><br><span class="line">    <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5. 执行sql</span></span><br><span class="line">    <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> stmt.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建集合</span></span><br><span class="line">    List&lt;Account&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">   </span><br><span class="line">    <span class="comment">// 6.1 光标向下移动一行，并且判断当前行是否有数据</span></span><br><span class="line">    <span class="keyword">while</span> (rs.next())&#123;</span><br><span class="line">        <span class="type">Account</span> <span class="variable">account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Account</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//6.2 获取数据  getXxx()</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> rs.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="type">double</span> <span class="variable">money</span> <span class="operator">=</span> rs.getDouble(<span class="string">&quot;money&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//赋值</span></span><br><span class="line">        account.setId(id);</span><br><span class="line">        account.setName(name);</span><br><span class="line">        account.setMoney(money);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 存入集合</span></span><br><span class="line">        list.add(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(list);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//7. 释放资源</span></span><br><span class="line">    rs.close();</span><br><span class="line">    stmt.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-6-PreparedStatement"><a href="#3-6-PreparedStatement" class="headerlink" title="3.6  PreparedStatement"></a>3.6  PreparedStatement</h3><blockquote><p>PreparedStatement作用：</p><ul><li>预编译SQL语句并执行：预防SQL注入问题</li></ul></blockquote><p>对上面的作用中SQL注入问题大家肯定不理解。那我们先对SQL注入进行说明.</p><h4 id="3-6-1-SQL注入"><a href="#3-6-1-SQL注入" class="headerlink" title="3.6.1  SQL注入"></a>3.6.1  SQL注入</h4><blockquote><p>SQL注入是通过操作输入来修改事先定义好的SQL语句，用以达到执行代码对服务器进行攻击的方法。</p></blockquote><p>在今天资料下的 <code>day03-JDBC\资料\2. sql注入演示</code> 中修改 <code>application.properties</code> 文件中的用户名和密码，文件内容如下：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/test?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8</span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">1234</span></span><br></pre></td></tr></table></figure><p>在MySQL中创建名为 <code>test</code> 的数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database test;</span><br></pre></td></tr></table></figure><p>在命令提示符中运行今天资料下的 <code>day03-JDBC\资料\2. sql注入演示\sql.jar</code> 这个jar包。 </p><p>此时我们就能在数据库中看到user表</p><p>接下来在浏览器的地址栏输入 <code>localhost:8080/login.html</code> 就能看到如下页面</p><p>我们就可以在如上图中输入用户名和密码进行登陆。用户名和密码输入正确就登陆成功，跳转到首页。用户名和密码输入错误则给出错误提示，如下图</p><p>但是我可以通过输入一些特殊的字符登陆到首页。</p><p>用户名随意写，密码写成 <code>&#39; or &#39;1&#39; =&#39;1</code></p><p>这就是SQL注入漏洞，也是很危险的。当然现在市面上的系统都不会存在这种问题了，所以大家也不要尝试用这种方式去试其他的系统。</p><p>那么该如何解决呢？这里就可以将SQL执行对象 <code>Statement</code> 换成 <code>PreparedStatement</code> 对象。</p><h4 id="3-6-2-代码模拟SQL注入问题"><a href="#3-6-2-代码模拟SQL注入问题" class="headerlink" title="3.6.2  代码模拟SQL注入问题"></a>3.6.2  代码模拟SQL注入问题</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testLogin</span><span class="params">()</span> <span class="keyword">throws</span>  Exception &#123;</span><br><span class="line">    <span class="comment">//2. 获取连接：如果连接的是本机mysql并且端口是默认的 3306 可以简化书写</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql:///db1?useSSL=false&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;1234&quot;</span>;</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url, username, password);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 接收用户输入 用户名和密码</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;sjdljfld&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">pwd</span> <span class="operator">=</span> <span class="string">&quot;&#x27; or &#x27;1&#x27; = &#x27;1&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from tb_user where username = &#x27;&quot;</span>+name+<span class="string">&quot;&#x27; and password = &#x27;&quot;</span>+pwd+<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">    <span class="comment">// 获取stmt对象</span></span><br><span class="line">    <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line">    <span class="comment">// 执行sql</span></span><br><span class="line">    <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> stmt.executeQuery(sql);</span><br><span class="line">    <span class="comment">// 判断登录是否成功</span></span><br><span class="line">    <span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;登录成功~&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;登录失败~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//7. 释放资源</span></span><br><span class="line">    rs.close();</span><br><span class="line">    stmt.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码是将用户名和密码拼接到sql语句中，拼接后的sql语句如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tb_user <span class="keyword">where</span> username <span class="operator">=</span> <span class="string">&#x27;sjdljfld&#x27;</span> <span class="keyword">and</span> password <span class="operator">=</span> <span class="string">&#x27;&#x27;</span><span class="keyword">or</span> <span class="string">&#x27;1&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span></span><br></pre></td></tr></table></figure><p>从上面语句可以看出条件 <code>username = &#39;sjdljfld&#39; and password = &#39;&#39;</code> 不管是否满足，而 <code>or</code> 后面的 <code>&#39;1&#39; = &#39;1&#39;</code> 是始终满足的，最终条件是成立的，就可以正常的进行登陆了。</p><p>接下来我们来学习PreparedStatement对象.</p><h4 id="3-6-3-PreparedStatement概述"><a href="#3-6-3-PreparedStatement概述" class="headerlink" title="3.6.3  PreparedStatement概述"></a>3.6.3  PreparedStatement概述</h4><blockquote><p>PreparedStatement作用：</p><ul><li>预编译SQL语句并执行：预防SQL注入问题</li></ul></blockquote><ul><li><p>获取 PreparedStatement 对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SQL语句中的参数值，使用？占位符替代</span></span><br><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from user where username = ? and password = ?&quot;</span>;</span><br><span class="line"><span class="comment">// 通过Connection对象获取，并传入对应的sql语句</span></span><br><span class="line"><span class="type">PreparedStatement</span> <span class="variable">pstmt</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br></pre></td></tr></table></figure></li><li><p>设置参数值</p><p>上面的sql语句中参数使用 ? 进行占位，在之前之前肯定要设置这些 ?  的值。</p><blockquote><p>PreparedStatement对象：setXxx(参数1，参数2)：给 ? 赋值</p><ul><li><p>Xxx：数据类型 ； 如 setInt (参数1，参数2)</p></li><li><p>参数：</p><ul><li><p>参数1： ？的位置编号，从1 开始</p></li><li><p>参数2： ？的值</p></li></ul></li></ul></blockquote></li><li><p>执行SQL语句</p><blockquote><p>executeUpdate();  执行DDL语句和DML语句</p><p>executeQuery();  执行DQL语句</p><p>&#x3D;&#x3D;注意：&#x3D;&#x3D;</p><ul><li>调用这两个方法时不需要传递SQL语句，因为获取SQL语句执行对象时已经对SQL语句进行预编译了。</li></ul></blockquote></li></ul><h4 id="3-6-4-使用PreparedStatement改进"><a href="#3-6-4-使用PreparedStatement改进" class="headerlink" title="3.6.4  使用PreparedStatement改进"></a>3.6.4  使用PreparedStatement改进</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPreparedStatement</span><span class="params">()</span> <span class="keyword">throws</span>  Exception &#123;</span><br><span class="line">    <span class="comment">//2. 获取连接：如果连接的是本机mysql并且端口是默认的 3306 可以简化书写</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql:///db1?useSSL=false&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;1234&quot;</span>;</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url, username, password);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 接收用户输入 用户名和密码</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;zhangsan&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">pwd</span> <span class="operator">=</span> <span class="string">&quot;&#x27; or &#x27;1&#x27; = &#x27;1&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义sql</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from tb_user where username = ? and password = ?&quot;</span>;</span><br><span class="line">    <span class="comment">// 获取pstmt对象</span></span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">pstmt</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br><span class="line">    <span class="comment">// 设置？的值</span></span><br><span class="line">    pstmt.setString(<span class="number">1</span>,name);</span><br><span class="line">    pstmt.setString(<span class="number">2</span>,pwd);</span><br><span class="line">    <span class="comment">// 执行sql</span></span><br><span class="line">    <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> pstmt.executeQuery();</span><br><span class="line">    <span class="comment">// 判断登录是否成功</span></span><br><span class="line">    <span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;登录成功~&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;登录失败~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//7. 释放资源</span></span><br><span class="line">    rs.close();</span><br><span class="line">    pstmt.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行上面语句就可以发现不会出现SQL注入漏洞问题了。那么PreparedStatement又是如何解决的呢？它是将特殊字符进行了转义，转义的SQL如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tb_user <span class="keyword">where</span> username <span class="operator">=</span> <span class="string">&#x27;sjdljfld&#x27;</span> <span class="keyword">and</span> password <span class="operator">=</span> <span class="string">&#x27;\&#x27;</span><span class="keyword">or</span> \<span class="string">&#x27;1\&#x27;</span> <span class="operator">=</span> \<span class="string">&#x27;1&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="3-6-5-PreparedStatement原理"><a href="#3-6-5-PreparedStatement原理" class="headerlink" title="3.6.5  PreparedStatement原理"></a>3.6.5  PreparedStatement原理</h4><blockquote><p>PreparedStatement 好处：</p><ul><li>预编译SQL，性能更高</li><li>防止SQL注入：&#x3D;&#x3D;将敏感字符进行转义&#x3D;&#x3D;</li></ul></blockquote><p>Java代码操作数据库流程如图所示：</p><ul><li><p>将sql语句发送到MySQL服务器端</p></li><li><p>MySQL服务端会对sql语句进行如下操作</p><ul><li><p>检查SQL语句</p><p>检查SQL语句的语法是否正确。</p></li><li><p>编译SQL语句。将SQL语句编译成可执行的函数。</p><p>检查SQL和编译SQL花费的时间比执行SQL的时间还要长。如果我们只是重新设置参数，那么检查SQL语句和编译SQL语句将不需要重复执行。这样就提高了性能。</p></li><li><p>执行SQL语句</p></li></ul></li></ul><p>接下来我们通过查询日志来看一下原理。</p><ul><li><p>开启预编译功能</p><p>在代码中编写url时需要加上以下参数。而我们之前根本就没有开启预编译功能，只是解决了SQL注入漏洞。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useServerPrepStmts<span class="operator">=</span><span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>配置MySQL执行日志（重启mysql服务后生效）</p><p>在mysql配置文件（my.ini）中添加如下配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">log-output=FILE</span><br><span class="line">general-log=1</span><br><span class="line">general_log_file=&quot;D:\mysql.log&quot;</span><br><span class="line">slow-query-log=1</span><br><span class="line">slow_query_log_file=&quot;D:\mysql_slow.log&quot;</span><br><span class="line">long_query_time=2</span><br></pre></td></tr></table></figure></li><li><p>java测试代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * PreparedStatement原理</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPreparedStatement2</span><span class="params">()</span> <span class="keyword">throws</span>  Exception &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. 获取连接：如果连接的是本机mysql并且端口是默认的 3306 可以简化书写</span></span><br><span class="line">    <span class="comment">// useServerPrepStmts=true 参数开启预编译功能</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql:///db1?useSSL=false&amp;useServerPrepStmts=true&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;1234&quot;</span>;</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url, username, password);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 接收用户输入 用户名和密码</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;zhangsan&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">pwd</span> <span class="operator">=</span> <span class="string">&quot;&#x27; or &#x27;1&#x27; = &#x27;1&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义sql</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from tb_user where username = ? and password = ?&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取pstmt对象</span></span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">pstmt</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">    Thread.sleep(<span class="number">10000</span>);</span><br><span class="line">    <span class="comment">// 设置？的值</span></span><br><span class="line">    pstmt.setString(<span class="number">1</span>,name);</span><br><span class="line">    pstmt.setString(<span class="number">2</span>,pwd);</span><br><span class="line">    <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">// 执行sql</span></span><br><span class="line">    rs = pstmt.executeQuery();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置？的值</span></span><br><span class="line">    pstmt.setString(<span class="number">1</span>,<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">    pstmt.setString(<span class="number">2</span>,<span class="string">&quot;bbb&quot;</span>);</span><br><span class="line">    <span class="comment">// 执行sql</span></span><br><span class="line">    rs = pstmt.executeQuery();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断登录是否成功</span></span><br><span class="line">    <span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;登录成功~&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;登录失败~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//7. 释放资源</span></span><br><span class="line">    rs.close();</span><br><span class="line">    pstmt.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>执行SQL语句，查看 <code>D:\mysql.log</code> 日志如下:</p><p>上图中第三行中的 <code>Prepare</code> 是对SQL语句进行预编译。第四行和第五行是执行了两次SQL语句，而第二次执行前并没有对SQL进行预编译。</p></li></ul><blockquote><p>&#x3D;&#x3D;小结：&#x3D;&#x3D;</p><ul><li>在获取PreparedStatement对象时，将sql语句发送给mysql服务器进行检查，编译（这些步骤很耗时）</li><li>执行时就不用再进行这些步骤了，速度更快</li><li>如果sql模板一样，则只需要进行一次检查、编译</li></ul></blockquote><h2 id="4，数据库连接池"><a href="#4，数据库连接池" class="headerlink" title="4，数据库连接池"></a>4，数据库连接池</h2><h3 id="4-1-数据库连接池简介"><a href="#4-1-数据库连接池简介" class="headerlink" title="4.1  数据库连接池简介"></a>4.1  数据库连接池简介</h3><blockquote><ul><li><p>数据库连接池是个容器，负责分配、管理数据库连接(Connection)</p></li><li><p>它允许应用程序重复使用一个现有的数据库连接，而不是再重新建立一个；</p></li><li><p>释放空闲时间超过最大空闲时间的数据库连接来避免因为没有释放数据库连接而引起的数据库连接遗漏</p></li><li><p>好处</p><ul><li>资源重用</li><li>提升系统响应速度</li><li>避免数据库连接遗漏</li></ul></li></ul></blockquote><p>之前我们代码中使用连接是没有使用都创建一个Connection对象，使用完毕就会将其销毁。这样重复创建销毁的过程是特别耗费计算机的性能的及消耗时间的。</p><p>而数据库使用了数据库连接池后，就能达到Connection对象的复用，如下图</p><p>连接池是在一开始就创建好了一些连接（Connection）对象存储起来。用户需要连接数据库时，不需要自己创建连接，而只需要从连接池中获取一个连接进行使用，使用完毕后再将连接对象归还给连接池；这样就可以起到资源重用，也节省了频繁创建连接销毁连接所花费的时间，从而提升了系统响应的速度。</p><h3 id="4-2-数据库连接池实现"><a href="#4-2-数据库连接池实现" class="headerlink" title="4.2  数据库连接池实现"></a>4.2  数据库连接池实现</h3><ul><li><p>标准接口：&#x3D;&#x3D;DataSource&#x3D;&#x3D;</p><p>官方(SUN) 提供的数据库连接池标准接口，由第三方组织实现此接口。该接口提供了获取连接的功能：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Connection <span class="title function_">getConnection</span><span class="params">()</span></span><br></pre></td></tr></table></figure><p>那么以后就不需要通过 <code>DriverManager</code> 对象获取 <code>Connection</code> 对象，而是通过连接池（DataSource）获取 <code>Connection</code> 对象。</p></li><li><p>常见的数据库连接池</p><ul><li>DBCP</li><li>C3P0</li><li>Druid</li></ul><p>我们现在使用更多的是Druid，它的性能比其他两个会好一些。</p></li><li><p>Druid（德鲁伊）</p><ul><li><p>Druid连接池是阿里巴巴开源的数据库连接池项目 </p></li><li><p>功能强大，性能优秀，是Java语言最好的数据库连接池之一</p></li></ul></li></ul><h3 id="4-3-Driud使用"><a href="#4-3-Driud使用" class="headerlink" title="4.3  Driud使用"></a>4.3  Driud使用</h3><blockquote><ul><li>导入jar包 druid-1.1.12.jar</li><li>定义配置文件</li><li>加载配置文件</li><li>获取数据库连接池对象</li><li>获取连接</li></ul></blockquote><p>现在通过代码实现，首先需要先将druid的jar包放到项目下的lib下并添加为库文件</p><p>项目结构如下：</p><p>编写配置文件如下：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driverClassName</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql:///db1?useSSL=false&amp;useServerPrepStmts=true</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">1234</span></span><br><span class="line"><span class="comment"># 初始化连接数量</span></span><br><span class="line"><span class="attr">initialSize</span>=<span class="string">5</span></span><br><span class="line"><span class="comment"># 最大连接数</span></span><br><span class="line"><span class="attr">maxActive</span>=<span class="string">10</span></span><br><span class="line"><span class="comment"># 最大等待时间</span></span><br><span class="line"><span class="attr">maxWait</span>=<span class="string">3000</span></span><br></pre></td></tr></table></figure><p>使用druid的代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Druid数据库连接池演示</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DruidDemo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//1.导入jar包</span></span><br><span class="line">        <span class="comment">//2.定义配置文件</span></span><br><span class="line">        <span class="comment">//3. 加载配置文件</span></span><br><span class="line">        <span class="type">Properties</span> <span class="variable">prop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        prop.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;jdbc-demo/src/druid.properties&quot;</span>));</span><br><span class="line">        <span class="comment">//4. 获取连接池对象</span></span><br><span class="line">        <span class="type">DataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> DruidDataSourceFactory.createDataSource(prop);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5. 获取数据库连接 Connection</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> dataSource.getConnection();</span><br><span class="line">        System.out.println(connection); <span class="comment">//获取到了连接后就可以继续做其他操作了</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//System.out.println(System.getProperty(&quot;user.dir&quot;));</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5，JDBC练习"><a href="#5，JDBC练习" class="headerlink" title="5，JDBC练习"></a>5，JDBC练习</h2><h3 id="5-1-需求"><a href="#5-1-需求" class="headerlink" title="5.1  需求"></a>5.1  需求</h3><p>完成商品品牌数据的增删改查操作</p><ul><li>查询：查询所有数据</li><li>添加：添加品牌</li><li>修改：根据id修改</li><li>删除：根据id删除</li></ul><h3 id="5-2-案例实现"><a href="#5-2-案例实现" class="headerlink" title="5.2  案例实现"></a>5.2  案例实现</h3><h4 id="5-2-1-环境准备"><a href="#5-2-1-环境准备" class="headerlink" title="5.2.1  环境准备"></a>5.2.1  环境准备</h4><ul><li><p>数据库表 <code>tb_brand</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除tb_brand表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> tb_brand;</span><br><span class="line"><span class="comment">-- 创建tb_brand表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_brand (</span><br><span class="line">    <span class="comment">-- id 主键</span></span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">    <span class="comment">-- 品牌名称</span></span><br><span class="line">    brand_name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    <span class="comment">-- 企业名称</span></span><br><span class="line">    company_name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    <span class="comment">-- 排序字段</span></span><br><span class="line">    ordered <span class="type">int</span>,</span><br><span class="line">    <span class="comment">-- 描述信息</span></span><br><span class="line">    description <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">    <span class="comment">-- 状态：0：禁用  1：启用</span></span><br><span class="line">    status <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 添加数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_brand (brand_name, company_name, ordered, description, status)</span><br><span class="line"><span class="keyword">values</span> (<span class="string">&#x27;三只松鼠&#x27;</span>, <span class="string">&#x27;三只松鼠股份有限公司&#x27;</span>, <span class="number">5</span>, <span class="string">&#x27;好吃不上火&#x27;</span>, <span class="number">0</span>),</span><br><span class="line">       (<span class="string">&#x27;华为&#x27;</span>, <span class="string">&#x27;华为技术有限公司&#x27;</span>, <span class="number">100</span>, <span class="string">&#x27;华为致力于把数字世界带入每个人、每个家庭、每个组织，构建万物互联的智能世界&#x27;</span>, <span class="number">1</span>),</span><br><span class="line">       (<span class="string">&#x27;小米&#x27;</span>, <span class="string">&#x27;小米科技有限公司&#x27;</span>, <span class="number">50</span>, <span class="string">&#x27;are you ok&#x27;</span>, <span class="number">1</span>);</span><br></pre></td></tr></table></figure></li><li><p>在pojo包下实体类 Brand</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 品牌</span></span><br><span class="line"><span class="comment"> * alt + 鼠标左键：整列编辑</span></span><br><span class="line"><span class="comment"> * 在实体类中，基本数据类型建议使用其对应的包装类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Brand</span> &#123;</span><br><span class="line">    <span class="comment">// id 主键</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="comment">// 品牌名称</span></span><br><span class="line">    <span class="keyword">private</span> String brandName;</span><br><span class="line">    <span class="comment">// 企业名称</span></span><br><span class="line">    <span class="keyword">private</span> String companyName;</span><br><span class="line">    <span class="comment">// 排序字段</span></span><br><span class="line">    <span class="keyword">private</span> Integer ordered;</span><br><span class="line">    <span class="comment">// 描述信息</span></span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">    <span class="comment">// 状态：0：禁用  1：启用</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getBrandName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> brandName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBrandName</span><span class="params">(String brandName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.brandName = brandName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCompanyName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> companyName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCompanyName</span><span class="params">(String companyName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.companyName = companyName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getOrdered</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ordered;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOrdered</span><span class="params">(Integer ordered)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.ordered = ordered;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDescription</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> description;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDescription</span><span class="params">(String description)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.description = description;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getStatus</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStatus</span><span class="params">(Integer status)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.status = status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Brand&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, brandName=&#x27;&quot;</span> + brandName + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, companyName=&#x27;&quot;</span> + companyName + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, ordered=&quot;</span> + ordered +</span><br><span class="line">                <span class="string">&quot;, description=&#x27;&quot;</span> + description + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, status=&quot;</span> + status +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="5-2-2-查询所有"><a href="#5-2-2-查询所有" class="headerlink" title="5.2.2  查询所有"></a>5.2.2  查询所有</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 查询所有</span></span><br><span class="line"><span class="comment">   * 1. SQL：select * from tb_brand;</span></span><br><span class="line"><span class="comment">   * 2. 参数：不需要</span></span><br><span class="line"><span class="comment">   * 3. 结果：List&lt;Brand&gt;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">//1. 获取Connection</span></span><br><span class="line">    <span class="comment">//3. 加载配置文件</span></span><br><span class="line">    <span class="type">Properties</span> <span class="variable">prop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">    prop.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;jdbc-demo/src/druid.properties&quot;</span>));</span><br><span class="line">    <span class="comment">//4. 获取连接池对象</span></span><br><span class="line">    <span class="type">DataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> DruidDataSourceFactory.createDataSource(prop);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5. 获取数据库连接 Connection</span></span><br><span class="line">    <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> dataSource.getConnection();</span><br><span class="line">    <span class="comment">//2. 定义SQL</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from tb_brand;&quot;</span>;</span><br><span class="line">    <span class="comment">//3. 获取pstmt对象</span></span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">pstmt</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br><span class="line">    <span class="comment">//4. 设置参数</span></span><br><span class="line">    <span class="comment">//5. 执行SQL</span></span><br><span class="line">    <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> pstmt.executeQuery();</span><br><span class="line">    <span class="comment">//6. 处理结果 List&lt;Brand&gt; 封装Brand对象，装载List集合</span></span><br><span class="line">    <span class="type">Brand</span> <span class="variable">brand</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    List&lt;Brand&gt; brands = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">while</span> (rs.next())&#123;</span><br><span class="line">        <span class="comment">//获取数据</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> rs.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">brandName</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;brand_name&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">companyName</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;company_name&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">ordered</span> <span class="operator">=</span> rs.getInt(<span class="string">&quot;ordered&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">description</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;description&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">status</span> <span class="operator">=</span> rs.getInt(<span class="string">&quot;status&quot;</span>);</span><br><span class="line">        <span class="comment">//封装Brand对象</span></span><br><span class="line">        brand = <span class="keyword">new</span> <span class="title class_">Brand</span>();</span><br><span class="line">        brand.setId(id);</span><br><span class="line">        brand.setBrandName(brandName);</span><br><span class="line">        brand.setCompanyName(companyName);</span><br><span class="line">        brand.setOrdered(ordered);</span><br><span class="line">        brand.setDescription(description);</span><br><span class="line">        brand.setStatus(status);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//装载集合</span></span><br><span class="line">        brands.add(brand);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(brands);</span><br><span class="line">    <span class="comment">//7. 释放资源</span></span><br><span class="line">    rs.close();</span><br><span class="line">    pstmt.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-2-3-添加数据"><a href="#5-2-3-添加数据" class="headerlink" title="5.2.3  添加数据"></a>5.2.3  添加数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 添加</span></span><br><span class="line"><span class="comment">  * 1. SQL：insert into tb_brand(brand_name, company_name, ordered, description, status) values(?,?,?,?,?);</span></span><br><span class="line"><span class="comment">  * 2. 参数：需要，除了id之外的所有参数信息</span></span><br><span class="line"><span class="comment">  * 3. 结果：boolean</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAdd</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">// 接收页面提交的参数</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">brandName</span> <span class="operator">=</span> <span class="string">&quot;香飘飘&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">companyName</span> <span class="operator">=</span> <span class="string">&quot;香飘飘&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">ordered</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">description</span> <span class="operator">=</span> <span class="string">&quot;绕地球一圈&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">status</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1. 获取Connection</span></span><br><span class="line">    <span class="comment">//3. 加载配置文件</span></span><br><span class="line">    <span class="type">Properties</span> <span class="variable">prop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">    prop.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;jdbc-demo/src/druid.properties&quot;</span>));</span><br><span class="line">    <span class="comment">//4. 获取连接池对象</span></span><br><span class="line">    <span class="type">DataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> DruidDataSourceFactory.createDataSource(prop);</span><br><span class="line">    <span class="comment">//5. 获取数据库连接 Connection</span></span><br><span class="line">    <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> dataSource.getConnection();</span><br><span class="line">    <span class="comment">//2. 定义SQL</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into tb_brand(brand_name, company_name, ordered, description, status) values(?,?,?,?,?);&quot;</span>;</span><br><span class="line">    <span class="comment">//3. 获取pstmt对象</span></span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">pstmt</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br><span class="line">    <span class="comment">//4. 设置参数</span></span><br><span class="line">    pstmt.setString(<span class="number">1</span>,brandName);</span><br><span class="line">    pstmt.setString(<span class="number">2</span>,companyName);</span><br><span class="line">    pstmt.setInt(<span class="number">3</span>,ordered);</span><br><span class="line">    pstmt.setString(<span class="number">4</span>,description);</span><br><span class="line">    pstmt.setInt(<span class="number">5</span>,status);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5. 执行SQL</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> pstmt.executeUpdate(); <span class="comment">// 影响的行数</span></span><br><span class="line">    <span class="comment">//6. 处理结果</span></span><br><span class="line">    System.out.println(count &gt; <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//7. 释放资源</span></span><br><span class="line">    pstmt.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-2-4-修改数据"><a href="#5-2-4-修改数据" class="headerlink" title="5.2.4  修改数据"></a>5.2.4  修改数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 修改</span></span><br><span class="line"><span class="comment">  * 1. SQL：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     update tb_brand</span></span><br><span class="line"><span class="comment">         set brand_name  = ?,</span></span><br><span class="line"><span class="comment">         company_name= ?,</span></span><br><span class="line"><span class="comment">         ordered     = ?,</span></span><br><span class="line"><span class="comment">         description = ?,</span></span><br><span class="line"><span class="comment">         status      = ?</span></span><br><span class="line"><span class="comment">     where id = ?</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   * 2. 参数：需要，所有数据</span></span><br><span class="line"><span class="comment">   * 3. 结果：boolean</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">// 接收页面提交的参数</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">brandName</span> <span class="operator">=</span> <span class="string">&quot;香飘飘&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">companyName</span> <span class="operator">=</span> <span class="string">&quot;香飘飘&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">ordered</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">description</span> <span class="operator">=</span> <span class="string">&quot;绕地球三圈&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">status</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1. 获取Connection</span></span><br><span class="line">    <span class="comment">//3. 加载配置文件</span></span><br><span class="line">    <span class="type">Properties</span> <span class="variable">prop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">    prop.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;jdbc-demo/src/druid.properties&quot;</span>));</span><br><span class="line">    <span class="comment">//4. 获取连接池对象</span></span><br><span class="line">    <span class="type">DataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> DruidDataSourceFactory.createDataSource(prop);</span><br><span class="line">    <span class="comment">//5. 获取数据库连接 Connection</span></span><br><span class="line">    <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> dataSource.getConnection();</span><br><span class="line">    <span class="comment">//2. 定义SQL</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot; update tb_brand\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;         set brand_name  = ?,\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;         company_name= ?,\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;         ordered     = ?,\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;         description = ?,\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;         status      = ?\n&quot;</span> +</span><br><span class="line">        <span class="string">&quot;     where id = ?&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3. 获取pstmt对象</span></span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">pstmt</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4. 设置参数</span></span><br><span class="line">    pstmt.setString(<span class="number">1</span>,brandName);</span><br><span class="line">    pstmt.setString(<span class="number">2</span>,companyName);</span><br><span class="line">    pstmt.setInt(<span class="number">3</span>,ordered);</span><br><span class="line">    pstmt.setString(<span class="number">4</span>,description);</span><br><span class="line">    pstmt.setInt(<span class="number">5</span>,status);</span><br><span class="line">    pstmt.setInt(<span class="number">6</span>,id);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5. 执行SQL</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> pstmt.executeUpdate(); <span class="comment">// 影响的行数</span></span><br><span class="line">    <span class="comment">//6. 处理结果</span></span><br><span class="line">    System.out.println(count &gt; <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//7. 释放资源</span></span><br><span class="line">    pstmt.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-2-5-删除数据"><a href="#5-2-5-删除数据" class="headerlink" title="5.2.5  删除数据"></a>5.2.5  删除数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 删除</span></span><br><span class="line"><span class="comment">  * 1. SQL：</span></span><br><span class="line"><span class="comment">            delete from tb_brand where id = ?</span></span><br><span class="line"><span class="comment">  * 2. 参数：需要，id</span></span><br><span class="line"><span class="comment">  * 3. 结果：boolean</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteById</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">// 接收页面提交的参数</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">    <span class="comment">//1. 获取Connection</span></span><br><span class="line">    <span class="comment">//3. 加载配置文件</span></span><br><span class="line">    <span class="type">Properties</span> <span class="variable">prop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">    prop.load(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;jdbc-demo/src/druid.properties&quot;</span>));</span><br><span class="line">    <span class="comment">//4. 获取连接池对象</span></span><br><span class="line">    <span class="type">DataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> DruidDataSourceFactory.createDataSource(prop);</span><br><span class="line">    <span class="comment">//5. 获取数据库连接 Connection</span></span><br><span class="line">    <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> dataSource.getConnection();</span><br><span class="line">    <span class="comment">//2. 定义SQL</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot; delete from tb_brand where id = ?&quot;</span>;</span><br><span class="line">    <span class="comment">//3. 获取pstmt对象</span></span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">pstmt</span> <span class="operator">=</span> conn.prepareStatement(sql);</span><br><span class="line">    <span class="comment">//4. 设置参数</span></span><br><span class="line">    pstmt.setInt(<span class="number">1</span>,id);</span><br><span class="line">    <span class="comment">//5. 执行SQL</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> pstmt.executeUpdate(); <span class="comment">// 影响的行数</span></span><br><span class="line">    <span class="comment">//6. 处理结果</span></span><br><span class="line">    System.out.println(count &gt; <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//7. 释放资源</span></span><br><span class="line">    pstmt.close();</span><br><span class="line">    conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JDBC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JDBC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis-Plus</title>
      <link href="/post/1276cc28.html"/>
      <url>/post/1276cc28.html</url>
      
        <content type="html"><![CDATA[<ul><li>了解Mybatis-Plus的作用</li><li>掌握Mybatis + MP的整合</li><li>掌握Spring + Mybatis + MP的整合</li><li>掌握SpringBoot + Mybatis + MP整合</li><li>掌握BaseMapper的通用CRUD方法</li><li>掌握MP的基本配置</li><li>掌握MP的进阶配置</li><li>掌握MP的DB 策略配置</li><li>掌握MP的条件构造器</li><li>理解ActiveRecord以及使用</li><li>理解Oracle 主键Sequence</li><li>掌握MP的执行分析插件</li><li>掌握MP的性能分析插件</li><li>掌握MP的乐观锁插件</li><li>掌握Sql 注入器</li><li>掌握自动填充功能</li><li>掌握逻辑删除</li><li>理解通用枚举</li><li>了解代码生成器</li><li>了解MybatisX 快速开发插件</li></ul><h1 id="1-MyBatis-Plus简介"><a href="#1-MyBatis-Plus简介" class="headerlink" title="1.MyBatis-Plus简介"></a>1.MyBatis-Plus简介</h1><h2 id="1-1概念"><a href="#1-1概念" class="headerlink" title="1.1概念"></a>1.1概念</h2><ul><li>简称MP，是一个MyBatis的增强工具，在MyBatis的基础上只做增强不做改变，为简化开发，提高效率而生。</li></ul><h3 id="1-1-1MP的特征"><a href="#1-1-1MP的特征" class="headerlink" title="1.1.1MP的特征"></a>1.1.1MP的特征</h3><ol><li><strong>无侵入</strong>：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑</li><li><strong>损耗小</strong>：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作</li><li><strong>强大的 CRUD 操作</strong>：内置通用 Mapper、通用 Service，仅仅通过&#x3D;&#x3D;少量配置即可实现单表大部分 CRUD 操作&#x3D;&#x3D;，更有强大的条件构造器，满足各类使用需求</li><li><strong>支持 Lambda 形式调用</strong>：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错</li><li><strong>支持主键自动生成</strong>：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题</li><li><strong>支持 ActiveRecord 模式</strong>：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强大的 CRUD 操作</li><li><strong>支持自定义全局通用操作</strong>：支持全局通用方法注入（ Write once, use anywhere ）</li><li><strong>内置代码生成器</strong>：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用</li><li><strong>内置分页插件</strong>：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List 查询</li><li><strong>分页插件支持多种数据库</strong>：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre、SQLServer 等多种数据库</li><li><strong>内置性能分析插件</strong>：可输出 SQL 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询</li><li><strong>内置全局拦截插件</strong>：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作</li></ol><h3 id="1-2MP架构"><a href="#1-2MP架构" class="headerlink" title="1.2MP架构"></a>1.2MP架构</h3><p><img src="http://picgo.kongshier.top/2767/image-20220329085339540.png" alt="image-20220329085339540"></p><h2 id="1-2整合MyBatis-Plus"><a href="#1-2整合MyBatis-Plus" class="headerlink" title="1.2整合MyBatis-Plus"></a>1.2整合MyBatis-Plus</h2><ul><li>对于Mybatis整合MP有常常有三种用法，分别是&#x3D;&#x3D;Mybatis+MP、Spring+Mybatis+MP、Spring Boot+Mybatis+MP&#x3D;&#x3D;。</li></ul><ol><li>创建数据库及表</li><li>创建工程</li><li>MP<ol><li>创建子module</li><li>MyBatis实现查询User</li><li>MyBatis+MP实现查询User<ol><li>第一步，将UserMapper继承BaseMapper，将拥有了BaseMapper中的所有方法</li><li>第二步，使用MP中的MybatisSqlSessionFactoryBuilder进程构建（是自己创建生成的）</li></ol></li><li>Spring+MyBatis+MP<ol><li>创建子module</li><li>实现查询User</li></ol></li></ol></li><li>SpringBoot+MyBatis+MP<ul><li>使用SpringBoot将进一步的简化MP的整合，需要注意的是，由于使用SpringBoot需要继承parent，所以需要重新创 建工程，并不是创建子Module。<ol><li>创建工程</li><li>导入坐标</li><li>创建编写application.properties</li><li>编写pojo</li><li>编写mapper接口 （加上注解@Runwith，@SpringBootTest：使用的是SpringBoot项目）</li><li>编写启动类</li><li>编写测试类</li></ol></li></ul></li></ol><h2 id="1-3通用CRUD"><a href="#1-3通用CRUD" class="headerlink" title="1.3通用CRUD"></a>1.3通用CRUD</h2><ul><li>了解到通过继承BaseMapper就可以获取到各种各样的单表操作，接下来我们将详细讲解这些 操作。</li></ul><h3 id="1-3-1插入操作"><a href="#1-3-1插入操作" class="headerlink" title="1.3.1插入操作"></a>1.3.1插入操作</h3><ol><li><p>方法定义：int insert(T entity);</p></li><li><p>测试用例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestUserMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setMail(<span class="string">&quot;zhugeliang@itcast.cn&quot;</span>);</span><br><span class="line">        user.setAge(<span class="number">25</span>);</span><br><span class="line">        user.setUserName(<span class="string">&quot;zhugeliang&quot;</span>);</span><br><span class="line">        user.setName(<span class="string">&quot;诸葛亮&quot;</span>);</span><br><span class="line">        user.setPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        user.setAddress(<span class="string">&quot;广州&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.insert(user); <span class="comment">//result数据库受影响的行数</span></span><br><span class="line">        System.out.println(<span class="string">&quot;result =&gt; &quot;</span> + result);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取自增长后的id值, 自增长后的id值会回填到user对象中</span></span><br><span class="line">        System.out.println(<span class="string">&quot;id =&gt; &quot;</span> + user.getId());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li><li><p>修改User对象 ，使id自增长@TableId(type &#x3D; IdType.AUTO)   不会出现其他的数字</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableId(type = IdType.AUTO)</span> <span class="comment">//使id自增长</span></span><br><span class="line"><span class="keyword">private</span> Long id;</span><br></pre></td></tr></table></figure></li><li><p>@TableField   ：在MP中通过@TableField注解可以指定字段的一些属性</p><ol><li>对象中的属性名和字段名不一致的问题（非驼峰） </li><li>对象中的属性字段在表中不存在的问题</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插入数据时进行填充</span></span><br><span class="line">    <span class="meta">@TableField(select = false, fill = FieldFill.INSERT)</span> <span class="comment">//查询时不返回该字段的值</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line"><span class="meta">@TableField(value = &quot;email&quot;)</span> <span class="comment">//指定数据表中字段名</span></span><br><span class="line"><span class="keyword">private</span> String mail;</span><br><span class="line"></span><br><span class="line"><span class="meta">@TableField(exist = false)</span></span><br><span class="line"><span class="keyword">private</span> String address; <span class="comment">//在数据库表中是不存在的</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="1-3-2更新操作"><a href="#1-3-2更新操作" class="headerlink" title="1.3.2更新操作"></a>1.3.2更新操作</h3><ol><li>一种是根据id更新，</li><li>一种是根据条件更新</li></ol><p>根据id更新：（测试用例） </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdateById</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setId(<span class="number">1L</span>); <span class="comment">//条件，根据id更新 L是数据类型  此处就是id = 1 的信息会被全部修改</span></span><br><span class="line">    user.setAge(<span class="number">19</span>); <span class="comment">//更新的字段</span></span><br><span class="line">    user.setPassword(<span class="string">&quot;666666&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.updateById(user);</span><br><span class="line">    System.out.println(<span class="string">&quot;result =&gt; &quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据条件更新：</p><p>第一种方式： QueryWrapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setAge(<span class="number">20</span>); <span class="comment">//更新的字段</span></span><br><span class="line">    user.setPassword(<span class="string">&quot;8888888&quot;</span>);</span><br><span class="line"></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//两个参数：column：字段，val：字段的值</span></span><br><span class="line">    wrapper.eq(<span class="string">&quot;user_name&quot;</span>, <span class="string">&quot;zhangsan&quot;</span>); <span class="comment">//匹配user_name = zhangsan 的用户数据</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据条件做更新</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.update(user, wrapper);</span><br><span class="line">    System.out.println(<span class="string">&quot;result =&gt; &quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二种方式： UpdateWrapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdate2</span><span class="params">()</span> &#123; </span><br><span class="line">    <span class="comment">//可以同时设置字段和条件</span></span><br><span class="line">    UpdateWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;&gt;();</span><br><span class="line">    wrapper.set(<span class="string">&quot;age&quot;</span>, <span class="number">21</span>).set(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;999999&quot;</span>) <span class="comment">//更新的字段</span></span><br><span class="line">    .eq(<span class="string">&quot;user_name&quot;</span>, <span class="string">&quot;zhangsan&quot;</span>); <span class="comment">//更新的条件</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据条件做更新</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.update(<span class="literal">null</span>, wrapper);</span><br><span class="line">    System.out.println(<span class="string">&quot;result =&gt; &quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3-3删除操作"><a href="#1-3-3删除操作" class="headerlink" title="1.3.3删除操作"></a>1.3.3删除操作</h3><ol><li><p>根据id删除：deleteById()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteById</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// 根据id删除数据</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.deleteById(<span class="number">2L</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;result =&gt; &quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>根据columnMap 条件删除记录  deleteByMap()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteByMap</span><span class="params">()</span>&#123;</span><br><span class="line">    Map&lt;String,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;user_name&quot;</span>, <span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;999999&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据map删除数据，多条件之间是and关系</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.deleteByMap(map);</span><br><span class="line">    System.out.println(<span class="string">&quot;result =&gt; &quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>根据entity 条件删除记录  Wrapper&lt; User&gt; wrapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//用法一：</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    wrapper.eq(<span class="string">&quot;user_name&quot;</span>, <span class="string">&quot;caocao1&quot;</span>)</span><br><span class="line">            .eq(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用法二：推荐</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">    user.setUserName(<span class="string">&quot;caocao&quot;</span>);</span><br><span class="line"></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;(user);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据包装条件做删除</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.delete(wrapper);</span><br><span class="line">    System.out.println(<span class="string">&quot;result =&gt; &quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>根据id 批量删除   id 不能为null 已经 empty  deleteBatchIds()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">testDeleteBatchIds</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// 根据id批量删除数据 传递集合 里面传递是就是id的值 则会删除掉对应的id的数据</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.deleteBatchIds(Arrays.asList(<span class="number">10L</span>, <span class="number">11L</span>));</span><br><span class="line">    System.out.println(<span class="string">&quot;result =&gt; &quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="1-3-4查询操作"><a href="#1-3-4查询操作" class="headerlink" title="1.3.4查询操作"></a>1.3.4查询操作</h3><ul><li>根据id查询、批量查询、查询单条数据、查询列表、分页查询等操作</li></ul><ol><li><p>根据id查询 selectById</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectById</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.selectById(<span class="number">2L</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>根据id批量查询 selectBatchIds</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectBatchIds</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// 根据id批量查询数据 通过集合接受数据 查询 id = 2,3，4,100的数据  没有的id值是查询不到的</span></span><br><span class="line">    List&lt;User&gt; users = <span class="built_in">this</span>.userMapper.selectBatchIds(Arrays.asList(<span class="number">2L</span>, <span class="number">3L</span>, <span class="number">4L</span>, <span class="number">100L</span>));</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>查询一条数据：selectOne</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectOne</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//T selectOne(@Param(&quot;ew&quot;) Wrapper&lt;T&gt; queryWrapper);</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//查询条件</span></span><br><span class="line">    wrapper.eq(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line">    <span class="comment">// 查询的数据超过一条时，会抛出异常</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.selectOne(wrapper);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>查询总记录数 selectCount()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectCount</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// Integer selectCount(@Param(&quot;ew&quot;) Wrapper&lt;T&gt; queryWrapper);</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    wrapper.gt(<span class="string">&quot;age&quot;</span>, <span class="number">20</span>); <span class="comment">// 条件：年龄大于20岁的用户</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据条件查询数据条数</span></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">count</span> <span class="operator">=</span> <span class="built_in">this</span>.userMapper.selectCount(wrapper);</span><br><span class="line">    System.out.println(<span class="string">&quot;count =&gt; &quot;</span> + count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>查询数据的列表 selectList（）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectList</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// List&lt;T&gt; selectList(@Param(&quot;ew&quot;) Wrapper&lt;T&gt; queryWrapper);</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//设置查询条件    val：模糊查询匹配</span></span><br><span class="line">    wrapper.like(<span class="string">&quot;email&quot;</span>, <span class="string">&quot;itcast&quot;</span>);</span><br><span class="line"></span><br><span class="line">    List&lt;User&gt; users = <span class="built_in">this</span>.userMapper.selectList(wrapper);</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>分页查询 selectPage()</p><ol><li><p>配置分页插件：</p></li><li><p>&#96;&#96;&#96;java<br>@Configuration<br>@MapperScan(“cn.itcast.mp.mapper”) &#x2F;&#x2F;设置mapper接口的扫描包<br>public class MybatisPlusConfig {<br>@Bean &#x2F;&#x2F;配置分页插件<br>public PaginationInterceptor paginationInterceptor(){<br>    return new PaginationInterceptor();<br>}<br>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3. 测试用例</span><br><span class="line"></span><br><span class="line">   ```java</span><br><span class="line">   // 测试分页查询  要配置一个分页插件</span><br><span class="line">   @Test</span><br><span class="line">   public void testSelectPage()&#123;</span><br><span class="line">       //IPage&lt;T&gt; selectPage(IPage&lt;T&gt; page, @Param(&quot;ew&quot;) Wrapper&lt;T&gt; queryWrapper);</span><br><span class="line">       Page&lt;User&gt; page = new Page&lt;&gt;(3,1); //查询第一页，查询1条数据</span><br><span class="line">   </span><br><span class="line">       QueryWrapper&lt;User&gt; wrapper = new QueryWrapper&lt;&gt;();</span><br><span class="line">       //设置查询条件</span><br><span class="line">       wrapper.like(&quot;email&quot;, &quot;itcast&quot;);</span><br><span class="line">   </span><br><span class="line">       IPage&lt;User&gt; iPage = this.userMapper.selectPage(page, wrapper);</span><br><span class="line">       System.out.println(&quot;数据总条数： &quot; + iPage.getTotal());</span><br><span class="line">       System.out.println(&quot;数据总页数： &quot; + iPage.getPages());</span><br><span class="line">       System.out.println(&quot;当前页数： &quot; + iPage.getCurrent());</span><br><span class="line">       //getRecords获取数据</span><br><span class="line">       List&lt;User&gt; records = iPage.getRecords();</span><br><span class="line">       for (User record : records) &#123;</span><br><span class="line">           System.out.println(record);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol><h3 id="1-3-5SQL注入原理"><a href="#1-3-5SQL注入原理" class="headerlink" title="1.3.5SQL注入原理"></a>1.3.5SQL注入原理</h3><ul><li>在MP中，ISqlInjector负责SQL的注入工作，它是一个接口，AbstractSqlInjector是它的实现类</li><li>在AbstractSqlInjector中，主要是由inspectInject()方法进行注入的</li><li>在实现方法中， methodList.forEach(m -&gt; m.inject(builderAssistant, mapperClass, modelClass, tableInfo)); 是关键，循环遍历方法，进行注入。</li></ul><h2 id="1-4配置"><a href="#1-4配置" class="headerlink" title="1.4配置"></a>1.4配置</h2><h3 id="1-4-1基本配置"><a href="#1-4-1基本配置" class="headerlink" title="1.4.1基本配置"></a>1.4.1基本配置</h3><ol><li><p>configLocation</p><ul><li><p>单独设置MyBatis配置文档，就讲配置路径配置到configLocation中。</p></li><li><p>SpringBoot配置方式：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus.config-location</span> = <span class="string">classpath:mybatis-config.xml</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>mapperLocations</p><ul><li><p>在 Mapper 中有自定义方法（XML 中有自定义实现），需要进行该配置，指定Mapper 所对应的 XML 文件位置</p></li><li><p>SpringBoot配置方式：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus.mapper-locations</span> = <span class="string">classpath*:mybatis/*.xml</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>typeAliasesoPackge</p><ul><li><p>MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使 用类名，而不用使用全限定的类名（即 XML 中调用的时候不用包含包名）。</p></li><li><p>~~~properties<br>mybatis-plus.type-aliases-package &#x3D; cn.itcast.mp.pojo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 1.4.2进阶配置</span><br><span class="line"></span><br><span class="line">- MyBatis的原生支持配置，通过MyBatis xml配置文件的形式进行配置</span><br><span class="line"></span><br><span class="line">1. mapUnderscoreToCamelCase</span><br><span class="line"></span><br><span class="line">   - 类型：boolean</span><br><span class="line"></span><br><span class="line">   - 默认值：true</span><br><span class="line"></span><br><span class="line">   - 是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN（下划线命名） 到经典 Java 属 性名 aColumn（驼峰命名） 的类似映射。</span><br><span class="line"></span><br><span class="line">     ~~~properties</span><br><span class="line">     #关闭自动驼峰映射，该参数不能和mybatis-plus.config-location同时存在</span><br><span class="line">     mybatis-plus.configuration.map-underscore-to-camel-case=false</span><br></pre></td></tr></table></figure></li></ul></li><li><p>cacheEnable</p><ul><li><p>类型：booolean</p></li><li><p>默认值：true</p></li><li><p>全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存，默认为 true。</p></li><li><p>~~~properties<br>mybatis-plus.configuration.cache-enabled&#x3D;false</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 1.4.3 DB策略配置</span><br><span class="line"></span><br><span class="line">1. ==idType==</span><br><span class="line"></span><br><span class="line">   - 类型: com.baomidou.mybatisplus.annotation.IdType</span><br><span class="line">   - 默认值：ID_WORKER</span><br><span class="line"></span><br><span class="line">2. ==tablePrefix==</span><br><span class="line"></span><br><span class="line">   - 类型:String</span><br><span class="line"></span><br><span class="line">   - 默认值:null</span><br><span class="line"></span><br><span class="line">     表示前缀，全局配置后可以省略@Tablename()配置</span><br><span class="line"></span><br><span class="line">   - SpringBoot：</span><br><span class="line"></span><br><span class="line">   - ~~~properties</span><br><span class="line">     mybatis-plus.global-config.db-config.id-type=auto</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="1-5条件构造器"><a href="#1-5条件构造器" class="headerlink" title="1.5条件构造器"></a>1.5条件构造器</h2><p>在Mp中 wrapper 中重要的实现类有：&#x3D;&#x3D;AbstractWrapper&#x3D;&#x3D;   AbstractChainWrapper是重点实现 ，前者重点学习</p><blockquote><p>QueryWrapper(LambdaQueryWrapper) 和 UpdateWrapper(LambdaUpdateWrapper) 的父类 用于生成 sql 的 where 条件, entity 属性也用于生成 sql 的 where 条件 注意: entity 生成的 where 条件与 使用各个 api 生成 的 where 条件没有任何关联行为</p></blockquote><h3 id="allEq"><a href="#allEq" class="headerlink" title="allEq"></a>allEq</h3><ul><li>说明：</li><li>allEq(Map params) </li><li>allEq(Map params, boolean null2IsNull) </li><li>allEq(boolean condition, </li><li>Map params, boolean null2IsNull)</li></ul><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAllEq</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        Map&lt;String,Object&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        params.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;李四&quot;</span>);</span><br><span class="line">        params.put(<span class="string">&quot;age&quot;</span>, <span class="string">&quot;20&quot;</span>);</span><br><span class="line">        params.put(<span class="string">&quot;password&quot;</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//  生成的sql语句：SELECT id,user_name,name,age,email AS mail FROM tb_user WHERE password IS NULL AND name = ? AND age = ?</span></span><br><span class="line"><span class="comment">//        wrapper.allEq(params);</span></span><br><span class="line">        <span class="comment">//生成的sql语句：SELECT id,user_name,name,age,email AS mail FROM tb_user WHERE name = ? AND age = ?</span></span><br><span class="line"><span class="comment">//        wrapper.allEq(params, false);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//SELECT id,user_name,name,age,email AS mail FROM tb_user WHERE age = ?</span></span><br><span class="line">        <span class="comment">//过滤    满足条件才能进行过滤</span></span><br><span class="line"><span class="comment">//        wrapper.allEq((k, v) -&gt; (k.equals(&quot;age&quot;) || k.equals(&quot;id&quot;)) , params);</span></span><br><span class="line">        <span class="comment">//SELECT id,user_name,name,age,email AS mail FROM tb_user WHERE name = ? AND age = ?</span></span><br><span class="line">        wrapper.allEq((k, v) -&gt; (k.equals(<span class="string">&quot;age&quot;</span>) || k.equals(<span class="string">&quot;id&quot;</span>) || k.equals(<span class="string">&quot;name&quot;</span>)) , params);</span><br><span class="line">        List&lt;User&gt; users = <span class="built_in">this</span>.userMapper.selectList(wrapper);</span><br><span class="line">        <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="基本比较操作："><a href="#基本比较操作：" class="headerlink" title="基本比较操作："></a>基本比较操作：</h3><ul><li><p>eq </p><ul><li>等于 &#x3D;</li></ul></li><li><p>ne </p><ul><li>不等于 &lt;&gt;</li></ul></li><li><p>gt </p><ul><li>大于 &gt;</li></ul></li><li><p>ge </p><ul><li>大于等于 &gt;&#x3D;</li></ul></li><li><p>lt </p><ul><li>小于 &lt;</li></ul></li><li><p>le</p><ul><li>小于等于 &lt;&#x3D;</li></ul></li><li><p>between </p><ul><li>BETWEEN 值1 AND 值2</li></ul></li><li><p>notBetween</p><ul><li>NOT BETWEEN 值1 AND 值2</li></ul></li><li><p>in 字段 </p><ul><li>IN (value.get(0), value.get(1), …)</li></ul></li><li><p>notIn 字段 </p></li><li><p>NOT IN (v0, v1, …)</p></li></ul><p>  测试用例：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testEq</span><span class="params">()</span> &#123;</span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成的sql语句：SELECT id,user_name,password,name,age,email FROM tb_user WHERE password = ? AND age &gt;= ? AND name IN (?,?,?)</span></span><br><span class="line">    wrapper.eq(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;123456&quot;</span>)</span><br><span class="line">            .ge(<span class="string">&quot;age&quot;</span>, <span class="number">20</span>)</span><br><span class="line">            .in(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;王五&quot;</span>, <span class="string">&quot;赵六&quot;</span>);</span><br><span class="line"></span><br><span class="line">    List&lt;User&gt; users = <span class="built_in">this</span>.userMapper.selectList(wrapper);</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h3><ul><li><p>like   &#x3D;&#x3D;模糊前后的值&#x3D;&#x3D;</p><ul><li>LIKE ‘%值%’ </li><li>例: like(“name”, “王”) —&gt; name like ‘%王%’</li></ul></li><li><p>notLike &#x3D;&#x3D;不模糊&#x3D;&#x3D;</p><ul><li><p>NOT LIKE ‘%值%</p></li><li><p>例: notLike(“name”, “王”) —&gt; name not like ‘%王%’</p></li></ul></li><li><p>likeLeft  &#x3D;&#x3D;左模糊&#x3D;&#x3D;</p><ul><li>LIKE ‘%值’ </li><li>例: likeLeft(“name”, “王”) —&gt; name like ‘%王’</li></ul></li><li><p>likeRight &#x3D;&#x3D;右模糊&#x3D;&#x3D;</p><ul><li>LIKE ‘值%’ </li><li>例: likeRight(“name”, “王”) —&gt; name like ‘王%’</li></ul></li><li><p>测试用例：</p></li><li><p>&#96;&#96;&#96;Java<br>@Test<br>public void testLike(){<br>QueryWrapper<User> wrapper &#x3D; new QueryWrapper&lt;&gt;();<br>&#x2F;&#x2F;生成的sql语句：  SELECT id,user_name,name,age,email AS mail FROM tb_user WHERE name LIKE ?<br>&#x2F;&#x2F; 传入参数：%五(String)<br>wrapper.likeLeft(“name”, “五”);&#x2F;&#x2F;就把五前面的 字 或者  其他内容 给忽略掉  就是查询以 五 结尾的<br><br>List<User> users &#x3D; this.userMapper.selectList(wrapper);<br>for (User user : users) {<br>    System.out.println(user);<br>}<br>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 排序</span><br><span class="line"></span><br><span class="line">- orderBy</span><br><span class="line">  - 排序 ORDER BY 字段</span><br><span class="line">- orderByAsc   ==降序==</span><br><span class="line">  - 排序：ORDER BY 字段, ... ASC </span><br><span class="line">  - 例: orderByAsc(&quot;id&quot;, &quot;name&quot;) ---&gt; order by id ASC,name ASC </span><br><span class="line">- orderByDesc   ==升序==</span><br><span class="line">  - 排序：ORDER BY 字段, ... DESC </span><br><span class="line">  - 例: orderByDesc(&quot;id&quot;, &quot;name&quot;) ---&gt; order by id DESC,name DESC</span><br><span class="line"></span><br><span class="line">测试用例：</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">@Test</span><br><span class="line">public void testOrderByAgeDesc()&#123;</span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = new QueryWrapper&lt;&gt;();</span><br><span class="line">    //按照年龄倒序排序</span><br><span class="line">    //生成的sql语句：  SELECT id,user_name,name,age,email AS mail FROM tb_user ORDER BY age DESC</span><br><span class="line">    wrapper.orderByDesc(&quot;age&quot;);</span><br><span class="line"></span><br><span class="line">    List&lt;User&gt; users = this.userMapper.selectList(wrapper);</span><br><span class="line">    for (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="逻辑查询"><a href="#逻辑查询" class="headerlink" title="逻辑查询"></a>逻辑查询</h3><ul><li>or<ul><li>拼接OR</li><li>主动调用OR表示紧接着下一个方法不是用and链接</li></ul></li><li>and <ul><li>AND嵌套</li></ul></li></ul><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testOr</span><span class="params">()</span>&#123;</span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//生成的sql语句： SELECT id,user_name,name,age,email AS mail FROM tb_user WHERE name = ? OR age = ?</span></span><br><span class="line">    <span class="comment">//若是中间没有or()操作，则是用and链接 返回的结果就会不一样</span></span><br><span class="line">    <span class="comment">//or不走索引 用 Union拼接</span></span><br><span class="line">    wrapper.eq(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;王五&quot;</span>).or().eq(<span class="string">&quot;age&quot;</span>, <span class="number">21</span>);</span><br><span class="line"></span><br><span class="line">    List&lt;User&gt; users = <span class="built_in">this</span>.userMapper.selectList(wrapper);</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="select-操作"><a href="#select-操作" class="headerlink" title="select 操作"></a>select 操作</h3><ul><li>在MP中查询中，默认查询所有的字段，可以通过指定字段进行查询</li></ul><p>测试用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelect</span><span class="params">()</span>&#123;</span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//生成的sql语句：SELECT id,name,age FROM tb_user WHERE name = ? OR age = ?</span></span><br><span class="line">    wrapper.eq(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;王五&quot;</span>)</span><br><span class="line">            .or()</span><br><span class="line">            .eq(<span class="string">&quot;age&quot;</span>, <span class="number">21</span>)</span><br><span class="line">            .select(<span class="string">&quot;id&quot;</span>,<span class="string">&quot;name&quot;</span>,<span class="string">&quot;age&quot;</span>); <span class="comment">//指定查询 id name  age 的字段</span></span><br><span class="line">    List&lt;User&gt; users = <span class="built_in">this</span>.userMapper.selectList(wrapper);</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-Active-Record-（AR）"><a href="#2-Active-Record-（AR）" class="headerlink" title="2.Active Record  （AR）"></a>2.Active Record  （AR）</h1><ul><li>动态语言（PHP 、Ruby等）</li><li>属于ORM（对象关系层）， 表映射到记录，记录映射到对象，字段映射到对象属性。遵循的命名和配置惯例 ，可以快速实现模型的操作。</li></ul><p>ActiveRecord的主要思想：</p><ul><li>每一个数据表对应创建一个类，类的每一个对象实例对应于数据库中表的一行记录；表的每个字段在类中都有相应的Field</li><li>ActiveRecord同时负责把自己持久化，在ActiveRecore中封装了对应的数据库的访问，即CRUD；</li><li>ActiveRecord的一种领域模型，封装了部分业务逻辑</li></ul><h2 id="2-1开启AR"><a href="#2-1开启AR" class="headerlink" title="2.1开启AR"></a>2.1开启AR</h2><ul><li>将实体对象继承Model即可</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.itcast.mp.enums.SexEnum;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.*;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.activerecord.Model;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">extends</span> <span class="title class_">Model</span>&lt;User&gt; &#123;</span><br><span class="line">    <span class="comment">//继承Model类</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String mail;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2根据主键查询"><a href="#2-2根据主键查询" class="headerlink" title="2.2根据主键查询"></a>2.2根据主键查询</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestUserMapper2</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectById</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setId(<span class="number">16L</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">User</span> <span class="variable">user1</span> <span class="operator">=</span> user.selectById();</span><br><span class="line">        System.out.println(user1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3插入-新增-数据"><a href="#2-3插入-新增-数据" class="headerlink" title="2.3插入(新增)数据"></a>2.3插入(新增)数据</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setUserName(<span class="string">&quot;diaochan&quot;</span>);</span><br><span class="line">    user.setPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">    user.setAge(<span class="number">20</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;貂蝉&quot;</span>);</span><br><span class="line">    user.setMail(<span class="string">&quot;diaochan@itcast.cn&quot;</span>);</span><br><span class="line">    user.setVersion(<span class="number">1</span>);</span><br><span class="line">    user.setSex(SexEnum.WOMAN); <span class="comment">//使用的是枚举</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用AR的insert方法进行插入数据</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">insert</span> <span class="operator">=</span> user.insert();</span><br><span class="line">    System.out.println(<span class="string">&quot;result =&gt; &quot;</span> + insert);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4更新操作"><a href="#2-4更新操作" class="headerlink" title="2.4更新操作"></a>2.4更新操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setId(<span class="number">13L</span>);<span class="comment">// 查询条件</span></span><br><span class="line">    user.setAge(<span class="number">31</span>); <span class="comment">// 更新的数据 在13中设置年龄为31岁</span></span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> user.updateById();</span><br><span class="line">    System.out.println(<span class="string">&quot;result =&gt; &quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-5删除操作"><a href="#2-5删除操作" class="headerlink" title="2.5删除操作"></a>2.5删除操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setId(<span class="number">13L</span>);<span class="comment">//删除id为13行的数据</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">delete</span> <span class="operator">=</span> user.deleteById();</span><br><span class="line">    System.out.println(<span class="string">&quot;result =&gt; &quot;</span> + delete);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-6根据条件查询"><a href="#2-6根据条件查询" class="headerlink" title="2.6根据条件查询"></a>2.6根据条件查询</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelect</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"></span><br><span class="line">        QueryWrapper&lt;User&gt; wrapper  = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        wrapper.ge(<span class="string">&quot;age&quot;</span>, <span class="number">30</span>); <span class="comment">//大于等于30岁的用户查询出来  使用ge 这个比较运算符 比较运算符在上面有笔记</span></span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; users = user.selectList(wrapper);</span><br><span class="line">        <span class="keyword">for</span> (User user1 : users) &#123;</span><br><span class="line">            System.out.println(user1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="3-Oracle主键Sequence"><a href="#3-Oracle主键Sequence" class="headerlink" title="3.Oracle主键Sequence"></a>3.Oracle主键Sequence</h1><h1 id="4-插件"><a href="#4-插件" class="headerlink" title="4.插件"></a>4.插件</h1><h2 id="4-1-MyBatis的插件机制"><a href="#4-1-MyBatis的插件机制" class="headerlink" title="4.1 MyBatis的插件机制"></a>4.1 MyBatis的插件机制</h2><p>MyBatis 允许在已映射语句执行过程中的某一点进行&#x3D;&#x3D;拦截调用&#x3D;&#x3D;  （拦截器）</p><ol><li>Executor (update, query, flushStatements, commit, rollback, getTransaction, close, isClosed) </li><li>ParameterHandler (getParameterObject, setParameters) </li><li>ResultSetHandler (handleResultSets, handleOutputParameters) </li><li>StatementHandler (prepare, parameterize, batch, update, query)</li></ol><p>拦截了Executor接口部分方法（update、query、commit、rollback）</p><p>对上面的方法概述：</p><ol><li>拦截执行器的方法</li><li>拦截参数的处理</li><li>拦截结果集的处理</li><li>拦截sql语法构建的处理</li></ol><p>插件的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.ibatis.executor.Executor;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.MappedStatement;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.plugin.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Intercepts(&#123;@Signature(</span></span><br><span class="line"><span class="meta">        type= Executor.class,//指定拦截的类型 Executor</span></span><br><span class="line"><span class="meta">        method = &quot;update&quot;,//拦截的是update方法</span></span><br><span class="line"><span class="meta">        args = &#123;MappedStatement.class,Object.class&#125;)&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyInterceptor</span> <span class="keyword">implements</span> <span class="title class_">Interceptor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">intercept</span><span class="params">(Invocation invocation)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="comment">//拦截方法，具体业务逻辑编写的位置</span></span><br><span class="line">        <span class="keyword">return</span> invocation.proceed();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">plugin</span><span class="params">(Object target)</span> &#123;</span><br><span class="line">        <span class="comment">//这次方法会执行多次，因为要执行上面的四个点(Executor、ParameterHandler 、ResultSetHandler 、StatementHandler )总共执行四次</span></span><br><span class="line">        <span class="comment">//创建target对象的代理对象,目的是将当前拦截器加入到该对象中</span></span><br><span class="line">        <span class="keyword">return</span> Plugin.wrap(target, <span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProperties</span><span class="params">(Properties properties)</span> &#123;</span><br><span class="line">        <span class="comment">//属性设置</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-2执行分析插件"><a href="#4-2执行分析插件" class="headerlink" title="4.2执行分析插件"></a>4.2执行分析插件</h2><ul><li>在MP中提供了对SQL执行的分析的插件，可用作阻断全表更新、删除的操作，</li><li>&#x3D;&#x3D;注意：该插件仅适用于开发环境，不 适用于生产环境。&#x3D;&#x3D;  主要是由于性能不行</li></ul><p>SpringBoot配置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span> <span class="comment">//SQL分析插件</span></span><br><span class="line"><span class="keyword">public</span> SqlExplainInterceptor <span class="title function_">sqlExplainInterceptor</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">SqlExplainInterceptor</span> <span class="variable">sqlExplainInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlExplainInterceptor</span>();</span><br><span class="line"></span><br><span class="line">    List&lt;ISqlParser&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    list.add(<span class="keyword">new</span> <span class="title class_">BlockAttackSqlParser</span>()); <span class="comment">//全表更新、删除的阻断器</span></span><br><span class="line"></span><br><span class="line">    sqlExplainInterceptor.setSqlParserList(list);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sqlExplainInterceptor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试用例 ： 查询结构是错误的 被拦截了才会出错 ，说明拦截器生效了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试全表更新，SQL分析器阻断效果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdateAll</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setAge(<span class="number">110</span>); <span class="comment">// 更新的数据</span></span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> user.update(<span class="literal">null</span>); <span class="comment">// 条件为null 则是全表更新</span></span><br><span class="line">    System.out.println(<span class="string">&quot;result =&gt; &quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当执行全表更新时，会抛出异常，这样有效防止了一些误操作</p><h2 id="4-3性能分析插件"><a href="#4-3性能分析插件" class="headerlink" title="4.3性能分析插件"></a>4.3性能分析插件</h2><ul><li><p>性能分析拦截器，用于输出每条 SQL 语句及其执行时间，可以设置最大执行时间，超过时间会抛出异常。 </p></li><li><p>注意：该插件只用于开发环境，不建议生产环境使用。（性能问题）</p></li></ul><p>mybatis-config.xml配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 性能分析插件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.plugins.PerformanceInterceptor&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--最大的执行时间，单位为毫秒--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxTime&quot;</span> <span class="attr">value</span>=<span class="string">&quot;100&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--对输出的SQL做格式化，默认为false--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;format&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-4乐观锁插件"><a href="#4-4乐观锁插件" class="headerlink" title="4.4乐观锁插件"></a>4.4乐观锁插件</h2><h3 id="4-4-1主要适用的场景"><a href="#4-4-1主要适用的场景" class="headerlink" title="4.4.1主要适用的场景"></a>4.4.1主要适用的场景</h3><p><strong>目的：</strong> 当要更新一条记录的时候，希望这条记录没有被别人更新</p><p>&#x3D;&#x3D;并发操作&#x3D;&#x3D;</p><p>实现方式：</p><ol><li>取出记录时，获取当前的版本（version）</li><li>更新时，带上这个版本（version）</li><li>执行更新时，set version &#x3D; newVersion where version &#x3D; oldVersion</li><li>如果版本（version）不对，则更新失败</li></ol><p>乐观锁防止多个事务对同一个数据同时修改</p><h3 id="4-4-2配置方式："><a href="#4-4-2配置方式：" class="headerlink" title="4.4.2配置方式："></a>4.4.2配置方式：</h3><ol><li><p>Spring .xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.plugins.OptimisticLockerInterceptor&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Spring boot </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> OptimisticLockerInterceptor <span class="title function_">optimisticLockerInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OptimisticLockerInterceptor</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>MyBatis 全局配置</p></li><li><p>注解实体字段</p><p>为实体添加@Version注解</p><ol><li><p>添加@version注解，设置初始值为1</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `tb_user`</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">COLUMN</span> `version` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">NULL</span> AFTER `email`;</span><br><span class="line"><span class="keyword">UPDATE</span> `tb_user` <span class="keyword">SET</span> `version`<span class="operator">=</span><span class="string">&#x27;1&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>为User实体对象添加version字段，并且添加@version注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Version</span> <span class="comment">//乐观锁的版本字段</span></span><br><span class="line"><span class="keyword">private</span> Integer version;</span><br></pre></td></tr></table></figure></li></ol><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdateVersion</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setId(<span class="number">2L</span>);<span class="comment">// 查询条件</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//先拿到版本 再设置id</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">userVersion</span> <span class="operator">=</span> user.selectById();</span><br><span class="line"></span><br><span class="line">    user.setAge(<span class="number">23</span>); <span class="comment">// 更新的数据</span></span><br><span class="line">    user.setVersion(userVersion.getVersion()); <span class="comment">// 当前的版本信息</span></span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> user.updateById();</span><br><span class="line">    System.out.println(<span class="string">&quot;result =&gt; &quot;</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>特别说明：</p><ul><li>支持的数据类型：&#x3D;&#x3D;int&#x3D;&#x3D; 、Integer、long、Long、Date、Timestamp、LocalDateTime</li><li>整数类型下 newVersion &#x3D; oldVersion  + 1</li><li>newVersioni 会回写到entity中</li><li>仅支持两种操作<ol><li>updateById(id)</li><li>update(entity wrapper)</li></ol></li><li>在update（entity ，warpper） 方法下，&#x3D;&#x3D;wrapper不能复用！！&#x3D;&#x3D;</li></ul><h1 id="5-Sql注入器"><a href="#5-Sql注入器" class="headerlink" title="5.Sql注入器"></a>5.Sql注入器</h1><h2 id="5-1编写MyBaseMapper-泛型里面传入的类不知道是哪一个-T-代表全部-类"><a href="#5-1编写MyBaseMapper-泛型里面传入的类不知道是哪一个-T-代表全部-类" class="headerlink" title="5.1编写MyBaseMapper 泛型里面传入的类不知道是哪一个 T 代表全部 类"></a>5.1编写MyBaseMapper 泛型里面传入的类不知道是哪一个 T 代表全部 类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MyBaseMapper</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">    List&lt;T&gt; <span class="title function_">findAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 扩展其他的方法</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后其他的Mapper类就继承这个MyBaseMapper接口  相当于嵌套</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.itcast.mp.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">MyBaseMapper</span>&lt;User&gt; &#123;</span><br><span class="line">    User <span class="title function_">findById</span><span class="params">(Long id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-2编写MySallnjector"><a href="#5-2编写MySallnjector" class="headerlink" title="5.2编写MySallnjector"></a>5.2编写MySallnjector</h2><p>&#x3D;&#x3D;继承DefaultSqlInjector 进行扩展&#x3D;&#x3D; ，不能直接继承 AbstractSqlInjector  因为继承了这个 导致BaseMapper中的方法失效</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.injector.AbstractMethod;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.injector.DefaultSqlInjector;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MySqlInjector</span> <span class="keyword">extends</span> <span class="title class_">DefaultSqlInjector</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;AbstractMethod&gt; <span class="title function_">getMethodList</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;AbstractMethod&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取父类中的集合</span></span><br><span class="line">        list.addAll(<span class="built_in">super</span>.getMethodList());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 再扩充自定义的方法</span></span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">FindAll</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-3编写FindAll"><a href="#5-3编写FindAll" class="headerlink" title="5.3编写FindAll"></a>5.3编写FindAll</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.injector.AbstractMethod;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.metadata.TableInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.MappedStatement;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.SqlSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FindAll</span> <span class="keyword">extends</span> <span class="title class_">AbstractMethod</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> MappedStatement <span class="title function_">injectMappedStatement</span><span class="params">(Class&lt;?&gt; mapperClass, Class&lt;?&gt; modelClass, TableInfo tableInfo)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from &quot;</span> + tableInfo.getTableName();</span><br><span class="line">        <span class="type">SqlSource</span> <span class="variable">sqlSource</span> <span class="operator">=</span> languageDriver.createSqlSource(configuration,sql, modelClass);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.addSelectMappedStatement(mapperClass, <span class="string">&quot;findAll&quot;</span>, sqlSource, modelClass, tableInfo);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.4注册到Spring容器中</p><p>在MyBatisPlusConfig中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> MySqlInjector <span class="title function_">mySqlInjector</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MySqlInjector</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testFindAll</span><span class="params">()</span>&#123;</span><br><span class="line">    List&lt;User&gt; userlist = <span class="built_in">this</span>.userMapper.findAll();</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-自动填充功能"><a href="#6-自动填充功能" class="headerlink" title="6.自动填充功能"></a>6.自动填充功能</h1><h2 id="6-4添加注解-TableFiled注解"><a href="#6-4添加注解-TableFiled注解" class="headerlink" title="6.4添加注解@TableFiled注解"></a>6.4添加注解@TableFiled注解</h2><p>为password添加自动填充功能，在新增数据时有效</p><p>FieldFill提供了多种模式选择</p><h2 id="6-5编写MyMetaObjectHandler"><a href="#6-5编写MyMetaObjectHandler" class="headerlink" title="6.5编写MyMetaObjectHandler"></a>6.5编写MyMetaObjectHandler</h2><p>测试：</p><h1 id="7-逻辑删除"><a href="#7-逻辑删除" class="headerlink" title="7.逻辑删除"></a>7.逻辑删除</h1><blockquote><p>删除操作需要实现逻辑删除 ，所谓逻辑删除就是将数据标记为删除，而并非真正 的物理删除（非DELETE操作），查询时需要携带状态条件，确保被标记的数据不被查询到。这样做的目的就是避免 数据被真正的删除。</p></blockquote><h2 id="7-1修改表结构"><a href="#7-1修改表结构" class="headerlink" title="7.1修改表结构"></a>7.1修改表结构</h2><ul><li>为tb_user表增加deleted字段，用于表示数据是否被删除，1代表删除，0代表未删除。</li></ul><h2 id="7-2配置"><a href="#7-2配置" class="headerlink" title="7.2配置"></a>7.2配置</h2><p>application.properties</p><p>7.3测试</p><h1 id="8-通用的枚举"><a href="#8-通用的枚举" class="headerlink" title="8.通用的枚举"></a>8.通用的枚举</h1><p>解决繁琐的配置 ，通常表示一些固定的属性 比如：性别（男、女），学历：（小、初、高、大）</p><h2 id="8-1修改表结构"><a href="#8-1修改表结构" class="headerlink" title="8.1修改表结构"></a>8.1修改表结构</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `tb_user`</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">COLUMN</span> `sex` <span class="type">int</span>(<span class="number">1</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">1</span> COMMENT <span class="string">&#x27;1-男，2-女&#x27;</span> AFTER `deleted`;</span><br></pre></td></tr></table></figure><h2 id="8-2定义枚举"><a href="#8-2定义枚举" class="headerlink" title="8.2定义枚举"></a>8.2定义枚举</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.mp.enums;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.enums.IEnum;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonValue;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">SexEnum</span> <span class="keyword">implements</span> <span class="title class_">IEnum</span>&lt;Integer&gt; &#123;</span><br><span class="line">MAN(<span class="number">1</span>,<span class="string">&quot;男&quot;</span>),</span><br><span class="line">WOMAN(<span class="number">2</span>,<span class="string">&quot;女&quot;</span>);</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> value;</span><br><span class="line"><span class="keyword">private</span> String desc;</span><br><span class="line">SexEnum(<span class="type">int</span> value, String desc) &#123;</span><br><span class="line"><span class="built_in">this</span>.value = value;</span><br><span class="line"><span class="built_in">this</span>.desc = desc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Integer <span class="title function_">getValue</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">this</span>.value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">this</span>.desc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="8-3配置"><a href="#8-3配置" class="headerlink" title="8.3配置"></a>8.3配置</h2><p>application.properties文件</p><h2 id="8-4修改实体"><a href="#8-4修改实体" class="headerlink" title="8.4修改实体"></a>8.4修改实体</h2><h2 id="8-5测试"><a href="#8-5测试" class="headerlink" title="8.5测试"></a>8.5测试</h2><h1 id="9-代码生成器"><a href="#9-代码生成器" class="headerlink" title="9.代码生成器"></a>9.代码生成器</h1><ul><li>AutoGenerator 是 MyBatis-Plus 的代码生成器，通过 AutoGenerator 可以快速生成 Entity、Mapper、Mapper XML、Service、Controller 等各个模块的代码，极大的提升了开发效率。</li></ul><h2 id="9-1创建工程"><a href="#9-1创建工程" class="headerlink" title="9.1创建工程"></a>9.1创建工程</h2><h2 id="9-2代码"><a href="#9-2代码" class="headerlink" title="9.2代码"></a>9.2代码</h2><h1 id="10-MyBatisX快速开发插件"><a href="#10-MyBatisX快速开发插件" class="headerlink" title="10.MyBatisX快速开发插件"></a>10.MyBatisX快速开发插件</h1><p>MyBatisX 是一款基于 IDEA 的快速开发插件，为效率而生。</p><ul><li>功能： <ul><li>Java 与 XML 调回跳转 </li><li>Mapper 方法自动生成 XML</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> MyBatis-Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis-Plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="/post/69c3279c.html"/>
      <url>/post/69c3279c.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h1><ul><li>Git的基本概念</li><li>概述Git工作流程</li><li>使用Git常用命令</li><li>Git代码托管服务</li><li>idea操作git</li></ul><h1 id="2-概述"><a href="#2-概述" class="headerlink" title="2.概述"></a>2.概述</h1><h2 id="2-1开发中的实际场景"><a href="#2-1开发中的实际场景" class="headerlink" title="2.1开发中的实际场景"></a>2.1开发中的实际场景</h2><p>一：备份</p><p>二：代码还原</p><p>三：协同开发</p><p>四：追溯问题代码的编写人和编写时间</p><h2 id="2-2版本控制器方式"><a href="#2-2版本控制器方式" class="headerlink" title="2.2版本控制器方式"></a>2.2版本控制器方式</h2><p>a：集中式版本控制工具  （SVN 和 CVS）</p><p>​版本库是放在中央服务器的，每个人工作时从中央服务器下载代码，都是要联网，才能工作的。个人修改后再提交的中央服务器</p><p>b：分布式版本控制工具（Git）</p><p>​没有“中央服务器”，每个人电脑上都是一个完整的版本库，工作则无需联网，本版库就在自己电脑上</p><h2 id="2-3Git"><a href="#2-3Git" class="headerlink" title="2.3Git"></a>2.3Git</h2><ul><li>简单的设计</li><li>速度快</li><li>队非线性开发模式的强力支持（允许多个并发开发的分支）</li><li>完全分布式</li><li>有能力高校管理类似inux内核一样的超大规模项目（速度和数据量）</li></ul><h2 id="2-4SVN（过时的）"><a href="#2-4SVN（过时的）" class="headerlink" title="2.4SVN（过时的）"></a>2.4SVN（过时的）</h2><p>2.5Git工作流程图</p><p>命令如下:</p><ol><li><p>clone(克隆)∶从远程仓库中克隆代码到本地仓库</p></li><li><p>checkout(检出) :从本地仓库中检出一个仓库分支然后进行修订</p></li><li><p>add(添加):在提交前先将代码提交到暂存区</p><p>4.commit(提交)︰提交到本地仓库。本地仓库中保存修改的各个历史版本</p><p>5.fetch (抓取)︰从远程库，抓取到本地仓库，不进行任何的合并动作，一般操作比较少。</p></li><li><p>pull (拉取)∶从远程库拉到本地库，自动进行合并(merge)，然后放到到工作区，相当于fetch+merge</p></li><li><p>push(推送)︰修改完成后，需要和团队成员共享代码时，将代码推送到远程仓库</p></li></ol><h1 id="3-常用命令"><a href="#3-常用命令" class="headerlink" title="3.常用命令"></a>3.常用命令</h1><h2 id="3-1获取本地仓库"><a href="#3-1获取本地仓库" class="headerlink" title="3.1获取本地仓库"></a>3.1获取本地仓库</h2><ol><li>执行命令git init</li><li>如果创建成功后可在文件夹下看到隐藏的.git里录。</li></ol><h2 id="3-2基础操作指令"><a href="#3-2基础操作指令" class="headerlink" title="3.2基础操作指令"></a>3.2基础操作指令</h2><p>Git工作目录下对于文件的修改（删除，更新，增加）这些修改状况会随着执行Git的命令变化而变化</p><ul><li>git add （工作区 –&gt; 暂存区）</li><li>git commit （暂存区 –&gt; 本地仓库）</li></ul><h3 id="3-2-1查看修改的状态（status）"><a href="#3-2-1查看修改的状态（status）" class="headerlink" title="3.2.1查看修改的状态（status）"></a>3.2.1查看修改的状态（status）</h3><ul><li>作用：查看修改的状态</li><li>命令：git status</li></ul><h3 id="3-2-2添加工作区到暂存区（add）"><a href="#3-2-2添加工作区到暂存区（add）" class="headerlink" title="3.2.2添加工作区到暂存区（add）"></a>3.2.2添加工作区到暂存区（add）</h3><ul><li><p>作用：添加工作区一个或多个文件的修改到暂存区</p></li><li><p>命令：git add  文件名</p><p>​将所有修改加入暂存区 git add .</p></li></ul><h3 id="3-2-3提交暂存区到本地仓库（commit）"><a href="#3-2-3提交暂存区到本地仓库（commit）" class="headerlink" title="3.2.3提交暂存区到本地仓库（commit）"></a>3.2.3提交暂存区到本地仓库（commit）</h3><ul><li>作用：提交暂存区内容到 本地仓库的当前分支</li><li>命令：git commit  -m  “ 注释内容”</li></ul><p>每次进行的vi编辑文件之后还要进行：add  ；commit -m “ ” ；操作</p><h3 id="3-3-4查看提交日志（log）"><a href="#3-3-4查看提交日志（log）" class="headerlink" title="3.3.4查看提交日志（log）"></a>3.3.4查看提交日志（log）</h3><ul><li><p>作用:查看提交形式</p></li><li><p>命令：git log [options]</p><p>  options</p><ul><li><ul><li>–all 显示所有分支</li><li>-pretty &#x3D; online 将提交信息显示为一行</li><li>-abbrev-commit使得输出的commit更加简短</li><li>-graph以图的形式显示</li></ul></li></ul></li><li><p>配置别名：用一些指定的命令代替长命令</p></li></ul><h3 id="3-3-5版本回退"><a href="#3-3-5版本回退" class="headerlink" title="3.3.5版本回退"></a>3.3.5版本回退</h3><ul><li>作用：版本切换</li><li>命令：git reset – hard commitID <ul><li>​commitID 可以使用git - log 或git -log 指令查看</li></ul></li><li>查看已删除的记录<ul><li>git reflog</li><li>看得到已删除的记录</li></ul></li></ul><h3 id="3-3-6添加文件忽略某些文件"><a href="#3-3-6添加文件忽略某些文件" class="headerlink" title="3.3.6添加文件忽略某些文件"></a>3.3.6添加文件忽略某些文件</h3><blockquote><p>创建一个名为：.gitignore 的文件  把不需要的文件名的扩展名 填写进去</p></blockquote><h2 id="3-4分支"><a href="#3-4分支" class="headerlink" title="3.4分支"></a>3.4分支</h2><blockquote><p>从主线上分离开来进行修改，开发，不影响主线开发。</p></blockquote><ul><li><p>查看本地分支 ：git branch</p></li><li><p>创建本地分支：git branch 分支名</p></li><li><p>切换分支：git checkout 分支名</p></li><li><p>切换到不存在的分支：git checkout -b 分支名</p></li><li><p>合并分支(merge)： git merge 分支名</p><ul><li>​合并的快进模式：git checkout  mester</li></ul></li><li><p>删除分支  ：（不能删除当前分支，只能删除其他的分支）  </p><p> git branch -d b1 删除分支时，需要做各种检查</p><p>git branch -D b1 不做任何检查，强制删除</p></li></ul><h3 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h3><p>当两个分支上对文件的修改可能会存在冲突，例如同时修改了同一个文件的同一行，这时就需要手动解决冲突，解决冲突步骤如下:</p><ol><li>处理文件中冲突的地方</li><li>将解决完冲突的文件加入暂存区(add)</li><li>提交到仓库(commit)</li></ol><p>如下图：</p><h3 id="开发中分支使用原则鱼流程"><a href="#开发中分支使用原则鱼流程" class="headerlink" title="开发中分支使用原则鱼流程"></a>开发中分支使用原则鱼流程</h3><p>几乎所有的版本控制系统都以某种形式支持分支。使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的Bug修改、开发新的功能，以免影响开发主线。</p><p>有如下原则和流程：</p><ul><li><p>master(生产)分支</p><p>线上分支，主分支，中小规模项目作为线上运行的应用对应的分支;.</p></li><li><p>develop(开发)分支</p><p>是从master创建的分支，一般作为开发部门的主要开发分支，如果没有其他并行开发不同期上线要求，都可以在此版本进行开发，阶段开发完成后，需要合并到master分支,准备上线。</p></li><li><p>feature&#x2F;xxxx分支</p><p>从develop创建的分支，一般是同期并行开发，但不同期上线时创建的分支，分支上的研发任务完成后合并到develop分支。</p></li><li><p>hotfix&#x2F;xxxx分支，</p><p>从master派生的分支，一般作为线上bug修复使用，修复完成后需要合并到master、test、develop分支。</p></li><li><p>还有一些其他分支，在此不再详述，例如test分(用于代码测试)、pre分支(预上线分支)等等。</p></li></ul><h1 id="4-Git远程仓库"><a href="#4-Git远程仓库" class="headerlink" title="4.Git远程仓库"></a>4.Git远程仓库</h1><h3 id="4-1常用的托管服务（远程仓库）"><a href="#4-1常用的托管服务（远程仓库）" class="headerlink" title="4.1常用的托管服务（远程仓库）"></a>4.1常用的托管服务（远程仓库）</h3><blockquote><p>GitHub , 码云 ，GitLab</p></blockquote><h2 id="4-2注册码云"><a href="#4-2注册码云" class="headerlink" title="4.2注册码云"></a>4.2注册码云</h2><h2 id="4-3创建远程仓库"><a href="#4-3创建远程仓库" class="headerlink" title="4.3创建远程仓库"></a>4.3创建远程仓库</h2><blockquote><p>命令：git remote add  </p></blockquote><h2 id="4-4配置SSH公钥"><a href="#4-4配置SSH公钥" class="headerlink" title="4.4配置SSH公钥"></a>4.4配置SSH公钥</h2><h2 id="4-5查看远程仓库"><a href="#4-5查看远程仓库" class="headerlink" title="4.5查看远程仓库"></a>4.5查看远程仓库</h2><h3 id="4-5-1克隆远程仓库"><a href="#4-5-1克隆远程仓库" class="headerlink" title="4.5.1克隆远程仓库"></a>4.5.1克隆远程仓库</h3><blockquote><p>命令：git clone    SSH的地址  指定clone文件名</p></blockquote><h3 id="4-5-2从远程仓库抓取和拉取"><a href="#4-5-2从远程仓库抓取和拉取" class="headerlink" title="4.5.2从远程仓库抓取和拉取"></a>4.5.2从远程仓库抓取和拉取</h3><ul><li><p>抓取 命令：git fetch [remote name] [branch name] </p><p>​抓取指令就是将仓库里的更新都抓取到本地，不会进行合并  </p><p>​如果不指定远端名称和分支名，则抓取所有分支。 </p></li><li><p>拉取 命令：git pull [remote name] [branch name] </p><p>​拉取指令就是将远端仓库的修改拉到本地并<strong>自动进行合并</strong>，等<strong>同于fetch+merge</strong> </p><p>​如果不指定远端名称和分支名，则抓取所有并更新当前分支。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github使用技巧</title>
      <link href="/post/13cd4832.html"/>
      <url>/post/13cd4832.html</url>
      
        <content type="html"><![CDATA[<h1 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h1><p><a href="https://www.bilibili.com/video/BV1q54y1f7h6?spm_id_from=333.337.search-card.all.click">5个隐藏的GitHub神技巧，助你秒变大佬！_哔哩哔哩_bilibili</a></p><p>来自程序员鱼皮</p><ul><li><a href="#github">Github</a><ul><li><a href="#1%E6%90%9C%E7%B4%A2">1.搜索</a></li><li><a href="#2%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6">2.查找文件</a></li><li><a href="#3%E9%98%85%E8%AF%BB%E4%BB%A3%E7%A0%81%E6%8A%80%E5%B7%A7">3.阅读代码技巧</a></li><li><a href="#4%E5%9C%A8%E7%BA%BF%E8%BF%90%E8%A1%8C%E9%A1%B9%E7%9B%AE">4.在线运行项目</a></li><li><a href="#5%E9%A1%B9%E7%9B%AE%E6%8E%A8%E9%80%81">5.项目推送</a></li><li><a href="#%E6%9B%B4%E6%96%B0%E4%BB%8E-mini_gtest-%E5%BC%80%E5%A7%8B%E7%9A%84-github-%E5%AE%9E%E8%B7%B5">更新：从 mini_gtest 开始的 github 实践</a></li></ul></li></ul><h2 id="1-搜索"><a href="#1-搜索" class="headerlink" title="1.搜索"></a>1.搜索</h2><p>github高级搜索功能</p><p>直接打开这里<a href="https://github.com/search/advanced">GitHub · Where software is built</a></p><p>或搜索后在搜索页面 language 下方打开（没找到更好的方法）</p><p><img src="http://picgo.kongshier.top/2767/image-20220821222013618.png" alt="image-20220821222013618"></p><p>更多技巧可查看官方文档：</p><p><a href="https://docs.github.com/cn/search-github/getting-started-with-searching-on-github/about-searching-on-github">About searching on GitHub - GitHub Docs</a></p><p><a href="https://docs.github.com/cn/search-github/searching-on-github/searching-code">搜索代码 - GitHub Docs</a></p><h2 id="2-查找文件"><a href="#2-查找文件" class="headerlink" title="2.查找文件"></a>2.查找文件</h2><p>在主页按“t”：查找文件</p><p><img src="http://picgo.kongshier.top/2767/image-20220821222026081.png" alt="image-20220821222026081"></p><p>点进源代码后，按“l”：跳转到某一行</p><p><img src="http://picgo.kongshier.top/2767/image-20220821222034869.png" alt="image-20220821222034869"></p><p>点击行号：</p><ol><li>复制这行代码</li><li>生成永久链接</li></ol><p><img src="http://picgo.kongshier.top/2767/image-20220821222044751.png" alt="image-20220821222044751"></p><p>源代码中按“b”：查看文件的改动记录</p><p><img src="http://picgo.kongshier.top/2767/image-20220821222054632.png" alt="image-20220821222054632"></p><p>键盘快捷键：</p><ul><li><p>文档</p><p><a href="https://docs.github.com/cn/get-started/using-github/keyboard-shortcuts">键盘快捷键 - GitHub Docs</a></p></li><li><p>图片</p><p><img src="http://picgo.kongshier.top/2767/image-20220821222140887.png" alt="image-20220821222140887"></p></li></ul><h2 id="3-阅读代码技巧"><a href="#3-阅读代码技巧" class="headerlink" title="3.阅读代码技巧"></a>3.阅读代码技巧</h2><p>代码跳转：</p><ol><li><p>下载到本地</p></li><li><p>在线vscode：仓库详情界面按下“。”键，</p><p><img src="http://picgo.kongshier.top/2767/image-20220821222212882.png" alt="image-20220821222212882"></p><p><img src="http://picgo.kongshier.top/2767/image-20220821222223565.png" alt="image-20220821222223565"></p></li></ol><h2 id="4-在线运行项目"><a href="#4-在线运行项目" class="headerlink" title="4.在线运行项目"></a>4.在线运行项目</h2><p>在项目地址前加上<code>gitpod.io/#/</code>前缀</p><p><a href="https://github.com/nginx/nginx">https://github.com/nginx/nginx</a>  &#x3D;&gt; <a href="https://gitpod.io/#/github.com/nginx/nginx">https://gitpod.io/#/github.com/nginx/nginx</a></p><p>登陆：</p><p><img src="http://picgo.kongshier.top/2767/image-20220821222233389.png" alt="image-20220821222233389"></p><p>加载：</p><p><img src="http://picgo.kongshier.top/2767/image-20220821222241667.png" alt="image-20220821222241667"></p><p>运行：</p><p><img src="http://picgo.kongshier.top/2767/image-20220821222252103.png" alt="image-20220821222252103"></p><h2 id="5-项目推送"><a href="#5-项目推送" class="headerlink" title="5.项目推送"></a>5.项目推送</h2><p>根据自己的喜好让github推送自己感兴趣的优质项目</p><p><img src="http://picgo.kongshier.top/2767/image-20220821222303126.png" alt="image-20220821222303126"></p><p>获取邮件更新：</p><p><img src="http://picgo.kongshier.top/2767/image-20220821222339126.png" alt="image-20220821222339126"></p><h2 id="更新：从-mini-gtest-开始的-github-实践"><a href="#更新：从-mini-gtest-开始的-github-实践" class="headerlink" title="更新：从 mini_gtest 开始的 github 实践"></a>更新：从 mini_gtest 开始的 github 实践</h2><p>效果如下，使用方法见<a href="https://github.com/youhuangla/mini_gtest">youhuangla&#x2F;mini_gtest</a>。</p><p><img src="http://picgo.kongshier.top/2767/image-20220821222425833.png" alt="image-20220821222425833"></p><p>原项目名气大（谷歌出品，原仓库 25.7k star），据说工程中也常常用到。</p><p><img src="http://picgo.kongshier.top/2767/image-20220821222445760.png" alt="image-20220821222445760"></p><p><a href="https://github.com/google/googletest">google&#x2F;googletest: GoogleTest - Google Testing and Mocking Framework</a></p><p><a href="https://google.github.io/googletest/">GoogleTest User’s Guide | GoogleTest</a></p>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSM框架</title>
      <link href="/post/766433e0.html"/>
      <url>/post/766433e0.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-Spring"><a href="#1-Spring" class="headerlink" title="1.Spring"></a>1.Spring</h1><h3 id="Spring优势："><a href="#Spring优势：" class="headerlink" title="Spring优势："></a>Spring优势：</h3><ol><li>方便解耦，简化开发</li><li>AOP编程的支持</li><li>生命式事物的支持</li><li>方便程序的测试</li><li>方便集成各种优秀的框架</li><li>降低 JavaEE API 的使用难度</li><li>Java源码是经典学习范例</li></ol><h2 id="Spring体系结构"><a href="#Spring体系结构" class="headerlink" title="Spring体系结构"></a>Spring体系结构</h2><p><img src="http://picgo.kongshier.top/2767/image-20220301192712251.png" alt="image-20220301192712251"></p><h3 id="SSM框架"><a href="#SSM框架" class="headerlink" title="SSM框架"></a>SSM框架</h3><h4 id="1-在JavaWeb中的三层架构"><a href="#1-在JavaWeb中的三层架构" class="headerlink" title="1.在JavaWeb中的三层架构"></a>1.在JavaWeb中的三层架构</h4><ol><li>变现层（Web层）：主要的框架SpringMVC 、Struts2 、展示的页面（JSP页面）。</li><li>业务层（Service层）：实现业务逻辑。</li><li>持久层（Dao层）：主要的框架：Hibernate、MyBatis。负责与数据库的交互，封装数据库的访问细节。<ul><li>从数据库表中读取加载数据并实例化领域对象（Domian Objecty ）就是从数据库中&#x3D;&#x3D;读取&#x3D;&#x3D;数据</li><li>或者将领域对象实例化到数据库中，就是将数据&#x3D;&#x3D;写入&#x3D;&#x3D;数据库中。</li></ul></li></ol><h4 id="2-在SSM中的三层架构"><a href="#2-在SSM中的三层架构" class="headerlink" title="2.在SSM中的三层架构"></a>2.在SSM中的三层架构</h4><p>轻量级开发中，常对Web分为以下几层：</p><ol><li>POJO层：&#x3D;&#x3D;由一组POJO组成，主要对系统各种对象的抽象表达&#x3D;&#x3D;，也就是存放实体类比如 User 实体</li><li>Dao层（mapper层）：&#x3D;&#x3D;负责数据库的访问，增、删、改、查等操作&#x3D;&#x3D;。MyBatis框架中被定义为Mapper层</li><li>Service层：&#x3D;&#x3D;由业务逻辑对象组成&#x3D;&#x3D;，是不同系统的业务逻辑的具体实现。</li><li>Controller层：&#x3D;&#x3D;由控制器组成&#x3D;&#x3D;，对来自浏览器的用户进行拦截，并调用Service层的响应的业务逻辑组件处理用户请求，并转发结果返回到View层。</li><li>View层：&#x3D;&#x3D;由Jsp页面，PDF文档等组件组成&#x3D;&#x3D; ，用于显示系统对用户请求的处理结果</li></ol><h4 id="3-在SSM中包的作用："><a href="#3-在SSM中包的作用：" class="headerlink" title="3.在SSM中包的作用："></a>3.在SSM中包的作用：</h4><table><thead><tr><th>包名</th><th>名称</th><th>作用</th></tr></thead><tbody><tr><td>dao</td><td>数据访问层（创建接口）</td><td>封装对数据库的操作，与数据库有关的操作都存放在这个包下面</td></tr><tr><td>Entity</td><td>实例类</td><td>一般与数据库的表相对应，封装dao层取出来的数据为一个对象</td></tr><tr><td>Service</td><td>业务逻辑（接口）</td><td>写业务逻辑的</td></tr><tr><td>Service-impl</td><td>业务逻辑的实现</td><td>实现业务的接口，事务控制一般都写在这里</td></tr><tr><td>Controller</td><td>MVC控制器</td><td>SpringMVC就是在这里发挥作用的</td></tr><tr><td>Mapper</td><td>数据库具体操作</td><td>包含xxxMapper.xml 和xxxMapper.java二者互相对应</td></tr></tbody></table><p><strong>说明：</strong></p><ul><li>dao：&#x3D;&#x3D;里面可以是数据库的操作，也可以是文件读写操作，甚至是Redis缓存操作。&#x3D;&#x3D;（数据持久层）。由于Mybatis可以直接在配置文件中实现接口的每个方法，所以不需要 dao-imple</li><li>dto ：&#x3D;&#x3D;用于service与web层之间的传输&#x3D;&#x3D;。一般我们使用dto类来继承entity实体类，在dto类里面方一些业务字段，并提供get、set方法。当我们在业务逻辑层或者交互层用到一些数据库中不存在的字段时，我们就需要在DTO类里面放这些字段，这些字段的一样就相当于一些经处理过的数据库字段，实质意义就是方便数据交互，提高效率。</li><li>Entity：&#x3D;&#x3D;一般与数据库表相对应，封装dao层取出来的数据做为一个对象&#x3D;&#x3D;，也就是pojo，一般只在dao与service层之间传输</li></ul><p><strong>other 包：</strong></p><ul><li>Exception：自定义异常</li><li>Utils：即utility，工具辅助层，一组通用的代码集合（比如处理多语言功能，网站非法信息过滤等等功能的代码集）</li><li>resource：存放&#x3D;&#x3D;后端&#x3D;&#x3D;配置文件</li></ul><h4 id="4-在SSM中的配置文件"><a href="#4-在SSM中的配置文件" class="headerlink" title="4.在SSM中的配置文件"></a>4.在SSM中的配置文件</h4><table><thead><tr><th>文件名</th><th>文件名解释</th><th>内容（说明）</th></tr></thead><tbody><tr><td>spring-dao.xml</td><td>spring数据链接配置</td><td>配置数据连接池、sqlSessionFactory对象、扫描dao接口</td></tr><tr><td>spring-service.xml</td><td>spring服务配置</td><td>扫描service包下注解、配置事务管理器、基于注解的事务</td></tr><tr><td>spring-mvc.xml</td><td>Spring MVC配置</td><td>开启框架注解模式、处理静态资源、配置jsp、扫描controller</td></tr><tr><td>jdbc.proties</td><td>数据库链接参数</td><td>配置jdbc、数据库URL、用户名、密码等</td></tr><tr><td>mybatis-config.xml</td><td>myBatis配置文件</td><td>开启自增主键、使用列别名、驼峰转换</td></tr><tr><td>log4j.properties</td><td>web日志输出参数</td><td>web输出参数</td></tr><tr><td>application.xml</td><td>Spring与Mybatis整合配置</td><td>数据库连接池、sqlSeesionFactory对象、扫描dao接口</td></tr><tr><td>webapp</td><td>前端与配置文件</td><td></td></tr><tr><td>web.xml</td><td></td><td>配置Spring需要加载的配置文件、启用disapatcher转发处理所有的请求、指定编码格式</td></tr></tbody></table><h4 id="5-SSM中包之间的关系"><a href="#5-SSM中包之间的关系" class="headerlink" title="5.SSM中包之间的关系"></a>5.SSM中包之间的关系</h4><ul><li>controller包是SpringMVC的主要文件，对来自浏览器的各种请求进行转发和处理。在controller中内置各种Service包中的对象，当接收到新的请求时，就会解析URL，根据注解调用相应的服务来完成请求。</li><li>entity包常与数据库表 一 一 对应，dao包中定义了数据库的基本操作，并在mapper包中的xml配置文件中完成数据操作的具体实现（增、删、改、查）。MyBatis可以实现到与  .xml 的自动匹配，这时就要把 xxxMapper.xml 和 xxxMapper.java 放在同一个包下。</li><li>Service包中定义了各种服务接口，通过Service-impl包中对接口进行实现，在实现接口的时候会 内置一个dao包中的对象（web服务的实现肯定会设计数据访问的，而数据访问被抽象称dao包中的对象，所以服务的实现必须借助dao包）借助到中的对象所实现的各种数据访问处理对象来实现具体的服务。</li></ul><h4 id="6-SSM框架中各框架的作用"><a href="#6-SSM框架中各框架的作用" class="headerlink" title="6.SSM框架中各框架的作用"></a>6.SSM框架中各框架的作用</h4><ul><li>MyBatis：持久层框架，负责数据库的访问</li><li>Spring MVC：表现层框架，把模型、视图、控制器分离，组合成一个灵活的系统</li><li>Spring：整合项目的所有框架，管理各种Java Bean（mapper、service、controller）事务控制。</li></ul><h2 id="Spring程序开发步骤"><a href="#Spring程序开发步骤" class="headerlink" title="Spring程序开发步骤"></a>Spring程序开发步骤</h2><ol><li><p>导入 Spring 开发的基本包坐标</p></li><li><p>编写 Dao 接口和实现类 </p></li><li><p>创建 Spring 核心配置文件 xml</p></li><li><p>在 Spring 配置文件中配置 UserDaoImpl </p></li><li><p>使用 Spring 的 API 获得 Bean 实例</p></li><li><p>导入坐标</p></li><li><p>编辑Bean</p></li><li><p>创建applicationContext.xml </p></li><li><p>Spring配置文件</p></li><li><p>获得Bean实例</p></li></ol><h2 id="1-1Spring配置文件"><a href="#1-1Spring配置文件" class="headerlink" title="1.1Spring配置文件"></a>1.1Spring配置文件</h2><h3 id="Bean标签范围配置"><a href="#Bean标签范围配置" class="headerlink" title="Bean标签范围配置"></a>Bean标签范围配置</h3><ol><li>当scope &#x3D; singleton时 Bean的实例化个数：1个</li></ol><p>​Bean的实例化时机：当Spring核心文件被加载时，实例化配置的Bean实例 </p><ol start="2"><li>当scope &#x3D; prototype时 Bean的实例化个数：多个</li></ol><p>​Bean的实例化时机：当调用getBean()方法时实例化Bean </p><h3 id="Bean生命周期配置"><a href="#Bean生命周期配置" class="headerlink" title="Bean生命周期配置"></a>Bean生命周期配置</h3><ul><li>init-method ： 初始化方法</li><li>destory-method ：销毁方法</li></ul><h3 id="Bean实例化三种方法"><a href="#Bean实例化三种方法" class="headerlink" title="Bean实例化三种方法"></a>Bean实例化三种方法</h3><ol><li>无参<strong>构造</strong>方法实例化   <strong>重点</strong></li><li>工厂<strong>静态</strong>方法实例化</li><li>工厂<strong>实例</strong>方法实例化</li></ol><h3 id="Bean依赖注入概念"><a href="#Bean依赖注入概念" class="headerlink" title="Bean依赖注入概念"></a>Bean依赖注入概念</h3><p>依赖注入：是Spring 框架核心Ioc的具体实现</p><h3 id="Bean依赖输入方式"><a href="#Bean依赖输入方式" class="headerlink" title="Bean依赖输入方式"></a>Bean依赖输入方式</h3><ol><li><p>构造方法 (有参和无参)</p><p>配置文件</p><p><img src="http://picgo.kongshier.top/2767/image-20220302215722762.png" alt="image-20220302215722762"></p></li><li><p>set方法</p><p>引入命名空间</p><p><img src="http://picgo.kongshier.top/2767/image-20220302215038130.png" alt="image-20220302215038130"></p><p>配置文件的设置 （简便方式）</p><p><img src="http://picgo.kongshier.top/2767/image-20220302215004925.png" alt="image-20220302215004925"></p></li></ol><h3 id="Bean依赖输入的数据类型"><a href="#Bean依赖输入的数据类型" class="headerlink" title="Bean依赖输入的数据类型"></a>Bean依赖输入的数据类型</h3><ul><li>普通数据类型</li><li>引用数据类型</li><li>集合数据类型</li></ul><h3 id="引入其他配置文件（分模块开发）"><a href="#引入其他配置文件（分模块开发）" class="headerlink" title="引入其他配置文件（分模块开发）"></a>引入其他配置文件（分模块开发）</h3><blockquote><p>实际开发中配置文件比较多，导致Spring配置繁杂，不方便读取，so将其进行部分配置拆解到其他配置文件中 通过 import标签加载，根据业务进行拆解配置文件</p><p><img src="http://picgo.kongshier.top/2767/image-20220302223150967.png" alt="image-20220302223150967"></p></blockquote><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p><img src="http://picgo.kongshier.top/2767/image-20220302224059142.png" alt="image-20220302224059142"></p><h2 id="1-2-Spring的API"><a href="#1-2-Spring的API" class="headerlink" title="1.2 Spring的API"></a>1.2 Spring的API</h2><h3 id="1-2-1ApplicationContext的继承体系"><a href="#1-2-1ApplicationContext的继承体系" class="headerlink" title="1.2.1ApplicationContext的继承体系"></a>1.2.1ApplicationContext的继承体系</h3><p><strong>接口</strong></p><p><img src="http://picgo.kongshier.top/2767/image-20220302224454401.png" alt="image-20220302224454401"></p><h3 id="1-2-2-ApplicationContext的实现类"><a href="#1-2-2-ApplicationContext的实现类" class="headerlink" title="1.2.2 ApplicationContext的实现类"></a>1.2.2 ApplicationContext的实现类</h3><p><img src="http://picgo.kongshier.top/2767/image-20220302225126952.png" alt="image-20220302225126952"></p><h3 id="1-2-3-getBean-方法使用"><a href="#1-2-3-getBean-方法使用" class="headerlink" title="1.2.3 getBean()方法使用"></a>1.2.3 getBean()方法使用</h3><p>通过id获取</p><ul><li>使用场景：某一类型的bean存在多个</li></ul><p>通过类型获取</p><ul><li>使用场景：某一个类型的bean<strong>只存</strong>在一个</li></ul><h2 id="2-Spring配置数据源"><a href="#2-Spring配置数据源" class="headerlink" title="2.Spring配置数据源"></a>2.Spring配置数据源</h2><h3 id="2-数据源-连接池-的作用"><a href="#2-数据源-连接池-的作用" class="headerlink" title="2.数据源(连接池)的作用"></a>2.数据源(连接池)的作用</h3><ul><li>提高程序性能如何实现的</li><li>实例化数据源，初始化部分链接资源</li><li>使用连接资源时从数据源中获取</li><li>使用完连接资源后归还数据源</li></ul><p><strong>常见的数据源</strong> ： DBCP , C2P0 , BoneCP 、Druid等</p><blockquote><p>底层&#x3D;不一样，API的修改</p></blockquote><h4 id="2-1数据源开发步骤"><a href="#2-1数据源开发步骤" class="headerlink" title="2.1数据源开发步骤"></a>2.1数据源开发步骤</h4><p><strong>里面的数据账号密码必须的本机的账号和密码</strong></p><ol><li>导入数据源的坐标和数据库的驱动坐标</li><li>创建数据源对象</li><li>设置数据源基本连接数据</li><li>使用数据源获取连接资源、归还连接数据</li></ol><p>让容器产生getBean</p><h3 id="2-2Spring配置数据源"><a href="#2-2Spring配置数据源" class="headerlink" title="2.2Spring配置数据源"></a>2.2Spring配置数据源</h3><blockquote><ul><li>将DataSource的创建权由Spring容器完成</li></ul></blockquote><h2 id="3-Spring注解开发"><a href="#3-Spring注解开发" class="headerlink" title="3.Spring注解开发"></a>3.Spring注解开发</h2><blockquote><p>注解配置提高开发效率</p></blockquote><p><strong>Spring原始注解主要是代替<Bean>的配置</strong></p><ul><li>使用注解进行开发是，需要在xml文件中配置组件扫描：是之u顶哪个包及其子包下的Bean需要进行扫描以便识别使用注解配置的类、字段、方法</li></ul><h3 id="原始注解"><a href="#原始注解" class="headerlink" title="原始注解"></a>原始注解</h3><p><img src="http://picgo.kongshier.top/2767/image-20220304154054834.png" alt="image-20220304154054834"></p><h3 id="Spring新注解"><a href="#Spring新注解" class="headerlink" title="Spring新注解"></a>Spring新注解</h3><p><img src="http://picgo.kongshier.top/2767/image-20220304183652282.png" alt="image-20220304183652282"></p><h2 id="4-Spring整合Junit"><a href="#4-Spring整合Junit" class="headerlink" title="4.Spring整合Junit"></a>4.Spring整合Junit</h2><ul><li>SpringJunit负责创建容器，配置文件的名称要知道</li><li>直接将测试的Bean在测试类注入</li></ul><p><strong>步骤</strong></p><ol><li>导入spring集成Junit的坐标</li><li>使用@Runwith注解替换原来的运行期</li><li>使用@contextConfiguration指定配置文件或配置类</li><li>使用@Autowired注入需要测试的对象</li><li>创建测试方法进行测试</li></ol><h3 id="Spring与Web环境集成"><a href="#Spring与Web环境集成" class="headerlink" title="Spring与Web环境集成"></a>Spring与Web环境集成</h3><p>ApplicationContext应用获取上下文</p><p><strong>在Web项目中</strong></p><p>使用ServletContextListener监听Web应用的启动，Web应用启动时，就加载Spring的配置文件，创建应用上下文对象ApplicationContext，</p><p>在将其存储到最大的域servletContext域中，则可以在任意位置从域中获得应用上下文ApplicationContext对象。</p><h3 id="Spring提供获取上下文的工具"><a href="#Spring提供获取上下文的工具" class="headerlink" title="Spring提供获取上下文的工具"></a>Spring提供获取上下文的工具</h3><ol><li>在web.xml中配置ContextLoaderListner监听器（导入Spring-web坐标）</li><li>使用WebApplicationContextUtils获得应用上下文对象ApplicationContext</li></ol><h1 id="2-SpringMVC"><a href="#2-SpringMVC" class="headerlink" title="2.SpringMVC"></a>2.SpringMVC</h1><p><strong>概述：</strong>  基于java实现的MVC设计模型的请求驱动请谅解Web框架  ， <strong>通过一套注解</strong> 使用一个简单的Java类成为请求的控制器，无需实现任何接口，还具有RESTful编程风格请求。</p><p><strong>访问控制图：</strong></p><p><img src="http://picgo.kongshier.top/2767/image-20220307211351133.png" alt="image-20220307211351133"></p><h2 id="1-1MVC开发步骤-√"><a href="#1-1MVC开发步骤-√" class="headerlink" title="1.1MVC开发步骤  √"></a>1.1MVC开发步骤  √</h2><ol><li>导入SpringMVC包      <strong>导入SpringMVC相关坐标</strong></li><li>配置Servlet                                                                                      <strong>配置SpringMVC核心控制器DispathcerServlet（前端控制器）</strong></li><li>编写Controller                                                                                <strong>创建Controller类和视图页面</strong></li><li>将Controller使用注解配置到Spring容器中(@Controller)          <strong>使用注解配置Controller类中业务方法的映射地址</strong></li><li>配置spring-mvc.xml文件(配置组件扫描)                                      <strong>配置SpringMVC核心文件spring-mvc.xml</strong></li><li>客户端发起请求测试</li></ol><p><img src="http://picgo.kongshier.top/2767/image-20220307214822123.png" alt="image-20220307214822123"></p><h3 id="访问过程"><a href="#访问过程" class="headerlink" title="访问过程"></a>访问过程</h3><p><img src="http://picgo.kongshier.top/2767/image-20220307215747054.png" alt="image-20220307215747054"></p><h3 id="执行流程"><a href="#执行流程" class="headerlink" title="执行流程"></a>执行流程</h3><p><img src="http://picgo.kongshier.top/2767/image-20220307220623806.png" alt="image-20220307220623806"></p><h2 id="2-SpringMVC注解解析"><a href="#2-SpringMVC注解解析" class="headerlink" title="2.SpringMVC注解解析"></a>2.SpringMVC注解解析</h2><p>@RequestMapping  ：用于建立请求URL与处理请求方法之间的对应关系</p><ul><li>类上           </li><li>方法上        用于区分不同的方法请求</li></ul><p><strong>属性</strong> ：</p><ul><li><p>value： 用于指定请求的URL </p></li><li><p>method：指定请求的方式  GET&#x2F;POST</p></li><li><p>params : 用于指定限制请求参数的条件  只能支持简单的表达式</p><ul><li>&#96;&#96;&#96;Java<br>params &#x3D; {“username”}   &#x2F;&#x2F; 必须携带有username 参数<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 3.SpringMVC组件解析</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 3.1.视图解析器</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### SpringMVC的相关组件</span><br><span class="line"></span><br><span class="line">- 前端控制器: DispatcherServlet    **调用其他工作组件**</span><br><span class="line">- 处理器映射器:HandlerMapping   </span><br><span class="line">- 处理器适配器:HandlerAdapter  </span><br><span class="line">- 处理器:Handler     </span><br><span class="line">- 视图解析器:View Resolver      渲染试图</span><br><span class="line">- 视图:View </span><br><span class="line"></span><br><span class="line">### SpringMVC注解和配置</span><br><span class="line"></span><br><span class="line">- @RequestMapping ：请求映射注解</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 4.SpringMVC的数据响应</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 4.1响应方式</span><br><span class="line"></span><br><span class="line">1. 页面跳转</span><br><span class="line">   - 直接返回字符串形式</span><br><span class="line">   - 通过ModelAndView 对象返回</span><br><span class="line">2. 回写数据</span><br><span class="line">   - 直接返回字符串</span><br><span class="line">   - 返回对象或集合</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1. 直接返回字符串形式</span><br><span class="line"></span><br><span class="line">   ![image-20220308103532717](http://picgo.kongshier.top/2767/image-20220308103532717.png)</span><br><span class="line"></span><br><span class="line">2. 返回ModelandView</span><br><span class="line"></span><br><span class="line">3. 直接返回字符串(回写数据)</span><br><span class="line"></span><br><span class="line">   - 通过SpringMVC框架注入的response对象，使用response.getWriter().print(“hello world”) 回写数据，不需要进行页面跳转</span><br><span class="line"></span><br><span class="line">   -  ✔若是直接返回字符串，需要通过**@ResponseBody注解告知SpringMVC框架**，方法返回的字符串不是跳转，而是直接在http响应体中返回</span><br><span class="line"></span><br><span class="line">4. 返回对象和集合</span><br><span class="line"></span><br><span class="line">   - 使用mvc注解取代@ResponseBody      在xml文件中配置  **&lt;mvc:annotation-driven    xxxxx /&gt;**   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 5. Spring 获得请求参数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 5.1获得请求参数</span><br><span class="line"></span><br><span class="line">&gt; 格式：name = value &amp; name= value  … …</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SpringMVC可以接受以下参数类型</span><br><span class="line"></span><br><span class="line">- 基本类型参数</span><br><span class="line">- 简单POJO类型参数</span><br><span class="line">- 数组类型参数</span><br><span class="line">- 集合类型参数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 5.1.1获得基本类型参数</span><br><span class="line"></span><br><span class="line">- Controller中的**业务方法的参数名称要与请求参数**的name一致，参数值会自动映射匹配。</span><br><span class="line"></span><br><span class="line">  - 在业务方法中的参数就是想要得到的参数内容 例如下面的代码</span><br><span class="line"></span><br><span class="line">    ~~~java</span><br><span class="line">    @RequestMapping(value=&quot;/quick11&quot;)</span><br><span class="line">        @ResponseBody  // 不进行页面跳转  在控制台得到输出的内容</span><br><span class="line">        public void save11(String username,int age) throws IOException &#123;</span><br><span class="line">            System.out.println(username);</span><br><span class="line">            System.out.println(age);</span><br><span class="line">        &#125;</span><br><span class="line">    ~~~</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 5.1.2获得POJO类型参数</span><br><span class="line"></span><br><span class="line">- Controller中的业务方法的**POJO参数的属性名**与请求参数的name一致，参数值会自动映射匹配。</span><br><span class="line"></span><br><span class="line">  - 先定义一个User类 有String username,int age 两个私有变量 </span><br><span class="line"></span><br><span class="line">    ```java</span><br><span class="line">    @RequestMapping(value=&quot;/quick12&quot;)</span><br><span class="line">    @ResponseBody</span><br><span class="line">    public void save12(User user) throws IOException &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="5-1-3获得数据类型参数"><a href="#5-1-3获得数据类型参数" class="headerlink" title="5.1.3获得数据类型参数"></a>5.1.3获得数据类型参数</h4><ul><li><p>Controller中的业务方法的<strong>数组名称</strong>与请求参数的name一致，参数值会自动映射匹配。</p><ul><li><p>访问的形式localhost：8080&#x2F;quick13?username &#x3D; zhangsan &amp;age &#x3D; 13</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;/quick13&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save13</span><span class="params">(String[] strs)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    System.out.println(Arrays.asList(strs));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="5-1-4获得集合类型参数"><a href="#5-1-4获得集合类型参数" class="headerlink" title="5.1.4获得集合类型参数"></a>5.1.4获得集合类型参数</h4><ul><li><p>1 获取集合参数时，要将集合参数包装到一个POJO对象中 ，称为View对象</p><ul><li>创建一个VO类型包装好集合  private List<User> userlist</li></ul></li><li><p>2 当使用<strong>ajax提交时</strong>，可以指定<strong>contentType为json形式</strong>，那么在方法参数位置使用**@RequestBody可<strong>以直接接收集合数据而</strong>无需使用POJO进行包装**。</p><ul><li><p>在xml文件中要**设置开放资源(一般是静态资源)**访问：&lt;mvc:resources mapping&#x3D;”&#x2F;js&#x2F;** “ location&#x3D;”&#x2F;js&#x2F;“&#x2F;&gt;  找到存放jquery文件的位置  <strong>若是不设置会在浏览器的开发者模式下看到报错</strong></p></li><li><p>在创建一个ajax.jsp文件 </p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--    引入jQuery--%&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/js/jquery-3.3.1.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="type">var</span> <span class="variable">userList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line">        userList.push(&#123;username:<span class="string">&quot;zhangsan&quot;</span>,age:<span class="number">18</span>&#125;);</span><br><span class="line">        userList.push(&#123;username:<span class="string">&quot;lisi&quot;</span>,age:<span class="number">28</span>&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// jQuery语法</span></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type:<span class="string">&quot;POST&quot;</span>,</span><br><span class="line">            url:<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/user/quick15&quot;</span>,</span><br><span class="line">            data:JSON.stringify(userList),</span><br><span class="line">            contentType:<span class="string">&quot;application/json;charset=utf-8&quot;</span></span><br><span class="line">        &#125;);     </span><br><span class="line">     &lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>在控制台的访问形式：在方法参数中添加@RequestBody   存放数据在指定的集合中  List<User> userList</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;/quick15&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save15</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;User&gt; userList)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    System.out.println(userList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>开启静态资源的方式</p><ul><li><p>1.相对具体文件来进行比较麻烦每一个静态的文件都要设置一次 资源访问</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--开放资源的访问--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--mapping 是服务端访问的地址 location的具体的地址--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/js/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/js/&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/img/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/img/&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>2.简单粗暴形式  就能把所有的静态资源权限都打开都能访问到</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="5-2请求数据乱码问题"><a href="#5-2请求数据乱码问题" class="headerlink" title="5.2请求数据乱码问题"></a>5.2请求数据乱码问题</h3><ul><li><p>设置一个过滤器进行过滤代码</p><ul><li><p>配置全局的filter</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置全局过滤的filter--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 指定的值编码--&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="5-3参数绑定注解-requestParam"><a href="#5-3参数绑定注解-requestParam" class="headerlink" title="5.3参数绑定注解@requestParam"></a>5.3参数绑定注解@requestParam</h3><ul><li>当请求的参数名称与Controller的业务方法参数名称<strong>不一致时</strong>，就需要通过@RequestParam注解显示的绑定。<ul><li>@requestParam的参数 ：</li><li><strong>value：</strong>请求参数的名称</li><li><strong>required：</strong>指定请求的参数是否必须包括，<strong>默认是TRUE 提交时若是没有此参数会报错</strong> </li><li><strong>defaultValue：</strong>没有指定请求参数时，则使用默认的值赋值</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;/quick16&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="comment">// required  = false 没有name 参数 也可以进行  ，若是true 没有name 则会报错</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save16</span><span class="params">(<span class="meta">@RequestParam(value=&quot;name&quot;,required = false,defaultValue = &quot;itcast&quot;)</span> String username)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    System.out.println(username);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-4获得Restful风格的参数"><a href="#5-4获得Restful风格的参数" class="headerlink" title="5.4获得Restful风格的参数"></a>5.4获得Restful风格的参数</h3><p><strong>Restful</strong>是一种软件<strong>架构风格、设计风格</strong>，而不是标准，只是提供了一组设计原则和约束条件。主要用于客户端和服务器交互类的软件，基于这个风格设计的软件可以更简洁，更有层次，更易于实现缓存机制等。</p><ul><li><p>Restful风格的请求方式：“url + 请求方式”  有以下四种</p><ol><li>GET：用于获取资源</li><li>POST：用于新建资源</li><li>PUT：用于更新资源</li><li>DELETE：用于删除资源</li></ol><p><img src="http://picgo.kongshier.top/2767/image-20220309163756460.png" alt="image-20220309163756460"></p></li></ul><p>上述url地址&#x2F;user&#x2F;1中的1就是要获得的请求参数，在SpringMVC中可以使用占位符进行参数绑定。地址&#x2F;user&#x2F;1可以写成&#x2F;user&#x2F;[id)，占位符lid)对应的就是1的值。在业务方法中我们可以使用**@PathVariable注解进行占位符的匹配获取工作**。</p><p><img src="http://picgo.kongshier.top/2767/image-20220309164104285.png" alt="image-20220309164104285"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;/quick17/&#123;name&#125;&quot;,method = POST)</span> <span class="comment">//method获取请求方式</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save17</span><span class="params">(<span class="meta">@PathVariable(value=&quot;name&quot;)</span> String username)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    System.out.println(username);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-5自定义类型转换器"><a href="#5-5自定义类型转换器" class="headerlink" title="5.5自定义类型转换器"></a>5.5自定义类型转换器</h3><ul><li>SpringMVC默认已经提供了一些<strong>常用的类型转换器</strong>，例如客户端提交的<strong>字符串转换成int型</strong>进行参数设置。</li><li>但是不是所有的数据类型都提供了转换器，没有提供的就需要自定义转换器，例如:日期类型的数据就需要自定义转换器。</li></ul><p>自定义类型转换器的步骤：</p><ol><li>定义转换器类实现Converter接口</li><li>在配置文件中声明转换器</li><li>在<annotation-driven>中引用转挨器</li></ol><p>第一步：定义转换器类实现Converter接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.core.convert.converter.Converter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DateConverter</span> <span class="keyword">implements</span> <span class="title class_">Converter</span>&lt;String, Date&gt; &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">convert</span><span class="params">(String dateStr)</span> &#123;</span><br><span class="line">        <span class="comment">//将日期字符串转换成日期对象 返回</span></span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">format</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            date = format.parse(dateStr);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> date;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二步：在配置文件中声明转换器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--声明转换器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;conversionService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.context.support.ConversionServiceFactoryBean&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;converters&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.converter.DateConverter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第三步：在<annotation-driven>中引用转挨器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">&lt;!--mvc的注解驱动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> <span class="attr">conversion-service</span>=<span class="string">&quot;conversionService&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;/quick18&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save18</span><span class="params">(Date date)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    System.out.println(date);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-6获得Servlet相关API"><a href="#5-6获得Servlet相关API" class="headerlink" title="5.6获得Servlet相关API"></a>5.6获得Servlet相关API</h3><p>SpringMVC支持使用原始ServletAPl对象作为<strong>控制器方法的参数进行注入</strong>，常用的对象如下:</p><ul><li>HttpServletRequest</li><li>HttpServletResponse</li><li>HttpSession</li></ul><p>在方法中注释这些参数(形参) </p><p> 例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;/quick19&quot;)</span></span><br><span class="line">   <span class="meta">@ResponseBody</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save19</span><span class="params">(HttpServletRequest request, HttpServletResponse response, HttpSession session)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">       System.out.println(request);</span><br><span class="line">       System.out.println(response);</span><br><span class="line">       System.out.println(session);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="5-7获得请求头"><a href="#5-7获得请求头" class="headerlink" title="5.7获得请求头"></a>5.7获得请求头</h3><ol><li><p>@RequestHeader注解</p><ul><li><p>属性：</p></li><li><p>value:请求头的名称</p></li><li><p>required：是否必须携带此请求头  true 的时候，当不是这个头会报错，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;/quick20&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save20</span><span class="params">(<span class="meta">@RequestHeader(value = &quot;User-Agent&quot;,required = false)</span> String user_agent)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    System.out.println(user_agent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>@CookieValue</p><p>直接从cookie的名称获得cookie的值</p><ul><li><p>属性</p></li><li><p>value:指定cookie的名称</p></li><li><p>required：是否必须携带此cookie</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;/quick21&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save21</span><span class="params">(<span class="meta">@CookieValue(value = &quot;JSESSIONID&quot;)</span> String jsessionId)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    System.out.println(jsessionId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="5-8文件上传"><a href="#5-8文件上传" class="headerlink" title="5.8文件上传"></a>5.8文件上传</h3><p>文件上传客户端的三要素</p><ol><li>表单项type&#x3D;“file”</li><li>表单的提交方式是post</li><li>表单的enctype属性是多部分表单形式，及enctype&#x3D;“multipart&#x2F;form-data”  多表单形式</li></ol><p>原理：</p><ul><li>当form表单修改为多部分表单时,request.getParameter()将失效。</li><li>enctype&#x3D; “application&#x2F;x-www-form-urlencoded”时，form表单的正文内容格式是:<strong>key&#x3D;value&amp;key&#x3D;value&amp;key&#x3D;value</strong></li><li>当form表单的enctype取值为Mutilpart&#x2F;form-data时，请求正文内容就变成多部分形式</li></ul><h4 id="5-8-1单文件上传步骤"><a href="#5-8-1单文件上传步骤" class="headerlink" title="5.8.1单文件上传步骤"></a>5.8.1单文件上传步骤</h4><p>upload.jsp文件</p><p>代码  里面是两个表单文件</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/user/quick22&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">    名称&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span>&gt;&lt;br/&gt;</span><br><span class="line">    文件<span class="number">1</span>&lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;uploadFile&quot;</span>&gt;&lt;br/&gt;</span><br><span class="line">    文件<span class="number">2</span>&lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;uploadFile2&quot;</span>&gt;&lt;br/&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><ol><li><p>导入fileupload和io坐标</p><ul><li><p>代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>配置文件上传解析器</p><ul><li><p>代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置文件上传解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;multipartResolver&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxUploadSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;500000&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>编写文件上传代码</p><ul><li><p>代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;/quick22&quot;)</span></span><br><span class="line">  <span class="meta">@ResponseBody</span>   <span class="comment">//在参数中的上传的文件名字要与表单中设置的value的名字一样</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save22</span><span class="params">(String username, MultipartFile uploadFile,MultipartFile uploadFile2)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">      System.out.println(username);</span><br><span class="line">      <span class="comment">//保存/存储文件</span></span><br><span class="line">      <span class="comment">//1.获得上传文件的名称</span></span><br><span class="line">      <span class="type">String</span> <span class="variable">originalFilename</span> <span class="operator">=</span> uploadFile.getOriginalFilename();<span class="comment">//上传文件原始名称</span></span><br><span class="line">      uploadFile.transferTo(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;C:\\upload\\&quot;</span>+originalFilename));<span class="comment">//将文件到转移到 C:\\upload\\或者是转移到某个服务器上</span></span><br><span class="line">      <span class="comment">//这个是另外的文件</span></span><br><span class="line">      <span class="type">String</span> <span class="variable">originalFilename2</span> <span class="operator">=</span> uploadFile2.getOriginalFilename();</span><br><span class="line">      uploadFile2.transferTo(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;C:\\upload\\&quot;</span>+originalFilename2));</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol><h4 id="5-8-2多文件上传"><a href="#5-8-2多文件上传" class="headerlink" title="5.8.2多文件上传"></a>5.8.2多文件上传</h4><p>表单</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/user/quick23&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">    名称&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span>&gt;&lt;br/&gt;</span><br><span class="line">    文件<span class="number">1</span>&lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;uploadFile&quot;</span>&gt;&lt;br/&gt;</span><br><span class="line">    文件<span class="number">2</span>&lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;uploadFile&quot;</span>&gt;&lt;br/&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;使用数组上传文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;/quick23&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save23</span><span class="params">(String username, MultipartFile[] uploadFile)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    System.out.println(username);</span><br><span class="line">    <span class="keyword">for</span> (MultipartFile multipartFile : uploadFile) &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">originalFilename</span> <span class="operator">=</span> multipartFile.getOriginalFilename();</span><br><span class="line">        multipartFile.transferTo(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;C:\\upload\\&quot;</span>+originalFilename));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-Spring-jdbcTemplate基本使用"><a href="#3-Spring-jdbcTemplate基本使用" class="headerlink" title="3.Spring jdbcTemplate基本使用"></a>3.Spring jdbcTemplate基本使用</h1><h2 id="3-1jdcbTemplate概述"><a href="#3-1jdcbTemplate概述" class="headerlink" title="3.1jdcbTemplate概述"></a>3.1jdcbTemplate概述</h2><p>它是spring框架中提供的一个<strong>对象</strong>，是<strong>对原始繁琐的JdbcAPI对象的简单封装</strong>。spring框架为我们提供了很多的<strong>操作模板类</strong>。</p><ul><li>**例如:**操作关系型数据的JdbcTemplate和ltbernateTemplate，操作nosqI数据库的RedisTemplate，操作消息队列的JmsTemplate等等。</li></ul><h2 id="3-2-jdbcTemplate开发步骤"><a href="#3-2-jdbcTemplate开发步骤" class="headerlink" title="3.2 jdbcTemplate开发步骤"></a>3.2 jdbcTemplate开发步骤</h2><ol><li>导入spring-jdbc和spring-tx坐标</li><li>创建数据库表和实体</li><li>创建JdbcTemplate对象</li><li>执行数据库操作</li></ol><h2 id="3-3Spring产生jdbcTemplate对象"><a href="#3-3Spring产生jdbcTemplate对象" class="headerlink" title="3.3Spring产生jdbcTemplate对象"></a>3.3Spring产生jdbcTemplate对象</h2><p>配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--加载jdbc.properties--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--数据源对象  解耦 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--jdbc模板对象--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jdbcTemplate&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>jdbc.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/test?&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf8</span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span> <span class="keyword">throws</span> PropertyVetoException &#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">app</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">    <span class="type">JdbcTemplate</span> <span class="variable">jdbcTemplate</span> <span class="operator">=</span> app.getBean(JdbcTemplate.class);</span><br><span class="line">    <span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> jdbcTemplate.update(<span class="string">&quot;insert into account values(?,?)&quot;</span>, <span class="string">&quot;lisi&quot;</span>, <span class="number">5000</span>);</span><br><span class="line">    System.out.println(row);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-4-jdbcTemplate的常用操作"><a href="#3-4-jdbcTemplate的常用操作" class="headerlink" title="3.4 jdbcTemplate的常用操作"></a>3.4 jdbcTemplate的常用操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(&quot;classpath:applicationContext.xml&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdbcTemplateCRUDTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryCount</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">count</span> <span class="operator">=</span> jdbcTemplate.queryForObject(<span class="string">&quot;select count(*) from account&quot;</span>, Long.class);</span><br><span class="line">        System.out.println(count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询一个</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryOne</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Account</span> <span class="variable">account</span> <span class="operator">=</span> jdbcTemplate.queryForObject(<span class="string">&quot;select * from account where name=?&quot;</span>, <span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;Account&gt;(Account.class), <span class="string">&quot;tom&quot;</span>);</span><br><span class="line">        System.out.println(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryAll</span><span class="params">()</span>&#123;</span><br><span class="line">        List&lt;Account&gt; accountList = jdbcTemplate.query(<span class="string">&quot;select * from account&quot;</span>, <span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;Account&gt;(Account.class));</span><br><span class="line">        System.out.println(accountList);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//更新</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span>&#123;</span><br><span class="line">        jdbcTemplate.update(<span class="string">&quot;update account set money=? where name=?&quot;</span>,<span class="number">10000</span>,<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span>&#123;</span><br><span class="line">        jdbcTemplate.update(<span class="string">&quot;delete from account where name=?&quot;</span>,<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><p>导入spring-jdbc和spring-tx坐标</p></li><li><p>创建数据库表和实体</p></li><li><p>创建JdbcTemplate对象</p><ul><li>JdbcTemplate jdbcTemplate &#x3D; new JdbcTemplate () ;</li><li>jdbcTemplate.setDatasource (datasource) ;</li></ul></li><li><p>执行数据库操作</p><ul><li><p>更新操作:</p><p>jdbcTemplate.update (sql,params)</p></li><li><p>查询操作:</p><p>jdbcTemplate.query (sql,Mapper,params)</p><p>jdbcTemplate.queryForobject ( sql,Mapper,params)</p></li></ul></li></ol><h1 id="Spring练习"><a href="#Spring练习" class="headerlink" title="Spring练习"></a>Spring练习</h1><h2 id="1-spring练习环境搭建"><a href="#1-spring练习环境搭建" class="headerlink" title="1.spring练习环境搭建"></a>1.spring练习环境搭建</h2><h3 id="1-1步骤"><a href="#1-1步骤" class="headerlink" title="1.1步骤"></a>1.1步骤</h3><ol><li>创建工程(Project&amp;Module)</li><li>导入静态页面(见资料jsp页面)</li><li>导入需要坐标(见资料中的pom.xml)</li><li>创建包结构(controller、service、dao、domain、utils)</li><li>导入数据库脚本(见资料testsql)</li><li>创建POJO类(见资料User.java和Role.java)</li><li>创建配置文件(applicationContext.xml、 spring-mvc.xml、jdbc.properties、log4j.properties)</li></ol><h3 id="2-用户与角色分析"><a href="#2-用户与角色分析" class="headerlink" title="2.用户与角色分析"></a>2.用户与角色分析</h3><p><img src="http://picgo.kongshier.top/2767/image-20220310223115212.png" alt="image-20220310223115212"></p><h4 id="2-1角色列表"><a href="#2-1角色列表" class="headerlink" title="2.1角色列表"></a>2.1角色列表</h4><ol><li>点击角色管理菜单发送请求到服务器端（修改角色管理菜单的url地址)</li><li>创建RoleController和showList()方法</li><li>创建RoleService和showList()方法</li><li>创建RoleDao和findAll)方法</li><li>使用JdbcTemplate完成查询操作</li><li>将查询数据存储到Model中转</li><li>发到role-list.jsp页面进行展示</li></ol><h1 id="4-SpringMCV拦截器"><a href="#4-SpringMCV拦截器" class="headerlink" title="4.SpringMCV拦截器"></a>4.SpringMCV拦截器</h1><h2 id="4-1拦截器作用"><a href="#4-1拦截器作用" class="headerlink" title="4.1拦截器作用"></a>4.1拦截器作用</h2><ul><li>Spring MVC的<strong>拦截器</strong>类似于Servlet开发中的过滤器Filter，用于对处理器进行<strong>预处理和后处理。</strong></li><li>将拦截器按照一定顺序链接称一条链，拦截器链。</li></ul><h2 id="4-2过滤器和拦截器的区别"><a href="#4-2过滤器和拦截器的区别" class="headerlink" title="4.2过滤器和拦截器的区别"></a>4.2过滤器和拦截器的区别</h2><ol><li>过滤器（Filter）<ul><li>是servlet规范中的一部分，任何Java Web工程都可以使用</li><li>在url-pattern中配置了&#x2F;*之后，可以对所有要访问的资源拦截</li></ul></li><li>拦截器（Interceptor）<ul><li>是 SpringMVC框架自己的，只有使用了SpringMVC框架的工程才能用</li><li>在&lt;mvc:mapping path&#x3D;“”&#x2F;&gt;中配置了&#x2F;**之后，也可以多所有资源进行拦截，但是可以通过&lt;mvc:exclude-mapping path&#x3D;“”&#x2F;&gt;标签排除不需要拦截的资源</li></ul></li></ol><h2 id="4-3拦截器使用步骤"><a href="#4-3拦截器使用步骤" class="headerlink" title="4.3拦截器使用步骤"></a>4.3拦截器使用步骤</h2><ol><li><p>创建拦截器类实现Handlerlnterceptor接口</p></li><li><p>配置拦截器</p><p>- </p><ul><li>&#96;&#96;&#96;xml<!--配置拦截器--><a href="mvc:interceptors">mvc:interceptors</a><br><!--配置的文件顺序就是执行pre的顺序--><br><a href="mvc:interceptor">mvc:interceptor</a><br>    <!--对哪些资源执行拦截操作--><br>    &lt;mvc:mapping path&#x3D;”&#x2F;**”&#x2F;&gt;  对所有的<br>    <bean class="com.itheima.interceptor.MyInterceptor2"/>   对应的拦截器的包<br></mvc:interceptor><br><a href="mvc:interceptor">mvc:interceptor</a><br>    <!--对哪些资源执行拦截操作--><br>    &lt;mvc:mapping path&#x3D;”&#x2F;**”&#x2F;&gt;<br>    <bean class="com.itheima.interceptor.MyInterceptor1"/><br></mvc:interceptor><br></mvc:interceptors><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3. 测试拦截器的拦截效果</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 4.4拦截器的方法说明</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1. preHandle0   ✔</span><br><span class="line">   - 返回值类型boolean类型的</span><br><span class="line">   - 返回false 后面的intercepor和Controller都不会执行</span><br><span class="line">   - 返回true 则会继续执行下一个interceptor和controller方法</span><br><span class="line">2. postHandle()</span><br><span class="line">   - 在目标方法执行之前进行执行，必须得preHandle方法返回值是true下，但是在DispatcherService进行视图渲染之前被调用，可以在对Controller处理之后的ModelAndView对象进行操作</span><br><span class="line">3. afterCompletion()</span><br><span class="line">   - 该方法会在渲染了对应的视图之后执行，前提也是preHandle的返回值是true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 5.SpringMVC异常处理机制</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 1.异常处理思路</span><br><span class="line"></span><br><span class="line">1. 预期异常</span><br><span class="line">   - 通过捕获异常获取异常信息</span><br><span class="line">2. 运行时异常RuntimeException</span><br><span class="line">   - 通过规范代码开发、测试等手段减少运行时异常</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">异常抛出的顺序</span><br><span class="line"></span><br><span class="line">![image-20220311192129229](http://picgo.kongshier.top/2767/image-20220311192129229.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 2.异常处理的两种方式</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1. 使用SpringMVC提供的简单异常处理器SimpleMappingExceptionResolver</span><br><span class="line"></span><br><span class="line">   - 配置简单异常处理器 ：根据情况进行相应异常与视图的映射配置</span><br><span class="line"></span><br><span class="line">   - ![image-20220311192825201](http://picgo.kongshier.top/2767/image-20220311192825201.png)</span><br><span class="line"></span><br><span class="line">   - ```xml</span><br><span class="line">     &lt;!--配置异常处理器--&gt;</span><br><span class="line">         &lt;bean class=&quot;org.springframework.web.servlet.handler.SimpleMappingExceptionResolver&quot;&gt;</span><br><span class="line">             &lt;!--&lt;property name=&quot;defaultErrorView&quot; value=&quot;error&quot;/&gt;--&gt;</span><br><span class="line">             &lt;property name=&quot;exceptionMappings&quot;&gt;</span><br><span class="line">                 &lt;map&gt;</span><br><span class="line">                     &lt;!--类型转换异常--&gt;</span><br><span class="line">                     &lt;entry key=&quot;java.lang.ClassCastException&quot; value=&quot;error1&quot;/&gt;</span><br><span class="line">                     &lt;!--自定义异常--&gt;</span><br><span class="line">                     &lt;entry key=&quot;com.itheima.exception.MyException&quot; value=&quot;error2&quot;/&gt;</span><br><span class="line">                 &lt;/map&gt;</span><br><span class="line">             &lt;/property&gt;</span><br><span class="line">         &lt;/bean&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>使用Spring的异常处理接口HandleExceptionResolver自定义异常</p><p>步骤</p><ol><li>创建异常处理器类实现HandlerExceptionResolver</li><li>配置异常处理器</li><li>编写异常页面</li><li>编写页面跳转</li></ol></li></ol><h1 id="6-Spring的AOP"><a href="#6-Spring的AOP" class="headerlink" title="6.Spring的AOP"></a>6.Spring的AOP</h1><ul><li>AOP为Aspect Oriented Programming的缩写，意思为<strong>面向切面编程</strong>，是通过<strong>预编译方式和运行期动态代理</strong>实现程序功能的统一维护的一种技术。</li><li>AOP可以对业务逻辑各个部分进行隔离（解耦合），使各个业务逻辑各部分之间的耦合度降低，提高程序的复用，提高效率。</li></ul><h2 id="6-1AOP的作用和优势"><a href="#6-1AOP的作用和优势" class="headerlink" title="6.1AOP的作用和优势"></a>6.1AOP的作用和优势</h2><ol><li>作用：在程序运行期间，在不修改源码的情况下对方法进行功能增强</li><li>优势：减少重复代码，提高开发效率，并且便于维护</li></ol><p>不用修改方法代码，只要通过修改日志控制方法代码就能控制到目标方法</p><p><img src="http://picgo.kongshier.top/2767/image-20220312100440394.png" alt="image-20220312100440394"></p><h2 id="6-2AOP的底层实现"><a href="#6-2AOP的底层实现" class="headerlink" title="6.2AOP的底层实现"></a>6.2AOP的底层实现</h2><ul><li>通过Spring提供的动态代理技术实现</li><li>运行期间Spring通过动态代理技术生成代理对象</li></ul><h2 id="6-3AOP动态代理技术"><a href="#6-3AOP动态代理技术" class="headerlink" title="6.3AOP动态代理技术"></a>6.3AOP动态代理技术</h2><p>常用代理对象</p><ul><li><p><strong>JDK代理:</strong> 基于接口的动态代理技术</p><ul><li><p>目标对象必须要有接口</p></li><li><p><img src="http://picgo.kongshier.top/2767/image-20220312101601182.png" alt="image-20220312101601182"></p></li><li></li><li><p>&#96;&#96;&#96;java<br>public class ProxyTest {</p><pre><code>public static void main(String[] args) &#123;    //目标对象    final Target target = new Target();    //增强对象  里面有before()和afterReturning()方法    final Advice advice = new Advice();    //返回值 就是动态生成的代理对象    TargetInterface proxy = (TargetInterface) Proxy.newProxyInstance(            target.getClass().getClassLoader(), //目标对象类加载器            target.getClass().getInterfaces(), //目标对象相同的接口字节码对象数组            new InvocationHandler() &#123;                //调用代理对象的任何方法  实质执行的都是invoke方法                @Override                public Object invoke(Object proxy, Method method, Object[] args) throws Throwable &#123;                    advice.before(); //前置增强                    Object invoke = method.invoke(target, args);//执行目标方法                    advice.afterReturning(); //后置增强                    return invoke;                &#125;            &#125;    );    //调用代理对象的方法    proxy.save();&#125;</code></pre><p>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- **cglib代理:**基于父类的动态代理技术</span><br><span class="line"></span><br><span class="line">  - 第三方的代理 可以没有接口</span><br><span class="line"></span><br><span class="line">  - ![image-20220312101614278](http://picgo.kongshier.top/2767/image-20220312101614278.png)</span><br><span class="line"></span><br><span class="line">  - </span><br><span class="line"></span><br><span class="line">  - ```Java</span><br><span class="line">    public class ProxyTest &#123;</span><br><span class="line">    </span><br><span class="line">        public static void main(String[] args) &#123;</span><br><span class="line">    </span><br><span class="line">            //目标对象</span><br><span class="line">            final Target target = new Target();</span><br><span class="line">    </span><br><span class="line">            //增强对象</span><br><span class="line">            final Advice advice = new Advice();</span><br><span class="line">    </span><br><span class="line">            //返回值 就是动态生成的代理对象  基于cglib</span><br><span class="line">            //1、创建增强器</span><br><span class="line">            Enhancer enhancer = new Enhancer();</span><br><span class="line">            //2、设置父类（目标）</span><br><span class="line">            enhancer.setSuperclass(Target.class);</span><br><span class="line">            //3、设置回调</span><br><span class="line">            enhancer.setCallback(new MethodInterceptor() &#123;</span><br><span class="line">                @Override</span><br><span class="line">                public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy) throws Throwable &#123;</span><br><span class="line">                    advice.before(); //执行前置</span><br><span class="line">                    Object invoke = method.invoke(target, args);//反射 执行目标</span><br><span class="line">                    advice.afterReturning(); //执行后置</span><br><span class="line">                    return invoke;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            //4、创建代理对象</span><br><span class="line">            Target proxy = (Target) enhancer.create();</span><br><span class="line">            proxy.save();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="6-4AOP概念"><a href="#6-4AOP概念" class="headerlink" title="6.4AOP概念"></a>6.4AOP概念</h2><ul><li>Spring的AOP实现底层:  是对上面的动态代理的代码<strong>进行封装</strong>，封装后只要关注的部分进行代码编写，并通过<strong>配置的方式</strong>完成指定目标的方法增强。</li></ul><p>常用术语：</p><ol><li>Target（目标对象）：代理的目标对象</li><li>Proxy（代理）：类被AOP织入增强后，就会产生一个结果代理类</li><li>Joinpoint（连接点）：指被拦截到的点。在Spring中，这些点指的是方法，Spring只支持方法的连接点。（可以被增强的方法，是链接点）</li><li><strong>Pointcut（切入点）</strong>：切入点就是对Joinpoint进行拦截的定义（要被增强的方法）</li><li><strong>Advice（通知&#x2F;增强）</strong>：拦截到Jointpoint之后所做的事情就是通知 </li><li><strong>Aspect（切面）</strong>：切入点 （Pointcut）+ 通知（Advice）</li><li><strong>Weavng（织入</strong>）：指切入点与通知结合的过程就是织入过程。是指把增强应用到目标对象来创建新的代理对象的过程。</li></ol><h2 id="6-5AOP明确事项"><a href="#6-5AOP明确事项" class="headerlink" title="6.5AOP明确事项"></a>6.5AOP明确事项</h2><ul><li>为了做什么：目标对象-&gt;代理对象 </li><li>怎么做：找到连接点（即方法）经过拦截方法定义后真正拦截到的使之成为切入点 经过一定的操作成为切面 </li><li>什么样的操作：通过织入把通知&#x2F;增强引入切入点 成为切面 最终的效果</li></ul><h3 id="6-5-1需要编写的内容"><a href="#6-5-1需要编写的内容" class="headerlink" title="6.5.1需要编写的内容"></a>6.5.1需要编写的内容</h3><ul><li>编写核心业务代码(目标类的目标方法)</li><li>编写切面类，切面类中有通知(增强功能方法)</li><li>在配置文件中，配置织入关系，即将哪些通知与哪些连接点进行结合</li></ul><h3 id="6-5-2AOP技术实现的内容"><a href="#6-5-2AOP技术实现的内容" class="headerlink" title="6.5.2AOP技术实现的内容"></a>6.5.2AOP技术实现的内容</h3><ul><li>配置切点，监控切入点的执行，创建代理对象进行增强</li><li>Spring框架监控切入点方法的执行。</li><li>一旦监控到切入点方法被运行，使用代理机制，动态创建目标对象的代理对象，根据通知类别，在代理对象的对应位置，将通知对应的功能织入，完成完整的代码逻辑运行。</li></ul><h3 id="6-5-3AOP底层使用哪种的代理方式"><a href="#6-5-3AOP底层使用哪种的代理方式" class="headerlink" title="6.5.3AOP底层使用哪种的代理方式"></a>6.5.3AOP底层使用哪种的代理方式</h3><ul><li>框架会目标类会判断是否实现了接口来觉得采用哪种动态代理方式<ul><li>jdk代理:实现接口</li><li>**cglib代理:**基于父类的动态代理技术</li></ul></li></ul><h2 id="6-6知识要点"><a href="#6-6知识要点" class="headerlink" title="6.6知识要点"></a>6.6知识要点</h2><ul><li><p>aop：面向切面编程</p></li><li><p>aop底层实现:基于JDK的动态代理和基于Cglib的动态代理</p></li><li><p>aop的重点概念:</p><ul><li>Pointcut(切入点)︰被增强的方法</li><li>Advice(通知&#x2F;增强)︰封装增强业务逻辑的方法</li><li>Aspect(切面)︰切点+通知</li><li>Weaving (织入)︰将切点与通知结合的过程</li></ul></li><li><p>开发明确事项:</p><ul><li><p>谁是切点(切点表达式配置)</p></li><li><p>谁是通知(切面类中的增强方法)</p></li><li><p>将切点和通知进行织入配置</p></li></ul></li></ul><h2 id="6-7基于xml的AOP开发"><a href="#6-7基于xml的AOP开发" class="headerlink" title="6.7基于xml的AOP开发"></a>6.7基于xml的AOP开发</h2><h3 id="6-7-1快速入门"><a href="#6-7-1快速入门" class="headerlink" title="6.7.1快速入门"></a>6.7.1快速入门</h3><ol><li>导入AOP相关坐标</li><li>创建目标接口和目标类(内部有切点)</li><li>创建切面类(内部有增强方法)</li><li>将目标类和切面类的对象创建权交给spring</li><li>在applicationContext.xml中配置织入关系</li><li>测试代码</li></ol><h4 id="实现的代码："><a href="#实现的代码：" class="headerlink" title="实现的代码："></a>实现的代码：</h4><ol><li><p>导入AOP相关坐标 在pom.xml中</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--AOP坐标--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>创建目标接口和目标类(内部有切点)</p><p><img src="http://picgo.kongshier.top/2767/image-20220312153054648.png" alt="image-20220312153054648"></p><p>接口代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">TargetInterface</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目标类代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Target</span> <span class="keyword">implements</span> <span class="title class_">TargetInterface</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;save running.....&quot;</span>);</span><br><span class="line">        <span class="comment">//int i = 1/0;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建切面类(内部有增强方法)</p><p>切面类代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAspect</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;前置增强..........&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterReturning</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;后置增强..........&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Proceeding JoinPoint:  正在执行的连接点===切点</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">around</span><span class="params">(ProceedingJoinPoint pjp)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;环绕前增强....&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">proceed</span> <span class="operator">=</span> pjp.proceed();<span class="comment">//切点方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;环绕后增强....&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> proceed;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterThrowing</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;异常抛出增强..........&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">after</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;最终增强..........&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>将目标类和切面类的对象创建权交给spring</p><p>引用applicationContext.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span>  <span class="attr">aop命名空间在</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--目标对象  就是目标类的包地址到类名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;target&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.aop.Target&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--切面对象  就是切面累的包地址到类名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;myAspect&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.aop.MyAspect&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在applicationContext.xml中配置织入关系</p><p>引用applicationContext.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置织入：告诉spring框架 哪些方法(切点)需要进行哪些增强(前置、后置...)  必要由aop命名空间--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--声明切面 说明myAspect是切面类--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;myAspect&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--抽取切点表达式 --&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!--aop:XXX增强的类型    method说明是哪个方法(方法名)是前置增强  pointcut：切点表达式，通过表达式形式可以指定多个方法--&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;myPointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.itheima.aop.*.*(..))&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:pointcut</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--切面：切点+通知--&gt;</span></span><br><span class="line">        指定com.itheima.aop下的Target类的save()方法</span><br><span class="line">        <span class="comment">&lt;!--&lt;aop:before method=&quot;before&quot; pointcut=&quot;execution(public void com.itheima.aop.Target.save())&quot;/&gt;--&gt;</span></span><br><span class="line">        指定com.itheima.aop下的任意类下的任意方法</span><br><span class="line">        <span class="comment">&lt;!--&lt;aop:before method=&quot;before&quot; pointcut=&quot;execution(* com.itheima.aop.*.*(..))&quot;/&gt;</span></span><br><span class="line"><span class="comment">        &lt;aop:after-returning method=&quot;afterReturning&quot; pointcut=&quot;execution(* com.itheima.aop.*.*(..))&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;aop:around method=&quot;around&quot; pointcut=&quot;execution(* com.itheima.aop.*.*(..))&quot;/&gt;</span></span><br><span class="line"><span class="comment">        &lt;aop:after-throwing method=&quot;afterThrowing&quot; pointcut=&quot;execution(* com.itheima.aop.*.*(..))&quot;/&gt;</span></span><br><span class="line"><span class="comment">        &lt;aop:after method=&quot;after&quot; pointcut=&quot;execution(* com.itheima.aop.*.*(..))&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">&quot;around&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointcut&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;after&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointcut&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试代码</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(&quot;classpath:applicationContext.xml&quot;)</span><span class="comment">//指定配置文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AopTest</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TargetInterface target;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span>&#123;</span><br><span class="line">        target.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="切点表达式的格式："><a href="#切点表达式的格式：" class="headerlink" title="切点表达式的格式："></a>切点表达式的格式：</h4><p>语句：</p><p>execution([修饰符] 返回值类型.包名.类名.方法名(参数列表)) </p><ul><li>修饰符可以省略不写</li><li>返回值类型、包名、类名、方法名可以使用星号*表示任意</li><li>包名与类名之间一个点.代表当前包下的类，两个点..表示当前包及其子包下的类</li><li>参数列表可以使用两个点..表示任意个数，任意类型的参数列表</li></ul><h4 id="切点表达式的抽取、"><a href="#切点表达式的抽取、" class="headerlink" title="切点表达式的抽取、"></a>切点表达式的抽取、</h4><ul><li>当多个增强的切点表达式相同时，可以将切点表达式进行抽取，在增强中<strong>使用pointcut-ref属性代替pointcut属性</strong>来引用抽取后的切点表达式。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--抽取切点表达式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;myPointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.itheima.aop.*.*(..))&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:pointcut</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--环绕通知--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">&quot;around&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointcut&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--最终通知--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;after&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointcut&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-7-3XMl配置AOP详解"><a href="#6-7-3XMl配置AOP详解" class="headerlink" title="6.7.3XMl配置AOP详解"></a>6.7.3XMl配置AOP详解</h3><h4 id="通知的类型"><a href="#通知的类型" class="headerlink" title="通知的类型"></a>通知的类型</h4><p>语法</p><blockquote><p>&lt; aop:通知类型method&#x3D;“切面类中方法名”pointcut&#x3D;“切点表达式”&gt; &lt; &#x2F;aop:通知类型&gt;</p><table><thead><tr><th>名称</th><th>标签</th><th>说明</th></tr></thead><tbody><tr><td>前置通知</td><td>&lt; aop:before&gt;</td><td>用于配置<strong>前置通知</strong>。指定增强的方法在切入点方法之前执行</td></tr><tr><td>后置通知</td><td>&lt;aop:after-returning &gt;</td><td>用于配置<strong>后置通知</strong>。指定增强的方法在切入点方法之后执行</td></tr><tr><td>环绕通知</td><td>&lt;aop:around &gt;</td><td>用于配置<strong>环绕通知</strong>。指定增强的方法在切入点方法之前和之后都执行</td></tr><tr><td>异常抛出通知</td><td>&lt;aop:throwing &gt;</td><td>用于配置<strong>异常抛出通知</strong>。指定增强的方法在出现异常时执行</td></tr><tr><td>最终通知</td><td>&lt;aop:after &gt;</td><td>用于配置<strong>最终通知</strong>。无论增强方式执行是否有异常都会执行</td></tr></tbody></table></blockquote><h2 id="6-8AOP的注解开发"><a href="#6-8AOP的注解开发" class="headerlink" title="6.8AOP的注解开发"></a>6.8AOP的注解开发</h2><p>步骤</p><ol><li><p>创建目标接口和目标类(内部有切点)</p></li><li><p>创建切面类(内部有增强方法)</p></li><li><p>将目标类和切面类的对象创建权交给spring</p><p><img src="/ssm.assets/image-20220312181945759.png" alt="image-20220312181945759"></p><p><img src="/ssm.assets/image-20220312181924100.png" alt="image-20220312181924100"></p></li><li><p><strong>在切面类中使用注解配置织入关系</strong></p></li><li><p>在配置文件中开启组件扫描和AOP的自动代理</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--组件扫描--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.itheima.anno&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--aop自动代理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p></li></ol><h3 id="6-8-1注解通知的类型"><a href="#6-8-1注解通知的类型" class="headerlink" title="6.8.1注解通知的类型"></a>6.8.1注解通知的类型</h3><p>通知配置语法：@通知注解（“切点表达式”）。</p><table><thead><tr><th>名称</th><th>标签</th><th>说明</th></tr></thead><tbody><tr><td>前置通知</td><td>&lt; aop:before&gt;</td><td>用于配置<strong>前置通知</strong>。指定增强的方法在切入点方法之前执行</td></tr><tr><td>后置通知</td><td>&lt;aop:after-returning &gt;</td><td>用于配置<strong>后置通知</strong>。指定增强的方法在切入点方法之后执行</td></tr><tr><td>环绕通知</td><td>&lt;aop:around &gt;</td><td>用于配置<strong>环绕通知</strong>。指定增强的方法在切入点方法之前和之后都执行</td></tr><tr><td>异常抛出通知</td><td>&lt;aop:throwing &gt;</td><td>用于配置<strong>异常抛出通知</strong>。指定增强的方法在出现异常时执行</td></tr><tr><td>最终通知</td><td>&lt;aop:after &gt;</td><td>用于配置<strong>最终通知</strong>。无论增强方式执行是否有异常都会执行</td></tr></tbody></table><h3 id="6-8-2切点表达式的抽取"><a href="#6-8-2切点表达式的抽取" class="headerlink" title="6.8.2切点表达式的抽取"></a>6.8.2切点表达式的抽取</h3><p>同xml配置aop一样，我们可以将<strong>切点表达式抽取</strong>。抽取方式是在<strong>切面内定义方法</strong>，在该方法上<strong>使用@Pointcut注解定义切点表达式</strong>，然后在在<strong>增强注解中进行引用。</strong></p><p>在对应的通知使用注解@通知类.抽取的方法</p><p>例如：</p><p><img src="http://picgo.kongshier.top/2767/image-20220312183956517.png" alt="image-20220312183956517"></p><h1 id="7-Spring的事务控制"><a href="#7-Spring的事务控制" class="headerlink" title="7.Spring的事务控制"></a>7.Spring的事务控制</h1><ul><li>过程： 底层部分原理 -&gt; xml方式 -&gt; 注解方式</li></ul><h2 id="7-1-编程式事务控制（了解）"><a href="#7-1-编程式事务控制（了解）" class="headerlink" title="7.1 编程式事务控制（了解）"></a>7.1 编程式事务控制（了解）</h2><p>事务的实现+事务的定义&#x3D;&#x3D;&#x3D;（运行起来形成了）&#x3D;&#x3D;&#x3D;事务的状态</p><p>了解三个事务控制对象</p><ul><li>通过写代码控制事务，要写代码</li></ul><ol><li><p>PlatformTransactionManager（平台事务管理器）</p><ul><li>PlatformTransactionManager接口是spring的事务管理器，它里面提供了我们常用的操作事务的方法。</li></ul></li><li><p>TransactionDefinition  （事务定义对象）</p><ul><li><p>是事务的定义信息对象   定义的是参数或者是对象的信息</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>int getIsolationLevel()</td><td>获得事务的隔离级别</td></tr><tr><td>int getPropogationBehavior ( )</td><td>称得事务的传播行为</td></tr><tr><td>int getTimeout ()</td><td>获得超时时间</td></tr><tr><td>boolean isReadonly ()</td><td>是否只读</td></tr></tbody></table><ol><li>事务隔离级别<ul><li>设置隔离级别，可以解决事务并发产生的问题，如<strong>脏读、不可重复读和虚读 （）</strong> 。</li></ul></li><li>事务传播行为<ul><li>解决调用事务方法的统一性</li><li>REQUIRED：</li><li>SUPPORTS：</li><li>超时时间:默认值是-1，没有超时限制。如果有，以秒为单位进行设置</li></ul></li></ol></li></ul></li><li><p>TransactionStatus</p><p>被动的添加，不用我们自己添加</p><ul><li><p>提供的是事务的具体运行状态</p></li><li><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>boolean hassavepoint ( )</td><td>是否存储回滚点</td></tr><tr><td>boolean iscompleted ( )</td><td>事务是否完成</td></tr><tr><td>boolean isNewTransaction ( )</td><td>是否是新事务</td></tr><tr><td>boolean sRollbackonly ()</td><td>事务是否回滚</td></tr></tbody></table></li></ul></li></ol><h2 id="7-2基于xml的声明式事务控制"><a href="#7-2基于xml的声明式事务控制" class="headerlink" title="7.2基于xml的声明式事务控制"></a>7.2基于xml的声明式事务控制</h2><p>&#x3D;&#x3D;采用声明的方式来处理事务&#x3D;&#x3D;  是在配置文件声明，用配置文件中声明事务来代替代码式处理事务</p><h4 id="作用："><a href="#作用：" class="headerlink" title="作用："></a>作用：</h4><ol><li>事务管理不侵入开发组件。解耦性</li><li>不需事务管理的时候，只需在设置文件上修改，即可去除事务管理事务，无需修改源码</li></ol><p>&#x3D;&#x3D;Spring声明式事务控制底层就是AOP&#x3D;&#x3D;</p><h3 id="7-2-1声明式事务控制的实现"><a href="#7-2-1声明式事务控制的实现" class="headerlink" title="7.2.1声明式事务控制的实现"></a>7.2.1声明式事务控制的实现</h3><ul><li>把所有的业务逻辑对象当做连接点</li><li>某些需要事务管理的业务逻辑对象视为切入点</li><li>事务管理视为增强&#x2F;通知</li></ul><p><strong>需要引入命名空间</strong>  </p><p><img src="/ssm.assets/image-20220314214228102.png" alt="image-20220314214228102"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--目标对象  内部的方法就是切点--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;accountService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.service.impl.AccountServiceImpl&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;accountDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;accountDao&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--配置平台事务管理器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--通知  事务的增强--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--设置事务的属性信息的--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--织入将通知和切连接，这里attributes是配置事务相关信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">        下面的切点是说要对哪些方法进行增强，这里的method就是说针对某个method应该如何设置事务的属性</span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;transfer&quot;</span> <span class="attr">isolation</span>=<span class="string">&quot;REPEATABLE_READ&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;save&quot;</span> <span class="attr">isolation</span>=<span class="string">&quot;REPEATABLE_READ&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">isolation</span>=<span class="string">&quot;REPEATABLE_READ&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;update*&quot;</span> <span class="attr">isolation</span>=<span class="string">&quot;REPEATABLE_READ&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--任意方法 使用默认的方法--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--配置事务的aop织入，才能通过事务配置进行控制--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--增强引用  增强与引用进行连用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;txPointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.itheima.service.impl.*.*(..))&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;txPointcut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要点</p><ol><li>平台事务管理器</li><li>事务通知配置</li><li>事务aop配置织入</li></ol><h2 id="7-3注解的声明式事务控制"><a href="#7-3注解的声明式事务控制" class="headerlink" title="7.3注解的声明式事务控制"></a>7.3注解的声明式事务控制</h2><p>xml配置文件</p><ul><li>必须加入事务的注解驱动，才能把事务给控制住</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&lt;!--事物的注解驱动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>service层的文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service(&quot;accountService&quot;)</span></span><br><span class="line"><span class="meta">@Transactional(isolation = Isolation.REPEATABLE_READ)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">AccountService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span>  <span class="comment">//注入</span></span><br><span class="line">    <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上面也有一个Transaction一般以就近的为主</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional(isolation = Isolation.READ_COMMITTED, propagation = Propagation.REQUIRED)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transfer</span><span class="params">(String outMan, String inMan, <span class="type">double</span> money)</span> &#123;</span><br><span class="line">        accountDao.out(outMan, money);</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span> / <span class="number">0</span>;</span><br><span class="line">        accountDao.in(inMan, money);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//多个方法时  一样定义注解</span></span><br><span class="line">    <span class="comment">//@Transactional(isolation = Isolation.DEFAULT)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">xxx</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-3-1注解解析"><a href="#7-3-1注解解析" class="headerlink" title="7.3.1注解解析"></a>7.3.1注解解析</h3><ol><li>使用@Transactional在需要进行事务控制的类或是方法上修饰，注解可用的属性同xml配置方式，仍隔离级别、传播行为等。</li><li>注解使用在类上，那么该类下的所有方法都使用同一套注解参数配置。</li><li>使用在方法上，不同的方法可以采用不同的事务参数配置。</li><li>Xml配置文件中要开启事务的注解驱动<tx :annotation-driven /></li></ol><h3 id="7-3-2注解知识要点"><a href="#7-3-2注解知识要点" class="headerlink" title="7.3.2注解知识要点"></a>7.3.2注解知识要点</h3><ol><li>平台事务管理器 （xml方式）</li><li>事务通知的配置 （@Transaction注解配置）</li><li>事务aop配置织入  &lt; tx:annotation-driven transaction-manager&#x3D;”id名” &#x2F;&gt;</li></ol><h1 id="8-MyBatis"><a href="#8-MyBatis" class="headerlink" title="8.MyBatis"></a>8.MyBatis</h1><p>官网： <a href="https://mybatis.org/mybatis-3/">Mybatis </a>  <a href="https://mybatis.org/mybatis-3/">https://mybatis.org/mybatis-3/</a></p><h2 id="8-1概念"><a href="#8-1概念" class="headerlink" title="8.1概念"></a>8.1概念</h2><ol><li>MyBatis是一款优秀的<strong>持久层框架</strong>，用于简化JDBC开发  ，隐藏jdbc的繁杂操作<ul><li>负责将数据保存到数据库的那一层代码</li><li>JavaEE三层架构：表现层、业务层、持久层</li></ul></li><li>框架<ul><li>框架就是一个半成品软件，是一套可重用的、通用的、软件基础代码模型</li><li>在框架的基础之上构建软件编写更加高效、规范、通用、可扩展。</li></ul></li><li>JDBC缺点<ul><li>硬编码   配置文件<ul><li>注册驱动、获取链接    写了一堆链接字符串  </li><li>SQL语句   也写了一堆代码字符串</li></ul></li><li>操作繁琐  自动完成<ul><li>手动设置参数</li><li>手动封装结果集</li></ul></li></ul></li><li>解决jdbc开发存在的问题<ul><li>使用&#x3D;&#x3D;数据库连接池初始化&#x3D;&#x3D;连接资源</li><li>将sql语句抽取到xml配置文件中</li><li>使用反射、内省等底层技术，自动将实体与表进行属性与字段的自动映射</li></ul></li></ol><h2 id="8-2MyBatis-快速入门"><a href="#8-2MyBatis-快速入门" class="headerlink" title="8.2MyBatis 快速入门"></a>8.2MyBatis 快速入门</h2><p>步骤</p><ol><li>创建user表，添加数据</li><li>创建模块，导入坐标</li><li>编写MyBatis核心配置文件 –&gt; 替换链接信息，解决硬编码问题</li><li>编写SQL映射文件 –&gt;统一管理Sql语句，解决硬编码问题</li><li>编码<ol><li>定义POJO类</li><li>加载核心配置文件，获取SqlSessionFactory对象</li><li>获取SqlSession对象，执行SQL语句</li><li>释放资源</li></ol></li><li>编写测试类</li></ol><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>pom.xml配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--mysql 驱动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--junit 单元测试--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 添加slf4j日志api --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 添加logback-classic依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 添加logback-core依赖 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>mybatis-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    目标对象的包</span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.itheima.pojo&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">environments：配置数据库连接环境信息。可以配置多个environment，通过default属性切换不同的environment</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据库连接信息--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql:///mybatis?useSSL=false&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据库连接信息--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql:///mybatis?useSSL=false&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--加载sql映射文件--&gt;</span></span><br><span class="line">    类路径</span><br><span class="line">   <span class="comment">&lt;!-- &lt;mapper resource=&quot;com/itheima/mapper/UserMapper.xml&quot;/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Mapper代理方式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.itheima.mapper&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Demo.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Mybatis 快速入门代码</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> 2、3两点就把之前的jdbc给替换了</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisDemo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1. 加载mybatis的核心配置文件，获取 SqlSessionFactory</span></span><br><span class="line">        <span class="comment">//从官网复制过来</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(resource);</span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 获取SqlSession对象，用它来执行sql</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//3. 执行sql 参数是命名空间的名称 test是上一级的名称 selectAll才是想要的查询名称，一级级通过，方便查询</span></span><br><span class="line">        List&lt;User&gt; users = sqlSession.selectList(<span class="string">&quot;test.selectAll&quot;</span>);</span><br><span class="line">        System.out.println(users);</span><br><span class="line">        <span class="comment">//4. 释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-3Mybatis-xml核心配置为文件"><a href="#8-3Mybatis-xml核心配置为文件" class="headerlink" title="8.3Mybatis.xml核心配置为文件"></a>8.3Mybatis.xml核心配置为文件</h2><p>要安装官方文件的顺序 进行配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">environments：配置数据库连接环境信息。可以配置多个environment，通过default属性切换不同的environment</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--默认使用的环境是development--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--数据源的类型是连接池--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据库连接信息--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql:///mybatis?useSSL=false&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据库连接信息--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql:///mybatis?useSSL=false&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>configuration配置<ul><li>oproperties属性 </li><li>settings设置</li><li>typeAliases类型别名</li><li>typeHandlers类型处理器</li><li>objectFactory对象工厂</li><li>plugins插件</li><li>environnents环境 ✔<ul><li>environment环境变量</li><li>transactionManager 事务管理器</li><li>dataSource数据源</li></ul></li><li>databaseldProvider数据库厂商标识 ✘</li><li>mappers映对器</li></ul></li></ul><h3 id="8-3-1MyBatis常用的配置解析"><a href="#8-3-1MyBatis常用的配置解析" class="headerlink" title="8.3.1MyBatis常用的配置解析"></a>8.3.1MyBatis常用的配置解析</h3><h4 id="1-environments标签"><a href="#1-environments标签" class="headerlink" title="1.environments标签"></a>1.environments标签</h4><p>配置文件</p><ul><li>事务管理器<ol><li>JDBC：多</li><li>MANAGED：少</li></ol></li><li>数据源配置<ol><li>POOLED：使用连接池将JDBC链接对象组织起来</li><li>UNPOOLED ：每次使用连接池都要设置打开和关闭链接</li><li>JNDI:</li></ol></li></ul><h4 id="2-mappers标签"><a href="#2-mappers标签" class="headerlink" title="2.mappers标签"></a>2.mappers标签</h4><ol><li>加载映射的方法<ol><li>使用相对于&#x3D;&#x3D;类路径&#x3D;&#x3D;的资源引用，例如: <mapper resource="org/mybatis/builder/AuthorMapper.xml"/>  ✔</li><li>使用完全限定&#x3D;&#x3D;资源定位符(URL)&#x3D;&#x3D;，例如:<mapper url="file:///var/mappers/AuthorMapper.xml"/>   </li><li>使用映射器&#x3D;&#x3D;接口实现类&#x3D;&#x3D;的完全限定类名，例如: <mapper class="org.mybatis.builder.AuthorMapper"/></li><li>将&#x3D;&#x3D;包&#x3D;&#x3D;内的映射器接口实现全部注册为映射器，例如: <package name="org.mybatis.builder" /></li></ol></li></ol><h4 id="3-Properties标签"><a href="#3-Properties标签" class="headerlink" title="3.Properties标签"></a>3.Properties标签</h4><p>实际开发中，习惯将数据源的配置信息单独抽取成一个properties文件，该标签可以加载额外配置的properties文件</p><ul><li>也就是链接数据库的信息，在另外创建一个jdbc.properties  在配置文件中使用properties标签引入jdbc.properties文件</li></ul><h4 id="4-typeAliases标签"><a href="#4-typeAliases标签" class="headerlink" title="4.typeAliases标签"></a>4.typeAliases标签</h4><ul><li>设置类型别名</li><li>顺序需要注意</li></ul><h2 id="8-4MyBatis的映射文件概述"><a href="#8-4MyBatis的映射文件概述" class="headerlink" title="8.4MyBatis的映射文件概述"></a>8.4MyBatis的映射文件概述</h2><p><img src="http://picgo.kongshier.top/2767/image-20220316220438509.png" alt="image-20220316220438509"></p><h2 id="8-5MyBatis的增删改查"><a href="#8-5MyBatis的增删改查" class="headerlink" title="8.5MyBatis的增删改查"></a>8.5MyBatis的增删改查</h2><p>前提是必须创建有了user数据库</p><h3 id="8-5-1增"><a href="#8-5-1增" class="headerlink" title="8.5.1增"></a>8.5.1增</h3><p>在mapper.xml文件中进行对SQL语句的编写</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--插入操作--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;save&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.itheima.domain.User&quot;</span>&gt;</span></span><br><span class="line">    insert into user values(#&#123;id&#125;,#&#123;username&#125;,#&#123;password&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试文件java代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">//插入操作  </span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//模拟user对象</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setUsername(<span class="string">&quot;DashaX&quot;</span>);</span><br><span class="line">    user.setPassword(<span class="string">&quot;123456789&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获得核心配置文件</span></span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;sqlMapConfig.xml&quot;</span>);</span><br><span class="line">    <span class="comment">//获得session工厂对象</span></span><br><span class="line">    <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line">    <span class="comment">//获得session回话对象</span></span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">    <span class="comment">//执行操作  参数：namespace+id</span></span><br><span class="line">    sqlSession.insert(<span class="string">&quot;userMapper.save&quot;</span>,user);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mybatis执行更新操作  提交事务  要有事务的提交才能把数据插入到数据库的表中。</span></span><br><span class="line">    sqlSession.commit();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="插入时要注意的问题"><a href="#插入时要注意的问题" class="headerlink" title="插入时要注意的问题"></a>插入时要注意的问题</h4><ol><li>插入语句使用insert标签</li><li>在映射文件中使用parameterType属性指定要插入的数据类型</li><li>Sql语句中使用#{实体属性名}方式引用实体中的属性值</li><li>插入操作使用的API是sqlSession.insert(“命名空间.id”,实体对象);</li><li>插入操作涉及数据库数据变化，所以要使用sqlSession对象显示的&#x3D;&#x3D;提交事务&#x3D;&#x3D;，即sqlSession.commit)</li></ol><h3 id="8-5-2改"><a href="#8-5-2改" class="headerlink" title="8.5.2改"></a>8.5.2改</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--修改操作  parameterType是参数类型，传过来的对象，就是目标对象的路劲--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;update&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.itheima.domain.User&quot;</span>&gt;</span></span><br><span class="line">    update user set username=#&#123;username&#125;,password=#&#123;password&#125; where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试代码  只要修改执行的操作代码    使用执行对应的增删改查的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">//修改操作</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test3</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//模拟user对象</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setId(<span class="number">7</span>);</span><br><span class="line">    user.setUsername(<span class="string">&quot;lucy&quot;</span>);</span><br><span class="line">    user.setPassword(<span class="string">&quot;123&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获得核心配置文件</span></span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;sqlMapConfig.xml&quot;</span>);</span><br><span class="line">    <span class="comment">//获得session工厂对象</span></span><br><span class="line">    <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line">    <span class="comment">//获得session回话对象</span></span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line">    <span class="comment">//执行操作  参数：namespace+id</span></span><br><span class="line">    sqlSession.update(<span class="string">&quot;userMapper.update&quot;</span>,user);</span><br><span class="line">    <span class="comment">//mybatis执行更新操作  提交事务</span></span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ol><li>修改语句使用update标签</li><li>修改操作使用的API是sqlSession.update(“命名空间.id”,id);</li></ol><h3 id="8-5-2删"><a href="#8-5-2删" class="headerlink" title="8.5.2删"></a>8.5.2删</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--删除操作--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;delete&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.itheima.domain.User&quot;</span>&gt;</span></span><br><span class="line">    delete from user where id=#&#123;abc&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">//删除操作</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test4</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获得核心配置文件</span></span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;sqlMapConfig.xml&quot;</span>);</span><br><span class="line">    <span class="comment">//获得session工厂对象</span></span><br><span class="line">    <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line">    <span class="comment">//获得session回话对象</span></span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line">    <span class="comment">//执行操作  参数：namespace+id  后面的数字是id的值     namespace：命名空间</span></span><br><span class="line">    sqlSession.delete(<span class="string">&quot;userMapper.delete&quot;</span>,<span class="number">8</span>);</span><br><span class="line">    <span class="comment">//mybatis执行更新操作  提交事务</span></span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h4><ol><li>删除语句使用delete标签</li><li>Sql语句中使用#{任意字符串}方式引用传递的单个参数</li><li>删除操作使用的API是sqlSession.delete(“命名空间.id”,Object);</li></ol><h3 id="8-5-3查"><a href="#8-5-3查" class="headerlink" title="8.5.3查"></a>8.5.3查</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--查询操作--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.itheima.domain.User&quot;</span>&gt;</span></span><br><span class="line">    select * from user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="comment">//查询操作</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">//获得核心配置文件</span></span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;sqlMapConfig.xml&quot;</span>);</span><br><span class="line">    <span class="comment">//获得session工厂对象</span></span><br><span class="line">    <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line">    <span class="comment">//获得session回话对象</span></span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line">    <span class="comment">//执行操作  参数：namespace+id</span></span><br><span class="line">    List&lt;User&gt; userList = sqlSession.selectList(<span class="string">&quot;userMapper.findAll&quot;</span>);</span><br><span class="line">    <span class="comment">//打印数据</span></span><br><span class="line">    System.out.println(userList);</span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-6MyBatis的API"><a href="#8-6MyBatis的API" class="headerlink" title="8.6MyBatis的API"></a>8.6MyBatis的API</h2><h3 id="8-6-1SqlSession工厂构建器SqlSessionFactoryBuilder"><a href="#8-6-1SqlSession工厂构建器SqlSessionFactoryBuilder" class="headerlink" title="8.6.1SqlSession工厂构建器SqlSessionFactoryBuilder"></a>8.6.1SqlSession工厂构建器SqlSessionFactoryBuilder</h3><ul><li>API : SqlSessionFactory   builder(InputStream inputStream)</li><li><img src="http://picgo.kongshier.top/2767/image-20220317194649801.png" alt="image-20220317194649801"></li><li>SqlSessionFactory的API <ol><li>openSession()  : 获得打开绘画   ，默认会开启事务 但是不会自动提交，需要手动提交</li><li>openSession(boolean autoCommit)  :  参数是否自动提交，设置true 就会自动提交事务</li></ol></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">✔SqlSession sqlSession = sqlSessionFactory.openSession(true);</span><br></pre></td></tr></table></figure><h3 id="8-6-2SqlSession会话对象-✔"><a href="#8-6-2SqlSession会话对象-✔" class="headerlink" title="8.6.2SqlSession会话对象 ✔"></a>8.6.2SqlSession会话对象 ✔</h3><p><img src="http://picgo.kongshier.top/2767/image-20220317200509715.png" alt="image-20220317200509715"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--根据id进行查询  条件查询--&gt;</span><br><span class="line">&lt;select id=<span class="string">&quot;findById&quot;</span> resultType=<span class="string">&quot;user&quot;</span> parameterType=<span class="string">&quot;int&quot;</span>&gt;</span><br><span class="line">    select * from user where id=#&#123;id&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><h2 id="8-7Mybatis的Dao层实现"><a href="#8-7Mybatis的Dao层实现" class="headerlink" title="8.7Mybatis的Dao层实现"></a>8.7Mybatis的Dao层实现</h2><h3 id="8-7-1传统的开发方式"><a href="#8-7-1传统的开发方式" class="headerlink" title="8.7.1传统的开发方式"></a>8.7.1传统的开发方式</h3><ol><li><p>编写UserDao接口</p></li><li><p><img src="/ssm.assets/image-20220317202102478.png" alt="image-20220317202102478"></p></li><li><p>&#96;&#96;&#96;java<br>&#x2F;&#x2F;传统方式   比较繁琐 要写接口 实现接口的方法<br>UserMapper mapper &#x3D; sqlSession.getMapper();<br>List<User> all &#x3D; mapper.findAll();<br>System.out.println(all);</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 8.7.2代理开发方式</span><br><span class="line"></span><br><span class="line">- 采用Mybatis的代理开发方式实现DAO层的开发，==企业的主流==</span><br><span class="line"></span><br><span class="line">- Mapper接口开发方法只需要程序员编写Mapper接口(相当于Dao接口)，由Mybatis框架根据按口疋乂创建按口的动态代理对象，代理对象的方法体同上边Dao接口，实现类方法。</span><br><span class="line"></span><br><span class="line">Mapper接口开发需要遵循以下规范:</span><br><span class="line"></span><br><span class="line">1. Mapper.xml文件中的namespace与mapper接口的全限定名相同</span><br><span class="line">2. Mapper接口方法名和Mapper.xml中定义的每个statement的id相同</span><br><span class="line">3. Mapper接口方法的输入参数类型和mapper.xml中定义的每个sql的parameterType的类型相同</span><br><span class="line">4. Mapper接口方法的输出参数类型和mapper.xml中定义的每个sql的resultType的类型相同</span><br><span class="line"></span><br><span class="line">![image-20220317202821855](http://picgo.kongshier.top/2767/image-20220317202821855.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 测试代理方式</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">public class ServiceDemo &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws IOException &#123;</span><br><span class="line"></span><br><span class="line">        InputStream resourceAsStream = Resources.getResourceAsStream(&quot;sqlMapConfig.xml&quot;);</span><br><span class="line">        //创建SqlSessionFactory工厂</span><br><span class="line">        SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(resourceAsStream);</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        //代理方式对Dao层实现</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        //查询所有</span><br><span class="line">        List&lt;User&gt; all = mapper.findAll();</span><br><span class="line">        System.out.println(all);</span><br><span class="line"></span><br><span class="line">        //通过id查询</span><br><span class="line">        User user = mapper.findById(1);</span><br><span class="line">        System.out.println(user);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><ol><li><p>传统的开发形式  （手动dao层实现）</p><ul><li><p>编写接口 </p></li><li><p>实现接口</p></li><li><p>配置文件中</p></li></ul></li><li><p>代理方式开发</p><ul><li>编写接口</li><li>不需要实现接口</li><li>接口中的方法名、参数类型、返回值类型和配置文件中的一样即可</li></ul></li></ol><h1 id="9-MyBatis映射文件深入"><a href="#9-MyBatis映射文件深入" class="headerlink" title="9.MyBatis映射文件深入"></a>9.MyBatis映射文件深入</h1><h3 id="9-1动态sql语句"><a href="#9-1动态sql语句" class="headerlink" title="9.1动态sql语句"></a>9.1动态sql语句</h3><blockquote><p>以前的简单的不能满足比较复杂的业务逻辑  </p></blockquote><ul><li><p>Dynamic SQl </p><p>主要是使用 if 语句  在实际开发中使用的比较多</p><ol><li>if  ✔</li><li>choose (when, otherwise)</li><li>trim (where, set)</li><li>foreach</li></ol></li></ul><h3 id="SQl环境"><a href="#SQl环境" class="headerlink" title="SQl环境"></a>SQl环境</h3><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MapperTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;sqlMapConfig.xml&quot;</span>);</span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//模拟条件user</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">condition</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        condition.setId(<span class="number">1</span>);</span><br><span class="line">        condition.setUsername(<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">        condition.setPassword(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        List&lt;User&gt; userList = mapper.findByCondition(condition);</span><br><span class="line">        System.out.println(userList);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">//模拟ids的数据  这个foreach执行sql语句</span></span><br><span class="line">        List&lt;Integer&gt; ids = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line">        ids.add(<span class="number">1</span>);</span><br><span class="line">        ids.add(<span class="number">2</span>);</span><br><span class="line">        List&lt;User&gt; userList = mapper.findByIds(ids);</span><br><span class="line">        System.out.println(userList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;动态SQL在xml中的抽取&#x3D;&#x3D;</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--sql语句抽取--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;selectUser&quot;</span>&gt;</span>select * from user<span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br></pre></td></tr></table></figure><p>所以在下面的if、foreach语句中的多了&#x3D;&#x3D;include&#x3D;&#x3D;标签  有一个属性refid 就是在抽取中的 id 值</p><h3 id="9-2动态sql语句-if"><a href="#9-2动态sql语句-if" class="headerlink" title="9.2动态sql语句  if"></a>9.2动态sql语句  if</h3><ul><li>根据实体类的取值不同，使用不同的sql语句进行查询。 if 判断是否是当前对应的值</li><li><em>where</em> 元素只会在子元素返回任何内容的情况下才插入 “WHERE” 子句。而且，若子句的开头为 “AND” 或 “OR”，<em>where</em> 元素也会将它们去除</li></ul><p>mapper.xml配置文件</p><ul><li>在接口类中 创建有方法 findByCondition  参数类型值是  user  返回值是user</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findByCondition&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;user&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;selectUser&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--根据是否有条件添加where 如果是id ，username ，password都没有则不用在if 外面嵌套一个where标签--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;id!=0&quot;</span>&gt;</span></span><br><span class="line">            and id=#&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;username!=null&quot;</span>&gt;</span></span><br><span class="line">            and username=#&#123;username&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;password!=null&quot;</span>&gt;</span></span><br><span class="line">            and password=#&#123;password&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="9-3-动态sql语句-foreach"><a href="#9-3-动态sql语句-foreach" class="headerlink" title="9.3 动态sql语句  foreach"></a>9.3 动态sql语句  foreach</h3><ul><li><p>查询多个内容</p></li><li></li><li><p>在接口类中 创建有方法 findByIds    参数类型值是  list   返回值是user</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findByIds&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;list&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;selectUser&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- collection:集合或者数据的参数值  open ：是以什么开始的 ，close以什么结束 ，item负责接受id中的每一个值 ，separator：分隔符 进行拼接--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;list&quot;</span> <span class="attr">open</span>=<span class="string">&quot;id in(&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">            #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="9-4typeHandlers标签"><a href="#9-4typeHandlers标签" class="headerlink" title="9.4typeHandlers标签"></a>9.4typeHandlers标签</h3><ul><li>MyBatis在预处理语句（PreparedStatement）中设置一个参数，或者是从结果中取出一个值时，都会使用类型处理器的值合适的方式转换成Java类型。以下是一些默认的处理器：</li></ul><p><img src="http://picgo.kongshier.top/2767/image-20220318200940594.png" alt="image-20220318200940594"></p><p>若是以上的默认处理器不能满足要求，则自己自定义处理器</p><p>步骤：</p><ol><li>定义转换类继承类&#x3D;&#x3D;BaseTypeHandler&lt; T &gt;&#x3D;&#x3D;  泛型</li><li>覆盖4个未实现的方法，其中setNonNullParameter为java程序设置数据到数据库的回调方法，getNullableResult为查询时，mysql的字符串类型转换成java的Type类型的方法</li><li>在MyBatis核心配置文件中进行注册</li><li>测试转换是否正确</li></ol><p>1.定义TypeHandler </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DateTypeHandler</span> <span class="keyword">extends</span> <span class="title class_">BaseTypeHandler</span>&lt;Date&gt; &#123;</span><br><span class="line">    <span class="comment">//将java类型 转换成 数据库需要的类型</span></span><br><span class="line">    <span class="comment">//参数i表示表中第几个字段，参数s表示表中的字段名，两种表示方式</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setNonNullParameter</span><span class="params">(PreparedStatement preparedStatement, <span class="type">int</span> i, Date date, JdbcType jdbcType)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="comment">// getTime()获取时间的毫秒值</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">time</span> <span class="operator">=</span> date.getTime();</span><br><span class="line">        preparedStatement.setLong(i,time);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将数据库中的类型 转换成java类型</span></span><br><span class="line">    <span class="comment">//String参数 : 要转换的字段名称</span></span><br><span class="line">    <span class="comment">//ResultSet : 查询出的结果集</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getNullableResult</span><span class="params">(ResultSet resultSet, String s)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="comment">//获得结果集中需要的数据(long) 转换成Date类型 返回</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">aLong</span> <span class="operator">=</span> resultSet.getLong(s);</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>(aLong);</span><br><span class="line">        <span class="keyword">return</span> date;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将数据库中类型 转换成java类型</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getNullableResult</span><span class="params">(ResultSet resultSet, <span class="type">int</span> i)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">aLong</span> <span class="operator">=</span> resultSet.getLong(i);</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>(aLong);</span><br><span class="line">        <span class="keyword">return</span> date;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将数据库中类型 转换成java类型</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getNullableResult</span><span class="params">(CallableStatement callableStatement, <span class="type">int</span> i)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">aLong</span> <span class="operator">=</span> callableStatement.getLong(i);</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>(aLong);</span><br><span class="line">        <span class="keyword">return</span> date;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.注册配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注册类型处理器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeHandlers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeHandler</span> <span class="attr">handler</span>=<span class="string">&quot;com.itheima.handler.DateTypeHandler&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">typeHandler</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeHandlers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.mapper中的方法   要创建有user数据表</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;save&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    insert into user values(#&#123;id&#125;,#&#123;username&#125;,#&#123;password&#125;,#&#123;birthday&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">        select * from user where id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//插入数据</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;sqlMapConfig.xml&quot;</span>);</span><br><span class="line">    <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建user</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setUsername(<span class="string">&quot;ceshi&quot;</span>);</span><br><span class="line">    user.setPassword(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">    user.setBirthday(<span class="keyword">new</span> <span class="title class_">Date</span>());<span class="comment">//当前时间</span></span><br><span class="line">    <span class="comment">//执行保存造作</span></span><br><span class="line">    mapper.save(user);</span><br><span class="line"></span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;sqlMapConfig.xml&quot;</span>);</span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mapper.findById(<span class="number">15</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;user中的birthday：&quot;</span>+user.getBirthday());</span><br><span class="line"></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="9-5Plugins标签"><a href="#9-5Plugins标签" class="headerlink" title="9.5Plugins标签"></a>9.5Plugins标签</h3><p>MyBatis可以使用第三方的插件来对功能进行扩展，&#x3D;&#x3D;分页助手PageHelper是将分页的复杂操作进行封装&#x3D;&#x3D;，使用简单的方式即可获得分页的相关数据</p><p>开发步骤:</p><ol><li>导入通用&#x3D;&#x3D;PageHelper&#x3D;&#x3D;的坐标</li><li>在mybatis核心配置文件中&#x3D;&#x3D;配置PageHelper插件&#x3D;&#x3D;</li><li>测试分页数据获取</li></ol><p>首先要把表的全部内容查看以下，方便设置分页</p><ol><li></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--page分页插件配置的坐标--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.7.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.jsqlparser<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsqlparser<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.配置PageHelper插件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置分页助手插件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.github.pagehelper.PageHelper&quot;</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--指定方言 dialect 数据库方言主要用来实现对查询的优化，实现分页语句以及count语句的自动生成，方言会生成适合于该特定数据库的效率较高的SQL语法。--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dialect&quot;</span> <span class="attr">value</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页plugins插件</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test3</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;sqlMapConfig.xml&quot;</span>);</span><br><span class="line">    <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置分页相关参数   当前页(页码) 每页显示的条数（显示的条数）</span></span><br><span class="line">    PageHelper.startPage(<span class="number">3</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    List&lt;User&gt; userList = mapper.findAll();</span><br><span class="line">    <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获得与分页相关参数  对象pageInfo   </span></span><br><span class="line">    PageInfo&lt;User&gt; pageInfo = <span class="keyword">new</span> <span class="title class_">PageInfo</span>&lt;User&gt;(userList);</span><br><span class="line">    System.out.println(<span class="string">&quot;当前页：&quot;</span>+pageInfo.getPageNum());</span><br><span class="line">    System.out.println(<span class="string">&quot;每页显示条数：&quot;</span>+pageInfo.getPageSize());</span><br><span class="line">    System.out.println(<span class="string">&quot;总条数：&quot;</span>+pageInfo.getTotal());</span><br><span class="line">    System.out.println(<span class="string">&quot;总页数：&quot;</span>+pageInfo.getPages());</span><br><span class="line">    System.out.println(<span class="string">&quot;上一页：&quot;</span>+pageInfo.getPrePage());</span><br><span class="line">    System.out.println(<span class="string">&quot;下一页：&quot;</span>+pageInfo.getNextPage());</span><br><span class="line">    System.out.println(<span class="string">&quot;是否是第一个：&quot;</span>+pageInfo.isIsFirstPage());</span><br><span class="line">    System.out.println(<span class="string">&quot;是否是最后一个：&quot;</span>+pageInfo.isIsLastPage());</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h3><p>MyBatis映射文件配置 标签</p><ol><li>&lt; select &gt;  : 查询</li><li>&lt; insert&gt;  : 插入</li><li>&lt; uodate&gt;  : 修改</li><li>&lt; delect &gt;  : 删除</li><li>&lt; where&gt;  : where条件</li><li>&lt; if &gt;  : if判断</li><li>&lt; foreach &gt;  : 循环</li><li>&lt; sql &gt;  : sql片段抽取</li></ol><h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><ol><li>properties标签:该标签可以加载外部的</li><li>properties文件typeAliases标签∶设置类型别名</li><li>environments标签:数据源环境配置标签</li><li>typeHandlers标签:配置自定义类型处理器</li><li>plugins标签:配置MyBatis的插件</li></ol><h1 id="10-MyBatis的多表操作"><a href="#10-MyBatis的多表操作" class="headerlink" title="10.MyBatis的多表操作"></a>10.MyBatis的多表操作</h1><ul><li>多对多   ： </li><li>多对一   ：</li><li>一对多   ：</li></ul><h2 id="10-1-一对一查询"><a href="#10-1-一对一查询" class="headerlink" title="10.1 一对一查询"></a>10.1 一对一查询</h2><ul><li>用户表和订单表的关系为，一个用户有多个订单，一个订单只从属于一个用户</li><li>一对一查询的需求：查询一个订单，就能查询出该订单的所有用户</li></ul><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><ol><li><p>创建Order、User、Role实体</p></li><li><p>OrderMapper、UserMapper接口</p></li><li><p>创建UserMapper.xml 、 OrderMapper.xml 配置文件</p><p><img src="/ssm.assets/image-20220318212205284.png" alt="image-20220318212205284"></p></li><li><p>加载映射文件</p><p>- </p><ul><li>&#96;&#96;&#96;xml<!--加载映射文件--><mappers>    <mapper resource="com/itheima/mapper/UserMapper.xml"></mapper>    <mapper resource="com/itheima/mapper/OrderMapper.xml"></mapper></mappers><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">OrderMappper配置文件</span><br><span class="line"></span><br><span class="line">```xml</span><br><span class="line">&lt;mapper namespace=&quot;com.itheima.mapper.OrderMapper&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;select id=&quot;findAll&quot; resultMap=&quot;orderMap&quot;&gt;</span><br><span class="line">        SELECT *,o.id oid FROM orders o,USER u WHERE o.uid=u.id</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line"></span><br><span class="line">    &lt;resultMap id=&quot;orderMap&quot; type=&quot;order&quot;&gt;</span><br><span class="line">        &lt;!--手动指定字段与实体属性的映射关系</span><br><span class="line">            column: 数据表的字段名称</span><br><span class="line">            property：实体的属性名称</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;id column=&quot;oid&quot; property=&quot;id&quot;&gt;&lt;/id&gt;</span><br><span class="line">        &lt;result column=&quot;ordertime&quot; property=&quot;ordertime&quot;&gt;&lt;/result&gt;</span><br><span class="line">        &lt;result column=&quot;total&quot; property=&quot;total&quot;&gt;&lt;/result&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--查询user的id、username、password、birthday--&gt;</span><br><span class="line">        &lt;!--&lt;result column=&quot;uid&quot; property=&quot;user.id&quot;&gt;&lt;/result&gt;</span><br><span class="line">        &lt;result column=&quot;username&quot; property=&quot;user.username&quot;&gt;&lt;/result&gt;</span><br><span class="line">        &lt;result column=&quot;password&quot; property=&quot;user.password&quot;&gt;&lt;/result&gt;</span><br><span class="line">        &lt;result column=&quot;birthday&quot; property=&quot;user.birthday&quot;&gt;&lt;/result&gt;--&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--</span><br><span class="line">            property: 当前实体(order)中的属性名称(private User user)</span><br><span class="line">            javaType: 当前实体(order)中的属性的类型(User)</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;!--与上诉的相比就是把user给提取出来，单独处理--&gt;</span><br><span class="line">        &lt;association property=&quot;user&quot; javaType=&quot;user&quot;&gt;</span><br><span class="line">            &lt;!--配置的是user的uid等--&gt;</span><br><span class="line">            &lt;id column=&quot;uid&quot; property=&quot;id&quot;&gt;&lt;/id&gt;</span><br><span class="line">            &lt;result column=&quot;username&quot; property=&quot;username&quot;&gt;&lt;/result&gt;</span><br><span class="line">            &lt;result column=&quot;password&quot; property=&quot;password&quot;&gt;&lt;/result&gt;</span><br><span class="line">            &lt;result column=&quot;birthday&quot; property=&quot;birthday&quot;&gt;&lt;/result&gt;</span><br><span class="line">        &lt;/association&gt;</span><br><span class="line">    &lt;/resultMap&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="10-2一对多查询"><a href="#10-2一对多查询" class="headerlink" title="10.2一对多查询"></a>10.2一对多查询</h2><ul><li>用户表和订单表的关系为，一个用户有多个订单，一个订单只从属于一个用户</li><li>一对多查询的需求：查询一个用户，就能查询出该用户具有的订单</li></ul><p>User中的订单集合</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//描述的是当前用户存在哪些订单  多个订单用集合存储</span></span><br><span class="line"><span class="keyword">private</span> List&lt;Order&gt; orderList;</span><br></pre></td></tr></table></figure><p>UserMappper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--返回结果的映射封装--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;userMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;uid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;birthday&quot;</span> <span class="attr">property</span>=<span class="string">&quot;birthday&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置集合信息</span></span><br><span class="line"><span class="comment">        property:集合名称</span></span><br><span class="line"><span class="comment">        ofType：当前集合中的数据类型</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;orderList&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;order&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--封装order的数据--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;oid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;ordertime&quot;</span> <span class="attr">property</span>=<span class="string">&quot;ordertime&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;total&quot;</span> <span class="attr">property</span>=<span class="string">&quot;total&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--SQL语句查询--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span>&gt;</span></span><br><span class="line">    SELECT *,o.id oid FROM USER u,orders o WHERE u.id=o.uid</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;sqlMapConfig.xml&quot;</span>);</span><br><span class="line">    <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一对多模型</span></span><br><span class="line">    <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    List&lt;User&gt; userList = mapper.findAll();</span><br><span class="line">    <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-3多对多查询"><a href="#10-3多对多查询" class="headerlink" title="10.3多对多查询"></a>10.3多对多查询</h2><ul><li>用户表和订单表的关系为，一个用户有多个角色，一个角色被多个用户使用</li><li>多对多查询的需求：查询用户同时查询出该用户的所有角色</li></ul><p><img src="http://picgo.kongshier.top/2767/image-20220319162709238.png" alt="image-20220319162709238"></p><ol><li>创建实体Role：包括 id 、roleName roleDesc</li><li>创建实体User：包括：userName、id</li></ol><p>配置文件中的自定义别名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--自定义别名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.itheima.domain.User&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;user&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">typeAlias</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.itheima.domain.Order&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;order&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">typeAlias</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.itheima.domain.Role&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;role&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">typeAlias</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>User中的角色集合</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//描述的是当前用户具备哪些角色</span></span><br><span class="line"><span class="keyword">private</span> List&lt;Role&gt; roleList;</span><br></pre></td></tr></table></figure><p>UserMappper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--返回结果的映射封装--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;userRoleMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--user的信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;userId&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;birthday&quot;</span> <span class="attr">property</span>=<span class="string">&quot;birthday&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--user内部的roleList信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;roleList&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;role&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;roleId&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;roleName&quot;</span> <span class="attr">property</span>=<span class="string">&quot;roleName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;roleDesc&quot;</span> <span class="attr">property</span>=<span class="string">&quot;roleDesc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--SQL语句查询--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findUserAndRoleAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userRoleMap&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--u是别名，ur是sys_user_role的别名，r是sys_role的别名--&gt;</span></span><br><span class="line">    SELECT * FROM USER u,sys_user_role ur,sys_role r WHERE u.id=ur.userId AND ur.roleId=r.id</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="10-4MyBatis多表配置总结"><a href="#10-4MyBatis多表配置总结" class="headerlink" title="10.4MyBatis多表配置总结"></a>10.4MyBatis多表配置总结</h2><ul><li>一对一配置：使用 <resultMap> +<association>做配置</li><li>一对多配置：使用 <resultMap>+ <collection> 做配置</li><li>多对多配置：使用 <resultMap>+ <collection> 做配置  ， 多出一张中间表</li></ul><h1 id="11-MyBatis的注解开发"><a href="#11-MyBatis的注解开发" class="headerlink" title="11.MyBatis的注解开发"></a>11.MyBatis的注解开发</h1><p>常用的注解</p><ul><li>@Insert:实现新增</li><li>@Update:实现更新</li><li>@Delete:实现删除</li><li>@Select:实现查询</li><li>@Result:&#x3D;&#x3D;实现结果集封装&#x3D;&#x3D;</li><li>@Results: 可以与@Result一起使用，&#x3D;&#x3D;封装多个结果集&#x3D;&#x3D;</li><li>@One:实现一对一结果集封装</li><li>@Many:实现一对多结果集封装</li></ul><h2 id="11-1MyBatis的增删改查操作"><a href="#11-1MyBatis的增删改查操作" class="headerlink" title="11.1MyBatis的增删改查操作"></a>11.1MyBatis的增删改查操作</h2><p> 测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisTest</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> UserMapper mapper;</span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//数据源</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;sqlMapConfig.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//构建工厂</span></span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line">        <span class="comment">//事务自动提交</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">        mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//保存操作</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSave</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setUsername(<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">        user.setPassword(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">        mapper.save(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//更新操作</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setId(<span class="number">18</span>);</span><br><span class="line">        user.setUsername(<span class="string">&quot;lucy&quot;</span>);</span><br><span class="line">        user.setPassword(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        mapper.update(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除操作</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span>&#123;</span><br><span class="line">        mapper.delete(<span class="number">18</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testFindById</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mapper.findById(<span class="number">2</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询所有</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testFindAll</span><span class="params">()</span>&#123;</span><br><span class="line">        List&lt;User&gt; all = mapper.findAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : all) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sqlMapConfig.xml的配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--加载映射关系--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--指定接口所在的包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.itheima.mapper&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>UserMapper接口 里面的增删改查的注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Insert(&quot;insert into user values(#&#123;id&#125;,#&#123;username&#125;,#&#123;password&#125;,#&#123;birthday&#125;)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Update(&quot;update user set username=#&#123;username&#125;,password=#&#123;password&#125; where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Delete(&quot;delete from user where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">findById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-2MyBatis的注解实现复杂映射开发"><a href="#11-2MyBatis的注解实现复杂映射开发" class="headerlink" title="11.2MyBatis的注解实现复杂映射开发"></a>11.2MyBatis的注解实现复杂映射开发</h2><ul><li>使用的注解主要是@Results  、@Result 、@One 、@Many注解</li></ul><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisTest2</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//OrderMapper</span></span><br><span class="line">    <span class="keyword">private</span> OrderMapper mapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;sqlMapConfig.xml&quot;</span>);</span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">        mapper = sqlSession.getMapper(OrderMapper.class);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSave</span><span class="params">()</span>&#123;</span><br><span class="line">        List&lt;Order&gt; all = mapper.findAll();</span><br><span class="line">        <span class="keyword">for</span> (Order order : all) &#123;</span><br><span class="line">            System.out.println(order);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>OrderMapper接口 注解方式</p><p>这个查询效率比较低,每个结果还要去查询user表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式一</span></span><br><span class="line"><span class="comment">//o.id字段的别名oid</span></span><br><span class="line"><span class="meta">@Select(&quot;select *,o.id oid from orders o,user u where o.uid=u.id&quot;)</span></span><br><span class="line"><span class="meta">@Results(&#123;</span></span><br><span class="line"><span class="meta">        @Result(column = &quot;oid&quot;,property = &quot;id&quot;),</span></span><br><span class="line"><span class="meta">        @Result(column = &quot;ordertime&quot;,property = &quot;ordertime&quot;),</span></span><br><span class="line"><span class="meta">        @Result(column = &quot;total&quot;,property = &quot;total&quot;),</span></span><br><span class="line"><span class="meta">        @Result(column = &quot;uid&quot;,property = &quot;user.id&quot;),</span></span><br><span class="line"><span class="meta">        @Result(column = &quot;username&quot;,property = &quot;user.username&quot;),</span></span><br><span class="line"><span class="meta">        @Result(column = &quot;password&quot;,property = &quot;user.password&quot;)</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Order&gt; <span class="title function_">findAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式二</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from orders&quot;)</span></span><br><span class="line">    <span class="meta">@Results(&#123;</span></span><br><span class="line"><span class="meta">            @Result(column = &quot;id&quot;,property = &quot;id&quot;),</span></span><br><span class="line"><span class="meta">            @Result(column = &quot;ordertime&quot;,property = &quot;ordertime&quot;),</span></span><br><span class="line"><span class="meta">            @Result(column = &quot;total&quot;,property = &quot;total&quot;),</span></span><br><span class="line"><span class="meta">            @Result(</span></span><br><span class="line"><span class="meta">                    property = &quot;user&quot;, //要封装的属性名称</span></span><br><span class="line"><span class="meta">                    column = &quot;uid&quot;, //根据那个 字段 去查询user表的数据</span></span><br><span class="line"><span class="meta">                    javaType = User.class, //要封装的实体类型</span></span><br><span class="line"><span class="meta">                    //select属性 代表查询那个接口的方法获得数据 从UserMapper中获得id数据  也就是对方的id，使用别人的接口的方法</span></span><br><span class="line"><span class="meta">                    one = @One(select = &quot;com.itheima.mapper.UserMapper.findById&quot;)</span></span><br><span class="line"><span class="meta">            )</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br></pre></td></tr></table></figure><h2 id="11-3MyBtais的一对多的查询注解开发"><a href="#11-3MyBtais的一对多的查询注解开发" class="headerlink" title="11.3MyBtais的一对多的查询注解开发"></a>11.3MyBtais的一对多的查询注解开发</h2><p>UserMapper接口中的@Result注解方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line"><span class="meta">@Results(&#123;</span></span><br><span class="line"><span class="meta">    //id = true 标识下面的@Result是id</span></span><br><span class="line"><span class="meta">        @Result(id=true ,column = &quot;id&quot;,property = &quot;id&quot;),</span></span><br><span class="line"><span class="meta">        @Result(column = &quot;username&quot;,property = &quot;username&quot;),</span></span><br><span class="line"><span class="meta">        @Result(column = &quot;password&quot;,property = &quot;password&quot;),</span></span><br><span class="line"><span class="meta">        @Result(</span></span><br><span class="line"><span class="meta">                property = &quot;orderList&quot;,</span></span><br><span class="line"><span class="meta">                column = &quot;id&quot;,//当前的id来使用对方的id</span></span><br><span class="line"><span class="meta">                javaType = List.class,</span></span><br><span class="line"><span class="meta">                many = @Many(select = &quot;com.itheima.mapper.OrderMapper.findByUid&quot;)</span></span><br><span class="line"><span class="meta">        )</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findUserAndOrderAll</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisTest2</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//OrderMapper</span></span><br><span class="line">    <span class="keyword">private</span> OrderMapper mapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;sqlMapConfig.xml&quot;</span>);</span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">        mapper = sqlSession.getMapper(OrderMapper.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSave</span><span class="params">()</span>&#123;</span><br><span class="line">        List&lt;Order&gt; all = mapper.findAll();</span><br><span class="line">        <span class="keyword">for</span> (Order order : all) &#123;</span><br><span class="line">            System.out.println(order);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-4MyBatis的多对多查询"><a href="#11-4MyBatis的多对多查询" class="headerlink" title="11.4MyBatis的多对多查询"></a>11.4MyBatis的多对多查询</h2><p>RoleMapper的接口方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;SELECT * FROM sys_user_role ur,sys_role r WHERE ur.roleId=r.id AND ur.userId=#&#123;uid&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Role&gt; <span class="title function_">findByUid</span><span class="params">(<span class="type">int</span> uid)</span>;</span><br></pre></td></tr></table></figure><p>通过在UserMapper中通过USER的id值，查询到Role中的id值  （对多查询）</p><p>UserMapper接口方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;SELECT * FROM USER&quot;)</span></span><br><span class="line"><span class="meta">@Results(&#123;</span></span><br><span class="line"><span class="meta">        @Result(id = true,column = &quot;id&quot;,property = &quot;id&quot;),</span></span><br><span class="line"><span class="meta">        @Result(column = &quot;username&quot;,property = &quot;username&quot;),</span></span><br><span class="line"><span class="meta">        @Result(column = &quot;password&quot;,property = &quot;password&quot;),</span></span><br><span class="line"><span class="meta">        @Result(</span></span><br><span class="line"><span class="meta">                property = &quot;roleList&quot;,</span></span><br><span class="line"><span class="meta">                column = &quot;id&quot;,//是上面sql语句查询出的id值</span></span><br><span class="line"><span class="meta">                javaType = List.class,</span></span><br><span class="line"><span class="meta">                many = @Many(select = &quot;com.itheima.mapper.RoleMapper.findByUid&quot;)</span></span><br><span class="line"><span class="meta">        )</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="comment">//User</span></span><br><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findUserAndRoleAll</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisTest4</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserMapper mapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;sqlMapConfig.xml&quot;</span>);</span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">        mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSave</span><span class="params">()</span>&#123;</span><br><span class="line">        List&lt;User&gt; userAndRoleAll = mapper.findUserAndRoleAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : userAndRoleAll) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="12-SSM整合"><a href="#12-SSM整合" class="headerlink" title="12.SSM整合"></a>12.SSM整合</h1><p>步骤：</p><ol><li>准备工作<ol><li>原始方式整合<ul><li>创建数据表表</li></ul></li><li>创建Maven工程</li><li>带入Maven坐标<ul><li>spring、mybatis等坐标</li></ul></li><li>编写实体类<ul><li>Account 实体</li></ul></li><li>编写mapper接口（dao层）<ul><li>方法：save()、findAll()</li></ul></li><li>编写Service接口<ul><li>AccountService：save()、findAll();</li></ul></li><li>编写Service接口实现</li><li>编写Controller（web层）</li><li>编写添加页面</li><li>编写列表展示页面</li><li>编写相应的配置文件<ul><li>Spring配置文件：applicationContext.xml</li><li>SpringMVC配置文件：Spring-mvc.xml</li><li>MyBatis映射文件：AccountMapper.xml</li><li>MyBatis核心文件：sqlMapConfig.xml</li><li>数据库链接信息文件：jdbc.properties</li><li>Web.xml文件：web.xml</li><li>日志文件：log4j.xml</li></ul></li><li>测试添加账户</li><li>测试账户列表</li></ol></li></ol><p>2.Spring整合MyBatis </p><ol><li>整合思路</li><li>将SqlSessionFactory配置到Spring容器中</li><li>扫描Mapper，让Spring容器产生Mapper实现类</li><li>配置声明式事务控制</li><li>修改Service实现类代码</li></ol>]]></content>
      
      
      <categories>
          
          <category> SSM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven</title>
      <link href="/post/c6e613d8.html"/>
      <url>/post/c6e613d8.html</url>
      
        <content type="html"><![CDATA[<h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><p><strong>资料格式：</strong></p><ul><li><strong>配置文件</strong></li></ul><blockquote><p><groupId>com.itheima</groupId></p></blockquote><ul><li><p><strong>java代码</strong></p><blockquote><p>statement stat &#x3D; con.createstatement ();</p></blockquote></li><li><p><strong>示例</strong></p><blockquote><p><groupId>com.itheima</groupId></p></blockquote></li><li><p><strong>命令</strong></p><blockquote><p>mvn test</p></blockquote></li></ul><h1 id="Maven简介"><a href="#Maven简介" class="headerlink" title="Maven简介"></a>Maven简介</h1><h2 id="传统项目管理状态分析"><a href="#传统项目管理状态分析" class="headerlink" title="传统项目管理状态分析"></a>传统项目管理状态分析</h2><blockquote><ul><li>jar包不统一，jar包不兼容</li><li>工程升级维护过程操作繁琐</li></ul></blockquote><h2 id="Maven是什么"><a href="#Maven是什么" class="headerlink" title="Maven是什么"></a>Maven是什么</h2><blockquote><p>Maven的本质是一个项目管理工具，将项目开发和管理过程抽象成一个项目<strong>对象模型</strong>(POM)</p><p>POM (Project Object Model) :<strong>项目对象模型</strong></p></blockquote><blockquote><p><img src="http://picgo.kongshier.top/2767/image-20220123113440744.png" alt="image-20220123113440744"></p></blockquote><p>Maven的作用</p><blockquote><ul><li><strong>项目构建:<strong>提供标准的、跨平台的</strong>自动化项目构建</strong>方式</li><li><strong>依赖管理:<strong>方便快捷的</strong>管理</strong>项目依赖的资源**(jar包)**，避免资源间的版本冲突问题</li><li><strong>统一开发结构：</strong>提供标准的、统一的项目结构</li></ul></blockquote><p>Maven下载：</p><blockquote><p>官网地址：(<a href="https://maven.apache.org/">https://maven.apache.org/</a>)</p></blockquote><p>Maven配置文件</p><blockquote><p><img src="http://picgo.kongshier.top/2767/image-20220123142435949.png" alt="image-20220123142435949"></p><p><img src="http://picgo.kongshier.top/2767/image-20220123142444872.png" alt="image-20220123142444872"></p></blockquote><h2 id="Maven基础概念"><a href="#Maven基础概念" class="headerlink" title="Maven基础概念"></a>Maven基础概念</h2><h3 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h3><blockquote><p>用于存储资源，包含各种jar包</p><p>中央仓库：是开源&#x2F;共享的</p><p>私服仓库：公司内部的   <strong>提供访问速度</strong></p></blockquote><p><img src="http://picgo.kongshier.top/2767/image-20220123143434973.png" alt="image-20220123143434973"></p><h3 id="坐标"><a href="#坐标" class="headerlink" title="坐标"></a>坐标</h3><blockquote><p>用于描述仓库中资源的位置</p></blockquote><p><strong>Maven坐标主要组成</strong></p><ul><li>**groupld:**定义当前Maven项目录的包名称(通常是域名反写，例如: org.mybatis)</li><li>**artifactld:**定义当前Maven项目名称(通常是模块名称，例如CRM、SMS)</li><li>**version:**定义当前项目版本号</li><li>**packaging:**定义该项目的打包方式  （较少用）</li></ul><p><strong>Maven坐标作用：</strong></p><ul><li>使用唯一标识，唯一性定位资源位置，通过该标识可以将资源的识别与下载工作交由机器完成</li></ul><h3 id="第一个Maven项目（手工）"><a href="#第一个Maven项目（手工）" class="headerlink" title="第一个Maven项目（手工）"></a>第一个Maven项目（手工）</h3><img src="http://picgo.kongshier.top/2767/image-20220123145845531.png" alt="image-20220123145845531" style="zoom:67%;" /><p><strong>在src同层目录下创建pom.xml</strong></p><blockquote><p>包含有groupid、artifactId、version 、[packaging] 标签组成</p></blockquote><h3 id="Maven项目构建命令"><a href="#Maven项目构建命令" class="headerlink" title="Maven项目构建命令"></a>Maven项目构建命令</h3><blockquote><p>Maven构建命令使用mvn开头，后面添加功能参数，可以一次执行多个命令，使用空格分隔<br><strong>mvn compile    #编译</strong><br><strong>mvn clean       #清理</strong><br><strong>mvn test  #测试</strong><br><strong>mvn package  #打包</strong><br><strong>mvn install   #安装到本地仓库</strong></p><p>ending</p></blockquote><h3 id="Maven项目（IDEA生成）"><a href="#Maven项目（IDEA生成）" class="headerlink" title="Maven项目（IDEA生成）"></a>Maven项目（IDEA生成）</h3><p><img src="http://picgo.kongshier.top/2767/image-20220123183927683.png" alt="image-20220123183927683"></p><p>创建Tomcat运行maven web</p><h2 id="依赖管理"><a href="#依赖管理" class="headerlink" title="依赖管理"></a>依赖管理</h2><p><strong>也就是在pom.xml文件里面添加</strong></p><h3 id="依赖配置"><a href="#依赖配置" class="headerlink" title="依赖配置"></a>依赖配置</h3><img src="http://picgo.kongshier.top/2767/image-20220123205907570.png" alt="image-20220123205907570" style="zoom:67%;" /><h3 id="依赖传递"><a href="#依赖传递" class="headerlink" title="依赖传递"></a>依赖传递</h3><p>引用其他项目的jar包 只需引用jar包的groudId、artifectId、version</p><blockquote><p>**直接依赖:**在当前项目中通过依赖配置建立的依赖关系<br>**间接依赖:**被资源的资源如果依赖其他资源，当前项目间接依赖其他资源</p></blockquote><h4 id="依赖传递冲突问题"><a href="#依赖传递冲突问题" class="headerlink" title="依赖传递冲突问题"></a>依赖传递冲突问题</h4><blockquote><ul><li><strong>路径优先:<strong>当依赖中出现</strong>相同的资源</strong>时，<strong>层级越深，优先级越低，层级越浅，优先级越高</strong></li><li><strong>声明优先:<strong>当资源在</strong>相同层级</strong>被依赖时，<strong>配置顺序靠前的覆盖配置顺序靠后的</strong></li><li><strong>特殊优先:<strong>当同级配置了</strong>相同资源的不同版本</strong>，后配<strong>置的覆盖先配置的</strong></li></ul></blockquote><h3 id="可选依赖"><a href="#可选依赖" class="headerlink" title="可选依赖"></a>可选依赖</h3><img src="http://picgo.kongshier.top/2767/image-20220123211040099.png" alt="image-20220123211040099" style="zoom:67%;" /><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span>  <span class="comment">&lt;!--选择隐藏  当别人使用在是发现不了的，不会出现显示依赖--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="排除依赖"><a href="#排除依赖" class="headerlink" title="排除依赖"></a>排除依赖</h3><img src="http://picgo.kongshier.top/2767/image-20220123211653896.png" alt="image-20220123211653896" style="zoom:67%;" /><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">exclusions</span>&gt;</span>需要排除的坐标，不需x<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="依赖范围"><a href="#依赖范围" class="headerlink" title="依赖范围"></a>依赖范围</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span><span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>依赖的jar默认情况可以在任何地方使用，可以通过scope标签设定其作用范围作用范围</p><ul><li>主程序范围有效(main文件夹范围内)</li><li>测试程序范围有效(test文件夹范围内)</li><li>是否参与打包(package指令范围内)</li></ul></blockquote><table><thead><tr><th align="center">scope</th><th>主代码</th><th>测试代码</th><th>打包</th><th>范例</th></tr></thead><tbody><tr><td align="center">compile（默认）</td><td>Y</td><td>Y</td><td>Y</td><td>log4j</td></tr><tr><td align="center">test</td><td></td><td>Y</td><td></td><td>junit</td></tr><tr><td align="center">provided</td><td>Y</td><td>Y</td><td></td><td>servlet - api</td></tr><tr><td align="center">runtime</td><td></td><td></td><td>Y</td><td>jdbc</td></tr></tbody></table><h4 id="依赖范围传递性"><a href="#依赖范围传递性" class="headerlink" title="依赖范围传递性"></a>依赖范围传递性</h4><p><img src="http://picgo.kongshier.top/2767/image-20220124112123154.png" alt="image-20220124112123154"></p><h2 id="生命周期与插件"><a href="#生命周期与插件" class="headerlink" title="生命周期与插件"></a>生命周期与插件</h2><h3 id="项目构建生命周期"><a href="#项目构建生命周期" class="headerlink" title="项目构建生命周期"></a>项目构建生命周期</h3><p>一次构建过程经历了多少事件</p><blockquote><p>cmopile <strong>-&gt;</strong> test-compile <strong>-&gt;</strong> test <strong>-&gt;</strong> packge <strong>-&gt;</strong> install</p></blockquote><h3 id="三个生命周期阶段"><a href="#三个生命周期阶段" class="headerlink" title="三个生命周期阶段"></a>三个生命周期阶段</h3><blockquote><ol><li>clean:清理工作</li><li>default:核心工作，例如编译，测试，打包，部署等</li><li>site:产生报告，发布站点等</li></ol></blockquote><h3 id="default生命周期阶段执行指令"><a href="#default生命周期阶段执行指令" class="headerlink" title="default生命周期阶段执行指令"></a>default生命周期阶段执行指令</h3><p><img src="http://picgo.kongshier.top/2767/image-20220124114733993.png" alt="image-20220124114733993"></p><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><blockquote><ul><li>插件与生命周期内的阶段绑定，在执行到对应生命周期时执行对应的插件功能</li><li>默认maven在各个生命周期上绑定有预设的功能</li><li>通过插件可以自定义其他功能</li></ul></blockquote><h1 id="Maven高级"><a href="#Maven高级" class="headerlink" title="Maven高级"></a>Maven高级</h1><h2 id="分模块开发与设计（重点）"><a href="#分模块开发与设计（重点）" class="headerlink" title="分模块开发与设计（重点）"></a>分模块开发与设计（重点）</h2><h3 id="工程模块与模块划分"><a href="#工程模块与模块划分" class="headerlink" title="工程模块与模块划分"></a>工程模块与模块划分</h3><blockquote><p>新建一个模块进行把整合的进行分类模块拆分</p></blockquote><ul><li>分模块开发<ul><li>模块中仅包含当前模块对应的功能类与配置文件</li><li>spring核心配置根据模块功能不同进行独立制作</li><li>◆当前模块所依赖的模块通过导入坐标的形式加入当前模块后才可以使用</li><li>web.xml需要加载所有的spring核心配置文件</li></ul></li></ul><h4 id="ssm-pojo拆分"><a href="#ssm-pojo拆分" class="headerlink" title="ssm_pojo拆分"></a>ssm_pojo拆分</h4><ul><li>新建模块<ul><li>拷贝原始项目中对应的相关内容到ssm_pojo模块中<br>实体类(User)<br>配置文件(无)</li></ul></li></ul><h4 id="ssm-dao拆分"><a href="#ssm-dao拆分" class="headerlink" title="ssm_dao拆分"></a>ssm_dao拆分</h4><p>新建模块</p><p>拷贝原始项目中对应的相关内容到ssm_dao模块中</p><p>数据层接口(UserDao)</p><p>配置文件:保留与数据层相关配置文件(3个)<br>            注意:分页插件在配置中与SqlSessionFactoryBean绑定，需要保留</p><ul><li>pom.xml:引入数据层相关坐标即可，删除springmvc相关坐标<ul><li>spring</li><li>mybatis</li><li>spring整合mybatismysql</li><li>druid</li><li>pagehelper</li><li><strong>直接依赖ssm_pojo (对ssm_pojo模块执行install指令，将其安装到本地仓库)</strong></li></ul></li></ul><h4 id="ssm-serive拆分"><a href="#ssm-serive拆分" class="headerlink" title="ssm_serive拆分"></a>ssm_serive拆分</h4><ul><li><p>新建模块</p></li><li><p>拷贝原始项目中对应的相关内容到ssm_service模块中</p><ul><li><p>业务层接口与实现类(UserService、UserServicelmpl)配置文件:保留与数据层相关配置文件(1个)</p></li><li><p>pom.xml:引入数据层相关坐标即可，删除springmvc相关坐标</p></li></ul><p>​spring</p><p>​junit</p><p>​spring整合junit</p><p>​直接依赖ssm_dao (对ssm_dao模块执行install指令，将其安装到本地仓库)间接依赖ssm_pojo (由ssm_dao模块负责依赖关系的建立)</p></li><li><p>修改service模块spring核心配置文件名，添加模块名称，格式: applicationContext-service.xml</p></li><li><p>修改dao模块spring核心配置文件名，添加模块名称，格式: applicationContext-dao.xml</p></li><li><p>修改单元测试引入的配置文件名称，由单个文件修改为多个文件</p></li></ul><h4 id="ssm-conctroller拆分"><a href="#ssm-conctroller拆分" class="headerlink" title="ssm_conctroller拆分"></a>ssm_conctroller拆分</h4><p>新建模块（使用webapp模板)</p><p>拷贝原始项目中对应的相关内容到ssm_controller模块中</p><ul><li><p>表现层控制器类与相关设置类(UserController、异常相关……)</p></li><li><p>配置文件:保留与表现层相关配置文件(1个)、服务器相关配置文件(1个)</p></li><li><ul><li><p>pom.xml:引入数据层相关坐标即可，删除springmvc相关坐标</p></li><li><p>spring</p></li><li><p>springmvcjacksonservlet</p></li><li><p>tomcat服务器插件</p></li><li><p>直接依赖ssm_service (对ssm_service模块执行install指令，将其安装到本地仓库)</p></li><li><p>间接依赖ssm_dao、ssm_pojo</p></li></ul></li><li><p>修改web.xml配置文件中加载spring环境的配置文件名称，使用*通配，加载所有applicationContext-开始的配置文件</p></li></ul><h2 id="聚合（重点）"><a href="#聚合（重点）" class="headerlink" title="聚合（重点）"></a>聚合（重点）</h2><h3 id="多模块构建维护"><a href="#多模块构建维护" class="headerlink" title="多模块构建维护"></a>多模块构建维护</h3><p><img src="http://picgo.kongshier.top/2767/image-20220124140213357.png" alt="image-20220124140213357"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--定义该工程用于进行构建管理 在pom文件下添加下列代码--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">packing</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packing</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--管理工程列表--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--具体的工程名称  顺序无关  运行结果的顺序只与模块间的依赖关系有关--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>    <span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>    <span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>    <span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>    <span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>若工程没有写pacaking 打包方式 默认是jar包</strong>，</p></blockquote><h4 id="模块类型"><a href="#模块类型" class="headerlink" title="模块类型"></a>模块类型</h4><blockquote><p>pom</p><p>war</p><p>jar</p></blockquote><h2 id="继承（重点）"><a href="#继承（重点）" class="headerlink" title="继承（重点）"></a>继承（重点）</h2><p> 模块依赖维护</p><p><strong>继承的作用：</strong></p><p>通过继承可以在子工程中用父工程中的配置</p><ul><li>在子工程中配置继承关系</li></ul><p><strong>制作方式：</strong></p><ul><li>在<strong>子工程</strong>中<strong>声明其父工程</strong>坐标与对应的位置</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--定义父工程 parent标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.kcs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ssm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 父工程的pom文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../ssm/pom.xml  (父工程的pom文件,y用相对路径)<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="继承依赖定义"><a href="#继承依赖定义" class="headerlink" title="继承依赖定义"></a>继承依赖定义</h3><ul><li>在<strong>父工程</strong>中定义依赖关系  定义子工程坐标</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--此处的依赖管理内容--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--所有具体的依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring环境 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="继承依赖使用"><a href="#继承依赖使用" class="headerlink" title="继承依赖使用"></a>继承依赖使用</h3><ul><li>在<strong>子工程</strong>中定义依赖关系<strong>，无需邪出版本号</strong>，版本在父工程中控制，维护时只要对父工程中的版本进行修改就可以了</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring环境--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="继承的资源"><a href="#继承的资源" class="headerlink" title="继承的资源"></a>继承的资源</h3><p><img src="http://picgo.kongshier.top/2767/image-20220124193048050.png" alt="image-20220124193048050"></p><h3 id="继承与聚合比较"><a href="#继承与聚合比较" class="headerlink" title="继承与聚合比较"></a>继承与聚合比较</h3><ul><li><p><strong>作用</strong><br>     聚合用于快速<strong>构建项目</strong><br>​     继承用于快速<strong>配置</strong></p><p><strong>相同点</strong></p><p>​          聚合与继承的pom.xml文件打包方式均为pom，可以将两种关系制作到同一个pom文件中</p><p>​      聚合与继承均属于设计型模块，并无实际的模块内容</p></li><li><p><strong>不同点:</strong><br>      聚合是在<strong>当前</strong>模块中配置关系，聚合可以感知到参与聚合的模块有哪些<br>​          继承是在<strong>子模块</strong>中配置关系，父模块无法感知哪些子模块继承了自己</p></li></ul><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><h3 id="属性统一的重要性"><a href="#属性统一的重要性" class="headerlink" title="属性统一的重要性"></a>属性统一的重要性</h3><h4 id="属性类别"><a href="#属性类别" class="headerlink" title="属性类别"></a>属性类别</h4><ol><li><p>自定义属性</p><blockquote><p><strong>作用：</strong> 等同于定义变量，方便统一维护</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--定义自定义属性格式  properties标签中--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.1.9.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--标签名就是变量名 也就是 spring.version和junit.version--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">junit.version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">junit.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--调用格式 $&#123;变量名&#125;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote></li><li><p>内置属性</p><blockquote><p><strong>作用：</strong> 使用maven内置属性，快速配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--调用格式--&gt;</span></span><br><span class="line">$&#123;basedir&#125;</span><br><span class="line">$&#123;version&#125;</span><br></pre></td></tr></table></figure></blockquote></li><li><p>Setting属性</p><blockquote><p><strong>作用：</strong> 使用maven配置文件setting.xml中的标签属性，用于动态配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--调用格式--&gt;</span></span><br><span class="line">$&#123;settings.localRepository&#125;</span><br></pre></td></tr></table></figure></blockquote></li><li><p>Java系统属性</p><blockquote><p><strong>作用：</strong> 读取java系统属性</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--调用格式--&gt;</span></span><br><span class="line">$&#123;user.home&#125;</span><br><span class="line"><span class="comment">&lt;!--系统属性查询方式--&gt;</span></span><br><span class="line">mvn help:system</span><br></pre></td></tr></table></figure></blockquote></li><li><p>环境变量属性</p><blockquote><p><strong>作用：</strong> 使用maven配置文件setting.xml中的标签属性，用于动态配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--调用格式--&gt;</span></span><br><span class="line">$&#123;env.JAVA_HOME&#125;</span><br><span class="line"><span class="comment">&lt;!--环境变量属性查询方式--&gt;</span></span><br><span class="line">mvn help:system</span><br></pre></td></tr></table></figure></blockquote></li></ol><h2 id="版本管理"><a href="#版本管理" class="headerlink" title="版本管理"></a>版本管理</h2><h3 id="工程版本"><a href="#工程版本" class="headerlink" title="工程版本"></a>工程版本</h3><ul><li><p>SNAPSHOT（测试阶段版本）</p><p>项目开发过程中，为方便团队成员合作，解决模块间相互依赖和时时更新的问题，开发者对每个模块进行构建的时候，输出的临时性版本叫快照版本（测试阶段版本)<br>快照版本会随着开发的进展不断更新</p></li><li><p>RELEASE（发布版本）</p><p>项目开发到进入阶段里程碑后，向团队外部发布较为稳定的版本，这种版本所对应的构件文件是稳定的，即便进行功能的后续开发，也不会改变当前发布版本内容，这种版本称为发布版本</p></li></ul><h3 id="工程版本号约定"><a href="#工程版本号约定" class="headerlink" title="工程版本号约定"></a>工程版本号约定</h3><blockquote><ul><li><p><strong>约束规范</strong></p><p>​&lt;主版本&gt;.&lt;次版本&gt;.&lt;增量版本&gt;.&lt;里程碑版本&gt;<br>​主版本:表示项目重大架构的变更，如: spring5相较于spring4的迭代</p><p>​次版本:表示有较大的功能增加和变化，或者全面系统地修复漏洞</p><p>​增量版本:表示有重大漏洞的修复<br>​里程碑版本:表明一个版本的里程碑（版本内部)。这样的版本同下一个正式版本相比，相对来说不是很稳定，有待更多的测试&gt;</p></li></ul><p>示例：5.1.1.RELEASE</p></blockquote><h2 id="资源配置"><a href="#资源配置" class="headerlink" title="资源配置"></a>资源配置</h2><h3 id="资源配置多文件维护"><a href="#资源配置多文件维护" class="headerlink" title="资源配置多文件维护"></a>资源配置多文件维护</h3><p>配置文件应用pom属性</p><blockquote><p><strong>作用：</strong> 在任意配置文件中加载pom文件中定义的属性</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--调用格式--&gt;</span></span><br><span class="line">$&#123;jdbc.url&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--开启配置文件加载pom属性--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置资源文件对应的信息--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--在bulid标签中--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--指定配置文件对应的位置目录，使用相对路径（../） $&#123;project.basedir&#125;x  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;project.basedir&#125;/src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--开启对配置文件的资源加载过滤--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><ul><li>配置文件中读取pom属性值<ul><li>在pom文件 中设定配置文件路径</li><li>开启加载pom属性过滤功能</li><li>使用${属性名}格式引用pom属性</li></ul></li></ul><h2 id="多环境开发配置"><a href="#多环境开发配置" class="headerlink" title="多环境开发配置"></a>多环境开发配置</h2><p><strong>多环境配置</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--创建多环    在project标签下--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--定义具体的环境，生产环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--定义环境对应的唯一名称，名称不能重复--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>pro_env<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--定义环境中专用的属性值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">jdbc.url</span>&gt;</span>jdbc:mysql://127.0.0.1:3306/ssm_db<span class="tag">&lt;/<span class="name">jdbc.url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置默认启动--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--定义具体的环境，开发环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>dev_env<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">jdbc.url</span>&gt;</span>jdbc:mysql://127.2.2.2:3306/ssm_db<span class="tag">&lt;/<span class="name">jdbc.url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="加载指定环境"><a href="#加载指定环境" class="headerlink" title="加载指定环境"></a>加载指定环境</h3><blockquote><p><strong>作用：</strong> 加载指定环境配置   </p><p>执行构建命令并指定加载对应环境配置信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--调用格式--&gt;</span></span><br><span class="line">mvn 指令 –P 环境定义id</span><br><span class="line"><span class="comment">&lt;!--示例--&gt;</span></span><br><span class="line">mvn install -p pro_env</span><br></pre></td></tr></table></figure></blockquote><h2 id="跳过测试"><a href="#跳过测试" class="headerlink" title="跳过测试"></a>跳过测试</h2><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><ul><li>整体模块功能未开发</li><li>模块中某个功能未开发完毕</li><li>单个功能更新调试导致其他功能失败</li><li>快速打包</li><li>……</li></ul><p>命令</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn 指令 -D skipTests</span><br></pre></td></tr></table></figure><p><strong>ps:</strong>  执行的指令生命周期必须包含测试环节</p><p><strong>操作按钮</strong></p><p><img src="http://picgo.kongshier.top/2767/image-20220124201921414.png" alt="image-20220124201921414"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--在build中的plugins中--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置跳过测试--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">skipTests</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skipTests</span>&gt;</span><span class="comment">&lt;!--设置跳过测试 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span> <span class="comment">&lt;!--包含指定测试的用例--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/User*Test.java<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">excludes</span>&gt;</span><span class="comment">&lt;!--排除指定测试用例--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/User*TestCase.java<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">              <span class="comment">&lt;!--**是通配符 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="私服（重点）"><a href="#私服（重点）" class="headerlink" title="私服（重点）"></a>私服（重点）</h2><p>安装</p><p><strong>Nexus</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--启动服务器--&gt;</span></span><br><span class="line">nexus.exe /run nexus</span><br><span class="line"><span class="comment">&lt;!--访问服务器 本机端口是：6060--&gt;</span></span><br><span class="line">http://localhost:8081</span><br></pre></td></tr></table></figure><ul><li><p>修改基础配置信息</p><p>安装路径下etc目录中nexus-default.properties文件保存有nexus基础配置信息，例如默认访问端口  ，修改端口号</p></li><li><p>修改服务器运行配置信息</p><p>安装路径下bin目录中nexus.vmoptions文件保存有nexus服务器启动对应的配置信息，例如默认占用内存空间</p></li></ul><h3 id="私服获取资源"><a href="#私服获取资源" class="headerlink" title="私服获取资源"></a>私服获取资源</h3><ul><li><p><strong>宿主仓库</strong>（自己的仓库）</p><p>​保存无法从中央仓库获取的资源</p><p>​自主研发</p><p>​第三方非开源项目</p></li><li><p><strong>代理仓库 proxy</strong></p><p>​代理远程仓库，通过nexus访问其他公共仓库</p></li><li><p><strong>仓库组group</strong></p><p>​将若干个仓库组成一个群组，方便获取数据</p><p>​仓库组不能保存资源，设计型仓库</p></li></ul><h3 id="资源上传"><a href="#资源上传" class="headerlink" title="资源上传"></a>资源上传</h3><p>上传的信息</p><ul><li>保存的位置</li><li>资源文件</li><li>对应坐标</li></ul><h3 id="idea上传资源和下载资源"><a href="#idea上传资源和下载资源" class="headerlink" title="idea上传资源和下载资源"></a>idea上传资源和下载资源</h3><h4 id="本地仓库访问私服仓库"><a href="#本地仓库访问私服仓库" class="headerlink" title="本地仓库访问私服仓库"></a>本地仓库访问私服仓库</h4><ul><li><p>访问私服的用户名和密码</p></li><li><p>上传的位置（宿主地址）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置本地仓库访问私服的权限（setting.xml）每个人都要使用里面的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>heima-release<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">username</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">password</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>heima-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">username</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">password</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置本地仓库资源来源（setting.xml）--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-heima<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>  <span class="comment">&lt;!--所有信息来源--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://localhost:8081/repository/maven-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span>  <span class="comment">&lt;!--这个是仓库组的地址--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="下载资源时"><a href="#下载资源时" class="headerlink" title="下载资源时"></a>下载资源时</h4><blockquote><ul><li>访问私服的用户名和密码</li><li>下载的仓库组地址</li></ul></blockquote><blockquote><ul><li><strong>下载的地址配置到本地地址</strong></li><li><strong>上传的地址配置到工程地址</strong></li></ul></blockquote><h3 id="访问私服配置（项目工程访问私服）"><a href="#访问私服配置（项目工程访问私服）" class="headerlink" title="访问私服配置（项目工程访问私服）"></a>访问私服配置（项目工程访问私服）</h3><p>标签：distributionManagement</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置当前项目访问私服上传资源的保存位置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置release--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>heima-release<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://localhost:8081/repository/heima-release/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置snapshout--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>heima-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://localhost:8081/repository/heima-snapshots/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="发布指令：deploy"><a href="#发布指令：deploy" class="headerlink" title="发布指令：deploy"></a>发布指令：deploy</h4>]]></content>
      
      
      <categories>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>butterfly 美化博客</title>
      <link href="/post/b4988161.html"/>
      <url>/post/b4988161.html</url>
      
        <content type="html"><![CDATA[<p>Hexo框架：butterfly魔改（一）</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这一篇内容在上篇的基础上进行魔改，并对上篇的内容进行了补充</p><h1 id="butterfly魔改"><a href="#butterfly魔改" class="headerlink" title="butterfly魔改"></a>butterfly魔改</h1><ul><li><p>看到这里相信大家已经搭建好了属于自己的博客，本来想这先出优化博客的教程，但是我觉得通过上篇的教程，网页还是有很多不足的地方，本篇教程继续带领大家，完成博客的美化，搭好框架，打造一个属于自己免费的炫酷博客。</p></li><li><p>还是那句话，魔改的尽头是默认，哈哈，我只挑我觉得不足的地方，争取教会大家方法，大家也可以根据自己的喜好，查询官方文档，设置自己的博客。</p><p>官方文档链接：<a href="https://butterfly.js.org/posts/4aa8abbe/">https://butterfly.js.org/posts/4aa8abbe/</a></p></li><li><p>如果你没有 pug 以及 stylus 的渲染器，请下载安装</p><p><code>npm install hexo-renderer-pug hexo-renderer-stylus --save</code></p></li></ul><h3 id="主页的美化"><a href="#主页的美化" class="headerlink" title="主页的美化"></a>主页的美化</h3><ul><li>我发现每次进来这个部分的背景颜色都不一样，有的时候随机匹配出来的很丑，于是乎我就开始看代码，查官方文档的帮助文档，将这部分内容做了修改，觉得没有影响的可以忽略这部分的内容。</li></ul><p><img src="http://picgo.kongshier.top/2767/image-20220821141701041.png" alt="image-20220821141701041"></p><ul><li><p>我设置了主题配置文件以下内容：</p><ul><li>方式一：删除掉后面的值，我觉得更美观些</li></ul><p><img src="http://picgo.kongshier.top/1024/image-20220804134357404.png" alt="image-20220804134357404"></p><ul><li>方式二：将背景改成透明</li></ul></li></ul><h3 id="生成文章唯一链接"><a href="#生成文章唯一链接" class="headerlink" title="生成文章唯一链接"></a>生成文章唯一链接</h3><ul><li>Hexo的默认文章链接格式是年，月，日，标题这种格式来生成的。如果你的标题是中文的话，那你的URL链接就会包含中文，复制后的URL路径就是把中文变成了一大堆字符串编码，如果你在其他地方用这边文章的url链接，偶然你又修改了改文章的标题，那这个URL链接就会失效。为了给每一篇文章来上一个属于自己的链接，利用 hexo-abbrlink 插件 ,来解决这个问题。 </li><li>参考github官方： hexo-abbrlink 按照此教程配置完之后如下：</li><li>记得修改每篇文章 abbrlink 的值</li></ul><p>1、安装插件，在博客根目录下打开终端，运行以下指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>2、插件安装成功后，在根目录  的配置文件 _config.yml 找到 permalink：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">#修改为</span><br><span class="line">permalink: post/:abbrlink.html # post为自定义前缀</span><br><span class="line">abbrlink:</span><br><span class="line">        alg: crc32   #算法： crc16(default) and crc32</span><br><span class="line">        rep: hex     #进制： dec(default) and hex</span><br></pre></td></tr></table></figure><h3 id="打字效果"><a href="#打字效果" class="headerlink" title="打字效果"></a>打字效果</h3><p>修改主题配置文件 <code>_config.butterfly.yml</code> 的 activate_power_mode即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">activate_power_mode:</span><br><span class="line">  enable: true</span><br><span class="line">  colorful: true # open particle animation (冒光特效)</span><br><span class="line">  shake: true #  open shake (抖動特效)</span><br><span class="line">  mobile: false</span><br></pre></td></tr></table></figure><h3 id="网站副标题"><a href="#网站副标题" class="headerlink" title="网站副标题"></a>网站副标题</h3><p>可设置主页中展示的网站副标题或者自己喜欢的座右铭</p><p>修改主题配置文件 <code>_config.butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Hexo</span><br><span class="line">subtitle:</span><br><span class="line">  enable: true</span><br><span class="line">  # Typewriter Effect (打字效果)</span><br><span class="line">  effect: true</span><br><span class="line">  # loop (循環打字)</span><br><span class="line">  loop: true</span><br><span class="line">  # source 調用第三方服務</span><br><span class="line">  # source: false 關閉調用</span><br><span class="line">  # source: 1  調用一言網的一句話（簡體） https://hitokoto.cn/</span><br><span class="line">  # source: 2  調用一句網（簡體） http://yijuzhan.com/</span><br><span class="line">  # source: 3  調用今日詩詞（簡體） https://www.jinrishici.com/</span><br><span class="line">  # subtitle 會先顯示 source , 再顯示 sub 的內容</span><br><span class="line">  # source: 3</span><br><span class="line">  # 如果關閉打字效果，subtitle 只會顯示 sub 的第一行文字</span><br><span class="line">  sub:</span><br><span class="line">    - 我双手合十的愿望里永远有你。</span><br><span class="line">    - 穿越人海，只为与你相拥。</span><br><span class="line">    - 手握日月摘 ♥ 陈。</span><br></pre></td></tr></table></figure><h3 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h3><p>方式一：</p><p>Hexo 本身并没有内置文章置顶功能，因此需要自行安装。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 先卸载</span><br><span class="line">npm uninstall --save hexo-generator-index</span><br><span class="line"></span><br><span class="line"># 再安装</span><br><span class="line">npm install --save hexo-generator-index-pin-top</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>就需要在文章的头部信息栏加入一个 header 属性：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 谢谢你来看我的博客</span><br><span class="line">date: 2020-01-31 17:09:13</span><br><span class="line">top: true</span><br><span class="line">header: false</span><br></pre></td></tr></table></figure><p>方式二：</p><p>​</p><h3 id="代码高亮主题"><a href="#代码高亮主题" class="headerlink" title="代码高亮主题"></a>代码高亮主题</h3><p><code>Butterfly</code> 支持6种代码高亮样式：</p><ul><li>darker</li><li>pale night</li><li>light</li><li>ocean</li><li>mac</li><li>mac light</li></ul><p>修改主题配置文件 <code>_config.butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">highlight_theme: mac light</span><br></pre></td></tr></table></figure><p>这个自行选择</p><h3 id="运行时间"><a href="#运行时间" class="headerlink" title="运行时间"></a>运行时间</h3><p>网页已运行时间</p><p>修改主题配置文件 <code>_config.butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">runtimeshow:</span><br><span class="line">  enable: true</span><br><span class="line">  publish_date: 6/7/2018 00:00:00  </span><br><span class="line">  ##网页开通时间</span><br><span class="line">  #格式: 月/日/年 时间</span><br><span class="line">  #也可以写成 年/月/日 时间</span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/image-20220821141723516.png" alt="image-20220821141723516"></p><h3 id="代码复制"><a href="#代码复制" class="headerlink" title="代码复制"></a>代码复制</h3><p>主题支持代码复製功能</p><p>修改 主题配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">highlight_copy: true</span><br></pre></td></tr></table></figure><h3 id="侧边栏时钟"><a href="#侧边栏时钟" class="headerlink" title="侧边栏时钟"></a>侧边栏时钟</h3><p>1、安装插件，在博客根目录 <code>[Blog]</code> 下打开终端，运行以下指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-clock --save</span><br></pre></td></tr></table></figure><p>2、添加配置信息，以下为写法示例</p><p>在站点配置文件 <code>_config.yml</code> 或者主题配置文件 <code>_config.butterfly.yml</code> 中添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># electric_clock</span><br><span class="line"># see https://akilar.top/posts/4e39cf4a/</span><br><span class="line">electric_clock:</span><br><span class="line">  enable: true # 开关</span><br><span class="line">  priority: 5 #过滤器优先权</span><br><span class="line">  enable_page: all # 应用页面</span><br><span class="line">  exclude:</span><br><span class="line">    # - /posts/</span><br><span class="line">    # - /about/</span><br><span class="line">  layout: # 挂载容器类型</span><br><span class="line">    type: class</span><br><span class="line">    name: sticky_layout</span><br><span class="line">    index: 0</span><br><span class="line">  loading: https://npm.elemecdn.com/hexo-butterfly-clock/lib/loading.gif #加载动画自定义</span><br><span class="line">  clock_css: https://npm.elemecdn.com/hexo-butterfly-clock/lib/clock.min.css</span><br><span class="line">  clock_js: https://npm.elemecdn.com/hexo-butterfly-clock/lib/clock.min.js</span><br><span class="line">  ip_api: https://pv.sohu.com/cityjson?ie=utf-8</span><br></pre></td></tr></table></figure><h3 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h3><p>要为 Butterfly 配上字数统计特性, 你需要如下几个步骤:</p><ol><li>打开 hexo 工作目录</li><li>npm install hexo-wordcount —save or yarn add hexo-wordcount</li><li>修改主题配置文件 <code>_config.butterfly.yml</code></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wordcount:</span><br><span class="line">  enable: true</span><br><span class="line">  post_wordcount: true</span><br><span class="line">  min2read: true</span><br><span class="line">  total_wordcount: true</span><br></pre></td></tr></table></figure><h3 id="公告2个小人"><a href="#公告2个小人" class="headerlink" title="公告2个小人"></a>公告2个小人</h3><p>在 <code>node_modules\hexo-theme-butterfly\layout\includes\widget\card_announcement.pug</code> 下添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> .xpand(style=&#x27;height:200px;&#x27;)</span><br><span class="line">  canvas.illo(width=&#x27;800&#x27; height=&#x27;800&#x27; style=&#x27;max-width: 200px; max-height: 200px; touch-action: none; width: 640px; height: 640px;&#x27;)</span><br><span class="line">script(src=&#x27;https://fastly.jsdelivr.net/gh/xiaopengand/blogCdn@latest/xzxr/twopeople1.js&#x27;)</span><br><span class="line">script(src=&#x27;https://fastly.jsdelivr.net/gh/xiaopengand/blogCdn@latest/xzxr/zdog.dist.js&#x27;)</span><br><span class="line">script#rendered-js(src=&#x27;https://fastly.jsdelivr.net/gh/xiaopengand/blogCdn@latest/xzxr/twopeople.js&#x27;)</span><br><span class="line">style.</span><br><span class="line">  .card-widget.card-announcement &#123;</span><br><span class="line">  margin: 0;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  text-align: center;</span><br><span class="line">  &#125;</span><br><span class="line">  canvas &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  cursor: move;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="星空背景和流星特效"><a href="#星空背景和流星特效" class="headerlink" title="星空背景和流星特效"></a>星空背景和流星特效</h3><p>这部分建议不要加，加上的效果没出来的话，在网址上建议 ctrl+F5 刷新下本地</p><p>在 <code>[Blog]\source\js\</code> 目录下新建  universe.js  文件，如果没有js就先新建js 文件夹，输入以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">function dark() &#123;window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById(&quot;universe&quot;),o=!0,a=&quot;180,184,240&quot;,r=&quot;226,225,142&quot;,d=&quot;226,225,224&quot;,c=[];function f()&#123;n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute(&quot;width&quot;,n),s.setAttribute(&quot;height&quot;,e)&#125;function u()&#123;h.clearRect(0,0,n,e);for(var t=c.length,i=0;i&lt;t;i++)&#123;var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()&#125;&#125;function y()&#123;this.reset=function()&#123;this.giant=m(3),this.comet=!this.giant&amp;&amp;!o&amp;&amp;m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)&#125;,this.fadeIn=function()&#123;this.fadingIn&amp;&amp;(this.fadingIn=!(this.opacity&gt;this.opacityTresh),this.opacity+=this.do)&#125;,this.fadeOut=function()&#123;this.fadingOut&amp;&amp;(this.fadingOut=!(this.opacity&lt;0),this.opacity-=this.do/2,(this.x&gt;n||this.y&lt;0)&amp;&amp;(this.fadingOut=!1,this.reset()))&#125;,this.draw=function()&#123;if(h.beginPath(),this.giant)h.fillStyle=&quot;rgba(&quot;+a+&quot;,&quot;+this.opacity+&quot;)&quot;,h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet)&#123;h.fillStyle=&quot;rgba(&quot;+d+&quot;,&quot;+this.opacity+&quot;)&quot;,h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t&lt;30;t++)h.fillStyle=&quot;rgba(&quot;+d+&quot;,&quot;+(this.opacity-this.opacity/20*t)+&quot;)&quot;,h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()&#125;else h.fillStyle=&quot;rgba(&quot;+r+&quot;,&quot;+this.opacity+&quot;)&quot;,h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()&#125;,this.move=function()&#123;this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&amp;&amp;this.reset(),(this.x&gt;n-n/4||this.y&lt;0)&amp;&amp;(this.fadingOut=!0)&#125;,setTimeout(function()&#123;o=!1&#125;,50)&#125;function m(t)&#123;return Math.floor(1e3*Math.random())+1&lt;10*t&#125;function l(t,i)&#123;return Math.random()*(i-t)+t&#125;f(),window.addEventListener(&quot;resize&quot;,f,!1),function()&#123;h=s.getContext(&quot;2d&quot;);for(var t=0;t&lt;i;t++)c[t]=new y,c[t].reset();u()&#125;(),function t()&#123;document.getElementsByTagName(&#x27;html&#x27;)[0].getAttribute(&#x27;data-theme&#x27;)==&#x27;dark&#x27;&amp;&amp;u(),window.requestAnimationFrame(t)&#125;()&#125;;</span><br><span class="line">dark()</span><br></pre></td></tr></table></figure><p>2、在 <code>[Blog]\source\css\</code> 目录下新建 universe.css输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/* 背景宇宙星光  */</span><br><span class="line">#universe&#123;</span><br><span class="line">  display: block;</span><br><span class="line">  position: fixed;</span><br><span class="line">  margin: 0;</span><br><span class="line">  padding: 0;</span><br><span class="line">  border: 0;</span><br><span class="line">  outline: 0;</span><br><span class="line">  left: 0;</span><br><span class="line">  top: 0;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">  pointer-events: none;</span><br><span class="line">  z-index: -1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、在 <code>[Blog]\_config.butterfly.yml</code> 的 <code>inject</code> 配置项中 <code>bottom</code> 下填入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 星空背景</span><br><span class="line">      - &lt;canvas id=&quot;universe&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">      - &lt;script defer src=&quot;/js/universe.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>4、在 <code>[Blog]\_config.butterfly.yml</code> 的 <code>inject</code> 配置项中 <code>head</code> 下填入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## 星空背景</span><br><span class="line">     - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/universe.css&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="樱花飘落效果"><a href="#樱花飘落效果" class="headerlink" title="樱花飘落效果"></a>樱花飘落效果</h3><p>在主题配置文件_config.butterfly.yml的inject配置项中bottom下引入sakura.js即可。注意自己调下格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  bottom:</span><br><span class="line">    # 樱花飘落效果</span><br><span class="line">    # - &lt;script async src=&quot;https://npm.elemecdn.com/tzy-blog/lib/js/other/sakura.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="给文章标题添加表情"><a href="#给文章标题添加表情" class="headerlink" title="给文章标题添加表情"></a>给文章标题添加表情</h3><p>在source\css\style.css 添加以下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">.post-body h2:before,</span><br><span class="line">.post-body h3:before,</span><br><span class="line">.post-body h4:before,</span><br><span class="line">.post-body h5:before,</span><br><span class="line">.post-body h6:before &#123;</span><br><span class="line">  margin-right: 5px;</span><br><span class="line">  font-style: normal;</span><br><span class="line">  font-variant: normal;</span><br><span class="line">  line-height: 1;</span><br><span class="line">  -webkit-transition: all 0.2s ease-out;</span><br><span class="line">  -moz-transition: all 0.2s ease-out;</span><br><span class="line">  -o-transition: all 0.2s ease-out;</span><br><span class="line">  -ms-transition: all 0.2s ease-out;</span><br><span class="line">  transition: all 0.2s ease-out;</span><br><span class="line">  text-rendering: auto;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  font-weight: 600;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.post-body h1:before &#123;</span><br><span class="line">  content: &#x27;🎉&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">.post-body h2:before &#123;</span><br><span class="line">  content: &#x27;💡&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">.post-body h3:before &#123;</span><br><span class="line">  content: &#x27;🩸&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">.post-body h4:before &#123;</span><br><span class="line">  content: &#x27;📍&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">.post-body h5:before &#123;</span><br><span class="line">  content: &#x27;🌶️&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">.post-body h6:before &#123;</span><br><span class="line">  content: &#x27;🌏&#x27;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加个性化板娘"><a href="#添加个性化板娘" class="headerlink" title="添加个性化板娘"></a>添加个性化板娘</h3><p>以下整理了很多类别，选择自己喜好的怕动手就第一种，现在都很成熟，放心大胆的引用，我使用的就是第一种，但每种都试过了，才写出来不怕动手建议选择大神魔改版本，可以根据自己的喜好进行配置，修改！！！</p><p>第一种：最简单引用方式在<code>Butterfly/_config.yml</code>中<code>inject</code>添加，复制的时候注意一下格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">   head:</span><br><span class="line">     - &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css&quot;&gt;</span><br><span class="line">   bottom:</span><br><span class="line">    - &lt;script src=&quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>第二种：Hexo插件版看板娘（不能换装）</p><ul><li>在Hexo根目录[Blogroot]下打开终端，输入以下指令安装必要插件。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><ul><li><p>打开站点配置文件<code>[Blog]\config.yml</code><br>搜索live2d,按照如下注释内容指示进行操作。<br>如果没有搜到live2d的配置项，就直接把以下内容复制到最底部</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># Live2D</span><br><span class="line">## https://github.com/EYHN/hexo-helper-live2d</span><br><span class="line">live2d:</span><br><span class="line">  enable: true #开关插件版看板娘</span><br><span class="line">  scriptFrom: local # 默认</span><br><span class="line">  pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)</span><br><span class="line">  pluginJsPath: lib/ # 脚本文件相对与插件根目录路径</span><br><span class="line">  pluginModelPath: assets/ # 模型文件相对与插件根目录路径</span><br><span class="line">  # scriptFrom: jsdelivr # jsdelivr CDN</span><br><span class="line">  # scriptFrom: unpkg # unpkg CDN</span><br><span class="line">  # scriptFrom: https://npm.elemecdn.com/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span><br><span class="line">  tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span><br><span class="line">  debug: false # 调试, 是否在控制台输出日志</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko # npm-module package name</span><br><span class="line">    # use: wanko # 博客根目录/live2d_models/ 下的目录名</span><br><span class="line">    # use: ./wives/wanko # 相对于博客根目录的路径</span><br><span class="line">    # use: https://npm.elemecdn.com/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span><br><span class="line">  display:</span><br><span class="line">    position: right #控制看板娘位置</span><br><span class="line">    width: 150 #控制看板娘大小</span><br><span class="line">    height: 300 #控制看板娘大小</span><br><span class="line">  mobile:</span><br><span class="line">    show: true # 手机中是否展示</span><br></pre></td></tr></table></figure></li><li><p>完成后保存修改，在Hexo根目录下运行指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></li><li><p>之所以必须要使用hexo clean是因为我们需要清空缓存重新生成静态页面，不然看板娘没被加入生成的静态页面里，是不会出现的。</p></li></ul><h3 id="更换看板娘"><a href="#更换看板娘" class="headerlink" title="更换看板娘"></a>更换看板娘</h3><ol><li><p>同样是在Hexo根目录<code>[Blog]</code>下，打开终端，选择想要的看板娘进行安装，例如我这里用到的是 <code>live2d-widget-model-koharu</code>，一个Q版小正太。其他的模型也可以在<a href="https://huaji8.top/post/live2d-plugin-2.0/">模型预览</a>里查看以供选择。</p></li><li><p>输入指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BASH</span><br><span class="line">npm install --save live2d-widget-model-koharu</span><br></pre></td></tr></table></figure></li><li><p>然后在站点配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Blogroot]\_config.yml</span><br></pre></td></tr></table></figure><p>里找到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model</span><br></pre></td></tr></table></figure><p>项修改为期望的模型。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">YML</span><br><span class="line">model:</span><br><span class="line">  use: live2d-widget-model-koharu</span><br><span class="line">  # 默认为live2d-widget-model-wanko</span><br></pre></td></tr></table></figure></li><li><p>之后按部就班的运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BASH</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>就能在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost:4000</span><br></pre></td></tr></table></figure><p>上查看效果了。</p></li></ol><h3 id="卸载看板娘"><a href="#卸载看板娘" class="headerlink" title="卸载看板娘"></a>卸载看板娘</h3><p>这个是第二种方式安装看板娘的卸载方法，其它方式很简单就不说了 </p><p>卸载插件和卸载模型的指令都是通过npm进行操作的。在博客根目录<code>[Blog]</code>打开终端，输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-helper-live2d #卸载看板娘插件</span><br><span class="line">npm uninstall live2d-widget-model-modelname #卸载看板娘模型。记得替换modelname为看板娘名称</span><br></pre></td></tr></table></figure><p>卸载后为了保证配置项不出错，记得把<code>[Blog]\_config.yml</code>里的配置项给注释或者删除掉。</p><h3 id="大神魔改看板娘"><a href="#大神魔改看板娘" class="headerlink" title="大神魔改看板娘"></a>大神魔改看板娘</h3><p>会说话，能换装，来自张书樵大神 链接：<a href="https://github.com/stevenjoezhang/live2d-widget.git">https://github.com/stevenjoezhang/live2d-widget.git</a></p><ol><li><p>在[Blog]\node_modules\hexo-theme-butterfly\source目录下打开终端,输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/stevenjoezhang/live2d-widget.git live2d-widget</span><br></pre></td></tr></table></figure><p>这行指令的意思就是<code>clone</code>这个项目到<code>source</code>路径下并重命名为<code>live2d-widget</code>。</p><p>我下载失败了就去了网址下载了压缩包，如果是用下载项目压缩包，解压后放到这里的，也记得把文件夹<code>更名为live2d-widge</code>t。</p></li><li><p>找到路径<code>[Blog]\node_modules\hexo-theme-butterfly\source\live2d-widget\autoload.js</code>，打开<code>autoload.js</code>，找到这行代码，修改为如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const live2d_path = &quot;/live2d-widget/&quot;;</span><br></pre></td></tr></table></figure><p>此处引用一下参考教程原话：<code>autoload.js</code>中的注释的绝对地址指的是，将资源打包放到<code>[Blogroot]/theme/next/source</code>中后，以<code>[Blogroot]/theme/next/source</code>为根目录（&#x2F;）的绝对路径。【旧版教程，可能和新版本路径不一样，明白意思即可】</p></li><li><p>在<code>Butterfly</code>的主题配置文件<code>[Blog]\_config.butterfly.yml</code>中,<code>butterfly</code>主题其实自带<code>fontawesome</code>依赖，无需引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">inject</span><br><span class="line">      bottom:</span><br><span class="line">       - &lt;script defer src=&quot;/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>引入的时候记得写注释，以后改起来也方便</p></li><li><p>保存所有文件的修改，然后照例执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>就能在<code>localhost:4000</code>看到预览了。</p></li><li><p>自定义修改<br>有一定前端基础的小伙伴可以通过修改<code>[Blog]\\node_modules\hexo-theme-butterfly\source\live2d-widget</code>路径下的样式资源文件：</p><ul><li><code>waifu-tips.js</code>:包含了按钮和对话框的逻辑</li><li><code>waifu-tips.json</code> :定义了触发条件（selector，CSS 选择器）和触发时显示的文字（text）；</li><li><code>waifu.css</code>:看板娘的样式表。可以对看板娘的位置布局等做自定义修改。</li></ul></li></ol><h4 id="关于一些bug说明"><a href="#关于一些bug说明" class="headerlink" title="关于一些bug说明"></a>关于一些bug说明</h4><ul><li>在配置了<code>gulp</code>和<code>pwa</code>之后，看板娘消失。这个是<code>gulp-babel</code>压缩导致的。</li></ul><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><ol><li><p>直接把看板娘提取出来作为单独的项目，然后借助jsdelivr引用相应的静态资源。<code>live2d-widget</code>文件夹不放在博客的<code>source</code>目录中，而是存在独立的<code>github</code>仓库里。这样<code>gulp</code>怎么也压缩不到。而且得益于<code>jsdelivr</code>，看板娘的加载速度也有所提高。</p></li><li><p>配置方法是将live2d-widget 项目fork到自己的仓库（用原项目也可以，但是那样不方便更改样式啊），然后修改 autoload.js 里的路径为你自己的仓库名。【看清楚需要修改的地方】</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/&quot;;</span><br><span class="line">const live2d_path = &quot;https://cdn.jsdelivr.net/gh/YourGithubName/live2d-widget/&quot;;</span><br></pre></td></tr></table></figure></li><li><p>在主题配置项里也可以使用<code>https://cdn.jsdelivr.net/gh/YourGithubName/live2d-widget/autoload.js</code>来引入。</p></li></ol><p>说明：不知道怎么弄的可以去 csdn 搜一下 本地仓库上传到github 教程</p><h4 id="本地化API配置"><a href="#本地化API配置" class="headerlink" title="本地化API配置"></a>本地化API配置</h4><ol><li><p>懒人配置方案:修改张书樵大神的项目内的<code>~\live2d-widget\autoload.js</code>,将模型资源由<code>cdnPath</code>改为<code>apiPath</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  // 加载 waifu.css live2d.min.js waifu-tips.js</span><br><span class="line">  if (screen.width &gt;= 768) &#123;</span><br><span class="line">  Promise.all([</span><br><span class="line">  loadExternalResource(live2d_path + &quot;waifu.css&quot;, &quot;css&quot;),</span><br><span class="line">  loadExternalResource(live2d_path + &quot;live2d.min.js&quot;, &quot;js&quot;),</span><br><span class="line">  loadExternalResource(live2d_path + &quot;waifu-tips.js&quot;, &quot;js&quot;)</span><br><span class="line">  ]).then(() =&gt; &#123;</span><br><span class="line">  initWidget(&#123;</span><br><span class="line">  waifuPath: live2d_path + &quot;waifu-tips.json&quot;,</span><br><span class="line">- //apiPath: &quot;https://live2d.fghrsh.net/api/&quot;,</span><br><span class="line">-  cdnPath: &quot;https://cdn.jsdelivr.net/gh/fghrsh/live2d_api/&quot;</span><br><span class="line">+ apiPath: &quot;https://live2d.fghrsh.net/api/&quot;,</span><br><span class="line">+  //cdnPath: &quot;https://cdn.jsdelivr.net/gh/fghrsh/live2d_api/&quot;</span><br><span class="line">  &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>上面已经说到过，张书樵大神的魔改方案其实已经实现了<code>本地化API</code>，只是因为模型配置路径不同才导致无法换装的。所以其实只要注意配置模型时，保证每个可以展示的模型都有相应的<code>index.json</code>并且在<code>model_list.json</code>里有相应的模型路径就可以了。这里读者可以直接使用我配置好的本地化项目的路径：修改张书樵大神的项目内的<code>~\live2d-widget\autoload.js</code>,修改<code>cdnPath</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">  // 加载 waifu.css live2d.min.js waifu-tips.js</span><br><span class="line">  if (screen.width &gt;= 768) &#123;</span><br><span class="line">  Promise.all([</span><br><span class="line">  loadExternalResource(live2d_path + &quot;waifu.css&quot;, &quot;css&quot;),</span><br><span class="line">  loadExternalResource(live2d_path + &quot;live2d.min.js&quot;, &quot;js&quot;),</span><br><span class="line">  loadExternalResource(live2d_path + &quot;waifu-tips.js&quot;, &quot;js&quot;)</span><br><span class="line">  ]).then(() =&gt; &#123;</span><br><span class="line">  initWidget(&#123;</span><br><span class="line">  waifuPath: live2d_path + &quot;waifu-tips.json&quot;,</span><br><span class="line">  //apiPath: &quot;https://live2d.fghrsh.net/api/&quot;,</span><br><span class="line">-  cdnPath: &quot;https://cdn.jsdelivr.net/gh/fghrsh/live2d_api/&quot;</span><br><span class="line">+  cdnPath: &quot;https://npm.elemecdn.com/akilar-live2dapi@latest/&quot;</span><br><span class="line">//因为jsdelivr不支持50MB以上的包的加速，可能报403错误，所以用的vercel的CDN服务。</span><br><span class="line">//可以考虑clone我配置好的live2d_api仓库自己部署到其他更快的cdn服务上。</span><br><span class="line">  &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>除了让原有模型换装可用化以为，还顺便添加了<code>亚丝娜</code>、<code>和泉纱雾</code>，<code>血小板</code>、<code>土间埋（干物妹小埋）</code>和<code>香风智乃</code>的模型哦。</p></li><li></li></ol><h4 id="页脚跳动的♥"><a href="#页脚跳动的♥" class="headerlink" title="页脚跳动的♥"></a>页脚跳动的♥</h4><p>编辑博客根目录<code>node_modules\hexo-theme-butterfly\layout\includes\footer.pug</code>文件，修改以下内容</p><ul><li>改第一部分内容</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.copyright!= `&amp;copy;$&#123;theme.footer.owner.since&#125; - $&#123;nowYear&#125; By $&#123;config.author&#125;`</span><br></pre></td></tr></table></figure><p>将上面代码改为下面的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.copyright!= `&amp;copy;$&#123;theme.footer.owner.since&#125; - $&#123;nowYear&#125; &lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&gt;&lt;/i&gt;  $&#123;config.author&#125;`</span><br></pre></td></tr></table></figure><ul><li><p>改第二部分内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.copyright!= `&amp;copy;$&#123;nowYear&#125; By $&#123;config.author&#125;`</span><br></pre></td></tr></table></figure><p>将上面代码改为下面的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.copyright!= `&amp;copy;$&#123;nowYear&#125; &lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&gt;&lt;/i&gt; $&#123;config.author&#125;`</span><br></pre></td></tr></table></figure></li><li><p>编辑<code>butterfly.yml</code>文件</p><p>在<code>inject-&gt;head</code>下面添加如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/HCLonely/images@master/others/heartbeat.min.css&quot;&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="Butterfly加载动画修改"><a href="#Butterfly加载动画修改" class="headerlink" title="Butterfly加载动画修改"></a>Butterfly加载动画修改</h3><p>添加配置文件，在目录<code>node_modules\hexo-theme-butterfly\layout\includes\loading\loaded.ejs</code>下添加 loaded.ejs 文件，代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.preloader.enable) &#123; %&gt;</span><br><span class="line">&lt;div id=&#x27;loader&#x27;&gt;</span><br><span class="line">    &lt;% if(theme.preloader.layout == &#x27;gear&#x27; ) &#123;%&gt;</span><br><span class="line">    &lt;div class=&quot;outer_box&quot;&gt;</span><br><span class="line">    &lt;div class=&#x27;loader_overlay&#x27;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div class=&#x27;loader_cogs&#x27;&gt;</span><br><span class="line">        &lt;div class=&#x27;loader_cogs__top&#x27;&gt;</span><br><span class="line">            &lt;div class=&#x27;top_part&#x27;&gt;&lt;/div&gt;</span><br><span class="line">            &lt;div class=&#x27;top_part&#x27;&gt;&lt;/div&gt;</span><br><span class="line">            &lt;div class=&#x27;top_part&#x27;&gt;&lt;/div&gt;</span><br><span class="line">            &lt;div class=&#x27;top_hole&#x27;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&#x27;loader_cogs__left&#x27;&gt;</span><br><span class="line">            &lt;div class=&#x27;left_part&#x27;&gt;&lt;/div&gt;</span><br><span class="line">            &lt;div class=&#x27;left_part&#x27;&gt;&lt;/div&gt;</span><br><span class="line">            &lt;div class=&#x27;left_part&#x27;&gt;&lt;/div&gt;</span><br><span class="line">            &lt;div class=&#x27;left_hole&#x27;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&#x27;loader_cogs__bottom&#x27;&gt;</span><br><span class="line">            &lt;div class=&#x27;bottom_part&#x27;&gt;&lt;/div&gt;</span><br><span class="line">            &lt;div class=&#x27;bottom_part&#x27;&gt;&lt;/div&gt;</span><br><span class="line">            &lt;div class=&#x27;bottom_part&#x27;&gt;&lt;/div&gt;</span><br><span class="line">            &lt;div class=&#x27;bottom_hole&#x27;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;p style=&quot;text-align:center&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;loading...&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;% &#125; else if(theme.preloader.layout == &#x27;spinner-box&#x27;) &#123; %&gt;</span><br><span class="line">    &lt;div class=&quot;loading-left-bg&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;loading-right-bg&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;spinner-box&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;configure-border-1&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;configure-core&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;configure-border-2&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;configure-core&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;loading-word&quot;&gt;加载中...&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  var endLoading = function () &#123;</span><br><span class="line">    document.body.style.overflow = &#x27;auto&#x27;;</span><br><span class="line">    document.getElementById(&#x27;loader&#x27;).classList.add(&quot;loading&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  window.addEventListener(&#x27;load&#x27;,endLoading);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><h3 id="引入样式文件"><a href="#引入样式文件" class="headerlink" title="引入样式文件"></a>引入样式文件</h3><ul><li>引入spinner-boxbutterfly，在主题配置文件 inject 处 heard处引入以下代码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/zyoushuo/Blog@latest/hexo/css/loading_style_1.css&quot; &gt;</span><br></pre></td></tr></table></figure><p>gear风格样式文件引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/zyoushuo/Blog@latest/hexo/css/loading_style_2.css&quot; &gt;</span><br></pre></td></tr></table></figure><ul><li>引入到页面</li></ul><p>​找到 node_modules\hexo-theme-butterfly\layout\includes\layout.pug ,将如下代码替换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if theme.preloader</span><br><span class="line">      !=partial(&#x27;includes/loading/loading&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br></pre></td></tr></table></figure><p>替换为如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if theme.preloader</span><br><span class="line">      !=partial(&#x27;includes/loading/loaded.ejs&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)</span><br></pre></td></tr></table></figure><ul><li><p>开启加载</p><p>主题配置文件下的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preloader: true</span><br></pre></td></tr></table></figure><p>改为如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">preloader:</span><br><span class="line">  enable: true</span><br><span class="line">  layout: gear # gear, spinner-box 两种样式</span><br></pre></td></tr></table></figure></li><li><p>不需要的话关掉即可</p></li></ul><h3 id="浏览器标题恶搞"><a href="#浏览器标题恶搞" class="headerlink" title="浏览器标题恶搞"></a>浏览器标题恶搞</h3><p>在<code>node_modules\hexo-theme-butterfly\source\js\crash_cheat.js</code>文件夹下添加<code>crash_cheat.js</code>文件 填入以下内容：（记得修改你喜好的标题）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">var OriginTitle = document.title;</span><br><span class="line"> var titleTime;</span><br><span class="line"> document.addEventListener(&#x27;visibilitychange&#x27;, function () &#123;</span><br><span class="line">     if (document.hidden) &#123;</span><br><span class="line">         $(&#x27;[rel=&quot;icon&quot;]&#x27;).attr(&#x27;href&#x27;, &quot;/joke.ico&quot;);</span><br><span class="line">         document.title = &#x27;看不见我🙈~看不见我🙈~&#x27;;</span><br><span class="line">         clearTimeout(titleTime);</span><br><span class="line">     &#125;</span><br><span class="line">     else &#123;</span><br><span class="line">         $(&#x27;[rel=&quot;icon&quot;]&#x27;).attr(&#x27;href&#x27;, &quot;/favicon.ico&quot;);</span><br><span class="line">         document.title = &#x27; ( ๑•̀ㅂ•́) ✧被发现了～&#x27;;</span><br><span class="line">         titleTime = setTimeout(function () &#123;</span><br><span class="line">             document.title = OriginTitle;</span><br><span class="line">         &#125;, 2000);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><p>在 node_modules\hexo-theme-butterfly\layout\includes\layout.pug  中添加以下代码来引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">script(type=&#x27;text/javascript&#x27;, src=&#x27;/js/crash_cheat.js&#x27;)</span><br></pre></td></tr></table></figure><p>在<code>inject:</code> -&gt; <code>bottom:</code> 引入以下文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/weilain/cdn-photo/js/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>自定义文章封面</p><ul><li><p>首先：找到主题配置文件  cover ，文章主题的修改在 cover 下，如果不想麻烦可以选择统一的封面，把上面那个url修改成自己喜欢的图片地址即可</p><p><img src="http://picgo.kongshier.top/1024/image-20220804204629098.png" alt="image-20220804204629098"></p></li><li><p>自定义文章封面</p><p><strong>写文章的时候在cover后面输入你想要的封面图片的url，在top_img后面加上你想要的顶部图片的url</strong></p></li></ul><p>背景渐变</p><p>在css—-&gt;style.css 引入以下文件即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">#web_bg &#123;</span><br><span class="line">  background: -webkit-linear-gradient(</span><br><span class="line">    0deg,</span><br><span class="line">    rgba(247, 149, 51, 0.1) 0,</span><br><span class="line">    rgba(243, 112, 85, 0.1) 15%,</span><br><span class="line">    rgba(239, 78, 123, 0.1) 30%,</span><br><span class="line">    rgba(161, 102, 171, 0.1) 44%,</span><br><span class="line">    rgba(80, 115, 184, 0.1) 58%,</span><br><span class="line">    rgba(16, 152, 173, 0.1) 72%,</span><br><span class="line">    rgba(7, 179, 155, 0.1) 86%,</span><br><span class="line">    rgba(109, 186, 130, 0.1) 100%</span><br><span class="line">  );</span><br><span class="line">  background: -moz-linear-gradient(</span><br><span class="line">    0deg,</span><br><span class="line">    rgba(247, 149, 51, 0.1) 0,</span><br><span class="line">    rgba(243, 112, 85, 0.1) 15%,</span><br><span class="line">    rgba(239, 78, 123, 0.1) 30%,</span><br><span class="line">    rgba(161, 102, 171, 0.1) 44%,</span><br><span class="line">    rgba(80, 115, 184, 0.1) 58%,</span><br><span class="line">    rgba(16, 152, 173, 0.1) 72%,</span><br><span class="line">    rgba(7, 179, 155, 0.1) 86%,</span><br><span class="line">    rgba(109, 186, 130, 0.1) 100%</span><br><span class="line">  );</span><br><span class="line">  background: -o-linear-gradient(</span><br><span class="line">    0deg,</span><br><span class="line">    rgba(247, 149, 51, 0.1) 0,</span><br><span class="line">    rgba(243, 112, 85, 0.1) 15%,</span><br><span class="line">    rgba(239, 78, 123, 0.1) 30%,</span><br><span class="line">    rgba(161, 102, 171, 0.1) 44%,</span><br><span class="line">    rgba(80, 115, 184, 0.1) 58%,</span><br><span class="line">    rgba(16, 152, 173, 0.1) 72%,</span><br><span class="line">    rgba(7, 179, 155, 0.1) 86%,</span><br><span class="line">    rgba(109, 186, 130, 0.1) 100%</span><br><span class="line">  );</span><br><span class="line">  background: -ms-linear-gradient(</span><br><span class="line">    0deg,</span><br><span class="line">    rgba(247, 149, 51, 0.1) 0,</span><br><span class="line">    rgba(243, 112, 85, 0.1) 15%,</span><br><span class="line">    rgba(239, 78, 123, 0.1) 30%,</span><br><span class="line">    rgba(161, 102, 171, 0.1) 44%,</span><br><span class="line">    rgba(80, 115, 184, 0.1) 58%,</span><br><span class="line">    rgba(16, 152, 173, 0.1) 72%,</span><br><span class="line">    rgba(7, 179, 155, 0.1) 86%,</span><br><span class="line">    rgba(109, 186, 130, 0.1) 100%</span><br><span class="line">  );</span><br><span class="line">  background: linear-gradient(</span><br><span class="line">    90deg,</span><br><span class="line">    rgba(247, 149, 51, 0.1) 0,</span><br><span class="line">    rgba(243, 112, 85, 0.1) 15%,</span><br><span class="line">    rgba(239, 78, 123, 0.1) 30%,</span><br><span class="line">    rgba(161, 102, 171, 0.1) 44%,</span><br><span class="line">    rgba(80, 115, 184, 0.1) 58%,</span><br><span class="line">    rgba(16, 152, 173, 0.1) 72%,</span><br><span class="line">    rgba(7, 179, 155, 0.1) 86%,</span><br><span class="line">    rgba(109, 186, 130, 0.1) 100%</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="引入阿里矢量图标库"><a href="#引入阿里矢量图标库" class="headerlink" title="引入阿里矢量图标库"></a>引入阿里矢量图标库</h2><p>阿里图标库全名阿里巴巴矢量图标库。提供了丰富的免费图标资源。并且支持多种引入方式。</p><h3 id="新建图标项目"><a href="#新建图标项目" class="headerlink" title="新建图标项目"></a>新建图标项目</h3><p>1、访问 <a href="https://www.iconfont.cn/">阿里巴巴矢量图标库</a> , 注册登录。</p><p>2、搜索自己心仪的图标，然后选择添加入库，加到购物车。</p><p>3、选择完毕后点击右上角的购物车图标，打开侧栏，选择添加到项目，如果没有项目就新建一个。</p><img src="http://picgo.kongshier.top/2767/81982c3a.png" alt="img" style="zoom: 50%;" /><h3 id="引入图标"><a href="#引入图标" class="headerlink" title="引入图标"></a>引入图标</h3><p>1、找到之前新建的图标项目，选择Symbol-&gt;查看在线链接，获取 <code>Symbol.js</code> 的在线链接，如果没有在线链接记得生成一下，并引入。在 <code>[Blog]\_config.butterfly.yml</code> 的 <code>inject</code> 配置项中填入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bottom:</span><br><span class="line">    - &lt;script async src=&quot;你生成的链接&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>2、打开 node_modules\hexo-theme-butterfly\source\css\custom.css（新建文件），输入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">svg.icon &#123;</span><br><span class="line">   width: 1em; height: 1em;</span><br><span class="line">   /* width和height定义图标的默认宽度和高度*/</span><br><span class="line">   vertical-align: -0.15em;</span><br><span class="line">   fill: currentColor;</span><br><span class="line">   overflow: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、添加外挂标签，在 node_modules\hexo-theme-butterfly\scripts\tag目录下新建 <code>iconfont.js</code>，打开该文件输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x27;use strict&#x27;;</span><br><span class="line"></span><br><span class="line">function iconFont(args) &#123;</span><br><span class="line">  args = args.join(&#x27; &#x27;).split(&#x27;,&#x27;)</span><br><span class="line">  let p0 = args[0]</span><br><span class="line">  let p1 = args[1]?args[1]:1</span><br><span class="line">  return `&lt;svg class=&quot;icon&quot; style=&quot;width:$&#123;p1&#125;em; height:$&#123;p1&#125;em&quot; aria-hidden=&quot;true&quot;&gt;&lt;use xlink:href=&quot;#$&#123;p0&#125;&quot;&gt;&lt;/use&gt;&lt;/svg&gt;`;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hexo.extend.tag.register(&#x27;icon&#x27;,iconFont);</span><br></pre></td></tr></table></figure><p><code>hexo cl &amp;&amp; hexo g</code> 以后即可使用外挂标签的形式来写入图标了。</p><h3 id="Hexo-使用阿里iconfont图标"><a href="#Hexo-使用阿里iconfont图标" class="headerlink" title="Hexo-使用阿里iconfont图标"></a>Hexo-使用阿里iconfont图标</h3><p><a href="https://cloud.tencent.com/developer/article/1813883">https://cloud.tencent.com/developer/article/1813883</a></p><h3 id="添加标签云"><a href="#添加标签云" class="headerlink" title="添加标签云"></a>添加标签云</h3><p>使用命令进行安装插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-cloud --save</span><br></pre></td></tr></table></figure><p>打开node_modules\hexo-theme-butterfly\layout\includes\widget\card_tags.pug 文件，用下面内容将其替换掉，最好把之前的文件备份一下,防止后悔</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">if site.tags.length</span><br><span class="line">  .card-widget.card-tags</span><br><span class="line">    .card-content</span><br><span class="line">      .item-headline</span><br><span class="line">        i.fa.fa-tags(aria-hidden=&quot;true&quot;)</span><br><span class="line">        span= _p(&#x27;aside.card_tags&#x27;)</span><br><span class="line">        script(type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;/js/tagcloud.js&quot;)</span><br><span class="line">        script(type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;/js/tagcanvas.js&quot;)</span><br><span class="line">        #myCanvasContainer.widget.tagcloud(align=&#x27;center&#x27;)</span><br><span class="line">          canvas#resCanvas(width=&#x27;200&#x27;, height=&#x27;200&#x27;, style=&#x27;width=100%&#x27;)</span><br><span class="line">            != tagcloud()</span><br><span class="line">          != tagcloud(&#123;min_font: 16, max_font: 24, amount: 50, color: true, start_color: &#x27;#999&#x27;, end_color: &#x27;#99a9bf&#x27;&#125;)</span><br></pre></td></tr></table></figure><p>普通标签备份</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">if theme.aside.card_tags.enable</span><br><span class="line">  if site.tags.length</span><br><span class="line">    .card-widget.card-tags</span><br><span class="line">      .item-headline</span><br><span class="line">        i.fas.fa-tags</span><br><span class="line">        span= _p(&#x27;aside.card_tags&#x27;)</span><br><span class="line"></span><br><span class="line">      - let tagLimit = theme.aside.card_tags.limit === 0 ? 0 : theme.aside.card_tags.limit || 40</span><br><span class="line">      if theme.aside.card_tags.color</span><br><span class="line">        .card-tag-cloud!= cloudTags(&#123;source: site.tags, minfontsize: 1.15, maxfontsize: 1.45, limit: tagLimit, unit: &#x27;em&#x27;&#125;)</span><br><span class="line">      else</span><br><span class="line">        .card-tag-cloud!= tagcloud(&#123;min_font: 1.1, max_font: 1.5, amount: tagLimit , color: true, start_color: &#x27;#999&#x27;, end_color: &#x27;#99a9bf&#x27;, unit: &#x27;em&#x27;&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + GitHub 快速创建个人博客</title>
      <link href="/post/b4988161.html"/>
      <url>/post/b4988161.html</url>
      
        <content type="html"><![CDATA[<p>hexo官网：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><p>butterfly 主题设置：<a href="https://butterfly.js.org/">https://butterfly.js.org/</a></p><p>GitHub地址：<a href="https://github.com/jerryc127/hexo-theme-butterfly">https://github.com/jerryc127/hexo-theme-butterfly</a></p><p>其他博主的教程：</p><ul><li><a href="https://tzy1997.com/">唐志远博主</a></li><li><a href="https://akilar.top/">糖果屋</a></li></ul><h1 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h1><ul><li>初始化博客命令：hexo init “文件名”</li><li>开启本地服务（本地运行）的命令：hexo s </li><li>生成页面（生成博客）： hexo g</li><li>创建文章（md形式）：hexo n “文章名字”</li><li>清理缓存：hexo clean</li><li>依赖安装：npm install</li><li>新建文章：hexo n “文章名”</li></ul><p>发布顺序</p><ol><li>先清理缓存：hexo clean</li><li>再重新生成博客页面：hexo g</li><li>预览：hexo serve</li><li>上传到GitHub创库：hexo d</li></ol><h1 id="Hexo-Github搭建个人博客"><a href="#Hexo-Github搭建个人博客" class="headerlink" title="Hexo+Github搭建个人博客"></a>Hexo+Github搭建个人博客</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li><p>完全免费的搭建个人博客，没有任何收费，零基础小白也能上手，不需要编程基础，跟着操作来即可。</p></li><li><p>首先要了解一下我们搭建博客要用到的框架。Hexo是高效的静态站点生成框架，它基于Node.js。通过Hexo，你可以直接使用Markdown语法来撰写博客。相信很多小伙伴写工程都写过README.md文件吧，对，就是这个格式的！写完后只需两三条命令即可将生成的网页上传到你的github上，然后别人就可以看到你的网页啦。是不是很简单？你无需关心网页源代码的具体细节，你只需要用心写好你的博客内容就行。</p></li></ul><h2 id="Hexo环境准备"><a href="#Hexo环境准备" class="headerlink" title="Hexo环境准备"></a>Hexo环境准备</h2><ul><li>【2021版本】保姆级Hexo+Github搭建个人博客步骤</li></ul><p>​单纯搭建发布视频讲解地址：<a href="https://www.bilibili.com/video/BV1mU4y1j72n?t=2.5&amp;vd_source=71e92a1364cbcaf80125baa05f89bc60">https://www.bilibili.com/video/BV1mU4y1j72n?t=2.5&amp;vd_source=71e92a1364cbcaf80125baa05f89bc60</a><br>​详细视频讲解：<a href="https://www.bilibili.com/video/BV1oU4y1n7hn/?spm_id_from=pageDriver&amp;vd_source=91c74d407fc476374430aea2a76f7aca">https://www.bilibili.com/video/BV1oU4y1n7hn/?spm_id_from=pageDriver&amp;vd_source=91c74d407fc476374430aea2a76f7aca</a></p><h3 id="Node-js安装"><a href="#Node-js安装" class="headerlink" title="Node.js安装"></a>Node.js安装</h3><pre><code>         https://www.cnblogs.com/liuqiyun/p/8133904.html</code></pre><h3 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h3><ul><li><p>安装步骤参考以下步骤</p><p>​<a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">https://www.cnblogs.com/xueweisuoyong/p/11914045.html</a></p></li></ul><h3 id="Vscode安装"><a href="#Vscode安装" class="headerlink" title="Vscode安装"></a>Vscode安装</h3><ul><li><p>后面涉及到代码的修改，建议大家使用 Vscode 软件 </p><ul><li><p>安装链接：  「VSCodeUserSetup-x64-1.65.0.exe」 <a href="https://pan.quark.cn/s/f64b7413660c">https://pan.quark.cn/s/f64b7413660c</a>       提取码：7eMQ</p></li><li><p>本文软件需要用到的操作说明：</p><ul><li>打开终端，本文用到的命令都是在终端里面输入命令+回车的</li><li>ctrl + f   查找内容的快捷键，因为配置文件的代码太多了，需要用到这个快捷键，然后在搜索框输入要搜索的内容，就能实现快速查找</li></ul></li></ul></li></ul><h3 id="Typroa"><a href="#Typroa" class="headerlink" title="Typroa"></a>Typroa</h3><ul><li>用于写文章</li><li><a href="https://blog.csdn.net/u014061630/article/details/81359144?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166105644016782395369722%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=166105644016782395369722&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-81359144-null-null.142%5Ev42%5Epc_rank_34,185%5Ev2%5Econtrol&utm_term=markdown%E8%AF%AD%E6%B3%95&spm=1018.2226.3001.4187">Markdown介绍</a></li></ul><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><ul><li>github访问加速</li></ul><p>​    「fastgithub_win版-x64.zip」链接：<a href="https://pan.quark.cn/s/4c170f5763d2">https://pan.quark.cn/s/4c170f5763d2</a> 提取码：sFNj</p><p>​其余版本建议访问：<a href="https://github.com/dotnetcore/FastGithub">https://github.com/dotnetcore/FastGithub</a></p><ul><li>注册Github账号</li></ul><p>​       接下来就去注册一个github账号，用来存放我们的网站，注册、使用教程 CSDN自己搜，这里就不提供了</p><ul><li>搭建仓库</li></ul><p>​       打开<a href="https://github.com/%EF%BC%8C%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%EF%BC%8C%E5%A6%82%E4%B8%8B%E6%89%80%E7%A4%BA%EF%BC%9A">https://github.com/，新建一个项目，如下所示：</a></p><p>​<img src="http://picgo.kongshier.top/2767/image-20220816161920867.png" alt="image-20220816161920867"></p><ul><li>然后如下图所示，输入自己的项目名字，后面一定要加<code>.github.io</code>后缀，README初始化可选可不选。<strong>名称一定要和你的github名字完全一样，比如你github名字叫<code>abc</code>，那么仓库名字一定要是<code>abc.github.io</code>。</strong>最后选择Create 创建，项目就建成功了</li></ul><img src="http://picgo.kongshier.top/1024/image-20220801225841175.png" alt="image-20220801225841175" style="zoom:67%;" /><h2 id="Hexo搭建"><a href="#Hexo搭建" class="headerlink" title="Hexo搭建"></a>Hexo搭建</h2><p>一定要保证前面的步骤成功后，在执行该章节后面的步骤</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><ul><li><p>在你的电脑上任意位置，新建一个文件夹，用来存放自己的博客文件，比如我的博客存放位置<code>D:\boke\blog</code>目录下。</p></li><li><p>在该根目录下，鼠标右击，选择<code>Git Bash Here</code>，打开git的控制台窗口，输入<code>npm i hexo-cli -g</code>安装Hexo。会有几个报错，无视它就行。</p></li><li><p>安装完成后，验证是否安装成功，该窗口输入<code>hexo -v</code>验证是否安装成功。</p></li></ul><h3 id="生成ssh-keys"><a href="#生成ssh-keys" class="headerlink" title="生成ssh keys"></a>生成ssh keys</h3><ul><li><p>在任意文件夹位置，鼠标右击，选择<code>Git Bash Here</code>，输入 ssh 检查有没有安装ssh</p></li><li><p>生成ssh命令：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;2927527234@qq.com&quot;  </span><br></pre></td></tr></table></figure></li><li><p>总共需要敲四次回车。</p></li></ul><img src="http://picgo.kongshier.top/1024/88fe196d4b93872edf40766575f35af3.png" alt="img" style="zoom:67%;" /><ul><li>找到  id_rsa.pub 文件，并打开复制里面所有的代码，大致路径： c盘—–&gt;用户——&gt;管理员名称——–&gt;.ssh文件夹下</li></ul><p>​或者</p><ul><li><p>git bash中输入<code>cat ~/.ssh/id_rsa.pub</code>下命令，将输出的内容复制到框中，点击确定保存。</p></li><li><p>打开github，在头像下面点击<code>settings</code>，在新出的导航栏，找到 ssh，点击后，在新的页面点击 ssh keys 的新建钥匙，新建钥匙的  title（名称）随意起名，如：blog，将 id_rsa.pub 文件复制的公钥，粘贴到 key 里面，保存。</p></li></ul><img src="http://picgo.kongshier.top/1024/image-20220802152610379.png" alt="image-20220802152610379" style="zoom:67%;" /><ul><li>测试ssh是否绑定成功命令： ssh -T <a href="mailto:&#x67;&#105;&#x74;&#x40;&#x67;&#x69;&#116;&#x68;&#x75;&#x62;&#46;&#x63;&#111;&#x6d;">&#x67;&#105;&#x74;&#x40;&#x67;&#x69;&#116;&#x68;&#x75;&#x62;&#46;&#x63;&#111;&#x6d;</a></li></ul><img src="http://picgo.kongshier.top/1024/image-20220801231554912.png" alt="image-20220801231554912" style="zoom: 80%;" /><h3 id="本地博客生成"><a href="#本地博客生成" class="headerlink" title="本地博客生成"></a>本地博客生成</h3><ul><li>初始化博客命令：hexo init</li></ul><p><img src="http://picgo.kongshier.top/1024/image-20220801212856707.png" alt="image-20220801212856707"></p><ul><li>开启本地服务的命令：hexo s</li></ul><p><img src="http://picgo.kongshier.top/1024/image-20220801212953228.png" alt="image-20220801212953228"></p><ul><li>然后浏览器打开<a href="http://localhost:4000/%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E6%88%91%E4%BB%AC%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%95%A6%EF%BC%8C%E6%8C%89%60ctrl+c%60%E5%85%B3%E9%97%AD%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%82">http://localhost:4000/，就可以看到我们的博客啦，按`ctrl+c`关闭本地服务器。</a></li><li>具体效果如下：</li></ul><img src="http://picgo.kongshier.top/1024/image-20220801234836437.png" alt="image-20220801234836437" style="zoom:67%;" /><h3 id="发布博客到互联网"><a href="#发布博客到互联网" class="headerlink" title="发布博客到互联网"></a>发布博客到互联网</h3><p><strong>建议先将网站美化了，然后在用此步骤发布到互联网上</strong></p><ul><li>修改-config.yml文件</li></ul><img src="http://picgo.kongshier.top/1024/76aa4fb226389c10209b17cd97f1b7d8.png" alt="img" style="zoom:67%;" /><ul><li>将改配置文件最后的 deploy  部分完善，type和 branch 是固定不变的，repository修改为你的 github 地址 ，  &#x3D;&#x3D;注意：注意网址前面，冒号后面有一个空格&#x3D;&#x3D;</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#x27;git&#x27;</span><br><span class="line">  repository: &#x27;刚刚新建的GitHub仓库地址，完整地址复制到这里&#x27;</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><ul><li>你的github地址：在github找到你之前新建的仓库，然后找到仓库地址，复制仓库地址，将我的地址替换为你的即可。</li></ul><p>​<img src="http://picgo.kongshier.top/1024/image-20220802145731910.png" alt="image-20220802145731910" style="zoom:67%;" /></p><ul><li>修改好配置文件后，在你的博客文件夹下git bash，将本地文件上传到github里面，根据以下命令，一步一步的走即可：</li></ul><p>​安装 <code>hexo-deployer-git</code> 自动部署发布工具： <code>npm install hexo-deployer-git --save</code></p><p>​<img src="http://picgo.kongshier.top/1024/a94aa787c8627d7bc2d95fc3aabe211d.png" alt="img"></p><ul><li>生成页面： <code>hexo g</code></li></ul><p>​<img src="http://picgo.kongshier.top/1024/image-20220802145929980.png" alt="image-20220802145929980" style="zoom:80%;" /></p><ul><li>然后输入下面命令，用户名和邮箱根据你注册github的信息自行修改。</li></ul><p></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;GitHub注册名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><ul><li>本地文件上传到Github上面：<code>hexo d</code><ul><li>如果出现这个界面关掉即可</li></ul></li></ul><p>​<img src="http://picgo.kongshier.top/1024/image-20220802183045420.png" alt="image-20220802183045420" style="zoom: 67%;" /></p><ul><li>然后会出现一个登录界面，输入 GitHub 账号，千万别输错了，要不然有得重来</li></ul><p>​<img src="http://picgo.kongshier.top/1024/image-20220802183241566.png" alt="image-20220802183241566" style="zoom: 67%;" /></p><ul><li>到下面输入密码这一步，先暂缓一下，先创建一个令牌，然后将创建的令牌复制粘贴进去就行【记住不要输入密码，需要将你的令牌输入进去，而不是密码】</li></ul><p>​<img src="http://picgo.kongshier.top/1024/image-20220802183347638.png" alt="image-20220802183347638" style="zoom:67%;" /></p><ul><li>设置令牌步骤：</li></ul><p>​setting———&gt;developer settings（开发者设置）———&gt; 后续步骤按照下方图片操作</p><p><img src="http://picgo.kongshier.top/1024/image-20220802114624730.png" alt="image-20220802114624730"></p><ul><li>然后新建令牌，有效期30天，为令牌赋权限，建议把所有选项都选上，然后生成令牌</li></ul><p><img src="http://picgo.kongshier.top/1024/image-20220802114843927.png" alt="image-20220802114843927"></p><ul><li>将生成的令牌输入到密码那个对话框，一定要将这个令牌，拍照等方式保存好，后面在去找这个令牌它就不显示了</li></ul><p><img src="http://picgo.kongshier.top/1024/image-20220802115012539.png" alt="image-20220802115012539"></p><ul><li>上传到github后，就可以用仓库名称访问你的网址</li></ul><h2 id="hexo-博客版本控制（git版本控制）"><a href="#hexo-博客版本控制（git版本控制）" class="headerlink" title="hexo 博客版本控制（git版本控制）"></a>hexo 博客版本控制（git版本控制）</h2><p>在有的时候代码可能会丢失，代码有些错误，这种时候我们可以通过版本控制，来回退我们的版本，从而保证我们的代码不会丢失。</p><p>如果没有git基础的有些地方不理解的，可以先去看下git 几十分钟搞定，当然按照我的步骤一步一步来，没有任何问题！！！</p><ul><li>打开github 新建一个仓库，新建完成后不要关掉这个界面</li></ul><p>​<img src="http://picgo.kongshier.top/2767/image-20220803100423813.png" alt="image-20220803100423813"></p><ul><li><p>新建文件 .gitignore，这个文件的作用就是帮我们过滤掉不需上传到仓库的文件,注意文件位置：根目录下</p></li><li><p>代码内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">.vscode/</span><br><span class="line">/.idea/</span><br><span class="line">.deploy_git*/</span><br><span class="line">.idea</span><br><span class="line">themes/butterfly/.git</span><br></pre></td></tr></table></figure></li><li><p>终端输入，生成仓库命令  ： git init</p></li><li><p>建好仓库后，将仓库推送到远程上面去</p><p>在建立github仓库时，有怎么推送到仓库的说明，只需要将代码按照说明步骤一步一步复制，终端输入即可</p><img src="http://picgo.kongshier.top/2767/image-20220803101940561.png" alt="image-20220803101940561" style="zoom:67%;" /></li><li><p>重要代码说明，其余没有强调的按照文档说明复制就行</p></li></ul><h2 id="上传-GitHub"><a href="#上传-GitHub" class="headerlink" title="上传 GitHub"></a>上传 GitHub</h2><h3 id="把本地的上传到-GitHub-仓库"><a href="#把本地的上传到-GitHub-仓库" class="headerlink" title="把本地的上传到 GitHub 仓库"></a>把本地的上传到 GitHub 仓库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;注解&quot;</span><br><span class="line">git branch -M main</span><br><span class="line">git remote rm origin  # 首次不用执行这个</span><br><span class="line">git remote add origin https://github.com/kongshier/Myblog.git</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add . 将代码提交到暂存区</span><br><span class="line">git commit -m &quot;feat：初始化仓库&quot;提交到本地</span><br></pre></td></tr></table></figure><p>如果你clone下来一个别人的仓库，在此基础上完成你的代码，推送到自己的仓库可能遇到如下问题：<br>error: remote origin already exists.表示远程仓库已存在。<br>因此你要进行以下操作：<br>1、先输入git remote rm origin 删除关联的origin的远程库<br>2、关联自己的仓库 git remote add origin <a href="https://github.com/kongshier/blog.git">https://github.com/kongshier/blog.git</a><br>3、最后git push origin master，这样就推送到自己的仓库了。</p><ul><li><p>当你仓库有内容时完成将代码推送到远程分支上面，后面就算你更换设备，都可以将代码从远程克隆下来</p></li><li><p>克隆步骤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone 仓库地址</span><br><span class="line">切换到你下载好的文件目录</span><br><span class="line">npm install这是安装依赖</span><br></pre></td></tr></table></figure></li></ul><h3 id="拉取远程仓库"><a href="#拉取远程仓库" class="headerlink" title="拉取远程仓库"></a>拉取远程仓库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone &lt;repositories&gt;  # 拉取默认分支</span><br><span class="line"></span><br><span class="line">git clone -b &lt;branch&gt; &lt;repositories&gt; 拉取远程仓库中指定的分支</span><br></pre></td></tr></table></figure><p>以HTTPS方式拉取  一般都是这个克隆</p><p><img src="http://picgo.kongshier.top/2767/image-20220820123326690.png" alt="image-20220820123326690"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/kongshier/blog.git</span><br></pre></td></tr></table></figure><p>以SSH方式拉取仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 《git@gitee.com:holyking/test-2.git 这个是需要拉取仓库的SSH》</span><br></pre></td></tr></table></figure><h4 id="下载到本地后执行以下"><a href="#下载到本地后执行以下" class="headerlink" title="下载到本地后执行以下"></a>下载到本地后执行以下</h4><ul><li><p>安装依赖：npm install</p></li><li><p>再重新生成博客页面：hexo g</p></li><li><p>预览：hexo serve</p></li><li><p>上传到GitHub创库：hexo d</p></li></ul><h2 id="博客文件夹的介绍"><a href="#博客文件夹的介绍" class="headerlink" title="博客文件夹的介绍"></a>博客文件夹的介绍</h2><p><img src="http://picgo.kongshier.top/2767/image-20220802180850120.png" alt="image-20220802180850120"></p><ul><li><p><code>_config.yml</code>：俗称站点配置文件，很多与博客网站的格式、内容相关的设置都需要在里面改。</p></li><li><p><code>node_modules</code>:存储Hexo插件的文件，可以实现各种扩展功能。一般不需要管。</p></li><li><p><code>package.json</code>：别问我，我也不知道干嘛的。</p></li><li><p><code>scaffolds</code>：模板文件夹，里面的<code>post.md</code>文件可以设置每一篇博客的模板。具体用起来就知道能干嘛了。</p></li><li><p><code>source</code>：非常重要。所有的个人文件都在里面！</p></li><li><p><code>themes</code>：主题文件夹，可以从<a href="https://hexo.io/themes/">Hexo主题官网</a>或者网上大神的Github主页下载各种各样美观的主题，让自己的网站变得逼格高端的关键！</p></li></ul><p>接下来重点介绍<code>source</code>文件夹。新建的博客中，<code>source</code>文件夹下默认只有一个子文件夹——<code>_posts</code>。我们写的博客都放在这个子文件夹里面。我们还可以在<code>source</code>里面新建各种子文件夹满足自己的个性化需求，对初学者而言，我们先把精力放在主线任务上，然后再来搞这些细节。</p><ul><li><p>_config.yml 文件详解</p><ul><li><p>严格注意缩进，缩进不对也会报错，所以这里不推荐使用记事本，使用 Vscode 编辑器</p></li><li><p>title部分：</p><p>​<img src="http://picgo.kongshier.top/2767/image-20220802204126485.png" alt="image-20220802204126485"></p></li><li><p>url ：只用配置第一行，其余的都不用动，更换为你的远程地址就可以了</p><img src="http://picgo.kongshier.top/2767/image-20220802204305728.png" alt="image-20220802204305728" style="zoom: 67%;" /></li><li><p>文件夹的设置，这些东西都不用管，默认即可</p><p><img src="http://picgo.kongshier.top/2767/image-20220802204452588.png" alt="image-20220802204452588"></p></li><li><p>首页的设置，用默认的就好了</p><p><img src="http://picgo.kongshier.top/2767/image-20220802204604046.png" alt="image-20220802204604046"></p></li><li><p>预设的分类，uncategorized 意思是未分类，先不用管用默认的就好</p><p><img src="http://picgo.kongshier.top/1024/image-20220802204643225.png" alt="image-20220802204643225"></p></li><li><p>日期的显示格式：用默认的就好了</p><p><img src="http://picgo.kongshier.top/1024/image-20220802204804934.png" alt="image-20220802204804934"></p></li><li><p>分页的设置：默认是一页10行数据，数据修改随意</p></li></ul></li></ul><p>​<img src="http://picgo.kongshier.top/1024/image-20220802204853131.png" alt="image-20220802204853131"></p><h2 id="网址的美化"><a href="#网址的美化" class="headerlink" title="网址的美化"></a>网址的美化</h2><ul><li>下面的这个个性化设置主要针对的是<code>matery</code>主题</li></ul><p>​主题的原地址在这里：<a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a>，它的文档写得也非常的详细，还有中英文两个版本，按照文档教程安装一遍主题，然后是可以正常打开的，如果你是一般使用的话，基本没啥问题了。</p><ul><li><p>butterfly官方主题配置教程</p><p><a href="https://butterfly.js.org/posts/21cfbf15/">https://butterfly.js.org/posts/21cfbf15/</a></p><p>Ps：根据帮助文档，一步一步来即可，两个主题选择一个配置安装即可，原理相同</p><p>​我这里选择的是butterfly，butterfly官方文档地址： <a href="https://butterfly.js.org/posts/21cfbf15">https://butterfly.js.org/posts/21cfbf15</a></p></li></ul><h2 id="butterfly主题安装详细步骤"><a href="#butterfly主题安装详细步骤" class="headerlink" title="butterfly主题安装详细步骤"></a>butterfly主题安装详细步骤</h2><p>PS：</p><ul><li>使用vscode软件进行文件的修改，直接将整个文件拖进该软件即可</li><li>这后面的章节其实就是带大家看帮助文档，然后一些 bug 的处理，建议大家看不懂文档的结合我这篇文章理解</li></ul><h3 id="butterfly的安装"><a href="#butterfly的安装" class="headerlink" title="butterfly的安装"></a>butterfly的安装</h3><ul><li><p>使用npm 的方式，在vscode终端安装</p></li><li><p>~~~<br>npm update hexo-theme-butterfly  # 更新主题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![image-20220816174000370](Hexo+Github搭建个人博客教程.assets/image-20220816174000370.png)</span><br><span class="line"></span><br><span class="line">* 修改配置文件</span><br><span class="line"></span><br><span class="line">  ![image-20220802195512536](http://picgo.kongshier.top/1024/image-20220802195512536.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* 在终端 清理缓存 hexo clean，然后我这里报错了 </span><br><span class="line"></span><br><span class="line">  &lt;img src=&quot;http://picgo.kongshier.top/1024/image-20220802200625850.png&quot; alt=&quot;image-20220802200625850&quot; style=&quot;zoom:67%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">​解决办法：</span><br><span class="line"></span><br><span class="line">​在自己对应的”nodejs“文件夹下的“node_global&quot; 下找到对应的“指令名.ps1&quot;删除掉，然后再运行对应的指令即可</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* hexo s 运行，将网址在浏览器粘贴，最终效果如下</span><br><span class="line"></span><br><span class="line">  &lt;img src=&quot;http://picgo.kongshier.top/1024/image-20220802201740296.png&quot; alt=&quot;image-20220802201740296&quot; style=&quot;zoom:67%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">​&lt;img src=&quot;http://picgo.kongshier.top/1024/image-20220802201848536.png&quot; alt=&quot;image-20220802201848536&quot; style=&quot;zoom: 50%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">​</span><br><span class="line"></span><br><span class="line">2. 其余的主题的安装方式和这一样，不管安装什么都要先看帮助文档。然后记得用 `hexo clean` 清理缓存后在运行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 更多主题</span><br><span class="line"></span><br><span class="line">1、fluid ：https://github.com/fluid-dev/hexo-theme-fluid</span><br><span class="line"></span><br><span class="line">2、Volantis：https://github.com/volantis-x/hexo-theme-volantis</span><br><span class="line"></span><br><span class="line">3、next ：https://github.com/iissnan/hexo-theme-next/</span><br><span class="line"></span><br><span class="line">4、nexmoe：https://github.com/theme-nexmoe/hexo-theme-nexmoe</span><br><span class="line"></span><br><span class="line">5、butterfly：https://github.com/jerryc127/hexo-theme-butterfly</span><br><span class="line"></span><br><span class="line">6、bamboo：https://github.com/yuang01/hexo-theme-bamboo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 主题页面</span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line"></span><br><span class="line">* 这一部分和上一部分没什么区别，就是看帮助文档，然后输入对应的命令，如果没有强调的话，就按照帮助文档的命令敲就行，重要的地方会阐明以下！！！</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">* **后面的内容就是看帮助文档，一定要按照帮助文档划分的步骤来，就比如说主页配置，等这一项弄完了然后在弄下一项，后面章节我会挑重要的部分说一下**</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">* 鉴于每个人的根目录名称都不一样，本帖**博客根目录**一律以 `[Blog]` 指代。</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">* 请读者优先掌握 [Butterfly 主题官方文档](https://butterfly.js.org/) 的内容后再来进行魔改。以避免不必要的兼容性问题。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 主页基本信息修改</span><br><span class="line"></span><br><span class="line">1. 先将主页的基本信息进行完善，就是 包含 title 的部分，前面已经详细说过，这里就不详细讲述了</span><br><span class="line"></span><br><span class="line">   ![image-20220803074857161](http://picgo.kongshier.top/1024/image-20220803074857161.png)</span><br><span class="line"></span><br><span class="line">​</span><br><span class="line"></span><br><span class="line">### 博客关键页面生成</span><br><span class="line"></span><br><span class="line">博客有一些关键页面需要手动生成。</span><br><span class="line"></span><br><span class="line">##### 标签页</span><br><span class="line"></span><br><span class="line">进入 Hexo 博客的根目录，执行：</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">hexo new page tags</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">打开 `source/tags/index.md` 文件，修改如下：</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2022-08-03 12:53:45</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">##### 分类页</span><br><span class="line"></span><br><span class="line">进入 Hexo 博客的根目录，执行：</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">hexo new page categories</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">打开 `source/categories/index.md 文件`，修改如下：</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2022-03-11 12:56:06</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">##### 友情链接</span><br><span class="line"></span><br><span class="line">##### 创建友情链接页面</span><br><span class="line"></span><br><span class="line">进入 Hexo 博客的根目录，执行：</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">hexo new page link</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">打开 `source/link/index.md` 文件，修改如下：</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">---</span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2022-03-11 12:57:48</span><br><span class="line">type: &quot;link&quot;</span><br><span class="line">---</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">##### 友情链接添加</span><br><span class="line"></span><br><span class="line">在Hexo博客目录中的 `source/friends/创建一个文件 `lndex.md`</span><br><span class="line"></span><br><span class="line">![image-20220804182129527](http://picgo.kongshier.top/1024/image-20220804182129527.png)</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">---</span><br><span class="line">title: friends</span><br><span class="line">date: 2022-08-03 08:18:23</span><br><span class="line">type: &quot;friends&quot;</span><br><span class="line">layout: &quot;friends&quot;</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"># 友链交换</span><br><span class="line">想要交换友链的小伙伴，欢迎在留言板留言，留言格式：</span><br><span class="line">* **名称：**你的博客名称</span><br><span class="line">* **地址：**你的博客地址</span><br><span class="line">* **简介：**一句话简介</span><br><span class="line">* **头像：**你的头像地址</span><br><span class="line"></span><br><span class="line">例如我的博客友链，大家可以加到自己博客里哦：</span><br><span class="line">* **名称：**十二</span><br><span class="line">* **地址：**https://kongshier.github.io/</span><br><span class="line">* **简介：**无处不在</span><br><span class="line">* **头像：**头像地址</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">* 预览效果如下，就表示成功了，然后直接跳到帮助文档的404页面</span><br><span class="line"></span><br><span class="line">  &lt;img src=&quot;http://picgo.kongshier.top/1024/image-20220803090849053.png&quot; alt=&quot;image-20220803090849053&quot; style=&quot;zoom:50%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### 关于我</span><br><span class="line"></span><br><span class="line">进入 Hexo 博客的根目录，执行：</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">hexo new page about</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">打开 `source/about-me/index.md` 文件，修改如下：</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">---</span><br><span class="line">title: 关于作者</span><br><span class="line">date: 2022-03-11 13:01:21</span><br><span class="line">type: &quot;about&quot;</span><br><span class="line">---</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">* 说明：</span><br><span class="line"></span><br><span class="line">​重点：**所有的文件都在source，这个文件夹下**，按照官方文档提示，修改文件即可！</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;http://picgo.kongshier.top/1024/image-20220803075725093.png&quot; alt=&quot;image-20220803075725093&quot; style=&quot;zoom:50%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;http://picgo.kongshier.top/1024/image-20220803080209008.png&quot; alt=&quot;image-20220803080209008&quot; style=&quot;zoom:50%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">* 修改完成后，通过路由本地预览一下好了没，要养成习惯，完成一步，预览一步！！！！</span><br><span class="line"></span><br><span class="line">​路由格式：http://localhost:4000/ tags                             </span><br><span class="line"></span><br><span class="line">​tags 其实就是对应的你要实现功能的名称，需要预览什么 功能，就修改成对应的功能名称</span><br><span class="line"></span><br><span class="line">* 预览效果如下，就表示成功了，然后直接跳到帮助文档的404页面</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 404 页面添加</span><br><span class="line"></span><br><span class="line">* 找到：node_modules------------&gt;hexo-theme-butterfly------------&gt;_config.yml</span><br><span class="line"></span><br><span class="line">* 将文件里面的内容全部复制，执行图下面的操作，然后将所有代码粘贴到新建的文件里，这个文件就是我们主题配置的文件![](http://picgo.kongshier.top/1024/image-20220803094322872.png)</span><br><span class="line"></span><br><span class="line">* 找到error 404 ，将帮助内容置换即可</span><br><span class="line"></span><br><span class="line">  &lt;img src=&quot;http://picgo.kongshier.top/1024/image-20220803094913962.png&quot; style=&quot;zoom:67%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 主页背景更改</span><br><span class="line"></span><br><span class="line">方式一：</span><br><span class="line"></span><br><span class="line">更改其图标、主页背景等部分内容，在主题的配置文件下</span><br><span class="line"></span><br><span class="line">* 更改背景的话建议使用占位图（就是将本地图片上传到图床）</span><br><span class="line"></span><br><span class="line">  ![image-20220804164957434](http://picgo.kongshier.top/1024/image-20220804164957434.png)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">* 更改主页 主题背景的时候，如果要使用本地图片记得创建文件夹 img ，将图片放进此文文件，复制其路径，粘贴到对应位置，然后在注意一下本地图片的格式即可， .表示当前路径</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;http://picgo.kongshier.top/1024/image-20220804144408584.png&quot; alt=&quot;image-20220804144408584&quot; style=&quot;zoom:67%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* 留意: 如果你的网站根目录不是`/`,使用本地图片时，需加上你的根目录。</span><br><span class="line">  例如：网站是`https://yoursite.com/blog`,引用一张`img/xx.png`图片，则设置`background`为 `url(/blog/img/xx.png)`</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  方式二（通过数据文件的方式）：</span><br><span class="line">  </span><br><span class="line">  ​在 source/_data/style.styl 文件中添加：（如果没有这个路径的话添加即可）</span><br><span class="line">  </span><br><span class="line">  ```</span><br><span class="line">  // 背景</span><br><span class="line">  body &#123;</span><br><span class="line">    background-image:url(../images/bg.webp);</span><br><span class="line">    height:100%;</span><br><span class="line">    width:100%;</span><br><span class="line">    background-repeat:repeat-x;</span><br><span class="line">    background-attachment:fixed;</span><br><span class="line">    background-size:cover;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  //设置透明度</span><br><span class="line">  //侧边框的透明度设置</span><br><span class="line">  .sidebar-inner &#123;</span><br><span class="line">    background: rgba(255,255,255,0.8);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  //菜单栏的透明度设置</span><br><span class="line">  .header-inner &#123;</span><br><span class="line">    background: rgba(255,255,255,0.8);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  //搜索框（local-search）的透明度设置</span><br><span class="line">  .popup &#123;</span><br><span class="line">    opacity: 0.8;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  ```</span><br><span class="line">  </span><br><span class="line">  background-image 就是你的背景图啦。</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">### 主题配置（一）</span><br><span class="line"></span><br><span class="line">前面章节带大家看了一下文档，当然官方文档还有很多，这里就不罗列了，希望大家掌握方法，仔细阅读文档，重要的我会在这强调</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">这里只强调几点：</span><br><span class="line"></span><br><span class="line">* 官方文档，可能格式没有设置，需要自己调整一下缩进</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">* 每新增一个功能最好本地预览下，成功了在执行后面的</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">* 为了以后大家配置方便，最好配置一下package.json</span><br><span class="line"></span><br><span class="line">  ```</span><br><span class="line">  &quot;server&quot;: &quot;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server&quot;</span><br><span class="line">  修改第九行，这行代码可以省去每次都要清理，然后生成静态页面，这个步骤，</span><br><span class="line">  然后每次运行的时候也可以不用去输入命令行，可以找到这行代码然后点击 server 运行即可</span><br><span class="line">  ```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* 都开始主题配置了，大多数修改的文件都是_ config.butterfly.yml 这个文件</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">#### 导航栏的说明：</span><br><span class="line"></span><br><span class="line">* 注意：</span><br><span class="line"></span><br><span class="line">  * 圆圈是你要在 source 文件夹下建立的文件夹，名称相同，然后在新建的文件夹下，新建index.md 文件</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">  * 方框的内容是自己随意更改的</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">  * 注意一下文档的缩进</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;http://picgo.kongshier.top/1024/image-20220804151047939.png&quot; alt=&quot;image-20220804151047939&quot; style=&quot;zoom:67%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">* 详解：</span><br><span class="line"></span><br><span class="line">  * 分类                             是指标签栏的名称</span><br><span class="line">  * /  内容  /                       是指路径，source文件夹下-----&gt;categories文件夹下-----&gt;i ndex.md 文件【自动去匹配】</span><br><span class="line">  * fas fa-home                是图标</span><br><span class="line"></span><br><span class="line">  ​![](http://picgo.kongshier.top/1024/image-20220804151824283.png)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">* 导航栏的修改（注意二级的格式）</span><br><span class="line"></span><br><span class="line">  ```</span><br><span class="line">  menu:</span><br><span class="line">    主页: / || fas fa-home</span><br><span class="line">    时间线: /archives/ || fas fa-archive</span><br><span class="line">    标签: /tags/ || fas fa-tags</span><br><span class="line">    分类: /categories/ || fas fa-folder-open</span><br><span class="line">    链接||fas fa-list:</span><br><span class="line">      友链: /link/ || fas fa-link</span><br><span class="line">      关于: /about/ || fas fa-heart</span><br><span class="line">  ```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 顶部图</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 字数统计</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">BASH</span><br><span class="line">cnpm install hexo-wordcount --save</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">修改主题配置文件：</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">YMLwordcount:</span><br><span class="line">  enable: true</span><br><span class="line">  post_wordcount: true</span><br><span class="line">  min2read: true</span><br><span class="line">  total_wordcount: true</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">如需调整右侧卡片网站信息内项目的数据，在文件`/butterfly/layout/includes/widgets/card_webinfo.pug`中操作。</span><br><span class="line"></span><br><span class="line">#### 目录折叠</span><br><span class="line"></span><br><span class="line">由于我个人的目录比较大，完全展开三级目录的话，右边栏就完全被目录铺满了。`butterfly`主题提供了目录可折叠的选项，只需要在主题配置文件`/butterfly/config.yml`设置：</span><br><span class="line"></span><br><span class="line">```yml</span><br><span class="line">card_categories: </span><br><span class="line">  enable: true</span><br><span class="line">  limit: 0 # if set 0 will show all</span><br><span class="line">  expand: true # none/true/false</span><br><span class="line">  sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 主题配置（二）</span><br><span class="line"></span><br><span class="line">重点看下我提的内容，其余想加的可以自己看下文档，然后添加上即可</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* 评论系统 （我目前使用来必力，但是我觉得没必要，为了给你们演示下，后期应该会关掉，毕竟也没多少人看我的文章）</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">* 搜索系统</span><br><span class="line"></span><br><span class="line">  * 直接点 本地搜素 ------&gt; hexo-algoliasearch  然后看帮助文档，按照文档步骤一步一步操作即可</span><br><span class="line"></span><br><span class="line">    * 打开终端 使用命令：`npm install hexo-algoliasearch --save`，安装需要的插件</span><br><span class="line"></span><br><span class="line">    * 项目的根目录 _config.yml 配置文件下，将如下我修改过的代码复制到文件末尾（官方给的那个有 坑 ）。</span><br><span class="line"></span><br><span class="line">      ```</span><br><span class="line">      search:</span><br><span class="line">        path: search.xml</span><br><span class="line">        field: post</span><br><span class="line">        format: html</span><br><span class="line">        limit: 10000</span><br><span class="line">      ```</span><br><span class="line"></span><br><span class="line">    * 看下 _config.butterfly.yml 文件的 local_search 有没有打开，打开了就预览一下效果,有搜索框了就欧克了！！</span><br><span class="line"></span><br><span class="line">​&lt;img src=&quot;http://picgo.kongshier.top/1024/image-20220803160405455.png&quot; alt=&quot;image-20220803160405455&quot; style=&quot;zoom:67%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">​</span><br><span class="line"></span><br><span class="line">* 页面美化</span><br><span class="line"></span><br><span class="line">  * 根据官方文档和我修改的beautifly，在结合你的喜好，修改一下就好了</span><br><span class="line"></span><br><span class="line">    ```</span><br><span class="line">    beautify:</span><br><span class="line">      enable: true</span><br><span class="line">      field: post # site/post</span><br><span class="line">      title-prefix-icon: # &#x27;\f0c1&#x27;</span><br><span class="line">      title-prefix-icon-color: # &#x27;#F47466&#x27;</span><br><span class="line">    ```</span><br><span class="line"></span><br><span class="line">* 网站的副标题，根据自己的喜好调试即可，附上我的样式</span><br><span class="line"></span><br><span class="line">  &lt;img src=&quot;http://picgo.kongshier.top/1024/image-20220803164034567.png&quot; alt=&quot;image-20220803164034567&quot; style=&quot;zoom:67%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">*  设置主页面高度，根据自己的喜好设置即可</span><br><span class="line"></span><br><span class="line">  &lt;img src=&quot;http://picgo.kongshier.top/1024/image-20220803165153927.png&quot; alt=&quot;image-20220803165153927&quot; style=&quot;zoom:67%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* 字数统计</span><br><span class="line"></span><br><span class="line">  ​根据文档自己设置一下</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">* prefetch (預加載)、pangu、pjax，将这些服务开启。（false改为true即可）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 进阶文档</span><br><span class="line"></span><br><span class="line">PS:</span><br><span class="line"></span><br><span class="line">* 这部分根据自己喜好，看官方文档配置即可</span><br><span class="line">* 魔改官方主题的尽头其实就是默认就好哈哈</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* gulp压缩 【 **这一部分 官方文档移除了  不用作用也不大** 】</span><br><span class="line"></span><br><span class="line">  随着网站的发展，你的文件会越来越多，安装这个插件，可以压缩代码，从而实现代码部分的优化,根据我的步骤一步一步操作即可</span><br><span class="line"></span><br><span class="line">  配置了淘宝的镜像源所以使用 cnpm </span><br><span class="line">  </span><br><span class="line">  ~~~bash</span><br><span class="line">  npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">安装gulp的cli：</span><br><span class="line">cnpm install --global gulp-cli</span><br><span class="line"></span><br><span class="line">安装gulp本身工具：</span><br><span class="line">cnpm install gulp -g</span><br><span class="line"></span><br><span class="line">cnpm install gulp-htmlclean --save-dev</span><br><span class="line"></span><br><span class="line">cnpm install --save gulp-html-minifier-terser</span><br><span class="line"></span><br><span class="line">cnpm install gulp-clean-css --save-dev</span><br><span class="line"></span><br><span class="line">cnpm install --save-dev gulp-uglify</span><br><span class="line"></span><br><span class="line">cnpm install --save-dev gulp-babel @babel/core @babel/preset-env</span><br><span class="line"></span><br><span class="line">cnpm install --save-dev gulp-imagemin</span><br></pre></td></tr></table></figure><p>在根目录下，创建文件 gulpfile.js 文件（ 后面等我学习下在更，没有这块内容也没影响）</p></li></ul><h3 id="添加来必力评论系统"><a href="#添加来必力评论系统" class="headerlink" title="添加来必力评论系统"></a>添加来必力评论系统</h3><p>​我选择这个系统，是因为这个系统能过滤一些不友好的评论，当然也可以选择其它的，自己根据帮助文档配置下</p><p>​喜欢折腾，美观的就不建议这个评论系统了，建议 Twikoo</p><ul><li><p>在主题配置文件找到 comments</p><img src="http://picgo.kongshier.top/1024/image-20220803173343335.png" alt="image-20220803173343335" style="zoom:67%;" /></li><li><p>注册来必力，然后登录，然后右上角管理页面，输入必要的信息，最后出现以下的界面，将对应的uid 输入配置文件即可</p><img src="http://picgo.kongshier.top/1024/image-20220803174708485.png" alt="image-20220803174708485" style="zoom:67%;" /></li></ul><p>​</p><p>​<img src="http://picgo.kongshier.top/1024/image-20220803174840722.png" alt="image-20220803174840722" style="zoom:67%;" /></p><p>​粘贴的时候注意格式，只粘贴引号里面的内容，还有冒号后面有一个空格</p><ul><li><p>在来必力系统进行一些必要的设置，比如：评论邮件提醒，选择登录方式等等</p></li><li><p>最后本地运行，随便找一篇文章，看效果即可</p><img src="http://picgo.kongshier.top/1024/image-20220803175530564.png" alt="image-20220803175530564" style="zoom:67%;" /></li></ul><h3 id="插入代码自定义样式"><a href="#插入代码自定义样式" class="headerlink" title="插入代码自定义样式"></a>插入代码自定义样式</h3><ul><li><p>自定义代码的拆入方法</p><ul><li><p>先找到 主题配置文件的  inject </p><p>一般样式文件会放到 head 里面 ，js文件放在 bottom 里面</p></li><li><p>新建文件夹，按照箭头位置创建即可，名称随意</p><img src="http://picgo.kongshier.top/1024/image-20220803180720134.png" alt="image-20220803180720134" style="zoom:67%;" /></li><li><p>将新建的文件夹，引入到 inject 里面即可，然后运行项目即可</p><img src="http://picgo.kongshier.top/1024/image-20220803181203355.png" alt="image-20220803181203355" style="zoom:67%;" /></li></ul></li><li><p>底部的样式修改（掌握方法后，直接去网上找一些别人改好的样式，复制粘贴即可）</p><p>方法：直接F12然后找到你要修改的标签id，然后返回刚才那个建好的css文件，在里面添加css代码，修改对应的样式即可</p><p>比如修改底部样式为透明</p><img src="http://picgo.kongshier.top/1024/image-20220803181853683.png" alt="image-20220803181853683" style="zoom:67%;" /></li></ul><p><img src="http://picgo.kongshier.top/1024/image-20220803182602841.png" alt="image-20220803182602841"></p><ul><li><p>底部添加多个内容信息，并且点击跳转的说明：（有需要的自行了解一下）</p><img src="http://picgo.kongshier.top/1024/image-20220803184455538.png" alt="image-20220803184455538" style="zoom:67%;" /></li></ul><p>​效果：</p><p>​<img src="http://picgo.kongshier.top/1024/image-20220803184107209.png" alt="image-20220803184107209" style="zoom:67%;" /></p><h2 id="博客添加文章"><a href="#博客添加文章" class="headerlink" title="博客添加文章"></a>博客添加文章</h2><ul><li><p>首先在博客根目录下右键打开git bash，安装一个扩展<code>npm i hexo-deployer-git</code>。</p></li><li><p>然后输入 hexo new post “article title” ，新建一篇文章。</p></li><li><p>然后打开<code>D:blog\source\_posts</code>的目录，可以发现下面多了一个文件夹和一个<code>.md</code>文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。</p></li><li><p>编写完markdown文件后，根目录下输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>可以本地预览效果，最后输入<code>hexo d</code>上传到github上。这时打开你的github.io主页就能看到发布的文章啦。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>​</p></li></ul><p></p><h2 id="问题汇总"><a href="#问题汇总" class="headerlink" title="问题汇总"></a>问题汇总</h2><p>​这是我在操作过程中遇见的一些bug ，在这里汇总一下</p><ol><li><p>安装Hexo时遇见的报错</p><p><img src="http://picgo.kongshier.top/1024/image-20220801193727750.png" alt="image-20220801193727750"></p></li></ol><p>​解决办法：</p><p>​重新配置了下npm安装的全局模块所在的路径，以及缓存cache的路径，又检查了一下环境变量是否正确</p><p>设置全局模块命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;D:\node\node_global&quot;</span><br></pre></td></tr></table></figure><p>设置cache模块命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set cache &quot;D:\node\node_cache&quot;</span><br></pre></td></tr></table></figure><ol start="2"><li>上传到GitHub碰到 “ Deployer not found ”  问题</li></ol><p>​解决办法：重新 deploy 即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后  hexo d  就能提交成功</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>按照步骤本教程一个基本的网页就搭建出来了，后面就是对网页的美化和优化，如果想简洁一点的话直接看 hexo框架-文章篇 即可</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL基础</title>
      <link href="/post/bce68613.html"/>
      <url>/post/bce68613.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-数据库概述"><a href="#1-数据库概述" class="headerlink" title="1.数据库概述"></a>1.数据库概述</h1><p><strong>MySQL图解应用</strong> ：</p><img src="http://picgo.kongshier.top/2767/image-20220207184620623.png" alt="image-20220207184620623" style="zoom:80%;" /><h2 id="1-1-数据库相关概念"><a href="#1-1-数据库相关概念" class="headerlink" title="1.1 数据库相关概念"></a>1.1 数据库相关概念</h2><p><strong>数据库：DataBase (DB)</strong> </p><ul><li>按照一定格式存储数据的一些文件的组合</li><li>存储数据的仓库，数据文件，日志文件。具有一定特定格式的数据。</li></ul><p><strong>数据库管理系统：DataBase Management （DBMS）</strong></p><ul><li>专门用来管理数据库中的数据的，数据库管理系统可以对数据当中的数据进行增删改查</li></ul><p><strong>SQL ：结构化查询语言</strong></p><ul><li>使用DBMS负责执行SQL语句，来完成数据库中的增删改查。</li><li>SQL是一套标准语言，主要学习SQL语句。SQL语句可以在MySQL、Oracle、DB2中使用。</li></ul><p>三者之间的关系：</p><blockquote><p>DBMS —-执行—–&gt;      SQL    ——-操作—-&gt; DB</p></blockquote><h2 id="1-2登录MySQL："><a href="#1-2登录MySQL：" class="headerlink" title="1.2登录MySQL："></a>1.2登录MySQL：</h2><p>mysql修改登录用户名和秘密</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"># 修改密码</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1.进入cmd</span></span><br><span class="line"><span class="comment">-- 2. 输入</span></span><br><span class="line">mysql <span class="operator">-</span>u root <span class="operator">-</span>p;</span><br><span class="line"><span class="comment">-- 3.输入旧密码</span></span><br><span class="line">Enter password: <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"><span class="comment">-- 4.选择数据库 </span></span><br><span class="line">mysql<span class="operator">&gt;</span> use 库名;</span><br><span class="line"><span class="comment">-- 输入修改语句信息</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">UPDATE</span> <span class="keyword">user</span> <span class="keyword">SET</span> password <span class="operator">=</span>PASSWORD(&quot;新密码&quot;) <span class="keyword">WHERE</span> <span class="keyword">user</span> <span class="operator">=</span> <span class="string">&#x27;用户名&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 刷新</span></span><br><span class="line">mysql<span class="operator">&gt;</span> flush privileges;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#修改用户名：</span><br><span class="line"><span class="comment">-- 1.进入cmd</span></span><br><span class="line"><span class="comment">-- 2. 输入</span></span><br><span class="line">mysql <span class="operator">-</span>u root <span class="operator">-</span>p;</span><br><span class="line"><span class="comment">-- 3.输入旧密码</span></span><br><span class="line">Enter password: <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"><span class="comment">-- 4.选择数据库 </span></span><br><span class="line">mysql<span class="operator">&gt;</span> use 库名;</span><br><span class="line"><span class="comment">-- 输入修改语句信息</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">UPDATE</span> <span class="keyword">user</span> <span class="keyword">SET</span> u <span class="operator">=</span><span class="keyword">user</span>(&quot;新用户名&quot;) <span class="keyword">WHERE</span> <span class="keyword">user</span> <span class="operator">=</span> <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> flush privileges; </span><br><span class="line">mysql<span class="operator">&gt;</span> exit</span><br></pre></td></tr></table></figure><p>1.<strong>在DOS窗口下：（隐藏密码形式）</strong></p><ul><li><p>打开mysql：net start mysql</p></li><li><p>关闭mysql：net stop mysql</p></li><li><p>进入mysql指令：mysql -u root -p</p></li><li><p>关闭mysql指令：exit（退出）</p></li></ul><p>2.<strong>一步到位登录MySQL指令：（显示密码形式）</strong></p><ul><li>mysql -uroot -p123456        &#x2F;&#x2F; -p 后面的是MySQL 的密码</li></ul><h2 id="1-3MySQL常用命令"><a href="#1-3MySQL常用命令" class="headerlink" title="1.3MySQL常用命令"></a><strong>1.3MySQL常用命令</strong></h2><ol><li><p>查看数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show Database;</span><br></pre></td></tr></table></figure></li><li><p>使用数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use test;</span><br></pre></td></tr></table></figure><p>use  数据库名 ；</p></li><li><p>创建数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database test1</span><br></pre></td></tr></table></figure><p>create database 数据库名</p></li><li><p>查看表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure></li><li><p>sql中导入数据 （执行sql脚本）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source   全路径（指定sql脚本的路径）</span><br></pre></td></tr></table></figure><p>路径不能出现中文！！！</p></li><li><p>查看MySQL版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select version();</span><br></pre></td></tr></table></figure></li><li><p>查看当前使用的数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select database();</span><br></pre></td></tr></table></figure></li></ol><h2 id="1-4表："><a href="#1-4表：" class="headerlink" title="1.4表："></a>1.4表：</h2><p><strong>数据库中的最基本单元</strong> ：表</p><p><strong>表结构：</strong></p><ul><li><p>行（row）：数据 &#x2F; 记录</p></li><li><p>列（column）：字段  （每一个字段都有：字段名，数据类型，约束等属性）</p></li><li><p>字段名：</p></li><li><p>数据类型：字符型、日期型、时间型、整型等</p></li><li><p>约束：</p></li></ul><h2 id="1-5SQL语句分类："><a href="#1-5SQL语句分类：" class="headerlink" title="1.5SQL语句分类："></a>1.5SQL语句分类：</h2><ol><li><p>DDL ： <strong>数据定义语言</strong>  (Data Definition Language) </p><ul><li>对<strong>表结构</strong>进行操作</li><li>create：创建</li><li>alter：修改</li><li>drop：删除</li></ul></li><li><p>DML ： <strong>数据操作语言</strong>  (Data Manipulation Language)</p><ul><li>对<strong>表当中的数据</strong>进行<strong>增删改查</strong> ，操作表中的数据data</li><li>inster ：插入</li><li>delete ：删除</li><li>update ：修改</li></ul></li><li><p>DQL ：  <strong>数据查询语言</strong>  (Data Query Language)</p><ul><li>select 语句</li></ul></li><li><p>DCL ： <strong>数据控制语言</strong>  (Data Control Language)</p><ul><li>授权：GRANT</li><li>撤销权限：REVOKE</li></ul></li><li><p>TCL  ：事务控制语言</p><ul><li>事务提交：commit</li><li>事务回滚：rollback</li></ul></li></ol><h1 id="2-CRUD操作"><a href="#2-CRUD操作" class="headerlink" title="2.CRUD操作"></a>2.CRUD操作</h1><h2 id="2-1-DQL"><a href="#2-1-DQL" class="headerlink" title="2.1 DQL"></a>2.1 DQL</h2><ul><li>SQL语句是通用的，以英文分号 “ ; “ 结束</li><li>MySQL数据库的SQL语句不区分大小写，关键字建议使用大写。</li><li>注释<ol><li>单行注释：– 注释内容或 # 注释内容(MySQL特有)</li><li>多行注释：&#x2F;* 注释 *&#x2F;</li></ol></li></ul><h3 id="1-基础查询"><a href="#1-基础查询" class="headerlink" title="1.基础查询"></a>1.基础查询</h3><ol><li><h4 id="基础查询（简单查询）"><a href="#基础查询（简单查询）" class="headerlink" title="基础查询（简单查询）"></a>基础查询（简单查询）</h4><ul><li><p>查询所有列 (字段)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM 表名;    -- 查询所有字段  （效率低、可读性差、开发中不建议）</span><br></pre></td></tr></table></figure></li><li><p>查询单个&#x2F;多个字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT  </span><br><span class="line">字段1，字段2,···,字段n </span><br><span class="line">FROM </span><br><span class="line">表名;    -- 查询单个/多个字段</span><br></pre></td></tr></table></figure></li><li><p>去重查询 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT  去重的字段1 FROM 表名;  </span><br><span class="line">SELECT DISTINCT  name FROM student;  -- 去重复的姓名  </span><br></pre></td></tr></table></figure></li><li><p>为字段起别名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT  字段1 AS 别名名称 FROM 表名;  -- 方式一</span><br><span class="line">SELECT 新字段名 = 字段1  FROM 表名;  -- 方式二</span><br><span class="line">-- 列如：</span><br><span class="line">SELECT name AS 姓名 FROM student; -- 方式一</span><br><span class="line">SELECT name 姓名 FROM student; -- 方式二</span><br><span class="line">SELECT 姓名 = name  FROM studnet;  -- 方式三</span><br></pre></td></tr></table></figure><p><strong>别名只是在显示中，并不会修改到表中的字段名</strong></p><p>别名中间存在有空格，会出现报错，不符合语法，编译错误。</p><p>若是字段中间必须要有空格必须使用单引号或者双引号括起来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT name  AS  &#x27;姓 名&#x27; FROM student;  -- 标准字符串，单引号括起来</span><br><span class="line">SELECT name  AS  &quot;姓 名&quot; FROM student;  -- 不推荐，不标准</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;注意：&#x3D;&#x3D;</p><ol><li>单引号是标准的字符串形式</li><li>双引号在mysql中可以使用，在oracle中不可以使用</li></ol></li><li><p>字段可以使用<strong>数学表达式</strong></p><ul><li>给字段进行加减乘除</li></ul></li></ul></li><li><h4 id="条件查询："><a href="#条件查询：" class="headerlink" title="条件查询："></a>条件查询：</h4><p><strong>查询出符合条件的内容</strong></p><ul><li><p>条件查询语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">字段1,字段2,···,字段n,</span><br><span class="line">FROM </span><br><span class="line">表名</span><br><span class="line">WHERE </span><br><span class="line">条件;</span><br></pre></td></tr></table></figure></li><li><p>条件符号：</p><table><thead><tr><th align="center">符号</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">&#x3D;</td><td align="center">等于</td></tr><tr><td align="center">&lt;&gt;或!&#x3D;</td><td align="center">不等于</td></tr><tr><td align="center">&lt;</td><td align="center">小于</td></tr><tr><td align="center">&lt;&#x3D;</td><td align="center">小于等于</td></tr><tr><td align="center">&gt;</td><td align="center">大于</td></tr><tr><td align="center">&gt;&#x3D;</td><td align="center">大于等于</td></tr><tr><td align="center">between ···· and</td><td align="center">两个值之间，当同于&gt;&#x3D; and &lt;&#x3D;   遵循左小右大</td></tr><tr><td align="center">is null</td><td align="center">为空（is not null 不能为空）</td></tr><tr><td align="center">and</td><td align="center">并且</td></tr><tr><td align="center">or</td><td align="center">或者</td></tr><tr><td align="center">in</td><td align="center">包含，相当于多个 or （not  in ：不包括在内）</td></tr><tr><td align="center">like</td><td align="center">模糊查询，支持%或下划线匹配</td></tr><tr><td align="center">%</td><td align="center">通配符：匹配任意个字符</td></tr><tr><td align="center">_</td><td align="center">下划线：匹配一个字符</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">SELECT name ,age FROM student WHERE age = 55 ; -- 等于</span><br><span class="line"></span><br><span class="line">SELECT name ,age FROM student WHERE age != 55;  -- 不等于</span><br><span class="line">SELECT name ,age FROM student WHERE age &lt;&gt; 55;</span><br><span class="line"></span><br><span class="line">SELECT name ,age FROM student WHERE age &lt; 55;-- 小于</span><br><span class="line">SELECT name ,age FROM student WHERE age &lt;= 55;-- 小于等于</span><br><span class="line"></span><br><span class="line">SELECT name ,age FROM student WHERE age &gt; 55 ;-- 大于</span><br><span class="line">SELECT name ,age FROM student WHERE age &gt;= 55;-- 大于等于</span><br><span class="line"></span><br><span class="line">SELECT name ,age FROM student WHERE age BETWEEN 23 AND 30;  -- 年龄在23到30之间</span><br><span class="line">SELECT name ,age FROM student WHERE age &gt;= 23 AND &lt;= 30 ;</span><br><span class="line"></span><br><span class="line">SELECT name ,age FROM student WHERE age IS NULL;  -- is null  is不能改为等号</span><br><span class="line">SELECT name ,age FROM student WHERE age IS NOT NULL;  -- is not null  is不能改为等号</span><br><span class="line"></span><br><span class="line">SELECT name ,age FROM student WHERE name = &#x27;张三&#x27; AND age &gt; 45;   -- end</span><br><span class="line"></span><br><span class="line">SELECT name ,age FROM student WHERE name = &#x27;张三&#x27; OR  name = &#x27;小三&#x27;;   -- OR 有一个就可以查找到</span><br><span class="line"></span><br><span class="line">SELECT name ,age FROM student WHERE age &gt; 15 AND name = &#x27;张三&#x27; OR  name = &#x27;小三&#x27;; -- and 和 or 同时出现这一句中：先执行 and 在执行 or </span><br><span class="line">SELECT name ,age FROM student WHERE age &gt; 15 AND (name = &#x27;张三&#x27; OR  name = &#x27;小三&#x27;);  -- 正确的写法  让 or 先执行</span><br><span class="line"></span><br><span class="line">SELECT name ,age FROM student WHERE age IN(15,35,45,25);  -- 年龄在15、25、35、45中的</span><br><span class="line">SELECT name ,age FROM student WHERE age NOT IN(15,35,45,25); -- 年龄不在15、25、35、45中的name 和 age</span><br></pre></td></tr></table></figure></li><li><p>模糊查询：LIKE</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT name ,age FROM student WHERE LIKE &#x27;%小%&#x27; ;-- 含有‘小’的名字</span><br><span class="line">SELECT name ,age FROM student WHERE LIKE &#x27;张%&#x27; ;-- 姓张的</span><br><span class="line">SELECT name ,age FROM student WHERE LIKE &#x27;%森&#x27; ;-- 以森结尾的</span><br><span class="line">SELECT name ,age FROM student WHERE LIKE &#x27;%_垂%&#x27;; -- 第二个字为垂的</span><br><span class="line">SELECT name ,age FROM student WHERE LIKE &#x27;%__森%&#x27;; -- 第二个字为森的</span><br><span class="line"></span><br><span class="line">SELECT name ,age FROM student WHERE LIKE &#x27;%_%&#x27; ;-- 找出名字中含有下划线的。 因为下划线具有特殊含义，需要把下划线进行转义</span><br><span class="line">SELECT name ,age FROM student WHERE LIKE &#x27;%\_%&#x27;; -- 正确 √ </span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="排序查询："><a href="#排序查询：" class="headerlink" title="排序查询："></a>排序查询：</h4><p><strong>排序总是在最后执行！！！</strong></p><ul><li><p>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT  </span><br><span class="line">字段1,字段2,···,字段n,</span><br><span class="line">FROM</span><br><span class="line">表名</span><br><span class="line">ORDER BY  </span><br><span class="line">排序字段名1 [排序方式1], 排序字段名2 [排序方式2]  ...;</span><br></pre></td></tr></table></figure></li><li><p>排序方式</p><ul><li><p>ASC ：   升序 （默认值），不写就是默认升序</p></li><li><p>DEAC ：降序</p></li></ul></li><li><p>多个字段排序 ：如果有多个排序条件，当前边的条件值一样时，才会根据第二条件进行排序</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">SELECT name ,age FROM student ORDER BY age ; -- 按照年龄 默认升序</span><br><span class="line">SELECT name ,age FROM student ORDER BY age DESC;  -- 降序</span><br><span class="line">SELECT name ,age FROM student ORDER BY age ASC ; -- 指定升序</span><br><span class="line"></span><br><span class="line"> -- 多个字段排序 ：如果有多个排序条件，当前边的条件值一样时，才会根据第二条件进行排序</span><br><span class="line">SELECT name ,age,score FROM studentORDER BY age DESC,name DESC ;  -- 若是年龄相同，才能进行name排序</span><br><span class="line"></span><br><span class="line">-- 根据字段的位置进行排序</span><br><span class="line">SELECT name ,age FROM student ORDER BY 2; -- 根据第二列排序</span><br></pre></td></tr></table></figure><p>综合案例：查询年龄在20到50之间，并且更具年龄进行降序排序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">name,age</span><br><span class="line">FROM </span><br><span class="line">student</span><br><span class="line">WHERE</span><br><span class="line">age &gt;= 20 AND age &lt;= 50</span><br><span class="line">ORDER BY</span><br><span class="line">age DESC ;</span><br></pre></td></tr></table></figure></li><li><h4 id="分组查询："><a href="#分组查询：" class="headerlink" title="分组查询："></a>分组查询：</h4><ol><li><p>分组函数</p><p><strong>分组函数在使用前必须进行分组，若是没有分组，则一个表就是一个组</strong></p><ul><li><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">分组函数名（列名）</span><br><span class="line">FROM </span><br><span class="line">表；</span><br></pre></td></tr></table></figure><ul><li>count ：计数</li><li>sum ：求和</li><li>avg ：平均值</li><li>max ：最大值</li><li>min ：最小值</li></ul></li><li><p>&#x3D;&#x3D;注意：&#x3D;&#x3D;</p><ol><li>自动忽略NULL</li><li>count(*) 和count(具体字段)的区别<ul><li>count(*) ：统计总行数，不忽略null；</li><li>count(具体字段)：表示统计该字段下所有<strong>不为NULL的元素的总数</strong>。忽略null</li></ul></li><li>分组函数不能直接使用在where子句中。</li><li>所有的分组函数可以组合在一起用。</li></ol></li></ul></li><li><p>分组查询语法</p><ul><li>先进行分组，对每一组的数据进行操作。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SELECT  </span><br><span class="line">字段列表  </span><br><span class="line">FROM </span><br><span class="line">表名 </span><br><span class="line">[WHERE  </span><br><span class="line">分组前条件限定]</span><br><span class="line">GROUP BY </span><br><span class="line">分组字段名  </span><br><span class="line">[HAVING </span><br><span class="line">分组后条件过滤];</span><br></pre></td></tr></table></figure><ul><li><p>&#x3D;&#x3D;where不参与分组，having是在分组之后的，where不能对聚合函数进行判断，having可以&#x3D;&#x3D;。</p></li><li><p><strong>关键字执行顺序：from –&gt;  where –&gt; group by –&gt;  having–&gt;  select –&gt;order by</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT COUNT(name) FROM student ;  -- 可以执行，因为SELECT在分组后执行</span><br><span class="line">SELECT name ,age FROM student WHERE age &gt; MIN(age) -- 不能执行 因为进行WHERE时 还没有进行分组</span><br></pre></td></tr></table></figure></li></ul></li><li><p>案例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">-- 1.找出每个工作岗位的工资和？</span><br><span class="line">  -- 思路：按照工作岗位分组，然后对工资求和</span><br><span class="line">SELECT </span><br><span class="line">job,SUM(sal)</span><br><span class="line">FROM</span><br><span class="line">emp</span><br><span class="line">GROUP BY</span><br><span class="line">job;</span><br><span class="line"></span><br><span class="line">-- 2.找出 &#x27;每个部门，不同工作岗位&#x27;的最高薪资</span><br><span class="line">-- 两个字段进行分组</span><br><span class="line">SELECT</span><br><span class="line">deptID,job,MAX(sal)</span><br><span class="line">FROM</span><br><span class="line">emp</span><br><span class="line">GROUP BY</span><br><span class="line">deptID,job ;</span><br><span class="line"></span><br><span class="line">-- 3.找出部门的最高薪资，要求显示最高薪资大于3000的</span><br><span class="line">(方法一)</span><br><span class="line">SELECT</span><br><span class="line">deptID,MAX(sal)</span><br><span class="line">FROM</span><br><span class="line">emp</span><br><span class="line">GROUP BY</span><br><span class="line">deptID </span><br><span class="line">HAVING</span><br><span class="line">MAX(sal) &gt; 3000;</span><br><span class="line">(方法二)</span><br><span class="line">SELECT</span><br><span class="line">deptID,MAX(sal)</span><br><span class="line">FROM</span><br><span class="line">emp</span><br><span class="line">WHERE </span><br><span class="line">sal &gt; 3000</span><br><span class="line">GROUP BY</span><br><span class="line">deptID ;</span><br><span class="line">-- 优化策略：where 和 having 优先选择where，where实现不了，再选择having。</span><br><span class="line">-- having的执行效率低</span><br><span class="line"></span><br><span class="line">-- 4.找出每个部门平均薪资，要求显示平均薪资高于2500的  </span><br><span class="line">-- 这个就不能使用where</span><br><span class="line">（错误的写法，where子句中不能进行写分组函数）</span><br><span class="line">SELECT</span><br><span class="line">deptID,AVG(sal)</span><br><span class="line">FROM</span><br><span class="line">emp</span><br><span class="line">where </span><br><span class="line">avg(sal) &gt;2500</span><br><span class="line">GROUP BY</span><br><span class="line">deptID ;</span><br><span class="line">(正确写法)</span><br><span class="line">SELECT</span><br><span class="line">deptID,AVG(sal)</span><br><span class="line">FROM</span><br><span class="line">emp</span><br><span class="line">GROUP BY</span><br><span class="line">deptID </span><br><span class="line">HAVING </span><br><span class="line">AVG(sal) &gt; 2500;</span><br><span class="line"></span><br><span class="line">-- 5.找出每个岗位的平均薪资，要求显示平均薪资大于1500的，出去mag岗位之外。</span><br><span class="line">SELECT </span><br><span class="line">job,AVG(sal) avgsal</span><br><span class="line">FROM</span><br><span class="line">emp</span><br><span class="line">WHERE </span><br><span class="line">job!= &#x27;mag&#x27;</span><br><span class="line">GROUP BY</span><br><span class="line">job</span><br><span class="line">HAVING </span><br><span class="line">AVG(sal) &gt; 1500</span><br><span class="line">ORDER BY</span><br><span class="line">avgsal DESC; -- jiang&#x27;x</span><br></pre></td></tr></table></figure><ul><li>&#x3D;&#x3D;SELECT 语句中，含有GROUP BY 语句，SELECT后面只能跟：参与分组，以及分组函数的字段，其他字段不可以写上去&#x3D;&#x3D; 添加其他的字段在oracle中会报错</li><li>HAVING 子句不能单独使用，必须和GROUP BY 一起使用。 </li><li>HAVING：对分组之后的进行条件刷选。</li></ul></li></ol></li><li><h4 id="分页查询："><a href="#分页查询：" class="headerlink" title="分页查询："></a>分页查询：</h4><ul><li><p>语法：SELECT  字段名 FROM 表名  起始索引  查询数目的条数</p></li><li><p>–  起始索引公式：当前页的起始索引 &#x3D; （当前页码 - 1） *每页显示的条数</p><p>分页查询limit是MySQL数据库的方言</p><p>Oracle分页查询使用rownumber</p><p>SQL Server分页查询使用top</p></li></ul></li><li><p>去重查询</p><ul><li><p>关键字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct name from student;</span><br></pre></td></tr></table></figure></li><li><p>distinct 只能出现在所有查询字段的最前方</p></li><li><p>可以使用分组函数</p></li></ul></li></ol><h3 id="2-链接查询"><a href="#2-链接查询" class="headerlink" title="2 链接查询"></a>2 链接查询</h3><ul><li>多表查询</li></ul><h4 id="链接方式分类"><a href="#链接方式分类" class="headerlink" title="链接方式分类"></a>链接方式分类</h4><ol><li><p>内连接：</p><p>完全能匹配上这个条件的数据查询出来</p><p>多个表之间的关系的平等的关系</p><ol><li><p>等值链接 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-- 查询每个员工所在部门名称，显示员工名和部门名</span><br><span class="line">-- SQL92  :结构不够清晰，</span><br><span class="line">select </span><br><span class="line">s.sname,y.yname</span><br><span class="line">from</span><br><span class="line">student s , yanjiu y</span><br><span class="line">where </span><br><span class="line">s.sno = y.sno;</span><br><span class="line"></span><br><span class="line">-- SQL99  ：表链接的条件是独立的，连接之后还可以继续添加条件  inner可以省略</span><br><span class="line">select </span><br><span class="line">s.sname,y.yname</span><br><span class="line">from</span><br><span class="line">student s </span><br><span class="line">[inner] join </span><br><span class="line">yanjiu y</span><br><span class="line">on</span><br><span class="line">s.sno = y.sno;</span><br></pre></td></tr></table></figure></li><li><p>非等值链接</p><p>条件不是等量关系</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-- 工资介于salgrade中的最低和最高之间 用到两个表</span><br><span class="line">select </span><br><span class="line">e.ename,e.sal,s.grade</span><br><span class="line">from</span><br><span class="line">emp e</span><br><span class="line">join</span><br><span class="line">salgrade s</span><br><span class="line">on</span><br><span class="line">e.sal between s.losal and s.hisal</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>自链接：一个表写成两个表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-- 查询员工的上级领导，要求显示员工名和对应的领导名</span><br><span class="line">select</span><br><span class="line">a.ename  &#x27;员工名&#x27;, b.ename &#x27;领导名&#x27;</span><br><span class="line">from </span><br><span class="line">emp a</span><br><span class="line">join</span><br><span class="line">emp b</span><br><span class="line">on </span><br><span class="line">a.mgr = b.empno;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>外连接</p><p>多个表之间有主次的关系，主表和副表</p><p>&#x3D;&#x3D;主表就是要全部查询出来的，副表的符合条件才会查询出来&#x3D;&#x3D;</p><ol><li><p>左链接 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-- 左外查询  左边的是主表</span><br><span class="line">select </span><br><span class="line">s.sname,y.yname</span><br><span class="line">from</span><br><span class="line">student s left join yanjiu y</span><br><span class="line">on</span><br><span class="line">s.sno = y.sno;</span><br><span class="line"></span><br><span class="line">-- 查询员工的上级领导，要求显示员工名和对应的领导名</span><br><span class="line">select</span><br><span class="line">a.ename  &#x27;员工名&#x27;, b.ename &#x27;领导名&#x27;</span><br><span class="line">from </span><br><span class="line">emp a</span><br><span class="line">left join</span><br><span class="line">emp b</span><br><span class="line">on </span><br><span class="line">a.mgr = b.empno;</span><br></pre></td></tr></table></figure></li><li><p>右链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-- 右外查询  右边的是主表  outer可以省略</span><br><span class="line">select </span><br><span class="line">s.sname,y.yname</span><br><span class="line">from</span><br><span class="line">student s </span><br><span class="line">right [outer] join </span><br><span class="line">yanjiu y</span><br><span class="line">on</span><br><span class="line">s.sno = y.sno;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;左右链接之间可以相互转换&#x3D;&#x3D;</p></li></ol><p>&#x3D;&#x3D;外连接的查询结果条数一定是 &gt;&#x3D; 内连接的查询结果条数&#x3D;&#x3D;</p></li><li><p>全连接</p></li></ol><p>笛卡尔积现象：当两张表进行链接查询，没有任何条件查询的时候，最终查询结果条数，是两张表条数的乘积</p><p>&#x3D;&#x3D;避免笛卡尔积现象：&#x3D;&#x3D;连接时加条件，满足这个条件的记录就筛选出来！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">select </span><br><span class="line">sname,yname</span><br><span class="line">from</span><br><span class="line">student,yanjiu</span><br><span class="line">where </span><br><span class="line">student.sno = yanjiu.sno</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 起别名</span><br><span class="line">select </span><br><span class="line">s.sname,y.name</span><br><span class="line">from</span><br><span class="line">student s,yanjiu y</span><br><span class="line">where </span><br><span class="line">s.sno = y.sno</span><br><span class="line"></span><br><span class="line">-- 减少链接次数</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-子查询"><a href="#3-子查询" class="headerlink" title="3 子查询"></a>3 子查询</h3><blockquote><p>SELECT语句中嵌套子查询，被嵌套的SELECT语句为子查询</p></blockquote><h4 id="where子查询"><a href="#where子查询" class="headerlink" title="where子查询"></a>where子查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 找出比最低工资高的员工姓名和工资</span><br><span class="line">SELECT </span><br><span class="line">ename, sal</span><br><span class="line">FROM</span><br><span class="line">emp</span><br><span class="line">WHERE</span><br><span class="line">sal &gt;</span><br><span class="line">(SELECT MIN(sal) FROM emp);</span><br></pre></td></tr></table></figure><h4 id="from子句中的子查询"><a href="#from子句中的子查询" class="headerlink" title="from子句中的子查询"></a>from子句中的子查询</h4><ul><li><p>from后面的子查询，可以将子查询的查询结果当作一个临时表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-- 找出每个岗位的平均工资的薪资等级</span><br><span class="line">select </span><br><span class="line">t.*,s.grade</span><br><span class="line">from </span><br><span class="line">(select job,avg(sal)  avgsal  from emp group by job) as t</span><br><span class="line">join</span><br><span class="line">salgrade s</span><br><span class="line">on</span><br><span class="line">t.avgsal between s.losal and s.hisal</span><br></pre></td></tr></table></figure></li></ul><h4 id="select后面的子查询"><a href="#select后面的子查询" class="headerlink" title="select后面的子查询"></a>select后面的子查询</h4><ul><li>返回的结果只能有一条数据，多余一条数据就会报错</li></ul><h3 id="4-union合并查询结果集"><a href="#4-union合并查询结果集" class="headerlink" title="4 union合并查询结果集"></a>4 union合并查询结果集</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT name ,age FROM student WHERE name = &#x27;张三&#x27;</span><br><span class="line">UNION</span><br><span class="line">SELECT name ,age FROM student WHERE name = &#x27;小三&#x27;;</span><br></pre></td></tr></table></figure><ul><li><p>&#x3D;&#x3D;效率高，链接一次新表，匹配次数就会翻倍，union可以减少匹配次数，还可以将结果集拼接起来&#x3D;&#x3D;</p></li><li><p>union在进行结果集的合并时，要求两个结果集的列数相同</p></li></ul><h3 id="5-limit-查询"><a href="#5-limit-查询" class="headerlink" title="5 limit 查询"></a>5 limit 查询</h3><ul><li>将查询结果集的一部分取出来，使用在分页查询中</li></ul><p>使用方法：</p><ol><li>完整写法： LIMIT ：startIndex（从0开始） ，length（长度）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">ename, sal</span><br><span class="line">FROM</span><br><span class="line">emp</span><br><span class="line">ORDER BY</span><br><span class="line">sal desc</span><br><span class="line">LIMIT</span><br><span class="line">5 ; -- 取前五条</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SELECT </span><br><span class="line">ename, sal</span><br><span class="line">FROM</span><br><span class="line">emp</span><br><span class="line">ORDER BY</span><br><span class="line">sal desc</span><br><span class="line">LIMIT</span><br><span class="line">1,5 ; -- 前六：1-6</span><br></pre></td></tr></table></figure><p><strong>通用分页</strong></p><blockquote><p>每页显示 6页条记录</p><p>第1页：limit  0，6    【0、1、2、3、4、5】</p><p>第2页：limit  6，6【6 7 8 9 10 11】 </p><p>第3页：limit  12，6    </p><p>第n页：limit  (n-1) * 6，6</p><p>开始的index &#x3D; pageSize  * （ n - 1）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">limit (pageNO - 1) * pageSize , pageSize</span><br></pre></td></tr></table></figure></blockquote><h2 id="2-2-DDL"><a href="#2-2-DDL" class="headerlink" title="2.2 DDL"></a>2.2 DDL</h2><ul><li>对表的结构进行操作</li></ul><h3 id="2-2-1-create：表的创建"><a href="#2-2-1-create：表的创建" class="headerlink" title="2.2.1 create：表的创建"></a>2.2.1 create：表的创建</h3><ol><li><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE 表名</span><br><span class="line">(</span><br><span class="line">字段名1 数据类型,</span><br><span class="line">字段名1 数据类型,</span><br><span class="line">字段名1 数据类型,</span><br><span class="line">字段名n 数据类型   </span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>表名规范：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">以   t_table1  或者  tbl_ 开始  -- 可读性高</span><br></pre></td></tr></table></figure><p>创建表实列：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-- 建立学生表</span><br><span class="line">CREATE TABLE t_student</span><br><span class="line">(</span><br><span class="line">sno int(10),</span><br><span class="line">    name varchar(22),</span><br><span class="line">    age  int(3),</span><br><span class="line">    sex char(5),</span><br><span class="line">    email varchar(255)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 建立学生表，指定默认值</span><br><span class="line">CREATE TABLE t_student</span><br><span class="line">(</span><br><span class="line">sno int(10),</span><br><span class="line">    name varchar(22),</span><br><span class="line">    age  int(3) default &#x27;女&#x27;,</span><br><span class="line">    sex char(5),</span><br><span class="line">    email varchar(255)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ol><p><strong>2. 数据类型</strong></p><ul><li>数据类型就是属性 ，有一些常用的，例如：整数数据 ，字符数据，日期数据，货币数据等</li></ul><p>数字类型</p><table><thead><tr><th>数据类型</th><th>范围</th><th>占用的字节</th></tr></thead><tbody><tr><td>bigint</td><td>-2^63^ ~2^63^ -1</td><td>8字节</td></tr><tr><td>int</td><td>-2^31^~2^31^-1</td><td>4字节 （11字符）</td></tr><tr><td>smallint</td><td>- 2^15^ ~ 2^15^-1</td><td>2字节</td></tr><tr><td>tinyint</td><td>0~255</td><td>1字节</td></tr><tr><td>float</td><td>-1.79E+308~3.40E+38</td><td>4或者8字节</td></tr></tbody></table><p>时间类型</p><table><thead><tr><th>数据类型</th><th>输出</th></tr></thead><tbody><tr><td>time</td><td>12：35：29.123 （精确度到秒后面三位）时分秒</td></tr><tr><td>date</td><td>2007-05-08 （年月日）短日期</td></tr><tr><td>smalldatetime</td><td>2007-05-08 12:35:00</td></tr><tr><td>datetime</td><td>2007-05-08 12:35:29.123(精确到后面 就是小数点后面三位) 长日期</td></tr><tr><td>datetime</td><td>2007-05-08 12:35:29.1234567(精确到小数点后面三七位)</td></tr></tbody></table><p>字符串类型</p><table><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>char[(n)]</td><td>固定长度（255长度） 。 n用于定义字符串长度，<strong>必须</strong>在1~8000之间。</td></tr><tr><td>varchar[(n|max)]</td><td>可变长度。n用于定义字符串长度，<strong>可以</strong>在1~8000之间。</td></tr><tr><td>nchar[(n)]</td><td>固定长度的Unicode字符串数据。n用于定义字符串长度，<strong>必须</strong>在1~4000之间。</td></tr><tr><td>nvarchar</td><td>可变长度的Unicode字符串数据。n用于定义字符串长度，<strong>必须</strong>在1~4000之间。</td></tr><tr><td>clob</td><td>字符大对象。最多可以存储4G的字符串（超过255个字符，使用它）</td></tr><tr><td>blob</td><td>二进制大对象。存储图片、声音、视频等媒体数据（<strong>插入数据时，必须使用IO流</strong>）</td></tr></tbody></table><h3 id="2-2-2-alter：修改表"><a href="#2-2-2-alter：修改表" class="headerlink" title="2 .2.2 alter：修改表"></a>2 .2.2 alter：修改表</h3><p>修改数据表：</p><ul><li>修改表名： ALTER TABLE 表名 RENAME TO 新的表名;</li><li>修改列名和数据类型： ALTER TABLE 表名 CHANGE 列名 新列名 新数据类型;</li><li>添加一列：                    ALTER TABLE 表名 ADD  列名   数据类型;</li><li>删除列 ：                       ALTER TABLE 表名 DROP   列名</li><li>修改数据类型：             ALTER TABLE 表名 MODIFY  列名  新数据类型;</li></ul><h3 id="2-2-3-drop：删除表"><a href="#2-2-3-drop：删除表" class="headerlink" title="2.2.3 drop：删除表"></a>2.2.3 drop：删除表</h3><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE 表名</span><br><span class="line">DROP TABLE IF EXISTS  表名  -- 存在就删除</span><br></pre></td></tr></table></figure><h4 id="快速删除表"><a href="#快速删除表" class="headerlink" title="快速删除表"></a>快速删除表</h4><ol><li><p>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">truncate table 表名;</span><br></pre></td></tr></table></figure><ul><li>特点：物理删除，删除效率高，不可以恢复</li><li>删除数据，表结构保留</li><li>不能删除单条数据</li></ul></li></ol><p>删除数据表：</p><ul><li>删除表：DROP TABLE 数据表名；</li><li>drop 表TABLE if exists   表名；</li></ul><h2 id="2-3DML"><a href="#2-3DML" class="headerlink" title="2.3DML"></a>2.3DML</h2><ul><li>对表中的数据进行修改</li></ul><h3 id="2-3-1插入-insert"><a href="#2-3-1插入-insert" class="headerlink" title="2.3.1插入 insert"></a>2.3.1插入 insert</h3><ol><li><p>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into 表名(字段名1,字段名2,字段名3,...) values(值1,值2,值3,...)</span><br></pre></td></tr></table></figure><ul><li>字段名和值要一一对应：数量对应，数据类型要对应。</li></ul><p>插入实列：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">insert into t_student(sno,name,age,sex,eamil) values(1,&#x27;张三&#x27;,15,&#x27;女&#x27;,&#x27;1234567@qq.com&#x27;)  -- 按照顺序</span><br><span class="line"></span><br><span class="line">insert into t_student(name,sno,age,sex,eamil) values(&#x27;张三&#x27;,1,15,&#x27;女&#x27;,&#x27;1234567@qq.com&#x27;)  -- 字段顺序可以调整，但是字段名和值一定要对应</span><br><span class="line"></span><br><span class="line">insert into t_student(sno,name) values(&#x27;张4&#x27;,2) -- 只要某些字段,插入数据后其他的字段就会是null</span><br><span class="line"></span><br><span class="line">insert into t_student() values(1,&#x27;李4&#x27;,12,&#x27;女&#x27;,&#x27;123456744@qq.com&#x27;) -- 省略字段名，就必须写上所有的字段名</span><br></pre></td></tr></table></figure></li><li><p>插入多条记录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INSERT  </span><br><span class="line">INTO   表名  (列名1,列名2.…） </span><br><span class="line">VALUES  (值1,值2...), (值1,值2...), (值1,值2…);</span><br></pre></td></tr></table></figure></li><li><p><strong>insert插入日期</strong></p><p>格式化：format()</p></li><li><p>将查询结果插入到一张表中（ 少 用 ）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">insert into 表名 select * from 表名 ;</span><br><span class="line"></span><br><span class="line">select * into 新表名 from 表名;</span><br></pre></td></tr></table></figure></li></ol><h3 id="2-3-2修改-Update"><a href="#2-3-2修改-Update" class="headerlink" title="2.3.2修改 Update"></a>2.3.2修改 Update</h3><ol><li><p>语法格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">update</span><br><span class="line">表名</span><br><span class="line">set</span><br><span class="line">字段名1 = 值1,</span><br><span class="line">字段名2 = 值2,</span><br><span class="line">字段名3 = 值3,</span><br><span class="line">字段名n = 值n</span><br><span class="line">where</span><br><span class="line">条件;</span><br></pre></td></tr></table></figure><ul><li>没有条件将会将整个表更改</li></ul></li></ol><h3 id="2-3-3删除-delete"><a href="#2-3-3删除-delete" class="headerlink" title="2.3.3删除 delete"></a>2.3.3删除 delete</h3><ul><li>表中的数据被删除了，但是数据在硬盘上的真实存储空间不会被释放</li><li>删除效率低，可回滚</li></ul><ol><li><p>语法格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">delete </span><br><span class="line">from</span><br><span class="line">表名</span><br><span class="line">where</span><br><span class="line">条件</span><br></pre></td></tr></table></figure><ul><li>没有条件将会把整个表内的数据进行删除</li></ul></li><li><p>删除大表（删除表中的全部数据）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">   ~~~</span><br><span class="line"></span><br><span class="line">## 2.4 表</span><br><span class="line"></span><br><span class="line">### 2.4.1 表结构的增删改查</span><br><span class="line"></span><br><span class="line">- 一旦设计好表，就很少会对表进行修改</span><br><span class="line">- 修改成本高，就要对java代码进行修改</span><br><span class="line">- 使用工具（navicat）修改</span><br><span class="line"></span><br><span class="line">### 2.4.2约束 （constraint）</span><br><span class="line"></span><br><span class="line">- 给字段添加约束，保证表中数据的完整性，有效性！！！</span><br><span class="line">- 保证表中的数据有效</span><br><span class="line">- **列约束：直接在列后面添加约束**</span><br><span class="line">- **表级约束：约束没有添加在列的后面**</span><br><span class="line"></span><br><span class="line">1. **非空约束：not null**</span><br><span class="line">2. **唯一约束：unique**</span><br><span class="line">3. **主键约束：primary ley（PK）**</span><br><span class="line">4. **外键约束：foreign key（FK）**</span><br><span class="line">5. 级联更新</span><br><span class="line">6. 检查约束：check（mysql不支持）</span><br><span class="line"></span><br><span class="line">#### 1 非空约束 （not null）</span><br><span class="line"></span><br><span class="line">- 约束的字段不嫩改为null</span><br><span class="line"></span><br><span class="line">  ~~~mysql</span><br><span class="line">  CREATE TABLE t_student</span><br><span class="line">  (</span><br><span class="line">  sno int(10) not null,</span><br><span class="line">      name varchar(22) not null,</span><br><span class="line">      age  int(3),</span><br><span class="line">      sex char(5),</span><br><span class="line">      email varchar(255)</span><br><span class="line">  );</span><br></pre></td></tr></table></figure></li></ol><h4 id="2-唯一性约束-（unique）"><a href="#2-唯一性约束-（unique）" class="headerlink" title="2 唯一性约束 （unique）"></a>2 唯一性约束 （unique）</h4><ul><li><p>可以为null ，但是不可以重复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists t_student</span><br><span class="line">CREATE TABLE t_student</span><br><span class="line">(</span><br><span class="line">sno int(10) unique,  -- 列级约束</span><br><span class="line">    name varchar(22),</span><br><span class="line">    age  int(3),</span><br><span class="line">    sex char(5),</span><br><span class="line">    email varchar(255)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">insert into t_student() values(1,&#x27;李4&#x27;,12,&#x27;女&#x27;,&#x27;123456744@qq.com&#x27;)</span><br><span class="line">insert into t_student() values(2,&#x27;李4&#x27;,12,&#x27;女&#x27;,&#x27;123456744@qq.com&#x27;)</span><br><span class="line">-- 在插入数据的时候，sno的值，则不能重复 </span><br></pre></td></tr></table></figure></li><li><p>多个字段字段联合起来具有唯一性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE t_student</span><br><span class="line">(</span><br><span class="line">sno int(10),</span><br><span class="line">    name varchar(22),</span><br><span class="line">    unique(sno,name)  -- sno ,name 联合起来唯一。表</span><br><span class="line">);</span><br><span class="line">insert into t_student() values(1,&#x27;李4&#x27;,12,&#x27;女&#x27;,&#x27;123456744@qq.com&#x27;)</span><br><span class="line">insert into t_student() values(2,&#x27;李武&#x27;,12,&#x27;女&#x27;,&#x27;123456744@qq.com&#x27;)</span><br><span class="line">-- 分开的sno，name可以重复，但是（sno，name） 联合起来就不可以重复</span><br></pre></td></tr></table></figure></li><li><p>not null 和unique联合使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE t_student</span><br><span class="line">(</span><br><span class="line">sno int(10) not null unique,  -- sno变成主键</span><br><span class="line">    name varchar(22)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-主键约束-（primary-key-PK）"><a href="#3-主键约束-（primary-key-PK）" class="headerlink" title="3 主键约束 （primary key :PK）"></a>3 主键约束 （primary key :PK）</h4><ul><li><p>主键约束：一个表只能有一个主键</p></li><li><p>主键字段：字段添加主键约束</p></li><li><p>主键值：<strong>每一行记录的唯一标识。</strong> </p><ul><li>建议使用：int 、bigint、char等类型</li><li>不建议使用：varchar来做主键，主键值定长的。</li></ul></li><li><p>特征</p><ol><li>not null  + unique （主键值不能为空，不能重复）</li></ol></li><li><p>任何每一张表都要有主键，没有就是非法的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists t_student</span><br><span class="line">CREATE TABLE t_student</span><br><span class="line">(</span><br><span class="line">sno int primary key ,  </span><br><span class="line">    name varchar(22)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 表级约束添加主键约束</span><br><span class="line">drop table if exists t_student</span><br><span class="line">CREATE TABLE t_student</span><br><span class="line">(</span><br><span class="line">sno int ,  </span><br><span class="line">    name varchar(22),</span><br><span class="line">    primary key(sno)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 一个字段做主键：单一主键</span><br><span class="line"></span><br><span class="line">-- 多个字段做主键：复合主键  （不要使用）</span><br><span class="line">drop table if exists t_student</span><br><span class="line">CREATE TABLE t_student</span><br><span class="line">(</span><br><span class="line">sno int ,  </span><br><span class="line">    name varchar(22),</span><br><span class="line">    primary key(sno,name)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>自然主键：自然数（使用多）</p></li><li><p>业务主键：主键值与业务紧密关联。（使用少，业务变动会影响到业务会改变）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-- 自动维护主键值</span><br><span class="line">drop table if exists t_student</span><br><span class="line">CREATE TABLE t_student</span><br><span class="line">(</span><br><span class="line">sno int primary key auto_increment,  --  使sno自增：auto_increment</span><br><span class="line">    name varchar(22)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-外键约束（foreign-key-：FK）"><a href="#4-外键约束（foreign-key-：FK）" class="headerlink" title="4 外键约束（foreign key ：FK）"></a>4 外键约束（foreign key ：FK）</h4><ul><li><p>术语：</p><ul><li>外键约束：</li><li>外键字段：字段添加上外键约束</li><li>外键值：外键字段中的每一个值。可以为null</li></ul></li><li><p>父表：被引用的表</p></li><li><p>子表：引用的表</p></li></ul><p><strong>顺序：</strong> （理解，不要死记） </p><ol><li>删除表：<ul><li>先删除子表，再删除父表</li></ul></li><li>创建表<ul><li>先创建父表，再创建子表</li></ul></li><li>删除数据<ul><li>先删除子数据，再删除父数据</li></ul></li><li>插入数据<ul><li>先插入父，再插入子</li></ul></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE t_calss   -- 父表</span><br><span class="line">(</span><br><span class="line">classno int primary key ,  --  使sno自增：auto_increment</span><br><span class="line">    classname varchar(22)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">CREATE TABLE t_student  -- 子表</span><br><span class="line">(</span><br><span class="line">sno int primary key auto_increment,  </span><br><span class="line">    name varchar(22),</span><br><span class="line">    classcno int foreign key(classno) references t_class(classno)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="2-5-数据处理函数"><a href="#2-5-数据处理函数" class="headerlink" title="2.5 数据处理函数"></a>2.5 数据处理函数</h2><ul><li>又称为：单行处理处理函数</li></ul><h3 id="2-2-1-单行处理函数"><a href="#2-2-1-单行处理函数" class="headerlink" title="2.2.1 单行处理函数"></a>2.2.1 单行处理函数</h3><ul><li>一个输入，对应一个输出</li></ul><table><thead><tr><th align="center">函数名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">lower</td><td align="center">大写变成小写</td></tr><tr><td align="center">upper</td><td align="center">小写变成大学</td></tr><tr><td align="center">substr</td><td align="center">取子串（被截取的字符串，起始下标，截取的长度）</td></tr><tr><td align="center">length</td><td align="center">取长度</td></tr><tr><td align="center">trim</td><td align="center">去前后空格</td></tr><tr><td align="center">str_to_date</td><td align="center">将字符串转换成日期</td></tr><tr><td align="center">date_fromat</td><td align="center">格式化日期</td></tr><tr><td align="center">round</td><td align="center">四舍五入</td></tr><tr><td align="center">rand</td><td align="center">生成随机数</td></tr><tr><td align="center">ifnull</td><td align="center">将null转换成一个具体值</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT loser(name),age FROM student  -- name 内容变成小写</span><br><span class="line"></span><br><span class="line">SELECT round(123456.123,0) FROM studnet ; -- round(参数1，参数2)  参数1：要四舍五入的数；参数2：保留多少位小数</span><br></pre></td></tr></table></figure><h3 id="2-2-2-多行处理函数"><a href="#2-2-2-多行处理函数" class="headerlink" title="2.2.2 多行处理函数"></a>2.2.2 多行处理函数</h3><ul><li>多个输入，对应一个输出</li></ul><p><strong>分组函数 &#x2F; 聚合函数 &#x2F; 多行处理函数</strong>   &#x3D;&#x3D;在上面的分组查询中查看 这里的内容&#x3D;&#x3D; </p><h1 id="3-存储引擎"><a href="#3-存储引擎" class="headerlink" title="3 存储引擎"></a>3 存储引擎</h1><p>（了解）</p><ul><li><p>表存储 &#x2F; 组织 </p></li><li><p>建表时：指定存储引擎 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">engine  -- 指定存储引擎</span><br><span class="line">CHARSET -- 指定表的字符编码</span><br></pre></td></tr></table></figure></li><li><p>MySQL支持的搜索引擎</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show engines \G  -- 显示目前数据库版本支持的数据库引擎</span><br></pre></td></tr></table></figure><ul><li>MyISAM <ul><li>MyISAM的表具有以下的特征：<ol><li>格式文件一存储表结构的定义(mytable.frm)</li><li>数据文件―存储表行的内容(mytable.MYD )</li><li>索引文件–存储表上索引(mytable.MYI)：索引是一本书的目录，缩小扫描范围，提高效率</li></ol></li></ul></li><li>InnoDB：<ul><li>MySQL默认存储引擎，重量级引擎</li><li>支持事务，保证数据库的安全，支持事务回滚</li><li>服务器崩溃了，支持自动恢复</li><li>表和索引存储在一个表空间内</li></ul></li><li>MEMORY：<ul><li>数据存储在内存当中，断电就没有</li><li>表数据及索引被存储在内存中，查询快，效率高，不需要与硬盘交互。</li></ul></li></ul></li></ul><h1 id="4-事务"><a href="#4-事务" class="headerlink" title="4 事务"></a>4 事务</h1><p><strong>transaction</strong></p><ul><li>事务：完整的业务逻辑。</li></ul><p>事务的DML语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">insert</span><br><span class="line">update</span><br><span class="line">delete</span><br></pre></td></tr></table></figure><ul><li><p>数据的增删改查要考虑安全</p></li><li><p>多条DML语句共同来联合完成</p></li><li><p>&#x3D;&#x3D;<strong>多条语句同时成功，或者同时失败！</strong>&#x3D;&#x3D;</p></li></ul><h2 id="4-1-实现事务"><a href="#4-1-实现事务" class="headerlink" title="4.1 实现事务"></a>4.1 实现事务</h2><h3 id="4-1-1-提交事务-（commit）"><a href="#4-1-1-提交事务-（commit）" class="headerlink" title="4.1.1 提交事务 （commit）"></a>4.1.1 提交事务 （commit）</h3><ul><li>清空事务性活动的日志文件，将数据全部彻底持久化到数据库表中</li><li>提交事务标志着，事务的结束。全部成功的结束。</li></ul><p><strong>mysql 默认情况下是自动提交事务</strong> </p><ul><li>自动提交不符合我们开发的业务，必须多条同时执行成功才进行提交业务。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 关系自动提交机制，先执行</span><br><span class="line">start transaction</span><br></pre></td></tr></table></figure><h3 id="4-1-2-回滚事务-（rollback）"><a href="#4-1-2-回滚事务-（rollback）" class="headerlink" title="4.1.2 回滚事务 （rollback）"></a>4.1.2 回滚事务 （rollback）</h3><ul><li>将之前所有的DML 操作全部撤销，并且清空事务性活动的日志文件</li><li>回滚事务标志着，事务的结束。全部失败的结束。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 在经过一系列的增删改查之后</span><br><span class="line">rollback ;</span><br></pre></td></tr></table></figure><p>回滚到上一次的提交</p><h2 id="4-2-事务的特性"><a href="#4-2-事务的特性" class="headerlink" title="4.2 事务的特性"></a>4.2 事务的特性</h2><ul><li><p>A ：原子性</p><p>说明事务是最小的工作单元，不可以再分。</p></li><li><p>C ：一致性</p><p>所有的事务要求：在同一个事务当中，所有操作必须同时进行，或者同时失败，保证数据的一致性。</p></li><li><p>I  ：隔离性</p><p>A事务和B事务之间具有一定的隔离。</p><p>A和B事务同时操作同一个表，结果会怎么样？</p></li><li><p>D：持久性</p><p>事务最终结束的一个屏障。事务提交，将没有保存到硬盘上的数据保存到硬盘上。</p></li></ul><h3 id="4-2-1-事务的隔离性"><a href="#4-2-1-事务的隔离性" class="headerlink" title="4.2.1 事务的隔离性"></a>4.2.1 事务的隔离性</h3><h4 id="1-事务的隔离级别"><a href="#1-事务的隔离级别" class="headerlink" title="1 事务的隔离级别"></a>1 事务的隔离级别</h4><ol><li><p>读未提交：read uncommitted （最低的隔离级别）   <strong>《提交之前就可以读到》</strong></p><ul><li>事务A可以读取到事务B&#x3D;&#x3D;未提交&#x3D;&#x3D;的数据</li><li>脏读现象 （Dirty read）</li><li>&#x3D;&#x3D;理论情况下&#x3D;&#x3D;</li></ul></li><li><p>读已提交：read committed             <strong>《提交之后才能读到》</strong></p><ul><li>事务A只能读取到事务B&#x3D;&#x3D;提交之后&#x3D;&#x3D;的数据</li><li>解决了脏读现象</li><li>不可重复读取数据</li><li>每一次读取到的数据是真实数据</li></ul></li><li><p>可重复读：repeatable read       <strong>《提交之后也读不到 ：读取到开启事务时的数据。事务不结束数据就不会改变》</strong>   </p><ul><li>事务A开启之后，每一次在事务A中读取到的数据都是一致的。即使事务B修改数据，事务A中读取到的数据依然没有改变。</li><li>解决了不可以重复读问题</li><li><strong>出现幻影读：读取的数据都是幻想</strong></li></ul></li><li><p>序列化 &#x2F; 串行化：serializable （最高的隔离级别）</p><ul><li><p>效率最高，解决所有问题</p></li><li><p>事务要进行排队，不能并发！！</p></li></ul></li></ol><ul><li>查看事务隔离级别：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select @@tx_isolation</span><br></pre></td></tr></table></figure><ul><li>设置全局隔离级别</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global transaction isolation level read uncommitted  -- 读wei</span><br></pre></td></tr></table></figure><h1 id="5-索引"><a href="#5-索引" class="headerlink" title="5 索引"></a>5 索引</h1><ul><li>索引是在数据表字段上添加的，<strong>提高查询效率</strong></li><li>一个字段可以添加一个索引，多个字段联合起来也可以添加索引</li></ul><p>添加索引条件：</p><ol><li>数据量庞大</li><li>以条件查询的形式存在</li><li>很少的DML（insert 、update、delete）操作</li></ol><h2 id="5-1创建索引"><a href="#5-1创建索引" class="headerlink" title="5.1创建索引"></a>5.1创建索引</h2><ol><li>创建索引语法：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create index 索引名 on 表名（字段）;</span><br></pre></td></tr></table></figure><ol start="2"><li>删除索引</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop index 索引名 on emp;</span><br></pre></td></tr></table></figure><p><strong>底层原理：二叉树（B-tree）</strong></p><ol start="3"><li><p>查看索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">explain select * from 表 where 条件 </span><br></pre></td></tr></table></figure></li></ol><h2 id="5-2索引失效"><a href="#5-2索引失效" class="headerlink" title="5.2索引失效"></a>5.2索引失效</h2><ol><li>模糊查询尽量避免以“%” 开始，则会开始进行索引查询，否则不会进行索引查询。索引查询时必须知道第一个字母是什么</li><li>使用 or 的情况失效，or两边字段同时有索引才会走索引。</li><li>复合索引，没有使用左侧的列查找</li><li>where当中索引列参加了运算</li><li>在where当中索引列使用了函数</li></ol><h2 id="5-3-索引的分类"><a href="#5-3-索引的分类" class="headerlink" title="5.3 索引的分类"></a>5.3 索引的分类</h2><ol><li>单一索引 ：单个字段添加索引</li><li>复合索引 ：两个或多个字段添加索引</li><li>主键索引 ：主键上添加索引</li><li>唯一性索引 ：具有unique 约束的字段上添加索引  （唯一性较弱的字段上索引用处不大）</li></ol><p>&#x3D;&#x3D;union 不会使用索引失效&#x3D;&#x3D;</p><h1 id="6-视图"><a href="#6-视图" class="headerlink" title="6 视图"></a>6 视图</h1><blockquote><p>view</p></blockquote><ul><li>不同角度看同一份数据</li></ul><h2 id="6-1-创建视图"><a href="#6-1-创建视图" class="headerlink" title="6.1 创建视图"></a>6.1 创建视图</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create view 视图名 as select * from 表名</span><br></pre></td></tr></table></figure><ul><li>室友DQL语句才能以view的形式创建</li></ul><h2 id="6-2-删除视图"><a href="#6-2-删除视图" class="headerlink" title="6.2 删除视图"></a>6.2 删除视图</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop view 视图名</span><br></pre></td></tr></table></figure><h2 id="6-3-视图的CRUD"><a href="#6-3-视图的CRUD" class="headerlink" title="6.3 视图的CRUD"></a>6.3 视图的CRUD</h2><ul><li>&#x3D;&#x3D;视图的操作会影响到原表的操作。&#x3D;&#x3D;</li><li>视图是一张临时表</li></ul><h1 id="7-DBA命令"><a href="#7-DBA命令" class="headerlink" title="7 DBA命令"></a>7 DBA命令</h1><h2 id="7-1-新建用户"><a href="#7-1-新建用户" class="headerlink" title="7.1 新建用户"></a>7.1 新建用户</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER username IDENTIFIED BY &#x27;password&#x27;;</span><br></pre></td></tr></table></figure><ul><li>username：你将创建的用户名,</li><li>password：该用户的登陆密码,密码可以为空,如果为空则该用户可以不需要密码登陆服务器.</li></ul><h2 id="7-2-授权"><a href="#7-2-授权" class="headerlink" title="7.2 授权"></a>7.2 授权</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on dbname.tbname to &#x27;username&#x27;@&#x27;login ip&#x27; identified by &#x27;password&#x27; with grant option;</span><br></pre></td></tr></table></figure><ol><li>dbname&#x3D;*表示所有数据库</li><li>tbname&#x3D;*表示所有表</li><li>login ip&#x3D;%表示任何ip</li><li>password为空，表示丌需要密码即可登录</li><li>with grant option; 表示该用户还可以授权给其他用户</li></ol><p><strong>用户权限表</strong></p><table><thead><tr><th align="center">权限名</th><th align="center">权限描述</th></tr></thead><tbody><tr><td align="center">alter</td><td align="center">修改数据库的表</td></tr><tr><td align="center">create</td><td align="center">创建新的数据库戒表</td></tr><tr><td align="center">delete</td><td align="center">删除表数据</td></tr><tr><td align="center">drop</td><td align="center">删除数据库&#x2F;表</td></tr><tr><td align="center">index</td><td align="center">创建&#x2F;删除索引</td></tr><tr><td align="center">insert</td><td align="center">添加表数据</td></tr><tr><td align="center">select</td><td align="center">查询表数据</td></tr><tr><td align="center">update</td><td align="center">更新表数据</td></tr><tr><td align="center">all</td><td align="center">允许任何操作</td></tr><tr><td align="center">usage</td><td align="center">只允许登录</td></tr></tbody></table><h3 id="7-2-1-回收授权"><a href="#7-2-1-回收授权" class="headerlink" title="7.2.1 回收授权"></a>7.2.1 回收授权</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">revoke privileges on dbname[.tbname] from username;</span><br></pre></td></tr></table></figure><p>刷新权限：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h2 id="7-3-数据的导入导出"><a href="#7-3-数据的导入导出" class="headerlink" title="7.3 数据的导入导出"></a>7.3 数据的导入导出</h2><p>7.3.1数据的导出</p><ul><li><p>在dos命令窗口进行</p><p>导出指定数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\25849&gt;mysqldump bookshop&gt;D:\bookshop.sql -uroot -p123456</span><br></pre></td></tr></table></figure></li><li><p>导出指定表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\25849&gt;mysqldump bookshop emp&gt; D:\ bookshop_emp.sql -uroot -p123456</span><br></pre></td></tr></table></figure></li></ul><h3 id="7-3-2数据的导入"><a href="#7-3-2数据的导入" class="headerlink" title="7.3.2数据的导入"></a>7.3.2数据的导入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\25849&gt;mysql -uroot -p123456</span><br><span class="line">mysql&gt;create database bookshop;</span><br><span class="line">mysql&gt;use bookshop;</span><br><span class="line">mysql&gt;source D:\bookshop.sql</span><br></pre></td></tr></table></figure><h1 id="8-数据库设计的三规范"><a href="#8-数据库设计的三规范" class="headerlink" title="8 数据库设计的三规范"></a>8 数据库设计的三规范</h1><p>数据表的设计依据，对数据库表的设计</p><ul><li><p>第一范式（1NF）：要求任何一张表必须要有主键，&#x3D;&#x3D;每一个字段为原子性，字段不可以再分。&#x3D;&#x3D;</p></li><li><p>第二范式（2NF）：建立在&#x3D;&#x3D;第一范式基础上&#x3D;&#x3D;，要求所有&#x3D;&#x3D;非主键字段完全依赖于主键，不存在部份依赖&#x3D;&#x3D;</p></li><li><p>第三范式（3NF）：建立在&#x3D;&#x3D;第二范式基础上&#x3D;&#x3D;，要求所有&#x3D;&#x3D;非主键字段直接依赖于主键，不存在传递依赖&#x3D;&#x3D;</p></li><li><p>减少数据表的冗余</p></li></ul><h1 id="9-SQL高级应用"><a href="#9-SQL高级应用" class="headerlink" title="9 SQL高级应用"></a>9 SQL高级应用</h1><h2 id="8-1-T-SQL程序设计"><a href="#8-1-T-SQL程序设计" class="headerlink" title="8.1 T-SQL程序设计"></a>8.1 T-SQL程序设计</h2><h3 id="8-1-1-变量"><a href="#8-1-1-变量" class="headerlink" title="8.1.1 变量"></a>8.1.1 变量</h3><ol><li><p>全局变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@@ -- @@开头的变量</span><br></pre></td></tr></table></figure><ul><li>系统定于和维护，用户无法进行修改或管理</li></ul></li><li><p>局部变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">declare @i int  -- 使用关键declare 声明变量 i，数据类型为：int </span><br></pre></td></tr></table></figure><ul><li><p>局部变量赋值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- 使用 set 或 select</span><br><span class="line">set @i = 123</span><br><span class="line">select @i = 1</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="8-1-2-流程控制语句"><a href="#8-1-2-流程控制语句" class="headerlink" title="8.1.2 流程控制语句"></a>8.1.2 流程控制语句</h3><p>1 if 语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 类似 java 中的 if ··· else if ··· else</span><br><span class="line">if &lt;条件表达式&gt;</span><br><span class="line">&lt;命令行或程序块&gt;</span><br><span class="line">else </span><br><span class="line">&lt;命令行或程序块&gt;</span><br></pre></td></tr></table></figure><p>2 begin ··· end语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BEGIN</span><br><span class="line">&lt;命令行或程序块&gt;</span><br><span class="line">END</span><br></pre></td></tr></table></figure><p>3 IF [NOT] EXISTS 语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">IF [NOT] EXISTS(select 子查询)</span><br><span class="line">&lt;命令行或程序块&gt;</span><br><span class="line">else </span><br><span class="line">&lt;命令行或程序块&gt;</span><br></pre></td></tr></table></figure><p> 4 CASE 语句</p><p>格式一：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CASE &lt;表达式&gt;</span><br><span class="line">WHEN &lt;表达式&gt; THEN &lt;表达式&gt;</span><br><span class="line">···</span><br><span class="line">WHEN &lt;表达式&gt; THEN &lt;表达式&gt;</span><br><span class="line">[ELSE  &lt;表达式&gt;]</span><br><span class="line">END</span><br></pre></td></tr></table></figure><p>格式二：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CASE &lt;表达式&gt;</span><br><span class="line">WHEN &lt;表达式&gt; THEN &lt;表达式&gt;</span><br><span class="line">···</span><br><span class="line">WHEN &lt;表达式&gt; THEN &lt;表达式&gt;</span><br><span class="line">[ELSE  &lt;表达式&gt;]</span><br><span class="line">END</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT SNo,CNo,Score = </span><br><span class="line">CASE</span><br><span class="line">  WHEN Score is null THEN &#x27;未考&#x27;</span><br><span class="line">  WHEN Score &lt; 60  THEN &#x27;不及格&#x27;</span><br><span class="line">  WHEN Score &gt;= 60 AND Score &lt;= 90 THEN &#x27;良好&#x27;</span><br><span class="line">  WHEN Score &gt;= 90 THEN &#x27;优秀&#x27;</span><br><span class="line">END</span><br><span class="line">FROM SC</span><br></pre></td></tr></table></figure><p>5 WHILE 语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WHILE (条件)</span><br><span class="line">&lt;命令行或程序块&gt;</span><br></pre></td></tr></table></figure><h2 id="8-2存储过程"><a href="#8-2存储过程" class="headerlink" title="8.2存储过程"></a>8.2存储过程</h2><h3 id="8-2-1-存储过程-的有点"><a href="#8-2-1-存储过程-的有点" class="headerlink" title="8.2.1 存储过程 的有点"></a>8.2.1 存储过程 的有点</h3><ol><li>模块化的程序设计</li><li>高效率的执行</li><li>较少网络流量</li><li>可以作为安全机制使用</li></ol><h3 id="8-2-2-存储过程的分类"><a href="#8-2-2-存储过程的分类" class="headerlink" title="8.2.2 存储过程的分类"></a>8.2.2 存储过程的分类</h3><ol><li>系统存储的过程</li><li>用户自定义存储过程</li><li>扩展存储过程</li></ol><h3 id="8-2-3-创建存储过程"><a href="#8-2-3-创建存储过程" class="headerlink" title="8.2.3 创建存储过程"></a>8.2.3 创建存储过程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE IF EXISTS t_student;</span><br><span class="line"> </span><br><span class="line">CREATE TABLE t_student</span><br><span class="line">(</span><br><span class="line">    id INT(11) PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">  name VARCHAR(255) NOT NULL,</span><br><span class="line">  age  INT(11) NOT NULL</span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line">INSERT INTO t_student VALUES(NULL,&#x27;懿&#x27;,22),(NULL,&#x27;小懿&#x27;,18);</span><br></pre></td></tr></table></figure><h2 id="8-3触发器"><a href="#8-3触发器" class="headerlink" title="8.3触发器"></a>8.3触发器</h2><h3 id="8-3-1-分类"><a href="#8-3-1-分类" class="headerlink" title="8.3.1 分类"></a>8.3.1 分类</h3><ol><li>DML 触发器</li><li>DDL 触发器</li></ol><h3 id="8-3-2-创建DML触发器"><a href="#8-3-2-创建DML触发器" class="headerlink" title="8.3.2 创建DML触发器"></a>8.3.2 创建DML触发器</h3><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TRIGGER 触发器名称</span><br><span class="line">ON &#123; table | view &#125;</span><br><span class="line">&#123; FOR | AFTER | INSTEAD OF &#125;</span><br><span class="line">&#123; [INSERT] | [UPDATE] | [DELETE] &#125;</span><br><span class="line">AS</span><br><span class="line">SQL语句[,...n]</span><br></pre></td></tr></table></figure><p>例子：修改student 表数据，修改之后查询修改后的数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">--创建修改之后的触发器</span><br><span class="line">CREATE TRIGGER trig_student_After</span><br><span class="line">ON student</span><br><span class="line">FOR  UPDATE </span><br><span class="line">AS </span><br><span class="line">PRINT &#x27;THE TRIGGER IS AFTER&#x27;</span><br><span class="line">SELECT * FROM student</span><br></pre></td></tr></table></figure><ul><li>FOR 和AFTER 作用一样</li></ul><h3 id="8-3-3-创建DDL触发器"><a href="#8-3-3-创建DDL触发器" class="headerlink" title="8.3.3 创建DDL触发器"></a>8.3.3 创建DDL触发器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TRIGGER 触发器名称</span><br><span class="line"> ON &#123; ALL SERVER | DATABASE &#125;</span><br><span class="line">&#123; FOR | AFTER &#125;</span><br><span class="line">&#123; 事件类型|事件组&#125;[,...n]</span><br><span class="line">AS</span><br><span class="line">SQL语句[,...n]</span><br></pre></td></tr></table></figure><p>例子：插入数据库后输入 ‘创建数据库’</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TRIGGER trig_create</span><br><span class="line">ON ALL SERVER</span><br><span class="line"> AFTER CREATE_DATABASE</span><br><span class="line">AS</span><br><span class="line">PRINT &#x27;创建数据库&#x27;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux指令</title>
      <link href="/post/89550d80.html"/>
      <url>/post/89550d80.html</url>
      
        <content type="html"><![CDATA[<h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><p>ctrl + C  退出状态</p><p><strong>pwd  查看当前处于的文件位置</strong></p><h3 id="cd-切换文件夹"><a href="#cd-切换文件夹" class="headerlink" title="cd 切换文件夹"></a>cd 切换文件夹</h3><ul><li><p>cd &#x2F;home 绝对路径 以根目录开头</p></li><li><p>cd kcs 相对路径  不以根目录开头</p></li><li><p>cd .. 返回到上级目录</p></li><li><p>cd ~ 回到自己根目录  &#x2F;home&#x2F;kcs</p></li><li><p>cd - 回看目录</p></li></ul><h3 id="ls-查看当前文件夹的内容"><a href="#ls-查看当前文件夹的内容" class="headerlink" title="ls 查看当前文件夹的内容"></a>ls 查看当前文件夹的内容</h3><ul><li><p>ls -a ：显示所有文件 包括隐藏文件 . xxx</p></li><li><p>ls -l ：显示详细列表信息</p></li><li><p>ls -lh ：把文件大小单位为   <strong>k</strong></p></li><li><p>ls - lah ：人性化大小显示结果</p></li><li><p>ll  &#x3D; ls -l </p></li><li><p>ls  目录  ：查看指定目录表下的内容</p></li><li><p>ls  *xx :查看以xx结尾的文件    * 通配符</p></li></ul><h3 id="ls-详细解读"><a href="#ls-详细解读" class="headerlink" title="ls 详细解读"></a>ls 详细解读</h3><ul><li>d rwx rwx r-xd 代表文件夹– 代表文件</li><li>rwx rwx r-x    r 可读     w 可写     x 执行</li><li>第一组指文件的拥有者的权限，第二组代表文件拥有的组的权限，第三组代表其他用户的权限</li></ul><h3 id="mkdir-创建文件夹"><a href="#mkdir-创建文件夹" class="headerlink" title="mkdir 创建文件夹"></a>mkdir 创建文件夹</h3><ul><li><p>mkdir 文件夹名    ：相对路径创建文件夹 当前目录下创建文件夹</p></li><li><p>mkdir  &#x2F;home&#x2F;kcs&#x2F;文件夹名     ：绝对路径创建文件夹  <strong>文件名 之前的都文件必须存在</strong></p></li><li><p>mkdir  -p  &#x2F;home&#x2F;kcs&#x2F;文件夹名  ：若上级目录不存在就先创建父目录，在创建文件  <strong>-p：表示创建多级目录</strong></p></li><li><p>mkdir  上一级文件夹&#x2F;{文件夹1，文件夹2}，则创建的文件的就会在上一级的文件夹下面，括号里面的文件夹处于同一级别</p></li><li><p>mkdir . 文件夹名  ：创建文件夹名</p></li><li><p>madir a b 当前目录下创建多个文件夹</p></li></ul><h3 id="touch-创建空文件"><a href="#touch-创建空文件" class="headerlink" title="touch 创建空文件"></a>touch 创建空文件</h3><ul><li><p>touch a.txt  ：创建一个txt文件 空文件</p></li><li><p>touch a  b  c  ： 创建多个文件 </p></li><li><p>touch  .abc  创建隐藏文件</p></li><li><h3 id="gedit-使用记事本打开文件"><a href="#gedit-使用记事本打开文件" class="headerlink" title="gedit 使用记事本打开文件"></a>gedit 使用记事本打开文件</h3></li><li><p><strong>gedit a.txt</strong>  ： <strong>打开文件</strong></p></li><li><p>gedit test.txt   ：创建并打开文件</p></li></ul><h3 id="rm删除文件"><a href="#rm删除文件" class="headerlink" title="rm删除文件"></a>rm删除文件</h3><ul><li><p>rm 文件名 ：删除单个文件</p></li><li><p>rm a b c ：删除多个文件</p></li><li><p>rm a -r ： 删除a文件夹 -r ：递归删除所有文件夹里面的所有文件</p></li><li><p>rm *  ： 删除当前文件夹下的文件  不包括隐藏文件</p></li><li><p>rm * -r ： 删除所有文件夹和文件 但不包括隐藏文件</p></li><li><p>rm -rf ：强制删除并且不提示信息</p></li></ul><h3 id="clear-清屏"><a href="#clear-清屏" class="headerlink" title="clear 清屏"></a>clear 清屏</h3><h3 id="自动补全"><a href="#自动补全" class="headerlink" title="自动补全"></a>自动补全</h3><blockquote><p>输入首个字母 按tab 就会自动补全</p><p>上下滚轮，查看历史命令</p></blockquote><h3 id="cp-拷贝"><a href="#cp-拷贝" class="headerlink" title="cp 拷贝"></a>cp 拷贝</h3><ul><li><p>cp  1.txt  b   ：  把 1.txt文件复制到 b目录下  </p></li><li><p><strong>cp 源文件  目标文件  ：把源文件内容  复制到目标文件中 ，若目标文件不存在 ，则会创建目标文件</strong></p></li><li><p>cp  1.txt  2.txt  - a ：把源文件所有的属性复制过来</p></li><li><p><strong>cp  a  a_bak -r :  拷贝文件夹 需要加 -r</strong> ：表示递归复制整个文件夹</p></li><li><p>cp  1.txt  2.txt -i ： - i 是否覆盖2.txt文件</p></li><li><p>\cp ：强制覆盖并且不提示</p></li></ul><h3 id="mv：移动、重命名"><a href="#mv：移动、重命名" class="headerlink" title="mv：移动、重命名"></a>mv：移动、重命名</h3><ul><li>mv  a.txt  a1.txt  : 把a文件  移动并重命名成a1 </li><li>mv  a.txt  <del>&#x2F;a1.txt  :移动到指定 (</del>) 目录 </li><li>mv  a1  a2  ：把a1文件夹 重命名 为 a2  直接覆盖a2</li></ul><h3 id="gt-：重定向-，-gt-gt-：追加"><a href="#gt-：重定向-，-gt-gt-：追加" class="headerlink" title="&gt;：重定向 ，&gt;&gt; ：追加"></a>&gt;：重定向 ，&gt;&gt; ：追加</h3><p>把命令返回的结果输出到文件中</p><ul><li><p>ls &gt; 1.txt  ： 就是把当前的ls内容存放在1.txt文件中  ； &gt;  是直接覆盖； </p></li><li><p>ls &gt;&gt; 1.txt  ：&gt;&gt; 追加  不覆盖</p></li><li><p>cal &gt;&gt;2.txt ：把当前的日期信息追加到2.txt里面</p></li></ul><h3 id="cat-显示文件内容"><a href="#cat-显示文件内容" class="headerlink" title="cat 显示文件内容"></a>cat 显示文件内容</h3><ul><li><p>cat  1.txt  ：查看1.txt里面的内容</p></li><li><p>cat  1.txt  2.txt  ：显示1.txt  2.txt 文件内容  在屏幕上</p></li><li><p>cat  1.txt  2.txt  &gt;3.txt  :1.txt  2.txt 文件内容 合并到 3.txt文件里面</p></li><li><p>cat 文件名 -n ：-n 表示显示行号</p></li></ul><h3 id="more-查看一般大文件"><a href="#more-查看一般大文件" class="headerlink" title="more  查看一般大文件"></a>more  查看一般大文件</h3><ul><li><p>一个屏幕显示不完</p></li><li><p>按b ：返回翻页 ()</p></li><li><p>按空格 ：向下翻页</p></li><li><p>按enter：向下翻页一行</p></li><li><p>按q键 ：退出</p></li><li><p>Ctrl + F：向下滚动一屏</p></li><li><p>Ctrl + B：返回上一屏</p></li><li><p>&#x3D; ：输出当前行号</p></li><li><p>:f ：输出文件名和当前行好</p></li></ul><h3 id="less-分屏查看更大文件内容"><a href="#less-分屏查看更大文件内容" class="headerlink" title="less 分屏查看更大文件内容"></a>less 分屏查看更大文件内容</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">less 要查看的文件</span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/image-20220715211537042.png" alt="image-20220715211537042"></p><h3 id="echo-输出内容到控制台"><a href="#echo-输出内容到控制台" class="headerlink" title="echo 输出内容到控制台"></a>echo 输出内容到控制台</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo [选项] [输出内容]</span><br><span class="line">echo &quot;hello&quot;</span><br></pre></td></tr></table></figure><h3 id="head-指令"><a href="#head-指令" class="headerlink" title="head 指令"></a>head 指令</h3><blockquote><p>用于显示文件的开头部分，默认显示前10行</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">head 文件名</span><br><span class="line"></span><br><span class="line">head -n 5 文件名 :显示文件前5行</span><br></pre></td></tr></table></figure><h3 id="tail-显示文件末尾内容"><a href="#tail-显示文件末尾内容" class="headerlink" title="tail 显示文件末尾内容"></a>tail 显示文件末尾内容</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tail 文件名</span><br><span class="line"></span><br><span class="line">tail -n 5 文件名 :显示文件前5行</span><br><span class="line">tail -f 文件名 ：追溯文件的所有更新</span><br></pre></td></tr></table></figure><h3 id="ln-软连接"><a href="#ln-软连接" class="headerlink" title="ln 软连接"></a>ln 软连接</h3><p>相当于windows中的快捷方式</p><ul><li><p>ln -s  1.txt  1_soft  :   1_soft -&gt; 1.txt      源文件是1.txt     源文件必须存在  ，源文件名称一样 则能使用软连接</p></li><li><p>若是删除 1_soft 这不会影响源文件</p></li></ul><h3 id="硬链接"><a href="#硬链接" class="headerlink" title="硬链接"></a>硬链接</h3><blockquote><p>ln 1.txt  1.hard _link</p></blockquote><h3 id="history-查看历史命令"><a href="#history-查看历史命令" class="headerlink" title="history 查看历史命令"></a>history 查看历史命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">history</span><br></pre></td></tr></table></figure><h3 id="find-查找文件"><a href="#find-查找文件" class="headerlink" title="find 查找文件"></a>find 查找文件</h3><ul><li>find  .  -n -name  文件名  ：  . 是指目录</li><li>find  ~  -n -name  ‘ *文件名 ’  : 在 ~ 目录下 查找以  *文件名  结尾的文件</li></ul><h3 id="tar-归档管理"><a href="#tar-归档管理" class="headerlink" title="tar 归档管理"></a>tar 归档管理</h3><ul><li><p>tar -cf  txt.tar  2.txt  ：   将2.txt文件打包成 txt.tar(以tar 为扩展名的会报红)</p></li><li><p>tar tf  txt.tar   ：列出包的文件</p></li><li><p>tar xvf  txt.tar  ： 解开  解包       v 代表查看过程</p></li><li><p>tar xvf  txt.tar  -C tar  ：解包到指定的文件 tar  这个文件要提前创建好</p></li></ul><h2 id="时间日期指令"><a href="#时间日期指令" class="headerlink" title="时间日期指令"></a>时间日期指令</h2><h3 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h3><ul><li>date  ：显示当前时间</li><li>date +%Y：显示当前年份</li><li>date +%m：显示当前月份</li><li>date +%d：显示当前天</li><li>date “+%Y-%m-%d  %H:%M:%S” ：显示年月日，时分秒</li></ul><p>+：加号也要添加上</p><h3 id="设置日期"><a href="#设置日期" class="headerlink" title="设置日期"></a>设置日期</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date -s 字符串时间</span><br></pre></td></tr></table></figure><ul><li>date -s “2022 - 12-12 12:22:45”</li></ul><h3 id="cal-查看日历"><a href="#cal-查看日历" class="headerlink" title="cal 查看日历"></a>cal 查看日历</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cal  显示今天的日历</span><br></pre></td></tr></table></figure><ul><li>cal 2023 ：显示2023年的日历</li></ul><h2 id="搜索查找"><a href="#搜索查找" class="headerlink" title="搜索查找"></a>搜索查找</h2><h3 id="find-指令"><a href="#find-指令" class="headerlink" title="find 指令"></a>find 指令</h3><ul><li>指定目录向下查找子目录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find [搜索范围] [选项]</span><br></pre></td></tr></table></figure><p><img src="http://picgo.kongshier.top/2767/image-20220716103236043.png" alt="image-20220716103236043"></p><ul><li>按名字查找：find &#x2F;home  -name  *.txt</li><li>按拥有者查找：find &#x2F;opt -user nobody</li><li>按文件大小查找：find &#x2F; -size +200M   <ul><li>+：大于多少，- ：小于多少，&#x3D; ：等于多少</li></ul></li></ul><h3 id="locate-定位文件路径"><a href="#locate-定位文件路径" class="headerlink" title="locate 定位文件路径"></a>locate 定位文件路径</h3><ul><li><p>无需遍历整个文件系统，查找速度快</p></li><li><p>首次使用locate，必须先使用updatedb创建locate数据库</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locate 检索的文件</span><br></pre></td></tr></table></figure><h3 id="which"><a href="#which" class="headerlink" title="which"></a>which</h3><ul><li>可以查看指令在哪个目录下</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">which ls</span><br></pre></td></tr></table></figure><h3 id="grep-过滤查找-和-管道"><a href="#grep-过滤查找-和-管道" class="headerlink" title="grep 过滤查找 和 |  管道"></a>grep 过滤查找 和 |  管道</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep [] 查找内容 源文件</span><br></pre></td></tr></table></figure><ul><li><p>grep  指定内容   指定的文件 </p></li><li><p>grep -n  指定内容   指定的文件   ：能查看搜索出<strong>内容的所在行</strong></p></li><li><p>grep -i  指定内容   指定的文件 ：不分大小写</p></li><li><p>grep -v  指定内容   指定的文件  ：搜索内容之外的内容</p></li><li><p>grep -n  指定内容  .  -r  ：当前目录下存在指定内容的文件</p></li></ul><p><img src="http://picgo.kongshier.top/2767/image-20220716110030432.png" alt="image-20220716110030432"></p><ul><li>左边命令返回结果的 交给右边的命令处理</li><li>ls  -al &#x2F; | more  ： 查看根目录下返回的结果用于more处理 翻页，只能向下翻页 不能往前翻页   超出屏幕</li><li>cat 文件名 -n | more</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">法一：cat 1.txt | grep &quot;yes&quot; -n  ：查看1.txt文件中，yes所在的行号</span><br><span class="line">法二：grep &quot;yes&quot; -n 1.txt</span><br></pre></td></tr></table></figure><h2 id="解压-和-解压"><a href="#解压-和-解压" class="headerlink" title="解压 和 解压"></a>解压 和 解压</h2><h3 id="gzip：压缩文件-，gunzip：用于解压的"><a href="#gzip：压缩文件-，gunzip：用于解压的" class="headerlink" title="gzip：压缩文件 ，gunzip：用于解压的"></a>gzip：压缩文件 ，gunzip：用于解压的</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gzip 文件 </span><br><span class="line">gunzip 文件.gz</span><br></pre></td></tr></table></figure><ul><li>压缩文件，只能将文件压缩为*.gz文件</li></ul><h3 id="zip-压缩文件，unzip：解压文件"><a href="#zip-压缩文件，unzip：解压文件" class="headerlink" title="zip 压缩文件，unzip：解压文件"></a>zip 压缩文件，unzip：解压文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zip [选项] 文件</span><br><span class="line">unzip [选项] 压缩包（*.gz）</span><br></pre></td></tr></table></figure><ul><li>选项：-r ：向下递归解压或压缩，压缩目录</li><li>-d &lt;目录&gt; ：指定解压后文件的存放目录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zip -r myhom.gz /home/  压缩：整个home文件夹</span><br><span class="line">unzip -d /opt/tmep /home/myhome.gz  解压到指定的文件目录下</span><br></pre></td></tr></table></figure><h3 id="tar-打包文件"><a href="#tar-打包文件" class="headerlink" title="tar 打包文件"></a>tar 打包文件</h3><ul><li>打包后的文件类型是 <code>.tar.gz</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar [选项] *.tar.gz 打包的内容</span><br></pre></td></tr></table></figure><p>选项：</p><p><img src="http://picgo.kongshier.top/2767/image-20220716112941616.png" alt="image-20220716112941616"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf pc.tar.gz /home/文件1 /home/文件2</span><br></pre></td></tr></table></figure><p>解压到指定目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf /home/myhome.tar.gz -C /opt/temp2</span><br></pre></td></tr></table></figure><ul><li>-C：表示解压到指定的目录</li></ul><ol><li><p>压缩</p><ul><li>打包</li></ul><blockquote><p>tar cf a.tar *    生产a.tar文件</p></blockquote><ul><li><p>压缩</p><blockquote><p>gzip -r  a.tar   生成  a.tar.gz文件</p></blockquote></li></ul></li><li><p>解压</p><ul><li>解压</li></ul><blockquote><p>gzip -d  a.tar.gz  生成a.tar文件</p></blockquote><ul><li>解包</li></ul><blockquote><p>tar xf a.tar -C ~&#x2F;atar   生成到家目录下的atar文件下</p></blockquote></li></ol><h3 id="一步到位压缩和解压"><a href="#一步到位压缩和解压" class="headerlink" title="一步到位压缩和解压"></a>一步到位压缩和解压</h3><p><strong>打包并且压缩</strong>：</p><ul><li>tar  czf b.tar.gz  *txt     将以txt结尾的文件进行打包和压缩  生成一个b.tar.gz 的wenjian</li></ul><p><strong>解包并且解压</strong></p><ul><li>tar zxf  b.tar.gz -C btar        将b.tar.gz解压到btar文件中  btar要事先创建好</li></ul><h2 id="其他的基础指令"><a href="#其他的基础指令" class="headerlink" title="其他的基础指令"></a>其他的基础指令</h2><p>which 查看命令位置</p><p>su 切换用户需要密码</p><p>exit退出用户</p><p>who查看终端用户</p><p>pts ：就是打开终端的页面</p><p>tty：就是登录操作系统的用户</p><h3 id="shutdown-关机"><a href="#shutdown-关机" class="headerlink" title="shutdown 关机"></a>shutdown 关机</h3><ul><li><p>需要root</p></li><li><p>shutdown -h 10  系统十分钟后关机</p></li><li><p>shutdown -h 20:00  系统在20:00关机</p></li><li><p>shutdown -h now  系统立即关机</p></li><li><p>不需要root</p></li><li><p>reboot  重启操作系统</p></li></ul><h3 id="passwd-修改密码"><a href="#passwd-修改密码" class="headerlink" title="passwd 修改密码"></a>passwd 修改密码</h3><h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><p>语法：</p><blockquote><p>vim 指定的文件  ：打开指定的文件</p></blockquote><h4 id="插入模式："><a href="#插入模式：" class="headerlink" title="插入模式："></a>插入模式：</h4><ul><li>i ：输入</li><li>I ：插入行首</li><li>a：插入光标后一个</li><li>A:插入行末</li><li>o：向下新开一行</li><li>O：向上新开一行</li></ul><h4 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h4><ul><li><p>ESC：进入插入模式或者命令模式</p></li><li><p>移动光标</p></li><li><p>h：左移</p></li><li><p>l：右移</p></li><li><p>k：上</p></li><li><p>j：下</p></li></ul><p>wq保存并退出</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picgo+github搭建个人图床</title>
      <link href="/post/19be1caa.html"/>
      <url>/post/19be1caa.html</url>
      
        <content type="html"><![CDATA[<p>教程视频：<a href="https://www.bilibili.com/video/BV1c44y1C7os/?spm_id_from=333.788&amp;vd_source=91c74d407fc476374430aea2a76f7aca">https://www.bilibili.com/video/BV1c44y1C7os/?spm_id_from=333.788&amp;vd_source=91c74d407fc476374430aea2a76f7aca</a></p><h1 id="picgo安装"><a href="#picgo安装" class="headerlink" title="picgo安装"></a>picgo安装</h1><p>下载地址 <a href="https://github.com/Molunerfinn/PicGo">https://github.com/Molunerfinn/PicGo</a></p><p><img src="http://picgo.kongshier.top/2767/image-20220818091707141.png" alt="image-20220818091707141"></p><p>往下滑到，滑倒最后（如下图），选择自己需要的版本进行下载，然后就安装即可</p><p><img src="http://picgo.kongshier.top/2767/image-20220818091917162.png" alt="image-20220818091917162"></p><p>安装picgo也是傻瓜式 next next 即可，最好把安装路径可以修改一下，以下在打开后的样子</p><p><img src="/picgo+GitHub%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A.assets/image-20220818092124655.png" alt="image-20220818092124655"></p><h1 id="GitHub-配置"><a href="#GitHub-配置" class="headerlink" title="GitHub 配置"></a>GitHub 配置</h1><p>首先新建一个仓库</p><p><img src="http://picgo.kongshier.top/2767/image-20220818092236127.png" alt="image-20220818092236127"></p><p>需要public才可以，存放在里面的图片才会被访问到，然后点击创建仓库</p><p><img src="http://picgo.kongshier.top/2767/image-20220818092416189.png" alt="image-20220818092416189"></p><p>创建好然后回到picgo进行配置 GitHub 图床</p><h1 id="picgo配置"><a href="#picgo配置" class="headerlink" title="picgo配置"></a>picgo配置</h1><p><img src="http://picgo.kongshier.top/2767/image-20220818093044571.png" alt="image-20220818093044571"></p><h2 id="token获取"><a href="#token获取" class="headerlink" title="token获取"></a>token获取</h2><p>打开GitHub设置</p><p><img src="/picgo+GitHub%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A.assets/image-20220818093229930.png" alt="image-20220818093229930"></p><p>开发者设置</p><p><img src="http://picgo.kongshier.top/2767/image-20220818093253340.png" alt="image-20220818093253340"></p><p><img src="http://picgo.kongshier.top/2767/image-20220818093343516.png" alt="image-20220818093343516"></p><p><img src="http://picgo.kongshier.top/2767/image-20220818093453774.png" alt="image-20220818093453774"></p><p><img src="http://picgo.kongshier.top/2767/image-20220818093627570.png" alt="image-20220818093627570"></p><p>这个是我的令牌：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</p><p>然后把这个令牌复制、粘贴到picgo图床中的 token 中</p><p>自定义域名最后两个 &#x2F; 和仓库名一样即可</p><p><img src="http://picgo.kongshier.top/2767/image-20220818094031456.png" alt="image-20220818094031456"></p><p>点击确定即可创建图床</p><p>把图片上传到上传区，即可</p>]]></content>
      
      
      
        <tags>
            
            <tag> Picgo Github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
